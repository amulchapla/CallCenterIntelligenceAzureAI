{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../../../src/utils/Constants.ts","../node_modules/react/index.js","sdk/Contracts.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../../../src/utils/BrowserConstants.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","sdk/PropertyId.ts","../node_modules/react/jsx-runtime.js","../node_modules/@babel/runtime/helpers/esm/extends.js","common.speech/Exports.ts","../../../src/error/ClientAuthError.ts","../../../src/utils/StringUtils.ts","../node_modules/prop-types/index.js","sdk/Audio/AudioStreamFormat.ts","../../../src/event/EventType.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../src/error/AuthError.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","common/Error.ts","common/PlatformEvent.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/classnames/index.js","sdk/SpeechSynthesisOutputFormat.ts","common/RiffPcmEncoder.ts","common.browser/PCMRecorder.ts","common.browser/MicAudioSource.ts","sdk/NoMatchReason.ts","common.browser/FileAudioSource.ts","sdk/Audio/PullAudioInputStreamCallback.ts","sdk/Audio/SpeakerAudioDestination.ts","sdk/Audio/PushAudioOutputStreamCallback.ts","sdk/Audio/AudioFileWriter.ts","sdk/Audio/AudioConfig.ts","sdk/KeywordRecognitionModel.ts","sdk/LanguageUnderstandingModel.ts","sdk/SpeechTranslationConfig.ts","sdk/Recognizer.ts","sdk/SpeechRecognizer.ts","sdk/IntentRecognizer.ts","sdk/ConnectionMessage.ts","sdk/ConnectionEventArgs.ts","sdk/ConnectionMessageEventArgs.ts","sdk/ServiceEventArgs.ts","sdk/Connection.ts","sdk/TranslationRecognizer.ts","sdk/NoMatchDetails.ts","sdk/CancellationDetailsBase.ts","sdk/CancellationDetails.ts","sdk/PhraseListGrammar.ts","sdk/BotFrameworkConfig.ts","sdk/CustomCommandsConfig.ts","common.speech/DialogConnectorFactory.ts","sdk/ServicePropertyChannel.ts","sdk/DialogServiceConnector.ts","sdk/SpeakerRecognitionResult.ts","sdk/Audio/BaseAudioPlayer.ts","sdk/VoiceProfile.ts","sdk/VoiceProfileEnrollmentResult.ts","sdk/VoiceProfileResult.ts","sdk/VoiceProfilePhraseResult.ts","sdk/VoiceProfileClient.ts","sdk/SpeakerIdentificationModel.ts","sdk/SpeakerVerificationModel.ts","sdk/SpeakerRecognizer.ts","sdk/AutoDetectSourceLanguageConfig.ts","sdk/AutoDetectSourceLanguageResult.ts","sdk/SourceLanguageConfig.ts","common.speech/Transcription/ConversationConnectionConfig.ts","common.speech/Transcription/ConversationTranslatorInterfaces.ts","sdk/Transcription/ParticipantChangedReason.ts","common.speech/Transcription/ConversationManager.ts","common.speech/Transcription/ConversationConnectionMessage.ts","common.speech/Transcription/ConversationWebsocketMessageFormatter.ts","common.speech/Transcription/ConversationConnectionFactory.ts","sdk/Transcription/ConversationTranslationCanceledEventArgs.ts","sdk/Transcription/ConversationExpirationEventArgs.ts","sdk/Transcription/ConversationTranslationResult.ts","common.speech/Transcription/ConversationRequestSession.ts","common.speech/Transcription/ConversationTranslatorEventArgs.ts","common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts","common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts","common.speech/Transcription/ServiceMessages/TranslationResponsePayload.ts","common.speech/Transcription/ConversationServiceAdapter.ts","common.speech/Transcription/ConversationTranslatorRecognizer.ts","sdk/Transcription/ConversationParticipantsChangedEventArgs.ts","sdk/Transcription/ConversationTranslationEventArgs.ts","sdk/Transcription/ConversationTranslator.ts","sdk/Transcription/IParticipant.ts","sdk/Transcription/Conversation.ts","sdk/Transcription/ConversationCommon.ts","sdk/PronunciationAssessmentGradingSystem.ts","sdk/PronunciationAssessmentGranularity.ts","common.speech/Transcription/TranscriberRecognizer.ts","sdk/Transcription/ConversationTranscriber.ts","sdk/SpeechSynthesizer.ts","sdk/PronunciationAssessmentConfig.ts","sdk/PronunciationAssessmentResult.ts","../node_modules/react-bootstrap/esm/ThemeProvider.js","common.speech/ServiceMessages/Enums.ts","common.speech/HeaderNames.ts","sdk/ResultReason.ts","common/ConnectionMessage.ts","common.speech/QueryParameterNames.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","sdk/CancellationErrorCodes.ts","common.speech/SpeechConnectionMessage.Internal.ts","common.speech/ConnectionFactoryBase.ts","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","common/Guid.ts","../../../src/error/BrowserConfigurationAuthError.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","sdk/DialogServiceConfig.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","common/OCSPEvents.ts","../../../src/app/IPublicClientApplication.ts","../../../src/event/EventMessage.ts","../../src/MsalContext.ts","../../src/utils/utilities.ts","../../src/packageMetadata.ts","../../src/MsalProvider.tsx","../../src/hooks/useMsal.ts","../../src/hooks/useAccount.ts","../../src/hooks/useIsAuthenticated.ts","../../src/components/AuthenticatedTemplate.tsx","../../src/components/UnauthenticatedTemplate.tsx","sdk/PropertyCollection.ts","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","common.speech/EnumTranslation.ts","sdk/Audio/AudioOutputStream.ts","../../../src/account/ClientInfo.ts","../node_modules/axios/lib/utils.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","sdk/CancellationReason.ts","common.speech/RecognizerConfig.ts","sdk/SpeechRecognitionResult.ts","common/AudioSourceEvents.ts","sdk/OutputFormat.ts","common.speech/RecognitionEvents.ts","common.browser/RestMessageAdapter.ts","../../../src/authority/AuthorityType.ts","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/NavbarContext.js","sdk/Audio/AudioOutputFormat.ts","../node_modules/react-dom/index.js","../../../../src/cache/entities/AccountEntity.ts","../node_modules/react-bootstrap/esm/createChainedFunction.js","common/Promise.ts","sdk/RecognitionEventArgs.ts","common/EventSource.ts","common.speech/IAuthentication.ts","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/Button.js","sdk/SpeechRecognitionEventArgs.ts","sdk/TranslationRecognitionResult.ts","sdk/IntentRecognitionEventArgs.ts","sdk/IntentRecognitionResult.ts","common.speech/WebsocketMessageFormatter.ts","sdk/Audio/AudioInputStream.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/react-overlays/esm/DropdownContext.js","sdk/CancellationEventArgsBase.ts","../node_modules/react-overlays/node_modules/dom-helpers/esm/matches.js","../node_modules/react-overlays/node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/cookie/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","sdk/SpeechSynthesisEventArgs.ts","sdk/SpeechSynthesisResult.ts","common.speech/ServiceMessages/SynthesisAudioMetadata.ts","sdk/SessionEventArgs.ts","common.speech/ServiceRecognizerBase.ts","../node_modules/react-bootstrap/esm/Col.js","../node_modules/invariant/browser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","common.speech/ServiceMessages/SpeechHypothesis.ts","common.speech/ServiceMessages/SimpleSpeechPhrase.ts","sdk/VoiceProfileType.ts","common.speech/TranslationStatus.ts","common.speech/ServiceMessages/TranslationPhrase.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/usePopperMarginModifiers.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","common.browser/RestConfigBase.ts","common.browser/ProxyInfo.ts","common/ConnectionOpenResponse.ts","common.browser/WebsocketMessageAdapter.ts","common.browser/WebsocketConnection.ts","common.speech/SynthesisAdapterBase.ts","sdk/SpeechConfig.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../src/logger/Logger.ts","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","common.speech/AgentConfig.ts","sdk/TranslationRecognitionEventArgs.ts","sdk/TranslationSynthesisEventArgs.ts","sdk/TranslationSynthesisResult.ts","common.speech/ServiceMessages/SpeechDetected.ts","common.speech/ServiceMessages/DetailedSpeechPhrase.ts","sdk/TranslationRecognitionCanceledEventArgs.ts","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@restart/hooks/esm/useSafeState.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@popperjs/core/lib/utils/getBasePlacement.js","../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","../node_modules/@popperjs/core/lib/dom-utils/getWindow.js","../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","../node_modules/@popperjs/core/lib/dom-utils/contains.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","../node_modules/@popperjs/core/lib/utils/math.js","../node_modules/@popperjs/core/lib/utils/within.js","../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","../node_modules/@popperjs/core/lib/utils/expandToHashMap.js","../node_modules/@popperjs/core/lib/enums.js","../node_modules/@popperjs/core/lib/modifiers/arrow.js","../node_modules/@popperjs/core/lib/utils/getVariation.js","../node_modules/@popperjs/core/lib/modifiers/computeStyles.js","../node_modules/@popperjs/core/lib/modifiers/eventListeners.js","../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","../node_modules/@popperjs/core/lib/utils/rectToClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","../node_modules/@popperjs/core/lib/utils/computeOffsets.js","../node_modules/@popperjs/core/lib/utils/detectOverflow.js","../node_modules/@popperjs/core/lib/modifiers/flip.js","../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","../node_modules/@popperjs/core/lib/modifiers/hide.js","../node_modules/@popperjs/core/lib/modifiers/offset.js","../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","../node_modules/@popperjs/core/lib/utils/getAltAxis.js","../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","../node_modules/@popperjs/core/lib/utils/orderModifiers.js","../node_modules/@popperjs/core/lib/utils/debounce.js","../node_modules/@popperjs/core/lib/createPopper.js","../node_modules/@popperjs/core/lib/utils/mergeByName.js","../node_modules/react-overlays/esm/popper.js","../node_modules/react-overlays/esm/usePopper.js","../node_modules/react-overlays/node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/react-overlays/node_modules/dom-helpers/esm/listen.js","../node_modules/react-overlays/esm/ownerDocument.js","../node_modules/react-overlays/node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/react-overlays/esm/safeFindDOMNode.js","../node_modules/react-overlays/esm/useRootClose.js","../node_modules/react-overlays/node_modules/dom-helpers/esm/contains.js","../node_modules/react-overlays/esm/mergeOptionsWithPopperConfig.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-overlays/node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/react-overlays/node_modules/dom-helpers/esm/addEventListener.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/axios/index.js","common/IConnection.ts","../node_modules/object-assign/index.js","../node_modules/axios/lib/defaults.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/warning/warning.js","common.speech/SynthesisContext.ts","sdk/SpeechSynthesisWordBoundaryEventArgs.ts","sdk/SpeechSynthesisBookmarkEventArgs.ts","sdk/SpeechSynthesisVisemeEventArgs.ts","sdk/RecognitionResult.ts","sdk/SpeechRecognitionCanceledEventArgs.ts","sdk/ProfanityOption.ts","common.speech/DynamicGrammarBuilder.ts","common.speech/SpeechContext.ts","common.speech/ServiceMessages/IntentResponse.ts","sdk/IntentRecognitionCanceledEventArgs.ts","common.speech/ServiceMessages/TranslationHypothesis.ts","common.speech/ServiceMessages/TranslationSynthesisEnd.ts","sdk/Translations.ts","sdk/ConversationTranscriptionCanceledEventArgs.ts","common.speech/SynthesisEvents.ts","common.speech/SynthesisTurn.ts","common.speech/ServiceTelemetryListener.Internal.ts","common.speech/RequestSession.ts","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/hyphenate.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/isTransform.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/css.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/react-bootstrap/node_modules/react-transition-group/esm/config.js","../node_modules/react-bootstrap/node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-bootstrap/node_modules/react-transition-group/esm/Transition.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/addEventListener.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/listen.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/Navbar.js","common/Queue.ts","common/List.ts","common/Events.ts","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/process/browser.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/buffer/index.js","../node_modules/webpack/buildin/global.js","common.speech/CognitiveSubscriptionKeyAuthentication.ts","common.speech/CognitiveTokenAuthentication.ts","common.speech/SpeechConnectionFactory.ts","common.speech/SpeechServiceRecognizer.ts","common.speech/IntentConnectionFactory.ts","common.speech/AddedLmIntent.ts","common.speech/IntentServiceRecognizer.ts","common.speech/TranslationConnectionFactory.ts","common.speech/TranslationServiceRecognizer.ts","sdk/ActivityReceivedEventArgs.ts","common.speech/ServiceMessages/SpeechKeyword.ts","common.speech/SpeakerRecognitionConfig.ts","common.speech/SpeakerIdMessageAdapter.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","common.speech/TranscriberConnectionFactory.ts","common.speech/TranscriptionServiceRecognizer.ts","common.speech/SpeechSynthesisConnectionFactory.ts","common.speech/SynthesizerConfig.ts","common.speech/ServiceMessages/ActivityResponsePayload.ts","common/DialogEvents.ts","common.speech/DialogServiceTurnState.ts","common.speech/DialogServiceTurnStateManager.ts","common.speech/DialogServiceAdapter.ts","../microsoft.cognitiveservices.speech.sdk.ts","common.browser/ConsoleLoggingListener.ts","common.speech/ServiceMessages/TurnStatusPayload.ts","sdk/TurnStatusReceivedEventArgs.ts","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-bootstrap/esm/Container.js","common.browser/CertChecks.ts","../node_modules/url-parse/index.js","../node_modules/bent/src/browser.js","../node_modules/@material-ui/core/colors/red.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../../packages/react-router/index.tsx","../../../../packages/react-router-dom/index.tsx","../node_modules/universal-cookie/es6/utils.js","../node_modules/universal-cookie/es6/Cookies.js","../node_modules/universal-cookie/es6/index.js","common/Stream.ts","common/ConnectionEvents.ts","common/RawWebsocketMessage.ts","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types-extra/lib/isRequiredForA11y.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/requires-port/index.js","../node_modules/querystringify/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/construct.js","../node_modules/bent/src/core.js","common/ChunkedArrayBufferStream.ts","common/Timeout.ts","common.browser/ReplayableAudioNode.ts","common/BackgroundError.ts","../../../src/account/CcsCredential.ts","../../../src/utils/MathUtils.ts","../../../src/crypto/GuidGenerator.ts","../../../src/utils/BrowserStringUtils.ts","../../../src/encode/Base64Encode.ts","../../../src/encode/Base64Decode.ts","../../../src/error/BrowserAuthError.ts","../../../src/crypto/PkceGenerator.ts","../../../src/crypto/BrowserCrypto.ts","../../../src/cache/DatabaseStorage.ts","../../../src/cache/MemoryStorage.ts","../../../src/cache/AsyncMemoryStorage.ts","../../../src/crypto/CryptoOps.ts","../../../src/crypto/ICrypto.ts","../../../src/error/ServerError.ts","../../../src/error/InteractionRequiredAuthError.ts","../../../../src/cache/entities/CredentialEntity.ts","../../../src/error/ClientConfigurationError.ts","../../../src/request/ScopeSet.ts","../../../src/account/AuthToken.ts","../../../src/cache/CacheManager.ts","../../../../src/cache/entities/IdTokenEntity.ts","../../../src/utils/TimeUtils.ts","../../../../src/cache/entities/AccessTokenEntity.ts","../../../../src/cache/entities/RefreshTokenEntity.ts","../../../../src/cache/entities/AppMetadataEntity.ts","../../../../src/cache/entities/ServerTelemetryEntity.ts","../../../../src/cache/entities/AuthorityMetadataEntity.ts","../../../../src/cache/entities/ThrottlingEntity.ts","../../../src/utils/ProtocolUtils.ts","../../../src/authority/ProtocolMode.ts","../../../src/cache/BrowserStorage.ts","../../../src/url/UrlString.ts","../../../src/utils/BrowserProtocolUtils.ts","../../../src/cache/BrowserCacheManager.ts","../../../src/config/ClientConfiguration.ts","../../../src/network/INetworkModule.ts","../../../src/network/FetchClient.ts","../../../src/network/XhrClient.ts","../../../src/utils/BrowserUtils.ts","../../../src/navigation/NavigationClient.ts","../../../src/config/Configuration.ts","../../../src/crypto/PopTokenGenerator.ts","../../../src/event/EventHandler.ts","../../../src/network/ThrottlingUtils.ts","../../../src/network/NetworkManager.ts","../../../src/client/BaseClient.ts","../../../src/request/RequestValidator.ts","../../../src/request/RequestParameterBuilder.ts","../../../../src/cache/entities/CacheRecord.ts","../../../../src/cache/persistence/TokenCacheContext.ts","../../../src/response/ResponseHandler.ts","../../../src/client/AuthorizationCodeClient.ts","../../../src/authority/OpenIdConfigResponse.ts","../../../src/authority/RegionDiscovery.ts","../../../src/authority/Authority.ts","../../../src/authority/CloudInstanceDiscoveryResponse.ts","../../../src/authority/AuthorityFactory.ts","../../../../src/telemetry/server/ServerTelemetryManager.ts","../../../src/interaction_client/StandardInteractionClient.ts","../../../src/interaction_client/BaseInteractionClient.ts","../../../src/utils/PopupUtils.ts","../../../src/interaction_handler/InteractionHandler.ts","../../../src/interaction_handler/PopupHandler.ts","../../../src/interaction_client/PopupClient.ts","../../../src/interaction_handler/RedirectHandler.ts","../../../src/interaction_client/RedirectClient.ts","../../../src/interaction_handler/SilentHandler.ts","../../../src/interaction_client/SilentIframeClient.ts","../../../src/client/RefreshTokenClient.ts","../../../src/interaction_client/SilentRefreshClient.ts","../../../src/cache/TokenCache.ts","../../../src/app/ClientApplication.ts","../../../src/client/SilentFlowClient.ts","../../../src/interaction_client/SilentCacheClient.ts","../../../src/app/PublicClientApplication.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@material-ui/utils/esm/deepmerge.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@material-ui/core/esm/styles/createBreakpoints.js","../node_modules/@material-ui/core/esm/styles/createMixins.js","../node_modules/@material-ui/utils/esm/formatMuiErrorMessage.js","../node_modules/@material-ui/core/esm/colors/common.js","../node_modules/@material-ui/core/esm/colors/grey.js","../node_modules/@material-ui/core/esm/colors/indigo.js","../node_modules/@material-ui/core/esm/colors/pink.js","../node_modules/@material-ui/core/esm/colors/red.js","../node_modules/@material-ui/core/esm/colors/orange.js","../node_modules/@material-ui/core/esm/colors/blue.js","../node_modules/@material-ui/core/esm/colors/green.js","../node_modules/@material-ui/core/esm/styles/colorManipulator.js","../node_modules/@material-ui/core/esm/styles/createPalette.js","../node_modules/@material-ui/core/esm/styles/createTypography.js","../node_modules/@material-ui/core/esm/styles/shadows.js","../node_modules/@material-ui/core/esm/styles/shape.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@material-ui/system/esm/merge.js","../node_modules/@material-ui/system/esm/breakpoints.js","../node_modules/@material-ui/system/esm/spacing.js","../node_modules/@material-ui/system/esm/memoize.js","../node_modules/@material-ui/core/esm/styles/createSpacing.js","../node_modules/@material-ui/core/esm/styles/transitions.js","../node_modules/@material-ui/core/esm/styles/zIndex.js","../node_modules/@material-ui/core/esm/styles/createTheme.js","../node_modules/@material-ui/core/esm/styles/createMuiStrictModeTheme.js","../node_modules/@material-ui/styles/esm/useTheme/ThemeContext.js","../node_modules/@material-ui/styles/esm/ThemeProvider/nested.js","../node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","../node_modules/@material-ui/styles/esm/useTheme/useTheme.js","../node_modules/reactstrap/es/utils.js","../node_modules/reactstrap/es/Container.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","module","exports","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","AADServerParamKeys","ClaimsRequestKeys","Constants","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","ADFS","AAD_INSTANCE_DISCOVERY_ENDPT","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_RESPONSE_TYPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","SSOTypes","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","CREATE","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","CacheSchemaType","CacheType","CodeChallengeMethodValues","PLAIN","S256","AuthorityMetadataSource","APP_METADATA","CLIENT_INFO","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","CACHE_KEY","REFRESH_TIME_SECONDS","AuthenticationScheme","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","PasswordGrantConstants","ResponseCodes","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome","ThrottlingConstants","DEFAULT_THROTTLE_TIME_SECONDS","DEFAULT_MAX_THROTTLE_TIME_SECONDS","THROTTLING_PREFIX","X_MS_LIB_CAPABILITY_VALUE","Errors","INVALID_GRANT_ERROR","CLIENT_MISMATCH_ERROR","require","Contracts","param","name","undefined","Error","throwIfNullOrUndefined","trim","isDisposed","array","item","throwIfNullOrWhitespace","_inherits","subClass","superClass","create","constructor","value","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","Reflect","construct","arguments","apply","BrowserCacheLocation","HTTP_REQUEST_TYPE","TemporaryCacheKeys","InMemoryCacheKeys","ApiId","InteractionType","InteractionStatus","BrowserConstants","INTERACTION_IN_PROGRESS_VALUE","POPUP_WIDTH","POPUP_HEIGHT","POPUP_NAME_PREFIX","POLL_INTERVAL_MS","MSAL_SKU","WrapperSKU","DEFAULT_REQUEST","scopes","KEY_FORMAT_JWK","DB_NAME","DB_VERSION","DB_TABLE_NAME","_defineProperty","obj","PropertyId","_extends","assign","source","hasOwnProperty","call","OutputFormatPropertyName","CancellationErrorCodePropertyName","ServicePropertiesPropertyName","ForceDictationPropertyName","AutoDetectSourceLanguagesOpenRangeOptionName","ClientAuthErrorMessage","clientInfoDecodingError","code","desc","clientInfoEmptyError","tokenParsingError","nullOrEmptyToken","endpointResolutionError","networkError","unableToGetOpenidConfigError","hashNotDeserialized","blankGuidGenerated","invalidStateError","stateMismatchError","stateNotFoundError","nonceMismatchError","nonceNotFoundError","noTokensFoundError","multipleMatchingTokens","multipleMatchingAccounts","multipleMatchingAppMetadata","tokenRequestCannotBeMade","appendEmptyScopeError","removeEmptyScopeError","appendScopeSetError","emptyInputScopeSetError","DeviceCodePollingCancelled","DeviceCodeExpired","DeviceCodeUnknownError","NoAccountInSilentRequest","invalidCacheRecord","invalidCacheEnvironment","noAccountFound","CachePluginError","noCryptoObj","invalidCacheType","unexpectedAccountType","unexpectedCredentialType","invalidAssertion","invalidClientCredential","tokenRefreshRequired","userTimeoutReached","tokenClaimsRequired","noAuthorizationCodeFromServer","noAzureRegionDetected","accessTokenEntityNullError","bindingKeyNotRemovedError","logoutNotSupported","errorCode","errorMessage","setPrototypeOf","ClientAuthError","createClientInfoDecodingError","caughtError","createClientInfoEmptyError","createTokenParsingError","caughtExtractionError","createTokenNullOrEmptyError","invalidRawTokenString","createEndpointDiscoveryIncompleteError","errDetail","createNetworkError","endpoint","split","createUnableToGetOpenidConfigError","createHashNotDeserializedError","hashParamObj","createInvalidStateError","invalidState","errorString","createStateMismatchError","createStateNotFoundError","missingState","createNonceMismatchError","createNonceNotFoundError","missingNonce","createMultipleMatchingTokensInCacheError","createMultipleMatchingAccountsInCacheError","createMultipleMatchingAppMetadataInCacheError","createTokenRequestCannotBeMadeError","createAppendEmptyScopeToSetError","givenScope","createRemoveEmptyScopeFromSetError","createAppendScopeSetError","appendError","createEmptyInputScopeSetError","createDeviceCodeCancelledError","createDeviceCodeExpiredError","createDeviceCodeUnknownError","createNoAccountInSilentRequestError","createNullOrUndefinedCacheRecord","createInvalidCacheEnvironmentError","createNoAccountFoundError","createCachePluginError","createNoCryptoObjectError","operationName","createInvalidCacheTypeError","createUnexpectedAccountTypeError","createUnexpectedCredentialTypeError","createInvalidAssertionError","createInvalidCredentialError","createRefreshRequiredError","createUserTimeoutReachedError","createTokenClaimsRequiredError","createNoAuthCodeInServerResponseError","createBindingKeyNotRemovedError","createLogoutNotSupportedError","decodeAuthToken","authToken","StringUtils","isEmpty","matches","exec","JSON","stringify","header","JWSPayload","JWSSig","str","isEmptyObj","strObj","parse","keys","e","startsWith","search","indexOf","endsWith","lastIndexOf","queryStringToObject","query","params","decode","s","decodeURIComponent","replace","forEach","pair","trimArrayEntries","arr","map","entry","removeEmptyStringsFromArray","filter","jsonParseHelper","matchPattern","pattern","input","RegExp","test","AudioFormatTag","AudioStreamFormat","AudioStreamFormatImpl","getDefaultInputFormat","samplesPerSecond","bitsPerSample","channels","samplesPerSec","format","PCM","setString","view","offset","setUint8","charCodeAt","formatTag","ALaw","MuLaw","avgBytesPerSec","blockAlign","Math","max","privHeader","ArrayBuffer","DataView","setUint32","setUint16","sampleRate","AudioContext","window","webkitAudioContext","navigator","mediaDevices","getSupportedConstraints","EventType","_objectWithoutPropertiesLoose","excluded","sourceKeys","AuthErrorMessage","suberror","AuthError","subError","setCorrelationId","correlationId","createUnexpectedError","errDesc","Parent","args","Class","isNativeReflectConstruct","a","push","Function","bind","_cache","Map","fn","toString","has","get","set","Wrapper","getPrototypeOf","argumentName","message","error","objectName","PlatformEvent","eventName","eventType","privName","privEventId","privEventTime","Date","toISOString","privEventType","privMetadata","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","n","done","_e","f","err","normalCompletion","didErr","step","next","_e2","hasOwn","classNames","classes","arg","argType","inner","join","default","SpeechSynthesisOutputFormat","actualSampleRate","desiredSampleRate","encode","actualAudioFrame","audioFrame","downSampleAudioFrame","privActualSampleRate","privDesiredSampleRate","audioLength","buffer","floatTo16BitPCM","min","setInt16","srcFrame","srcRate","dstRate","ratio","dstLength","round","dstFrame","Float32Array","srcOffset","dstOffset","nextSrcOffset","accum","count","stopInputOnRelease","record","context","mediaStream","outputStream","waveStreamEncoder","micInput","createMediaStreamSource","privSpeechProcessorScript","blob","Blob","type","URL","createObjectURL","audioWorklet","addModule","then","workletNode","AudioWorkletNode","port","onmessage","ev","inputFrame","data","isClosed","waveFrame","writeStreamChunk","isEnd","timeReceived","now","connect","destination","privMediaResources","scriptProcessorNode","stream","catch","scriptNode","bufferSize","createScriptProcessor","audioSampleRate","onaudioprocess","event","inputBuffer","getChannelData","releaseMediaResources","disconnect","privStopInputOnRelease","getTracks","track","stop","url","privRecorder","deviceId","audioSourceId","privStreams","turnOn","privInitializeDeferral","promise","createAudioContext","typedError","reject","nav","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","constraints","successCallback","errorCallback","onEvent","privId","privMediaStream","active","resolve","audio","video","errorMsg","privContext","state","resume","reason","id","attach","audioNodeId","listen","detach","readEnded","turnOff","read","close","ChunkedArrayBufferStream","privOutputChunkSize","privEvents","Events","getAudioContext","MicAudioSource","AUDIOFORMAT","EventSource","privIsClosing","Promise","streamId","destroyAudioContext","getMicrophoneLabel","label","bitspersample","channelcount","connectivity","Unknown","manufacturer","model","samplerate","Microphones","setWorkletUrl","defaultMicrophoneName","privMicrophoneLabel","microphoneDeviceId","getSettings","deferred","enumerateDevices","devices","device","hasClose","suspend","NoMatchReason","file","filename","privHeaderEnd","privFilename","upload","privSource","privAudioFormatPromise","readHeader","File","slice","headerResult","processHeader","getWord","index","String","fromCharCode","getUint8","formatSize","getInt32","channelCount","getUint16","getUint32","pos","maxHeaderSize","getWaveFormatPCM","reader","FileReader","onload","readAsArrayBuffer","h","byteOffset","byteLength","onerror","chunk","processFile","buff","fileBuffer","c","AudioFormatToMimeType","MP3","OGG_OPUS","WEBM_OPUS","FLAC","audioDestinationId","privPlaybackStarted","privAppendingToBuffer","privMediaSourceOpened","privBytesReceived","privIsPaused","privIsClosed","cb","privAudioBuffer","updateSourceBuffer","privAudioOutputStream","write","privSourceBuffer","handleSourceBufferUpdateEnd","privFormat","hasHeader","receivedAudio","_","SynthesisAdapterBase","addHeader","audioBlob","privAudio","src","notifyPlayback","console","warn","onAudioEnd","mimeType","MediaSource","isTypeSupported","Audio","privMediaSource","load","onsourceopen","duration","addSourceBuffer","onupdate","onupdateend","onupdatestart","currentTime","pause","play","sourceBufferAvailable","binary","shift","appendBuffer","unshift","log","canEndStream","endOfStream","onAudioStart","onended","readyState","updating","privFd","throwIfNotUndefined","privAudioFormat","headerOffset","privWriteStream","fd","start","autoClose","Uint8Array","on","updateHeader","bytesWritten","Int8Array","end","pcmRecorder","audioStream","AudioInputStream","MediaStream","player","AudioConfig","fromDefaultSpeakerOutput","events","throwIfNull","setProperty","def","getProperty","deviceInfo","privDestination","privDisposed","fileName","throwIfFileDoesNotExist","uri","hostname","langModelImp","firstDot","host","region","substr","lastSegment","pathname","appId","subscriptionKey","searchParams","ret","properties","SpeechServiceConnection_Key","SpeechServiceConnection_Region","authorizationToken","SpeechServiceAuthorization_Token","hostName","speechImpl","SpeechServiceConnection_Host","protocol","SpeechServiceConnection_Endpoint","href","SpeechConfig","privSpeechProperties","PropertyCollection","outputFormat","OutputFormat","Simple","SpeechServiceConnection_RecoLanguage","SpeechServiceConnection_EndpointId","languages","targetLanguages","SpeechServiceConnection_TranslationToLanguages","SpeechServiceConnection_TranslationVoice","proxyHostName","proxyPort","proxyUserName","proxyPassword","SpeechServiceConnection_ProxyHostName","SpeechServiceConnection_ProxyPort","SpeechServiceConnection_ProxyUserName","SpeechServiceConnection_ProxyPassword","channel","currentProperties","profanity","SpeechServiceResponse_ProfanityOption","ProfanityOption","SpeechServiceConnection_EnableAudioLogging","SpeechServiceResponse_RequestWordLevelTimestamps","SpeechServiceConnection_SynthLanguage","language","SpeechServiceConnection_SynthVoice","voice","SpeechServiceConnection_SynthOutputFormat","audioConfig","connectionFactory","fromDefaultMicrophoneInput","privProperties","clone","privConnectionFactory","implCommonRecognizerSetup","errorCb","throwIfDisposed","dispose","privReco","disposing","audioSource","osPlatform","osName","osVersion","platform","userAgent","appVersion","recognizerConfig","createRecognizerConfig","createServiceRecognizer","Recognizer","getAuthFromProperties","recognitionMode","implRecognizerStop","recognize","stopRecognizing","ServiceRecognizerBase","telemetryDataEnabled","enabled","CognitiveSubscriptionKeyAuthentication","CognitiveTokenAuthentication","authFetchEventId","speechConfig","speechConfigImpl","SpeechConnectionFactory","privDisposedRecognizer","token","Detailed","recognizeOnceAsyncImpl","Interactive","startContinuousRecognitionAsyncImpl","Conversation","stopContinuousRecognitionAsyncImpl","RecognizerConfig","authentication","configImpl","SpeechServiceRecognizer","autoDetectSourceLanguageConfig","mergeTo","SpeechRecognizer","IntentConnectionFactory","privAddedIntents","privAddedLmIntents","privDisposedIntentRecognizer","privUmbrellaIntent","buildSpeechContext","speechContext","setSection","Intent","dynamicGrammar","addReferenceGrammar","ReferenceGrammars","setIntents","simplePhrase","intentId","intentName","modelImpl","AddedLmIntent","audioImpl","IntentServiceRecognizer","refGrammers","addedLmIntent","grammer","provider","privConnectionMessage","headers","ConnectionId","Speech_SessionId","find","toLowerCase","messageType","Text","Binary","textBody","binaryBody","SessionEventArgs","json","sessionId","privJsonResult","privEventName","privInternalData","path","propertyName","propertyValue","synthesisContext","payload","success","sendNetworkMessage","privEventListener","connectionEvents","connectionEvent","connected","connectionId","disconnected","messageSent","messageReceived","privServiceEventListener","serviceEvents","receivedServiceMessage","jsonString","recognizer","recoBase","internalData","Connection","setupEvents","synthesizer","synthBase","TranslationConnectionFactory","privDisposedTranslationRecognizer","lang","splice","updateLanguages","includes","TranslationServiceRecognizer","conn","fromRecognizer","setMessageProperty","to","sendMessageAsync","privReason","simpleSpeech","SimpleSpeechPhrase","fromJSON","NotRecognized","RecognitionStatus","BabbleTimeout","InitialBabbleTimeout","InitialSilenceTimeout","NoMatchDetails","errorDetails","privErrorDetails","privErrorCode","CancellationReason","NoError","RecognitionResult","EnumTranslation","implTranslateCancelResult","CancellationDetails","implTranslateErrorDetails","recogBase","privGrammerBuilder","phrase","addPhrase","phrases","clearPhrases","PhraseListGrammar","subscription","botId","botFrameworkConfig","DialogServiceConfig","Conversation_DialogType","DialogTypes","BotFramework","Conversation_ApplicationId","resolvedHost","applicationId","customCommandsConfig","CustomCommands","config","authInfo","parameters","dialogType","requestTurnStatus","Conversation_Request_Bot_Status_Messages","queryParams","QueryParameterNames","Format","Language","RequestBotStatusMessages","BotId","CustomCommandsAppId","resourceInfix","version","headerName","hostSuffix","ConnectionFactoryBase","getHostSuffix","DialogConnectionFactory","BaseUrl","standardizedHost","ApiKey","setCommonUrlParams","enableCompression","WebsocketConnection","WebsocketMessageFormatter","ProxyInfo","fromRecognizerConfig","ServicePropertyChannel","dialogConfig","dialogServiceConfigImpl","isTurnComplete","privIsDisposed","agentConfig","buildAgentConfig","Conversation_Speech_Activity_Template","speechActivityTemplate","retPromise","finally","activity","errCb","sendMessage","DialogServiceAdapter","botInfo","commType","commandsCulture","Conversation_Agent_Connection_Id","conversationId","Conversation_Conversation_Id","fromId","Conversation_From_Id","ttsAudioFormat","SpeakerRecognitionResultType","audioFormat","audioContext","gainNode","autoUpdateBufferTimer","init","newAudioData","ensureInitializedContext","audioData","formatAudioData","newSamplesData","samples","clearInterval","setInterval","updateAudioBuffer","createGain","gain","startTime","formatArrayBuffer","Int16Array","Int32Array","maxValue","float32Data","bufferSource","createBufferSource","frameCount","audioBuffer","createBuffer","channelOffset","decodeAudioData","newBuffer","profileId","profileType","privProfileType","statusText","ResultReason","Canceled","privDetails","enrollmentStatus","EnrollingVoiceProfile","ServiceError","enrollmentsCount","enrollmentsLengthInSec","results","VoiceProfileEnrollmentResult","EnrolledVoiceProfile","getIdentificationDetails","getVerificationDetails","audioLengthInSec","parseFloat","audioSpeechLengthInSec","enrollmentsSpeechLengthInSec","identificationProfileId","remainingEnrollmentsSpeechLengthInSec","verificationProfileId","remainingEnrollmentsCount","remainingEnrollments","VoiceProfileEnrollmentCancellationDetails","VoiceProfileCancellationDetails","privPhrases","passPhrase","activationPhrase","implClientSetup","privAdapter","createProfile","ok","status","response","profile","getProfileStatus","getProfiles","VoiceProfileType","TextIndependentIdentification","FromIdentificationProfileList","FromVerificationProfileList","getPhrases","createEnrollment","deleteProfile","getResult","DeletedVoiceProfile","resetProfile","ResetVoiceProfile","SpeakerRecognitionConfig","SpeakerIdMessageAdapter","successReason","profiles","privVoiceProfiles","SpeakerIdentificationModel","resultType","resultReason","RecognizedSpeaker","Identify","privProfileId","identifiedProfile","privScore","score","recognitionResult","NoMatch","SpeechServiceResponse_JsonResult","SpeakerRecognitionCancellationDetails","privVoiceProfile","SpeakerVerificationModel","privAudioConfigImpl","implSRSetup","responsePromise","identifySpeaker","verifySpeaker","Verify","voiceProfile","AutoDetectSourceLanguageConfig","SpeechServiceConnection_AutoDetectSourceLanguages","throwIfArrayEmptyOrWhitespace","configs","autoConfig","langs","endpointId","customProperty","languageDetectionConfidence","privLanguage","privLanguageDetectionConfidence","AutoDetectSourceLanguageResult","privEndpointId","SourceLanguageConfig","ConversationConnectionConfig","privHost","privApiVersion","privClientAppId","privDefaultLanguageCode","privRestPath","privWebSocketPath","privSpeechHost","privSpeechPath","privTranscriptionEventKeys","ParticipantChangedReason","participants","meId","exists","getParticipantIndex","getParticipant","findIndex","p","isHost","ConversationTranslatorMessageTypes","ConversationTranslatorCommandTypes","privRequestParams","configParams","privErrors","restErrors","apiVersion","restPath","privRestAdapter","RestMessageAdapter","conversationCode","languageCode","defaultLanguageCode","nickname","ConversationTranslator_Name","endpointHost","ConversationTranslator_Host","ConversationTranslator_CorrelationId","subscriptionRegion","clientAppId","roomId","authInvalidSubscriptionRegion","authorization","authInvalidSubscriptionKey","options","request","Post","requestId","extractHeaderValue","conversation","errMessageRaw","invalidCreateJoinConversationResponse","sessionToken","invalidArgs","Delete","body","privConversationMessageType","toConnectionMessage","deferral","incomingMessage","textContent","binaryContent","fromConnectionMessage","RawWebsocketMessage","webSocketPath","ConversationTranslator_Token","expirationTime","privExpirationTime","participantId","translations","originalLanguage","resultId","text","privOrigLang","TranslationRecognitionResult","privDetachables","onPreConnectionStart","privSessionId","onAuthCompleted","isError","onComplete","onConnectionEstablishCompleted","statusCode","onServiceTurnEndResponse","continuousRecognition","privRequestId","privRequestCompletionDeferral","detachable","isMuted","privIsMuted","isLocked","privIsLocked","participant","privParticipant","privKey","privValue","privParticipantId","translateTo","profanityFilter","roomProfanityFilter","isRoomLocked","isMuteAll","privRoomId","privSessionToken","privTranslateTo","privProfanityFilter","privRoomProfanityFilter","privIsRoomLocked","privParticipants","privIsMuteAll","command","privPayload","privCommand","privCommandResponse","roomid","CommandResponsePayload","privParticipantsPayloadResponse","roomLocked","muteAll","ParticipantsListPayloadResponse","privParticipantPayloadResponse","locale","usetts","ismuted","ishost","avatar","ParticipantPayloadResponse","privSpeechResponse","recognition","timestamp","SpeechResponsePayload","privTextResponse","originalText","TextResponsePayload","conversationServiceConnector","privLastPartialUtteranceId","noOp","privConversationServiceConnector","privConversationAuthentication","receiveMessageOverride","receiveConversationMessageOverride","recognizeOverride","postConnectImplOverride","conversationConnectImpl","configConnectionOverride","configConnection","disconnectOverride","privDisconnect","privConversationRequestSession","privConversationConnectionFactory","privConversationIsDisposed","privConnectionConfigPromise","connection","fetchConnection","send","terminateMessageLoop","cancelRecognition","connectionMessage","errorCallBack","cancellationReason","cancelEvent","canceled","privConnectionLoop","startMessageLoop","communicationCustodian","sendFinal","conversationMessageType","commandPayload","participantsPayload","participantsResult","displayName","isUsingTts","preferredLanguage","participantsListReceived","participantUpdateCommandReceived","muteAllCommandReceived","conversationExpiration","lockRoomCommandReceived","joinParticipantPayload","joiningParticipant","participantJoinCommandReceived","leavingParticipant","participantLeaveCommandReceived","speechPayload","speechResult","getTranslations","isFinal","translationReceived","textPayload","textResult","messageRetrievalPromise","r","privRequestSession","RuntimeError","Disconnected","privConnectionId","connectImpl","serviceResultTranslations","Translations","translation","serviceConfigImpl","conversationImpl","privConversation","privConnection","privSetTimeout","Worker","Timeout","setTimeout","privClearTimeout","clearTimeout","privSpeechRecognitionLanguage","conversationTranslatorToken","resetConversationTimeout","connectAsync","privTimeoutToken","closeConnection","msg","PromiseToEmptyCallback","sendRequest","getKeepAlive","SpeechState","privResult","RecognitionEventArgs","userId","privUserId","privAvatar","privDisplayName","privIsHost","privIsUsingTts","privPreferredLanguage","privVoice","Participant","arg2","arg3","arg4","createConversationAsync","privIsConnected","privConversationId","onConnected","privConversationTranslator","sessionStarted","privTranscriberRecognizer","conversationStarted","onDisconnected","sessionStopped","conversationStopped","onCanceled","conversationCanceled","onParticipantUpdateCommandReceived","updatedParticipant","useTts","translateToLanguages","addOrUpdateParticipant","participantsChanged","Updated","toParticipant","onLockRoomCommandReceived","onMuteAllCommandReceived","toParticipants","onParticipantJoinCommandReceived","newParticipant","JoinedConversation","onParticipantLeaveCommandReceived","ejectedParticipant","deleteParticipant","LeftConversation","onTranslationReceived","transcribed","transcribing","textMessageReceived","onParticipantsListReceived","privRoom","me","privIsReady","changeNicknameAsync","onConversationExpiration","privManager","addTargetLanguage","setProfanity","Masked","hostNickname","privConfig","privTextMessageMaxLength","conversationTranslator","privConversationRecognizer","privToken","handleError","permissionDeniedStart","createOrJoin","room","permissionDeniedConnect","handleCallback","fromConfig","addParticipantImplAsync","cognitiveSpeechAuthToken","deleteConversationImplAsync","leave","endConversationImplAsync","permissionDeniedSend","canSendAsHost","permissionDeniedConversation","getLockCommand","getMuteAllCommand","canSend","permissionDeniedParticipant","invalidParticipantRequest","getMuteCommand","removeParticipantImplAsync","getEjectCommand","getMessageCommand","getChangeNicknameCommand","convId","part","transcriptionEventKeys","val","conversationProperties","conversationInfo","pushConversationEvent","includeHost","privAudioConfig","PronunciationAssessmentGradingSystem","PronunciationAssessmentGranularity","translator","privSpeechState","Inactive","privTranslator","Connected","recognized","tr","cancelSpeech","fireCancelEvent","newState","stopContinuousRecognitionAsync","privIsSpeaking","privPlaceholderKey","privPlaceholderRegion","param1","param2","param3","privSpeechTranslationConfig","fromSubscription","speechEndpointHost","joinConversationAsync","startConversationAsync","sendTextMessageAsync","privCTRecognizer","connectTranslatorRecognizer","canSpeak","startContinuousRecognition","onDisconnection","encodeURIComponent","speechHost","cognitiveSpeechRegion","speechPath","startContinuousRecognitionAsync","isConnected","Connecting","isMutedByHost","speechTranslationConfig","speechTranslationConfigImpl","speechRecognitionLanguage","TranscriberConnectionFactory","reco","sendSpeechEventAsync","transcriber","recognizing","TranscriptionServiceRecognizer","privRecognizer","connectCallbacks","connectTranscriberRecognizer","disconnectCallbacks","privSynthesizing","SpeechSynthesisConnectionFactory","synthesisRequestQueue","Queue","implCommonSynthesizeSetup","languageToDefaultVoice","ssml","SpeechSynthesizer","XMLEncode","autoDetectSourceLanguage","speakImpl","SynthesizerConfig","synthesizerConfig","createSynthesizerConfig","createSynthesisAdapter","audioOutputFormat","AudioOutputFormat","fromSpeechSynthesisOutputFormat","IsSsml","dataStream","audioDestination","enqueue","adapterSpeak","dequeue","Speak","isSSML","referenceText","gradingSystem","FivePoint","granularity","Phoneme","enableMiscue","PronunciationAssessment_ReferenceText","PronunciationAssessment_GradingSystem","PronunciationAssessment_Granularity","PronunciationAssessment_EnableMiscue","updateJson","PronunciationAssessment_Params","setPronunciationAssessmentParams","PronunciationAssessment_Json","paramsJson","dimension","enableMiscueString","PronunciationAssessmentConfig","j","NBest","privPronJson","detailResult","PronunciationAssessment","AccuracyScore","PronScore","CompletenessScore","FluencyScore","PronunciationAssessmentResult","ThemeContext","React","createContext","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","prefixes","useContext","SynthesisStatus","AuthKey","ContentType","Path","RequestId","RequestStreamId","RequestTimestamp","MessageType","ConnectionMessage","privBody","privMessageType","privHeaders","privSize","CustomSpeechDeploymentId","CustomVoiceDeploymentId","EnableAudioLogging","EnableLanguageId","EnableWordLevelTimestamps","EndSilenceTimeoutMs","InitialSilenceTimeoutMs","Profanity","StableIntermediateThreshold","StableTranslation","TestHooks","_getPrototypeOf","__proto__","CancellationErrorCode","SpeechConnectionMessage","contentType","additionalHeaders","privPath","privContentType","privStreamId","privAdditionalHeaders","setUrlParameter","SpeechServiceConnection_InitialSilenceTimeoutMs","SpeechServiceConnection_EndSilenceTimeoutMs","SpeechServiceResponse_StablePartialResultThreshold","serviceProperties","num","propId","parameterName","toLocaleLowerCase","className","forwardRef","ref","createElement","_excluded","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","border","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Body","Link","Header","Footer","ImgOverlay","property","receiver","base","object","getOwnPropertyDescriptor","getRandomValues","rnds8","rng","crypto","msCrypto","validate","uuid","REGEX","byteToHex","v4","buf","rnds","random","createNoDashGuid","toUpperCase","BrowserConfigurationAuthErrorMessage","BrowserConfigurationAuthError","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createStorageNotSupportedError","givenStorageLocation","createRedirectCallbacksNotSetError","createStubPcaInstanceCalledError","createInMemoryRedirectUnavailableError","_slicedToArray","_arr","_n","_d","_s","_i","unsupportedIterableToArray","DialogServiceConfigImpl","privSpeechConfig","setServiceProperty","_assertThisInitialized","self","ReferenceError","OCSPEvent","signature","privSignature","OCSPMemoryCacheHitEvent","Debug","OCSPCacheMissEvent","OCSPDiskCacheHitEvent","OCSPCacheUpdateNeededEvent","OCSPMemoryCacheStoreEvent","OCSPDiskCacheStoreEvent","OCSPCacheUpdatehCompleteEvent","OCSPStapleReceivedEvent","OCSPCacheEntryExpiredEvent","serialNumber","expireTime","privExpireTime","OCSPCacheEntryNeedsRefreshEvent","privStartTime","OCSPCacheHitEvent","privExpireTimeString","toLocaleDateString","privStartTimeString","toLocaleTimeString","OCSPVerificationFailedEvent","privError","OCSPCacheFetchErrorEvent","OCSPResponseRetrievedEvent","OCSPCacheUpdateErrorEvent","stubbedPublicClientApplication","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","getAllAccounts","getAccountByHomeId","getAccountByUsername","getAccountByLocalId","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRedirect","logoutPopup","ssoSilent","addEventCallback","removeEventCallback","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","getLogger","setLogger","setActiveAccount","getActiveAccount","initializeWrapperLibrary","setNavigationClient","getConfiguration","getInteractionStatusFromEvent","currentStatus","LOGIN_START","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","SSO_SILENT_SUCCESS","SSO_SILENT_FAILURE","None","LOGOUT_END","HANDLE_REDIRECT_END","LOGIN_SUCCESS","LOGIN_FAILURE","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE","defaultMsalContext","inProgress","accounts","logger","Logger","MsalContext","getChildrenOrFunction","MsalProvider","useEffect","useState","inProgressRef","useRef","callbackId","currentAccounts","arrayA","arrayB","comparisonArray","elementA","elementB","accountArraysAreEqual","setAccounts","EventMessageUtils","current","setInProgress","contextValue","useMsal","getAccount","allAccounts","accountIdentifiers","accountObj","matchedAccounts","matchAccount","useIsAuthenticated","account","initialStateValue","currentAccount","AccountEntity","setAccount","useAccount","isAuthenticated","setHasAuthenticated","AuthenticatedTemplate","username","homeAccountId","localAccountId","UnauthenticatedTemplate","privKeys","privValues","keyToUse","clonedMap","destinationCollection","useCommittedRef","useEventCallback","useCallback","rHyphen","pascalCase","string","chr","_temp","_ref$displayName","BsComponent","_ref2","_ref2$as","Tag","resolvedPrefix","recognitionStatus","Success","RecognizedSpeech","EndOfDictation","BadRequest","Forbidden","EndOfStream","TooManyRequests","BadRequestParameters","cancellationErrorCode","AudioOutputStream","PullAudioOutputStream","PullAudioOutputStreamImpl","privStream","getDefaultOutputFormat","dataBuffer","intView","totalBytes","privLastChunkView","isReadEnded","tmpBuffer","PushAudioOutputStream","callback","PushAudioOutputStreamImpl","privCallback","buildClientInfo","rawClientInfo","decodedClientInfo","base64Decode","buildClientInfoFromHomeAccountId","clientInfoParts","CLIENT_INFO_SEPARATOR","uid","utid","isUndefined","isObject","isPlainObject","isFunction","l","isArrayBuffer","isBuffer","isFormData","FormData","isArrayBufferView","isView","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","product","document","merge","assignValue","extend","b","thisArg","stripBOM","content","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","RecognitionMode","SpeechResultFormat","speechServiceConfig","privRecognitionMode","privSpeechServiceConfig","SpeechServiceConfig","Context","privParameters","privMaxRetryCount","parseInt","privRecognitionActivityTimeout","Recognition","serialize","replacement","k","charAt","substring","os","system","System","build","OS","SpeechRecognitionResult","speakerId","privSpeakerId","AudioSourceEvent","Info","privAudioSourceId","AudioSourceInitializingEvent","AudioSourceReadyEvent","AudioSourceOffEvent","AudioSourceErrorEvent","AudioStreamNodeEvent","privAudioNodeId","AudioStreamNodeAttachingEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent","RecognitionCompletionStatus","SpeechRecognitionEvent","RecognitionTriggeredEvent","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","privAuthFetchEventid","RecognitionStartedEvent","privAuthFetchEventId","RestRequestType","privIgnoreCache","ignoreCache","method","responseReceivedDeferral","requestCommand","handleRestResponse","d","statusMessage","blobToArrayBuffer","onloadend","postData","res","queryString","headerKey","headerValue","headerMap","line","parts","AuthorityType","SelectableContext","makeEventKey","eventKey","AudioOutputFormatImpl","audioFormatString","requestAudioFormatString","priAudioFormatString","priRequestAudioFormatString","priHasHeader","speechSynthesisOutputFormat","fromSpeechSynthesisOutputFormatString","SpeechSynthesisOutputFormatToString","speechSynthesisOutputFormatString","Siren","SILKSkype","Raw8Khz8BitMonoMULaw","Riff16Khz16KbpsMonoSiren","Audio16Khz16KbpsMonoSiren","Audio16Khz32KBitRateMonoMp3","Audio16Khz128KBitRateMonoMp3","Audio16Khz64KBitRateMonoMp3","Audio24Khz48KBitRateMonoMp3","Audio24Khz96KBitRateMonoMp3","Audio24Khz160KBitRateMonoMp3","Raw16Khz16BitMonoTrueSilk","Riff16Khz16BitMonoPcm","Riff8Khz16BitMonoPcm","Riff24Khz16BitMonoPcm","Riff8Khz8BitMonoMULaw","Raw16Khz16BitMonoPcm","Raw24Khz16BitMonoPcm","Raw8Khz16BitMonoPcm","Ogg16Khz16BitMonoOpus","Ogg24Khz16BitMonoOpus","Raw48Khz16BitMonoPcm","Riff48Khz16BitMonoPcm","Audio48Khz96KBitRateMonoMp3","Audio48Khz192KBitRateMonoMp3","Ogg48Khz16BitMonoOpus","Webm16Khz16BitMonoOpus","Webm24Khz16BitMonoOpus","Webm24Khz16Bit24KbpsMonoOpus","Raw24Khz16BitMonoTrueSilk","Raw8Khz8BitMonoALaw","Riff8Khz8BitMonoALaw","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","generateAccountId","environment","CACHE_KEY_SEPARATOR","generateAccountKey","generateAccountCacheKey","tenantId","realm","generateType","authorityType","ADFS_ACCOUNT_TYPE","MSAV1_ACCOUNT_TYPE","MSA","MSSTS_ACCOUNT_TYPE","MSSTS","GENERIC_ACCOUNT_TYPE","GENERIC","getAccountInfo","idTokenClaims","accountInterface","createAccount","clientInfo","idToken","authority","oboAssertion","cloudGraphHostName","msGraphHost","env","getPreferredCache","claims","tid","oid","sub","preferred_username","emails","createGenericAccount","Adfs","upn","generateHomeAccountId","serverClientInfo","authType","cryptoObj","accountId","verbose","isAccountEntity","entity","accountInfoIsEqual","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","nonce","createChainedFunction","_len","funcs","_key","reduce","acc","_len2","_key2","PromiseState","Deferred","privResolve","privReject","privPromise","marshalPromiseToCallbacks","privOffset","metadata","privEventListeners","paramName","eventId","onEventCallback","attachListener","listener","AuthInfo","privHeaderName","toFnRef","useMergedRefs","refA","refB","mergeRefs","Button","size","block","SafeAnchor","disabled","SpeechRecognitionEventArgs","ConversationTranscriptionEventArgs","privTranslations","IntentRecognitionEventArgs","IntentRecognitionResult","privIntentId","textMessage","headerBodySplit","parseHeaders","binaryMessage","dataView","headerLength","getInt16","headersString","getInt8","makeHeaders","headerBuffer","stringToArrayBuffer","headerInt8Array","payloadInt8Array","bodyInt8Array","headerMatches","match","separatorIndex","PushAudioInputStream","PullAudioInputStream","PushAudioInputStreamImpl","audioNode","bufferData","Buffer","from","readCycle","audioStreamChunk","XMLHttpRequest","concat","toBuffer","Stream","arrayBuffer","alloc","PullAudioInputStreamImpl","privBufferSize","transmitBuff","readBuff","pulledBytes","_setPrototypeOf","_unsupportedIterableToArray","minLen","DropdownContext","CancellationEventArgsBase","matchesImpl","toArray","qsa","element","selector","querySelectorAll","useGlobalListener","handler","capture","eventTarget","addEventListener","removeEventListener","useEventListener","propTypes","PropTypes","node","drop","oneOf","focusFirstItemOnShow","itemSelector","alignEnd","bool","show","defaultShow","onToggle","func","useRefWithUpdate","forceUpdate","useReducer","attachRef","Dropdown","rawShow","rawOnToggle","_ref$itemSelector","_useUncontrolledProp","useUncontrolledProp","_useRefWithUpdate","menuRef","setMenu","menuElement","_useRefWithUpdate2","toggleRef","setToggle","toggleElement","lastShow","usePrevious","lastSourceEvent","focusInDropdown","toggle","nextShow","contains","activeElement","focusToggle","focus","maybeFocusFirst","focusType","nativeMatch","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","first","getNextFocusedChild","items","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","tagName","preventDefault","_menuRef$current2","once","stopPropagation","Menu","DropdownMenu","Toggle","DropdownToggle","NavContext","DropdownItem","onClick","onSelect","propActive","onSelectCtx","activeKey","handleClick","DropdownHeader","role","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","alignRight","_useUncontrolled$as","navbar","handleToggle","currentTarget","handleSelect","BaseDropdown","Divider","Item","ItemText","defaultKey","_toPropertyKey","hint","prim","toPrimitive","Number","_toPrimitive","propValue","defaultValue","wasPropRef","_useState","stateValue","setState","isProp","wasProp","fieldName","_extends2","Utils","propsValue","rest","handlerName","opt","pairs","pairSplitRegExp","dec","eq_idx","tryDecode","enc","fieldContentRegExp","maxAge","isNaN","floor","domain","expires","toUTCString","httpOnly","secure","sameSite","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","SpeechSynthesisEventArgs","SpeechSynthesisResult","privResultId","privAudioData","MetadataType","SynthesisAudioMetadata","privSynthesisAudioMetadata","Metadata","privIsLiveAudio","sendSpeechContext","speechContextJson","toJSON","onSpeechContext","sendPrePayloadJSONOverride","sendSpeechServiceConfig","requestSession","SpeechServiceConfigJson","privRecognizerConfig","DisableReferenceChannel","MicSpec","privMustReportEndOfStream","privAuthentication","privAudioSource","privConnectionEvents","privServiceEvents","privDynamicGrammar","privSpeechContext","privAgentConfig","connectionClosedEvent","numConnectionAttempts","maxRetryCount","cancelRecognitionLocal","ConnectionFailure","auth","privConnectionConfigurationPromise","recoMode","privSuccessCallback","privErrorCallback","startNewRecognition","listenForServiceTelemetry","conPromise","audioStreamNode","onAudioSourceAttachCompleted","onStopRecognizing","sessionStartEventArgs","receiveMessage","sendAudio","isRecognizing","sendFinalAudio","turnCompletionPromise","privConnectionPromise","privActivityTemplate","messagePayload","telemetryData","getTelemetry","privServiceHasSentMessage","onServiceTurnStartResponse","speechStartDetected","speechStartEventArgs","Offset","speechStopDetected","isContinuousRecognition","onServiceRecognized","currentTurnAudioOffset","speechStopEventArgs","speechEndDetected","sendTelemetryData","isSpeechEnded","sessionStopEventArgs","sendPrePayloadJSON","processTypeSpecificMessages","sendWaveHeader","retryableConnect","configureConnection","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","startRecogNumber","recogNumber","readAndUploadCycle","sendDelay","onAudioSent","bytesSent","delay","onSpeechEnded","isUnAuthorized","lastStatusCode","lastReason","authPromise","fetchOnExpiry","fetch","open","onRetryConnection","delayMs","out","readView","padStart","DEVICE_SIZES","Col","spans","brkPoint","span","order","_propValue$span","infix","condition","argIndex","framesToPop","_arrayLikeToArray","len","arr2","SpeechHypothesis","privSpeechHypothesis","Duration","PrimaryLanguage","Confidence","SpeakerId","privSimpleSpeechPhrase","DisplayText","TranslationStatus","TranslationPhrase","privTranslationPhrase","Translation","translationResponse","SpeechPhrase","hasClass","classList","baseVal","getMargins","styles","getComputedStyle","top","marginTop","right","marginRight","bottom","marginBottom","left","marginLeft","alignDirection","alignPropType","oneOfType","shape","sm","md","lg","xl","align","rootCloseEvent","flip","showProps","renderOnMount","popperConfig","isNavbar","NavbarContext","_usePopperMarginModif","overlayRef","margins","arrowMargins","popoverClass","dropdownMenuClass","overlay","style","margin","placement","_margins$current","padding","_arrowMargins$current","phase","requiresIfExists","effect","elements","arrow","modifiersData","_getMargins","usePopperMarginModifiers","popperRef","marginModifiers","alignClasses","direction","_useDropdownMenu","useDropdownMenu","usePopper","modifiers","menuProps","_useDropdownMenu$","hasShown","popper","useWrappedRefWithWarning","RestConfigBase","privDefaultRequestOptions","privDefaultParams","privRestErrors","Accept","timeout","contentTypeKey","privProxyHostName","privProxyPort","privProxyUserName","privProxyPassword","fromParameters","privStatusCode","messageFormatter","proxyInfo","privConnectionState","privConnectionEstablishDeferral","privCertificateValidatedDeferral","WebSocket","WebsocketMessageAdapter","forceNpmWebSocket","perMessageDeflate","privEnableCompression","checkAgent","agent","GetAgent","privWebsocketClient","privUri","binaryType","privReceivingMessageQueue","privDisconnectDeferral","privSendMessageQueue","processSendQueue","onopen","privLastErrorReceived","onclose","onClose","networkReceivedTime","enqueueFromPromise","rawMessage","privMessageFormatter","messageSendStatusDeferral","messageSendDeferral","Message","sendStatusDeferral","sendRawMessage","sendItem","isWebsocketOpen","stack","closeReason","drainAndDispose","pendingReceiveItem","pendingSendItem","itemToSend","OPEN","queryParameters","privConnectionMessageAdapter","speechSynthesizer","speakOverride","connectImplOverride","sendSynthesisContext","synthesisContextJson","privSynthesisTurn","sendSsmlMessage","privSynthesizerConfig","privSpeechSynthesizer","privSessionAudioDestination","privSynthesisContext","cancelSynthesisLocal","privAudioOutputFormat","buildSsml","startNewSynthesis","synthesisStartEventArgs","SynthesizingAudioStarted","synthesisStarted","SynthesisCanceled","isSynthesizing","onStopSynthesizing","cancelSynthesis","onServiceResponseMessage","onAudioChunkReceived","synthesizing","audioWithHeader","SynthesizingAudio","metadataList","Type","WordBoundary","Bookmark","Viseme","onWordBoundaryEvent","Data","wordBoundaryEventArgs","Length","currentTextOffset","wordBoundary","bookmarkEventArgs","bookmarkReached","onVisemeMetadataReceived","IsLastAnimation","visemeEventArgs","VisemeId","getAndClearVisemeAnimation","visemeReceived","getAllReceivedAudioWithHeader","SynthesizingAudioCompleted","synthesisCompleted","tmp","SpeechConfigImpl","SpeechServiceConnection_IntentRegion","_isNativeReflectConstruct","sham","Proxy","LogLevel","loggerOptions","packageName","packageVersion","level","localCallback","loggerCallback","piiLoggingEnabled","logLevel","logMessage","containsPii","executeCallback","errorPii","warning","Warning","warningPii","infoPii","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled","any","title","isRequired","menuAlign","menuRole","renderMenuOnMount","DropdownButton","childBsPrefix","componentName","noop","useDropdownToggle","_ref$show","_ref$toggle","_useDropdownToggle","meta","Fragment","isTrivialHref","onKeyDown","tabIndex","toggleProps","AgentConfig","iPrivConfig","TranslationRecognitionEventArgs","TranslationSynthesisEventArgs","TranslationSynthesisResult","SpeechDetected","privSpeechStartDetected","DetailedSpeechPhrase","privDetailedSpeechPhrase","baseOffset","Words","firstWordOffset","details","Display","TranslationRecognitionCanceledEventArgs","sessionid","privCancelReason","useSafeState","isMounted","mounted","useMounted","nextState","getBasePlacement","getBoundingClientRect","includeScale","rect","width","height","x","y","getLayoutRect","clientRect","offsetWidth","offsetHeight","abs","offsetLeft","offsetTop","getWindow","ownerDocument","defaultView","isElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","parent","child","rootNode","getRootNode","isSameNode","parentNode","getNodeName","nodeName","isTableElement","getDocumentElement","documentElement","getParentNode","assignedSlot","getTrueOffsetParent","position","offsetParent","getOffsetParent","isFirefox","currentNode","css","transform","perspective","contain","willChange","getContainingBlock","getMainAxisFromPlacement","within","mathMax","mathMin","mergePaddingObject","paddingObject","expandToHashMap","hashMap","auto","basePlacements","viewport","variationPlacements","placements","modifierPhases","_state$modifiersData$","arrowElement","popperOffsets","basePlacement","axis","rects","toPaddingObject","arrowRect","minProp","maxProp","endDiff","reference","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","axisProp","centerOffset","_options$element","querySelector","requires","getVariation","unsetSides","mapToStyles","_Object$assign2","popperRect","variation","offsets","gpuAcceleration","adaptive","roundOffsets","_ref3","dpr","devicePixelRatio","roundOffsetsByDPR","_ref3$x","_ref3$y","hasX","hasY","sideX","sideY","win","heightProp","widthProp","_Object$assign","commonStyles","_ref4","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","strategy","attributes","passive","_options$scroll","scroll","_options$resize","resize","scrollParents","scrollParent","update","hash","getOppositePlacement","matched","getOppositeVariationPlacement","getWindowScroll","scrollLeft","pageXOffset","scrollTop","pageYOffset","getWindowScrollBarX","isScrollParent","_getComputedStyle","overflow","overflowX","overflowY","getScrollParent","listScrollParents","list","_element$ownerDocumen","isBody","visualViewport","updatedList","rectToClientRect","getClientRectFromMixedType","clippingParent","html","getViewportRect","clientTop","clientLeft","getInnerBoundingClientRect","winScroll","scrollWidth","scrollHeight","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","computeOffsets","commonX","commonY","mainAxis","detectOverflow","_options","_options$placement","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","altContext","clippingClientRect","contextElement","referenceClientRect","popperClientRect","elementClientRect","overflowOffsets","offsetData","multiply","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","_options$allowedAutoP","allPlacements","allowedPlacements","overflows","sort","computeAutoPlacement","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","every","check","_loop","fittingPlacement","reset","getSideOffsets","preventedOffsets","isAnySideFullyClipped","some","side","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","tetherOffsetValue","mainSide","altSide","additive","maxLen","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","clientOffset","offsetModifierValue","tetherMin","tetherMax","preventedOffset","_mainSide","_altSide","_offset","_min","_max","_preventedOffset","getCompositeRect","elementOrVirtualElement","isFixed","isOffsetParentAnElement","offsetParentIsScaled","scaleX","scaleY","isElementScaled","getNodeScroll","visited","Set","modifier","add","dep","depModifier","debounce","pending","DEFAULT_OPTIONS","areValidElements","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","orderedModifiers","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","cleanupModifierEffects","orderModifiers","merged","existing","mergeByName","m","_ref3$options","cleanupFn","noopFn","_state$elements","_state$orderedModifie","_state$orderedModifie2","destroy","onFirstUpdate","createPopper","hide","computeStyles","eventListeners","initialPopperStyles","opacity","pointerEvents","disabledApplyStylesModifier","ariaDescribedByModifier","ids","getAttribute","setAttribute","removeAttribute","_popper$getAttribute","_state$elements2","EMPTY_MODIFIERS","referenceElement","popperElement","_ref3$enabled","_ref3$placement","_ref3$strategy","_ref3$modifiers","popperInstanceRef","_popperInstanceRef$cu","_popperInstanceRef$cu2","_useSafeState","popperState","updateModifier","__once","componentOrElement","ReactDOM","findDOMNode","safeFindDOMNode","getRefTarget","useRootClose","onRootClose","_ref$clickTrigger","clickTrigger","preventMouseRootCloseRef","handleMouseCapture","metaKey","altKey","ctrlKey","shiftKey","button","isLeftClickEvent","compareDocumentPosition","handleMouse","handleKeyUp","keyCode","currentEvent","doc","removeMouseCaptureListener","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","el","remove","mergeOptionsWithPopperConfig","_modifiers$preventOve","_modifiers$preventOve2","_modifiers$offset","_modifiers$arrow","enableEvents","fixed","containerPadding","_ref$popperConfig","toModifierMap","_useCallbackRef","attachArrowRef","hasShownRef","_options$fixed","_options$popperConfig","_options$usePopper","shouldUsePopper","arrowProps","_toConsumableArray","arrayLikeToArray","iter","_typeof","_possibleConstructorReturn","assertThisInitialized","_inheritsLoose","optionsSupported","onceSupported","canUseDOM","wrappedHandler","onceHandler","Row","noGutters","decoratedBsPrefix","sizePrefix","cols","ConnectionState","propIsEnumerable","propertyIsEnumerable","toObject","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","utils","normalizeHeaderName","enhanceError","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","defaults","transitional","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","adapter","process","getDefaultAdapter","transformRequest","rawValue","parser","encoder","stringifySafely","transformResponse","strictJSONParsing","responseType","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","SynthesisContext","sectionName","synthesisSection","buildSynthesisContext","metadataOptions","bookmarkEnabled","sentenceBoundaryEnabled","visemeEnabled","wordBoundaryEnabled","autoDetection","SpeechSynthesisWordBoundaryEventArgs","audioOffset","wordLength","textOffset","privAudioOffset","privText","privWordLength","privTextOffset","SpeechSynthesisBookmarkEventArgs","SpeechSynthesisVisemeEventArgs","visemeId","animation","privVisemeId","privAnimation","privDuration","privJson","SpeechRecognitionCanceledEventArgs","DynamicGrammarBuilder","grammar","privGrammars","retObj","retPhrases","Groups","Items","SpeechContext","phraseDetection","enrichment","pronunciationAssessment","phraseOutput","detailed","dgi","generateGrammarObject","IntentResponse","privIntentResponse","topScoringIntent","entities","IntentRecognitionCanceledEventArgs","TranslationHypothesis","privTranslationHypothesis","TranslationSynthesisEnd","privSynthesisEnd","FailureReason","privMap","ConversationTranscriptionCanceledEventArgs","sessionAudioDestinationId","turnAudioDestinationId","privSessionAudioDestinationId","privTurnAudioDestinationId","privIsSynthesizing","privIsSynthesisEnded","privInTurn","privNextSearchTextIndex","responseJson","privTurnDeferral","privTurnAudioDestination","privReceivedAudio","readAllAudioFromStream","privReceivedAudioWithHeader","getAllReceivedAudio","rawText","privRawText","privIsSSML","privPartialVisemeAnimation","updateTextOffset","AnimationChunk","bytesReceived","privListeningTriggerMetric","privMicMetric","privConnectionEstablishMetric","End","eventTime","Name","Start","privMicStartTime","privConnectionStartTime","Id","getConnectionError","privReceivedMessages","metrics","privPhraseLatencies","PhraseLatencyMs","privHypothesisLatencies","FirstHypothesisLatencyMs","telemetry","Metrics","ReceivedMessages","audioReceivedTime","privIsAudioNodeDetached","privIsRecognizing","privIsSpeechEnded","privTurnStartAudioOffset","privLastRecoOffset","privHypothesisReceived","privBytesSent","privRecogNumber","privConnectionAttempts","privServiceTelemetryListener","hasTelemetry","eventSource","privAudioNode","replay","hypothesisReceived","findTimeAtOffset","phraseReceived","shrinkBuffers","detachAudioNode","NavbarBrand","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","transforms","getPropertyValue","psuedoElement","isTransform","removeProperty","cssText","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","getDerivedStateFromProps","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","mounting","performEnter","performExit","_this2","appearing","nodeRef","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","setNextCallback","_this4","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","render","_this$props","childProps","TransitionGroupContext","cloneElement","Children","only","contextType","emulateTransitionEnd","called","handle","bubbles","cancelable","createEvent","initEvent","dispatchEvent","triggerEvent","transitionEnd","mult","parseDuration","removeEmulate","transitionEndListener","_collapseStyles","MARGINS","getDefaultDimensionValue","elem","collapseStyles","getDimensionValue","Collapse","_ref$dimension","_ref$getDimensionValu","computedDimension","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","innerProps","NavbarCollapse","expanded","NavbarToggle","NavbarText","Navbar","initialBsPrefix","expand","sticky","_onToggle","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","Brand","SubscriberType","privSubscriptionIdCounter","privAddSubscriptions","privRemoveSubscriptions","privDisposedSubscriptions","privDisposeReason","itemIndex","privList","last","insertAt","triggerSubscriptions","removeFirst","removeAt","removeLast","removedElements","clear","onAdded","addedCallback","subscriptionId","onRemoved","removedCallback","onDisposed","disposedCallback","seperator","cloneCopy","where","all","select","selectList","List","filteredList","orderBy","compareFn","orderedArray","orderByDesc","concatArray","subscriptions","privPromiseStore","privIsDrainInProgress","privIsDisposing","throwIfDispose","deferredSubscriber","privSubscribers","Dequeue","drain","peek","Peek","subs","lists","subscriber","dequeuedItem","pendingItemProcessor","promiseArray","wrapper","privInstance","setEventSource","paramsSerializer","serializedParams","v","hashmarkIndex","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","nextTick","browser","argv","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","isAxiosError","description","number","lineNumber","columnNumber","settle","cookies","buildURL","buildFullPath","isURLSameOrigin","createError","requestData","requestHeaders","password","unescape","Authorization","btoa","fullPath","baseURL","responseHeaders","getAllResponseHeaders","responseText","onreadystatechange","responseURL","onabort","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","cancelToken","abort","__CANCEL__","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","mergeDeepProperties","prop","axiosKeys","otherKeys","Cancel","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","that","RangeError","encodingOrOffset","allocUnsafe","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","fromString","checked","copy","fromObject","assertSize","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","dst","g","privAuthInfo","AuthHeader","fetchCallback","fetchOnExpiryCallback","privFetchCallback","privTokenPrefix","privFetchOnExpiryCallback","interactiveRelativeUri","conversationRelativeUri","dictationRelativeUri","autoDetectSourceLanguages","Dictation","SpeechServiceConnection_Url","speechRecognizer","privSpeechRecognizer","sourceLanguages","onSuccess","action","onUnknown","interimResults","phraseResults","resultProps","processed","hypothesis","RecognizingSpeech","LanguageDetectionConfidence","onHypothesis","simple","implTranslateRecognitionResult","onPhraseRecognized","cancelReason","implTranslateCancelErrorCode","totalOffset","offsetCorrectedJson","getJsonWithCorrectedOffsets","intentRegion","privIntentRecognizer","privIntentDataSent","addedIntents","umbrellaIntent","speechHypothesis","RecognizingIntent","sendEvent","privPendingIntentArgs","intentResponse","addedIntent","intent","RecognizedIntent","LanguageUnderstandingServiceResponse_JsonResult","SpeechServiceResponse_TranslationRequestStablePartialResult","translationRecognizer","privTranslationRecognizer","onConnection","handleTranslationPhrase","translatedPhrase","fireEventForResult","fromTranslationResponse","sendSynthesisAudio","synthEnd","retEvent","canceledResult","serviceResult","TranslatedSpeech","TranslatingSpeech","ActivityReceivedEventArgs","privActivity","privAudioStream","SpeechKeyword","privSpeechKeyword","Status","requestOptions","SpeakerRecognition_Api_Version","getOperationUri","getQueryParams","ignoreMinLength","profileIds","voiceProfileIds","Get","mode","dependency","TextDependentVerification","multiaudioRelativeUri","hostDefault","sendSpeechEvent","speechEventJson","sendTranscriptionStartJSON","createSpeechEventPayload","getConversationInfo","meeting","eventDict","audiorecording","synthesisUri","hostPrefix","SynthesisServiceType","privSynthesisServiceType","Standard","MessageDataStreamType","privActivityResponse","messageDataStreamType","ActivityPayloadResponse","manager","privIsCompleted","privTurnManager","resetTurnEndTimeout","TextToSpeechAudio","createPullStream","endAudioStream","CompleteTurn","privTurnMap","turnState","complete","delete","dialogServiceConnector","sendAgentConfig","agentConfigSent","agentConfigJson","toJsonString","sendAgentContext","guid","privDialogServiceConnector","agentContext","channelData","interactionId","agentContextJson","handleResponseMessage","responseMessage","responsePayload","responseRequestId","activityPayload","turn","privTurnStateManager","GetTurn","updateAgentConfig","pullAudioOutputStream","processActivityPayload","activityReceived","turnStatusReceived","TurnStatusReceivedEventArgs","receiveDialogMessageOverride","listenOnce","dialogConnectImpl","privDialogAudioSource","privLastResult","interactionGuid","agentMessage","agentMessageJson","speechPhrase","keyword","RecognizedKeyword","audioRequestId","preAudioPromise","sendPreAudioMessages","ReplayableAudioNode","loop","turnRequestId","audioSessionReqId","StartTurn","turnEndRequestId","addKeywordContextData","keywordPropertyValue","keywordOffsetPropertyValue","keywordDurationPropertyValue","keywords","keywordOffsets","keywordDurations","keywordDefinitionArray","definition","clientDetectedKeywords","onReject","logLevelFilter","privLogLevelFilter","debug","logFragments","EventTime","valueToLog","privMessageStatusResponse","TurnStatusResponsePayload","turnStatus","privTurnStatus","componentWillMount","componentWillReceiveProps","nextProps","componentWillUpdate","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","newApiName","maybeSnapshot","snapshot","__suppressDeprecationWarning","Container","fluid","suffix","CertCheckAgent","privProxyInfo","privDiskCache","supportBuffer","location","SPEECH_OCSP_CACHE_ROOT","disableStapling","Agent","CreateConnection","HostName","Port","socketPromise","enableOCSP","NODE_TLS_REJECT_UNAUTHORIZED","SPEECH_CONDUCT_OCSP_CHECK","secureEndpoint","requestOCSP","forceDisableOCSPStapling","servername","baseAgent","GetProxyAgent","socket","OCSPCheck","privMemCache","httpProxyOptions","UserName","Password","resolved","cork","tlsSocket","stapling","peer","getPeerCertificate","GetIssuer","issuer","ocspRequest","generate","raw","sig","GetResponseFromCache","cacheEntry","VerifyOCSPResponse","uncork","issuerCertificate","fetchIssuer","cachedResponse","diskCacheResponse","isCached","StoreMemoryCacheEntry","cachedOcspResponse","parseResponse","tbsData","tbsResponseData","responses","cachedStartTime","thisUpdate","cachedNextTime","nextUpdate","testTimeOffset","minUpdate","UpdateCache","cacheValue","ocspResponse","certID","GetOCSPResponse","StoreCacheEntry","req","rawResponse","StoreDiskCacheEntry","getAuthorityInfo","cert","parsedUri","getResponse","required","qs","slashes","protocolre","windowsDriveLetter","trimLeft","rules","address","isSpecial","NaN","ignore","lolcation","loc","finaldestination","Url","scheme","extractProtocol","forwardSlashes","otherSlashes","slashesCount","relative","extracted","instruction","instructions","up","origin","pop","char","ins","core","StatusError","captureStackTrace","entries","statusCodes","baseurl","_url","_headers","Headers","resp","_default","A100","A200","A400","A700","invariant","cond","NavigationContext","LocationContext","Router","basename","basenameProp","navigationType","NavigationType","static","staticProp","useInRouterContext","normalizePathname","navigationContext","locationProp","parsePath","trailingPathname","stripBasename","nextChar","BrowserRouter","historyRef","createBrowserHistory","history","readCookie","cleanValue","cleanupCookieValue","doNotParse","isParsingCookie","__assign","t","Cookies","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","_updateBrowserValues","parseOptions","_emitChange","getAll","name_1","_a","finalOptions","addChangeListener","removeChangeListener","idx","privIsWriteEnded","privIsReadEnded","privReaderQueue","streamChunk","throwIfClosed","ServiceEvent","jsonstring","ConnectionEvent","ConnectionStartEvent","ConnectionEstablishedEvent","ConnectionClosedEvent","ConnectionErrorEvent","privMessage","privType","ConnectionEstablishErrorEvent","statuscode","ConnectionMessageReceivedEvent","networkReceivedTimeISO","privNetworkReceivedTime","ConnectionMessageSentEvent","networkSentTimeISO","privNetworkSentTime","StrictMode","Profiler","q","Suspense","u","for","w","z","A","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","C","refs","updater","D","E","isPureReactComponent","G","H","I","__self","__source","J","$$typeof","_owner","L","M","N","escape","O","K","P","Q","_status","_result","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","_context","createFactory","createRef","isValidElement","lazy","_payload","_init","memo","useDebugValue","useImperativeHandle","useLayoutEffect","aa","ba","ca","da","ea","fa","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","sanitizeURL","removeEmptyString","oa","pa","qa","ma","na","la","setAttributeNS","xlinkHref","ra","sa","ta","ua","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","Oa","Pa","prepareStackTrace","Qa","tag","_render","Ra","Sa","Ta","Va","_valueTracker","getValue","setValue","stopTracking","Ua","Wa","Xa","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","eb","db","fb","selected","defaultSelected","gb","dangerouslySetInnerHTML","hb","ib","jb","kb","lb","mb","nb","ob","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","ub","menuitem","area","br","col","embed","hr","img","keygen","link","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","flags","$b","memoizedState","dehydrated","ac","cc","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","clz32","bd","cd","LN2","dd","unstable_UserBlockingPriority","ed","gd","hd","uc","jd","kd","ld","nd","od","charCode","pd","qd","rd","_reactName","_targetInst","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","timeStamp","isTrusted","td","ud","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","getModifierState","zd","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","repeat","which","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","range","tel","time","week","ne","oe","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","nextSibling","Me","Ne","HTMLIFrameElement","contentWindow","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","Ze","Yb","$e","af","bf","cf","df","Nb","ef","ff","parentWindow","gf","hf","je","ke","jf","kf","lf","mf","autoFocus","nf","__html","of","pf","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","cg","dg","eg","fg","gg","hg","ig","jg","kg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","effects","yg","zg","lane","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","Ng","Og","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","Tg","Ug","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","Ih","Jh","Kh","lastRenderedReducer","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","fi","gi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onclick","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","Ni","Oi","WeakMap","Pi","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","aj","display","bj","onCommitFiberUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","jj","kj","lj","mj","nj","ceil","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","createRange","setStart","removeAllRanges","addRange","setEnd","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","form","Vj","vk","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","port2","port1","postMessage","sortIndex","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_wrapCallback","runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","prev","rootRecord","rval","exception","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","jsx","jsxs","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","propFullName","secret","getShim","ReactPropTypes","symbol","arrayOf","instanceOf","objectOf","exact","checkPropTypes","validator","componentNameSafe","propFullNameSafe","Axios","mergeConfig","createInstance","defaultConfig","axios","instanceConfig","CancelToken","isCancel","promises","spread","InterceptorManager","dispatchRequest","validators","interceptors","assertOptions","boolean","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","handlers","use","eject","transformData","throwIfCancellationRequested","throwIfRequested","fns","normalizedName","toGMTString","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","originURL","msie","urlParsingNode","resolveURL","requestURL","pkg","thing","deprecatedWarnings","currentVerArr","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opts","schema","allowUnknown","executor","resolvePromise","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","undef","arrayWithHoles","iterableToArrayLimit","nonIterableRest","possibleConstructorReturn","isNativeFunction","_wrapNativeSuper","_construct","encodings","mkrequest","targetChunkSize","privTargetChunkSize","privNextBufferReadyBytes","bytesCopiedFromBuffer","privNextBufferToWrite","privNextBufferStartTime","bytesToCopy","targetView","sourceView","workerTimers","timerId","timers","scheduledTimeoutFunctions","unhandledRequests","worker","isCallNotification","idOrFunc","unhandledTimerId","isClearResponse","loadWorkerTimers","revokeObjectURL","bytesPerSecond","privBuffers","privReplayOffset","privLastShrinkOffset","privBufferStartOffset","privBufferSerial","privBufferedBytes","privReplay","privLastChunkAcquiredTime","privBytesPerSecond","offsetToSeek","bytesToSeek","retVal","BufferEntry","startOffset","endOffset","serial","BackgroundEvent","CcsCredentialType","decimalToHex","hex","generateGuid","MathUtils","guidHolder","guidResponse","isGuid","stringToUtf8Arr","sDOMStr","nChr","nArrLen","nStrLen","nMapIdx","aBytes","nIdx","nChrIdx","dataString","utf8ArrToString","sView","nPart","nLen","urlEncode","urlEncodeArr","inputArr","base64EncArr","inputUtf8Arr","BrowserStringUtils","eqLen","sB64Enc","nMod3","nUint24","uint6ToB64","nUint6","encodedString","base64DecToArr","base64String","nBlockSize","nInLen","nOutLen","nMod4","nOutIdx","nInIdx","b64ToUint6","charNum","BrowserAuthErrorMessage","BrowserAuthError","createPkceNotGeneratedError","createCryptoNotAvailableError","createHttpMethodNotImplementedError","createEmptyNavigationUriError","createEmptyHashError","hashValue","createHashDoesNotContainStateError","createHashDoesNotContainKnownPropertiesError","createUnableToParseStateError","createStateInteractionTypeMismatchError","createInteractionInProgressError","createPopupWindowError","createEmptyWindowCreatedError","createUserCancelledError","createMonitorPopupTimeoutError","createMonitorIframeTimeoutError","createRedirectInIframeError","windowParentCheck","createBlockReloadInHiddenIframeError","createBlockAcquireTokenInPopupsError","createIframeClosedPrematurelyError","createSilentLogoutUnsupportedError","createNoAccountError","createSilentPromptValueError","givenPrompt","createUnableToParseTokenRequestCacheError","createNoTokenRequestCacheError","createAuthRequestNotSetError","createNoCachedAuthorityError","createNonBrowserEnvironmentError","createDatabaseNotOpenError","createNoNetworkConnectivityError","createPostRequestFailedError","errorDesc","createGetRequestFailedError","createFailedToParseNetworkResponseError","createUnableToLoadTokenError","errorDetail","createSigningKeyNotFoundInStorageError","keyId","createDatabaseUnavailableError","base64Encode","generateCodes","codeVerifier","generateCodeVerifier","generateCodeChallengeFromVerifier","codeChallenge","verifier","challenge","pkceCodeVerifier","sha256Digest","pkceHashedCodeVerifier","S256_HASH_ALG","PUBLIC_EXPONENT","hasCryptoAPI","_keygenAlgorithmOptions","modulusLength","publicExponent","hasIECrypto","getMSCryptoDigest","getSubtleCryptoDigest","generateKeyPair","extractable","usages","msCryptoGenerateKey","subtle","generateKey","exportJwk","msCryptoExportJwk","exportKey","importJwk","keyString","BrowserCrypto","getJwkString","keyBuffer","msCryptoImportKey","importKey","sign","msCryptoSign","hasBrowserCrypto","algorithm","digest","digestOperation","msGenerateKey","msExportKey","resultBuffer","resultString","msImportKey","msSign","jwk","dbName","tableName","dbOpen","openDB","indexedDB","createObjectStore","validateDbIsOpen","getItem","dbGet","transaction","objectStore","setItem","dbPut","put","removeItem","dbDelete","getKeys","dbGetKeys","getAllKeys","containsKey","dbContainsKey","deleteDatabase","deleteDbRequest","cache","cacheKeys","inMemoryCache","MemoryStorage","indexedDBCache","handleDatabaseAccessError","browserCrypto","b64Encode","b64Decode","guidGenerator","pkceGenerator","asymmetricKeys","symmetricKeys","createNewGuid","generatePkceCodes","getPublicKeyThumbprint","CryptoOps","EXTRACTABLE","POP_KEY_USAGES","keyPair","publicKey","publicKeyJwk","pubKeyThumprintObj","kty","publicJwkString","publicJwkBuffer","publicJwkHash","privateKey","privateKeyJwk","unextractablePrivateKey","requestMethod","resourceRequestMethod","requestUri","resourceRequestUri","removeTokenBindingKey","kid","clearKeystore","dataStoreNames","databaseStorage","signJwt","cachedKeyPair","publicKeyJwkString","alg","encodedHeader","cnf","encodedPayload","tokenString","tokenBuffer","signatureBuffer","encodedSignature","DEFAULT_CRYPTO_IMPLEMENTATION","ServerError","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessage","InteractionRequiredAuthError","isInteractionRequiredError","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","createNoTokensFoundError","CredentialEntity","generateAccountIdForCacheKey","generateCredentialId","generateCredentialIdForCacheKey","credentialType","clientId","familyId","generateTarget","generateTargetForCacheKey","generateCredentialKey","generateCredentialCacheKey","tokenType","ID_TOKEN","ACCESS_TOKEN","ACCESS_TOKEN_WITH_AUTH_SCHEME","REFRESH_TOKEN","getCredentialType","credentialKey","BEARER","ClientConfigurationErrorMessage","ClientConfigurationError","createClaimsRequestParsingError","claimsRequestParseError","createInsecureAuthorityUriError","urlString","createUrlParseError","urlParseError","createUrlEmptyError","createEmptyScopesArrayError","createClientIdSingleScopeError","inputScopes","createInvalidPromptError","promptValue","createInvalidClaimsRequestError","createEmptyLogoutRequestError","createEmptyTokenRequestError","createInvalidCodeChallengeMethodError","createInvalidCodeChallengeParamsError","createInvalidCloudDiscoveryMetadataError","createInvalidAuthorityMetadataError","createUntrustedAuthorityError","createMissingSshJwkError","createMissingSshKidError","createMissingNonceAuthenticationHeadersError","createInvalidAuthenticationHeaderError","invalidHeaderName","scopeArr","filteredInput","validateInputScopes","scope","inputScopeString","ScopeSet","containsScope","lowerCaseScopesSet","printScopesLowerCase","containsScopeSet","scopeSet","asArray","containsOnlyOIDCScopes","defaultScopeCount","defaultScope","appendScope","newScope","appendScopes","newScopes","removeScope","removeOIDCScopes","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","printScopes","rawToken","AuthToken","extractTokenClaims","encodedToken","decodedToken","base64TokenPayload","base64Decoded","cryptoImpl","getAccountsFilteredBy","accountValues","accountKey","accountInfo","CacheManager","readIdTokenFromCache","saveCacheRecord","cacheRecord","setIdTokenCredential","accessToken","saveAccessToken","refreshToken","setRefreshTokenCredential","appMetadata","setAppMetadata","credential","currentTokenCache","getCredentialsFilteredBy","currentScopes","currentAccessTokens","accessTokens","tokenEntity","removeCredential","setAccessTokenCredential","accountFilter","getAccountsFilteredByInternal","allCacheKeys","matchingAccounts","cacheKey","matchHomeAccountId","matchEnvironment","matchRealm","getCredentialsFilteredByInternal","matchingCredentials","idTokens","refreshTokens","credType","getSpecificCredential","matchOboAssertion","matchCredentialType","matchClientId","matchFamilyId","matchTarget","matchTokenType","POP","CREDENTIAL","SSH","matchKeyId","getAppMetadataFilteredBy","getAppMetadataFilteredByInternal","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","aliases","removeAllAccounts","removedAccounts","removeAccount","removeAccountContext","ACCOUNT","removedCredentials","cacheEntity","removeAppMetadata","readCacheRecord","authScheme","cachedAccount","readAccountFromCache","cachedIdToken","cachedAccessToken","readAccessTokenFromCache","cachedRefreshToken","readRefreshTokenFromCache","cachedAppMetadata","readAppMetadataFromCache","idTokenFilter","credentialCache","numIdTokens","accessTokenFilter","numAccessTokens","familyRT","refreshTokenFilter","appMetadataFilter","appMetadataEntries","numAppMetadata","isAppMetadataFOCI","cloudMetadata","entityScopeSet","requestTargetScopeSet","generateAuthorityMetadataCacheKey","getIdTokenCredential","getAccessTokenCredential","getRefreshTokenCredential","setServerTelemetry","getServerTelemetry","setAuthorityMetadata","setThrottlingCache","getThrottlingCache","createIdTokenEntity","idTokenEntity","IdTokenEntity","isIdTokenEntity","nowSeconds","getTime","isTokenExpired","expiresOn","expirationSec","TimeUtils","wasClockTurnedBack","cachedAt","createAccessTokenEntity","extExpiresOn","cryptoUtils","refreshOn","atEntity","AccessTokenEntity","extendedExpiresOn","tokenClaims","isAccessTokenEntity","createRefreshTokenEntity","rtEntity","RefreshTokenEntity","isRefreshTokenEntity","generateAppMetadataKey","AppMetadataEntity","generateAppMetadataCacheKey","createAppMetadataEntity","isAppMetadataEntity","failedRequests","errors","cacheHits","isServerTelemetryEntity","validateKey","validateEntity","expiresAt","updateCloudDiscoveryMetadata","fromNetwork","preferred_cache","preferred_network","aliasesFromNetwork","updateEndpointMetadata","authorization_endpoint","token_endpoint","end_session_endpoint","endpointsFromNetwork","updateCanonicalAuthority","canonical_authority","resetExpiresAt","isExpired","isAuthorityMetadataEntity","isThrottlingEntity","setRequestState","userState","libraryState","ProtocolUtils","generateLibraryState","stateObj","stateString","parseRequestState","splitState","libraryStateString","libraryStateObj","userRequestState","ProtocolMode","cacheLocation","validateWindowStorage","windowStorage","LocalStorage","SessionStorage","_urlString","getHash","UrlString","canonicalizeUri","lowerCaseUrl","validateAsUri","components","getUrlComponents","HostNameAndPort","PathSegments","Protocol","appendQueryString","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","COMMON","ORGANIZATIONS","constructAuthorityUriFromObject","parseHash","regEx","urlComponents","AbsolutePath","QueryString","pathSegments","getDomainFromUrl","getAbsoluteUrl","relativeUrl","baseUrl","baseComponents","hashString","hashIndex1","hashIndex2","getDeserializedHash","parsedHash","deserializedHash","hashContainsKnownProperties","error_description","extractBrowserRequestState","parseServerResponseFromHash","locationHash","hashUrlString","cacheConfig","COOKIE_LIFE_MULTIPLIER","internalStorage","browserStorage","setupBrowserStorage","temporaryCacheStorage","setupTemporaryCacheStorage","migrateCacheEntries","idTokenKey","clientInfoKey","errorKey","ERROR","errorDescKey","ERROR_DESC","migrateCacheEntry","newKey","setTemporaryCache","validateAndParseJson","jsonValue","parsedJson","parsedAccount","parsedIdToken","accessTokenKey","parsedAccessToken","refreshTokenKey","parsedRefreshToken","appMetadataKey","parsedMetadata","serverTelemetryKey","serverTelemetry","setWrapperMetadata","wrapperSKU","wrapperVersion","WRAPPER_SKU","WRAPPER_VER","getWrapperMetadata","activeAccountIdKey","generateCacheKey","ACTIVE_ACCOUNT","activeAccountId","getAccountInfoByFilter","throttlingCacheKey","parsedThrottlingCache","throttlingCache","getTemporaryCache","storeAuthStateInCookie","itemCookie","getItemCookie","setItemCookie","clearItemCookie","cookieName","cookieValue","cookieStr","getCookieExpirationTime","secureCookies","cookieList","clearMsalCookies","cookiePrefix","cookieKey","cookieLifeDays","today","getCache","setCache","ADAL_ID_TOKEN","generateAuthorityKey","stateId","AUTHORITY","generateNonceKey","NONCE_IDTOKEN","generateStateKey","REQUEST_STATE","getCachedAuthority","cachedState","stateCacheKey","authorityCacheKey","updateCacheEntries","authorityInstance","loginHint","nonceCacheKey","ccsCredential","HOME_ACCOUNT_ID","CCS_CREDENTIAL","UPN","resetRequestCache","REQUEST_PARAMS","ORIGIN_URI","URL_HASH","CORRELATION_ID","setInteractionInProgress","cleanRequestByState","stateKey","cleanRequestByInteractionType","parsedState","cacheCodeRequest","authCodeRequest","encodedValue","getCachedRequest","encodedTokenRequest","parsedRequest","cachedAuthority","isInteractionInProgress","getInteractionInProgress","INTERACTION_STATUS_KEY","getLegacyLoginHint","adalIdTokenString","msalIdTokenString","cachedIdTokenString","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","cpu","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","StubbedNetworkModule","GET","getFetchHeaders","onLine","getHeaderDict","reqBody","POST","optionsHeaders","append","headerDict","sendRequestAsync","xhr","setXhrHeaders","jsonResponse","networkResponse","headerArr","headerVal","clearHash","replaceState","replaceHash","urlParts","isInIframe","isInPopup","opener","getCurrentUri","getHomepage","getBrowserNetworkClient","blockReloadInHiddenIframes","BrowserUtils","blockRedirectInIframe","allowRedirectInIframe","isIframedApp","blockAcquireTokenInPopups","blockNonBrowserEnvironment","isBrowserEnvironment","detectIEOrEdge","msie11","msedge","navigateInternal","NavigationClient","defaultNavigateWindow","navigateExternal","noHistory","DEFAULT_IFRAME_TIMEOUT_MS","KeyLocation","eventCallbacks","listeningToStorageEvents","handleAccountCacheChange","emitEvent","newValue","oldValue","parsedValue","ACCOUNT_ADDED","ACCOUNT_REMOVED","generateThrottlingStorageKey","thumbprint","preProcess","cacheManager","ThrottlingUtils","throttleTime","THROTTLING","errorCodes","postProcess","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","RETRY_AFTER","error_codes","currentSeconds","removeThrottle","homeAccountIdentifier","authenticationScheme","shrClaims","sshJwk","sshKid","networkClient","sendPostRequest","tokenEndpoint","configuration","authOptions","userAuthOptions","userSystemOptions","userLoggerOption","storageImplementation","networkImplementation","cryptoImplementation","clientCredentials","libraryInfo","serverTelemetryManager","persistencePlugin","serializableCache","clientCapabilities","systemOptions","storageInterface","networkInterface","cryptoInterface","buildClientConfiguration","networkManager","createTokenRequestHeaders","ccsCred","CONTENT_TYPE","CCS_HEADER","executePostToTokenEndpoint","clearTelemetryCache","updateAuthority","updatedAuthority","discoveryComplete","validateRedirectUri","redirectUri","validatePrompt","prompt","promptValues","validateClaims","validateCodeChallengeParams","codeChallengeMethod","validateCodeChallengeMethod","sanitizeEQParams","eQParams","addResponseTypeCode","RESPONSE_TYPE","addResponseMode","responseMode","RESPONSE_MODE","QUERY","addScopes","addOidcScopes","requestScopes","SCOPE","addClientId","CLIENT_ID","addRedirectUri","REDIRECT_URI","addPostLogoutRedirectUri","POST_LOGOUT_URI","addIdTokenHint","idTokenHint","ID_TOKEN_HINT","addDomainHint","domainHint","DOMAIN_HINT","addLoginHint","LOGIN_HINT","addCcsUpn","addCcsOid","addSid","sid","SID","addClaims","mergedClaims","addClientCapabilitiesToClaims","addCorrelationId","CLIENT_REQUEST_ID","addLibraryInfo","X_CLIENT_SKU","X_CLIENT_VER","X_CLIENT_OS","X_CLIENT_CPU","addPrompt","PROMPT","addState","STATE","addNonce","NONCE","addCodeChallengeParams","CODE_CHALLENGE","CODE_CHALLENGE_METHOD","addAuthorizationCode","CODE","addDeviceCode","DEVICE_CODE","addRefreshToken","addCodeVerifier","CODE_VERIFIER","addClientSecret","CLIENT_SECRET","addClientAssertion","CLIENT_ASSERTION","addClientAssertionType","clientAssertionType","CLIENT_ASSERTION_TYPE","addOboAssertion","OBO_ASSERTION","addRequestTokenUse","tokenUse","REQUESTED_TOKEN_USE","addGrantType","grantType","GRANT_TYPE","addClientInfo","addExtraQueryParameters","eQparams","XMS_CC","addUsername","addPassword","addPopToken","cnfString","TOKEN_TYPE","REQ_CNF","addSshJwk","sshJwkString","addServerTelemetry","X_CLIENT_CURR_TELEM","generateCurrentRequestHeaderValue","X_CLIENT_LAST_TELEM","generateLastRequestHeaderValue","addThrottling","X_MS_LIB_CAPABILITY","createQueryString","queryParameterArray","accountEntity","accessTokenEntity","refreshTokenEntity","appMetadataEntity","generateCnf","generateKid","reqCnf","xms_ksl","SW","signPopToken","signPayload","shrNonce","resourceUrlString","resourceUrlComponents","at","ts","client_claims","tokenCache","hasChanged","cacheStorage","validateServerAuthorizationCodeResponse","serverResponseHash","client_info","validateTokenResponse","serverResponse","errString","correlation_id","trace_id","handleServerTokenResponse","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","id_token","idTokenObj","requestStateObj","key_id","generateCacheRecord","cacheContext","TokenCacheContext","beforeCacheAccess","ResponseHandler","generateAuthenticationResult","afterCacheAccess","generateAccountEntity","access_token","responseScopes","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","tenant","token_type","refresh_token","foci","CacheRecord","cloud_graph_host_name","msGraphhost","msgraph_host","protocolMode","fromTokenCache","requestState","canonicalAuthority","uniqueId","fromCache","getAuthCodeUrl","createAuthCodeUrlQueryString","authorizationEndpoint","acquireToken","executeTokenRequest","responseHandler","handleFragmentResponse","hashFragment","serverParams","getLogoutUri","logoutRequest","createLogoutUrlQueryString","endSessionEndpoint","createTokenRequestBody","requestBody","createTokenQueryParameters","parameterBuilder","tokenQueryParameters","assertion","assertionType","AUTHORIZATION_CODE_GRANT","extraScopesToConsent","accountSid","extractAccountSid","extraQueryParameters","postLogoutRedirectUri","isOpenIdConfigResponse","detectRegion","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","getRegionFromIMDS","localIMDSVersionResponse","httpSuccess","region_source","IMDS","httpBadRequest","getCurrentVersion","currentIMDSVersion","FAILED_AUTO_DETECTION","currentIMDSVersionResponse","ENVIRONMENT_VARIABLE","RegionDiscovery","IMDS_OPTIONS","authorityOptions","_canonicalAuthority","regionDiscovery","region_used","region_outcome","canonicalAuthorityUrlComponents","Default","_canonicalAuthorityUrlComponents","replacePath","replaceTenant","cachedAuthorityParts","currentPart","cachedPart","OIDC","resolveEndpointsAsync","metadataEntity","hostnameAndPort","cloudDiscoverySource","endpointSource","CACHE","getEndpointMetadataFromConfig","CONFIG","isAuthoritySameType","getEndpointMetadataFromNetwork","azureRegionConfiguration","azureRegion","AUTO_DETECTION_REQUESTED_SUCCESSFUL","AUTO_DETECTION_REQUESTED_FAILED","CONFIGURED_MATCHES_DETECTED","CONFIGURED_NOT_DETECTED","CONFIGURED_NO_AUTO_DETECTION","Authority","replaceWithRegionalInformation","NETWORK","defaultOpenIdConfigurationEndpoint","authorityMetadata","getCloudDiscoveryMetadataFromConfig","getCloudDiscoveryMetadataFromNetwork","cloudDiscoveryMetadata","parsedResponse","getCloudDiscoveryMetadataFromNetworkResponse","isInKnownAuthorities","createCloudDiscoveryMetadataFromHost","instanceDiscoveryEndpoint","isCloudInstanceDiscoveryResponse","knownAuthorities","isAlias","isPublicCloudAuthority","buildRegionalAuthorityString","authorityUrlInstance","authorityUrlParts","hostNameAndPort","createDiscoveredInstance","authorityUri","acquireTokenAuthority","AuthorityFactory","authorityUrl","telemetryRequest","cacheOutcome","NO_CACHE_HIT","apiId","wrapperVer","telemetryCacheKey","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","lastRequests","getLastRequests","maxErrors","ServerTelemetryManager","maxErrorsToSend","errorCount","cacheFailedRequest","incrementCacheHits","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setCacheOutcome","storageImpl","eventHandler","navigationClient","initializeAuthorizationCodeRequest","generatedPkceParams","initializeLogoutRequest","validLogoutRequest","createAuthCodeClient","getClientConfiguration","clientConfig","requestAuthority","getDiscoveredAuthority","discoveredAuthority","validateAndExtractStateFromHash","requestCorrelationId","platformStateObj","preflightInteractiveRequest","initializeAuthorizationRequest","getRedirectUri","browserState","validatedRequest","initializeBaseRequest","FRAGMENT","legacyLoginHint","clearCacheOnLogout","requestRedirectUri","initializeServerTelemetryManager","forceRefresh","telemetryPayload","unloadWindow","openPopup","urlNavigate","popupParams","popupWindow","popup","PopupUtils","openSizedPopup","popupName","popupWindowAttributes","currentWindow","winLeft","screenLeft","winTop","screenTop","winWidth","innerWidth","winHeight","innerHeight","popupSize","popupPosition","cleanPopup","monitorPopupForSameOrigin","intervalId","closed","generatePopupName","generateLogoutPopupName","authCodeModule","browserRequestLogger","authModule","handleCodeResponse","networkModule","authCodeResponse","nonceKey","cachedNonce","cloud_instance_host_name","updateTokenEndpointAuthority","cachedCcsCred","checkCcsCredentials","tokenResponse","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","popupUtils","initiateAuthRequest","requestUrl","monitorPopupForHash","contentHash","validRequest","asyncPopups","acquireTokenPopupAsync","mainWindowRedirectUri","logoutPopupAsync","authClient","navigateUrl","interactionHandler","popupParameters","POPUP_OPENED","logoutUri","LOGOUT_SUCCESS","navigationOptions","redirectNavigationTimeout","absoluteUrl","LOGOUT_FAILURE","redirectStartPage","redirectTimeout","onRedirectNavigate","getRedirectStartPage","responseHash","getRedirectResponseHash","loginRequestUrl","loginRequestUrlNormalized","currentUrlNormalized","navigateToLoginRequestUrl","handleHash","handleHashResult","processHashOnRedirect","homepage","isResponseHash","cachedHash","cachedRequest","currentAuthority","requestStartPage","navigateFrameWait","loadFrame","loadFrameSync","monitorIframeForHash","iframe","timeoutMark","removeHiddenIframe","frameHandle","createHiddenIframe","authFrame","visibility","getElementsByTagName","silentRequest","Silent","silentTokenHelper","silentHandler","msalFrame","iframeHashTimeout","acquireTokenByRefreshToken","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","refreshTokenRequest","REFRESH_TOKEN_GRANT","acquireTokenSilent_silentFlow","createRefreshTokenClient","refreshTokenClient","storage","loadExternalTokens","loadIdToken","loadAccessToken","idAuthToken","userInputAuth","userInputCache","userInputSystem","DEFAULT_AUTH_OPTIONS","AAD","DEFAULT_CACHE_OPTIONS","DEFAULT_LOGGER_OPTIONS","DEFAULT_BROWSER_SYSTEM_OPTIONS","loadFrameTimeout","windowHashTimeout","buildConfiguration","redirectResponse","cacheOptions","loggedInAccounts","redirectResponseKey","redirectClient","preflightBrowserEnvironmentCheck","isLoggedIn","silentTokenResult","ACQUIRE_TOKEN_NETWORK_START","isServerError","isInvalidGrantError","acquireTokenSilent_authCode","userName","acquireCachedToken","FORCE_REFRESH","NO_CACHED_ACCESS_TOKEN","CACHED_ACCESS_TOKEN_EXPIRED","REFRESH_CACHED_ACCESS_TOKEN","generateResultFromCacheRecord","createSilentFlowClient","silentAuthClient","cachedToken","initializeSilentRequest","activeSilentTokenRequests","silentRequestKey","acquireTokenSilentAsync","silentCacheClient","tokenRenewalResult","deepmerge","_objectWithoutProperties","objectWithoutPropertiesLoose","sourceSymbolKeys","createBreakpoints","breakpoints","_breakpoints$values","xs","_breakpoints$unit","unit","_breakpoints$step","other","between","endIndex","down","upperbound","createMixins","spacing","mixins","_toolbar","gutters","paddingLeft","paddingRight","toolbar","minHeight","formatMuiErrorMessage","black","white","grey","indigo","pink","red","orange","blue","green","clamp","decomposeColor","colors","hexToRgb","_formatMuiErrorMessage","recomposeColor","getLuminance","rgb","hslToRgb","toFixed","darken","coefficient","lighten","light","primary","secondary","divider","background","paper","hover","hoverOpacity","selectedOpacity","disabledBackground","disabledOpacity","focusOpacity","activatedOpacity","dark","icon","addLightOrDark","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","main","createPalette","palette","_palette$primary","_palette$secondary","_palette$error","_palette$warning","_palette$info","_palette$success","_palette$type","_palette$contrastThre","contrastThreshold","_palette$tonalOffset","getContrastText","contrastText","foreground","lumA","lumB","getContrastRatio","augmentColor","mainShade","lightShade","darkShade","types","roundWithDeprecationWarning","caseAllCaps","textTransform","defaultFontFamily","createTypography","typography","_ref$fontFamily","fontFamily","_ref$fontSize","fontSize","_ref$fontWeightLight","fontWeightLight","_ref$fontWeightRegula","fontWeightRegular","_ref$fontWeightMedium","fontWeightMedium","_ref$fontWeightBold","fontWeightBold","_ref$htmlFontSize","htmlFontSize","allVariants","pxToRem2","pxToRem","coef","buildVariant","letterSpacing","casing","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","createShadow","shadows","borderRadius","defaultBreakpoints","directions","marginX","marginY","paddingX","paddingY","getCssProperties","memoize","_prop$split2","spacingKeys","createUnarySpacing","theme","themeSpacing","getStyleFromPropValue","cssProperties","transformer","cssProperty","transformed","styleFromPropValue","themeBreakpoints","_themeBreakpoints","breakpoint","handleBreakpoints","filterProps","createSpacing","spacingInput","mui","argument","easing","easeInOut","easeOut","easeIn","sharp","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","_options$duration","durationOption","_options$easing","easingOption","_options$delay","animatedProp","getAutoHeightDuration","constant","mobileStepper","speedDial","appBar","drawer","modal","snackbar","tooltip","createTheme","_options$breakpoints","breakpointsInput","_options$mixins","mixinsInput","_options$palette","paletteInput","_options$typography","typographyInput","muiTheme","overrides","transitions","createMuiStrictModeTheme","unstable_strictMode","hasSymbol","ThemeProvider","localTheme","outerTheme","mergeOuterLocalTheme","nested","globalCssModule","tagPropType","cssModule","containerClass","mapToCssModules"],"mappings":";wHAAe,SAASA,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAFxB,mC,6BCAA,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAInC,SAASO,EAAad,EAAae,EAAYC,GAG5D,OAFID,GAAYb,EAAkBF,EAAYiB,UAAWF,GACrDC,GAAad,EAAkBF,EAAagB,GACzChB,EAbT,mC,gBCAAkB,EAAOC,QAAU,EAAQ,M,imCC+DbC,EAWAC,EAYAC,EASAC,EAiDAC,E,QA3ICC,EAAY,CACrBC,aAAc,UACdC,IAAK,iBAELC,aAAc,OAEdC,kBAAmB,4CACnBC,uBAAwB,4BAExBC,KAAM,OAENC,6BAA8B,sGAE9BC,eAAgB,IAEhBC,WAAY,aAEZC,OAAQ,SAERC,cAAe,uCAEfC,aAAc,SACdC,cAAe,UACfC,qBAAsB,iBACtBC,YAAa,QAEbC,mBAAoB,OACpBC,gBAAiB,qBACjBC,cAAe,gBACfC,uBAAwB,WACxBC,2BAA4B,OAC5BC,sBAAuB,kDACvBC,sBAAuB,wBACvBC,YAAa,cACbC,aAAc,GACdC,cAAe,IACfC,cAAe,4DACfC,aAAc,aACdC,aAAc,IACdC,gCAAiC,gBACjCC,kCAAmC,sBACnCC,oBAAqB,CAAC,4BAA6B,oBAAqB,sBAAuB,oBAGtFC,EAAsB,CAC/BhC,EAAUY,aACVZ,EAAUa,cACVb,EAAUc,sBAGDmB,EAAc,OAAH,IAAG,CACpBD,EAAmB,CACtBhC,EAAUe,eAMd,SAAYpB,GACR,8BACA,4BACA,+BACA,qCACA,2CALJ,CAAYA,MAAW,KAWvB,SAAYC,GACR,qBACA,4BACA,+BACA,gBACA,iCACA,kCANJ,CAAYA,MAAmB,KAY/B,SAAYC,GACR,kBACA,gCACA,wBAHJ,CAAYA,MAAqB,KASjC,SAAYC,GACR,wBACA,8BACA,gCACA,gCACA,0BACA,kBACA,gBACA,gBACA,wCACA,8BACA,sBACA,gCACA,0BACA,gBACA,gBACA,kBACA,gCACA,4BACA,cACA,kCACA,gDACA,gCACA,wCACA,8BACA,8BACA,4BACA,8BACA,mDACA,gDACA,4CACA,6CACA,gCACA,4BACA,gCACA,sCACA,gDACA,0BACA,oBACA,4BACA,4CACA,8BACA,cACA,+BA3CJ,CAAYA,MAAkB,KAiD9B,SAAYC,GACR,8BACA,kBAFJ,CAAYA,MAAiB,K,IAqBjBmC,EAXCC,EAAc,CACvBC,MAAO,QACPC,eAAgB,iBAChBC,QAAS,UACTC,KAAM,OACNC,OAAQ,WAMZ,SAAYN,GACR,oBACA,YACA,0BACA,sBACA,4BACA,gCACA,wBACA,iCACA,yCATJ,CAAYA,MAAQ,K,IAyCRO,EASAC,EAaAC,EAUAC,EAQAC,EAUAC,EAgBAC,EApFCC,EAA4B,CACrCC,MAAO,QACPC,KAAM,SAgBV,SAAYT,GACR,gBACA,sBACA,wBAHJ,CAAYA,MAAY,KASxB,SAAYC,GACR,4BACA,gDACA,gDACA,2CACA,sCACA,kCACA,2DAPJ,CAAYA,MAAS,KAarB,SAAYC,GACR,6BACA,2BACA,2BACA,iCAJJ,CAAYA,MAAgB,KAU5B,SAAYC,GACR,0BACA,4BAFJ,CAAYA,MAAU,KAQtB,SAAYC,GACR,qBACA,6BACA,8DACA,+BAJJ,CAAYA,MAAc,KAU1B,SAAYC,GACR,oBACA,0BACA,qBACA,6BACA,+BACA,6BACA,wBACA,wBACA,wBACA,0BAVJ,CAAYA,MAAe,KAgB3B,SAAYC,GACR,sBACA,oBACA,wBACA,4BACA,sCACA,wCACA,8BACA,sCACA,gCATJ,CAAYA,MAAS,K,IAwBTI,EATCC,EAAe,cACfC,EAAc,cACdC,EAAgB,IAEhBC,EAA+B,CACxCC,UAAW,qBACXC,qBAAsB,QAG1B,SAAYN,GACR,kBACA,gBACA,oBAHJ,CAAYA,MAAuB,K,IAsBvBO,EAhBCC,EAAyB,CAClCC,eAAgB,EAChBC,qBAAsB,GACtBC,sBAAuB,IACvBC,kBAAmB,GACnBP,UAAW,mBACXQ,mBAAoB,IACpBC,gBAAiB,IACjBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,kBAMnB,SAAYV,GACR,kBACA,YACA,iBAHJ,CAAYA,MAAoB,K,IA4BpBW,EAQCC,EAQDC,EAUAC,EAQAC,EArDCC,EAAsB,CAE/BC,8BAA+B,GAE/BC,kCAAmC,KAEnCC,kBAAmB,aAEnBC,0BAA2B,qBAGlBC,EAAS,CAClBC,oBAAqB,gBACrBC,sBAAuB,oBAM3B,SAAYZ,GACR,sBACA,sBAFJ,CAAYA,MAAsB,KAQlC,SAAaC,GACT,mCACA,yCAFJ,CAAaA,MAAa,KAQ1B,SAAYC,GACR,4BACA,qBACA,2BACA,WAJJ,CAAYA,MAAsB,KAUlC,SAAYC,GACR,kCACA,mCACA,8BACA,0CACA,sCALJ,CAAYA,MAAuB,KAQnC,SAAYC,GACR,mBACA,oBACA,6BACA,kCACA,kCALJ,CAAYA,MAAY,M,6BCzXtBhF,EAAOC,QAAUwF,EAAQ,M,yFCIdC,EAAb,2GACW,SAA8BC,EAAYC,GAC7C,QAAcC,IAAVF,GAAiC,OAAVA,EACvB,MAAM,IAAIG,MAAM,0BAA4BF,KAHxD,yBAOW,SAAmBD,EAAYC,GAClC,GAAc,OAAVD,EACA,MAAM,IAAIG,MAAM,eAAiBF,KAT7C,qCAaW,SAA+BD,EAAeC,GAGjD,GAFAF,EAAUK,uBAAuBJ,EAAOC,IAEnC,GAAKD,GAAOK,OAAO5G,OAAS,EAC7B,MAAM,IAAI0G,MAAM,2BAA6BF,KAjBzD,6BAqBW,SAAuBK,GAC1B,GAAIA,EACA,MAAM,IAAIH,MAAM,oCAvB5B,2CA2BW,SAAqCI,EAAiBN,GAGzD,GAFAF,EAAUK,uBAAuBG,EAAON,GAEnB,IAAjBM,EAAM9G,OACN,MAAM,IAAI0G,MAAM,iCAAmCF,GAJc,oBAOlDM,GAPkD,IAOrE,2BAA0B,KAAfC,EAAe,QACtBT,EAAUU,wBAAwBD,EAAMP,IARyB,iCA3B7E,qCAuCW,SAA+BD,EAAYC,GAC9CF,EAAUU,wBAAwBT,EAAOC,KAxCjD,iCA6CW,SAA2BD,EAAYC,GAC1C,QAAcC,IAAVF,EACA,MAAM,IAAIG,MAAM,uBAAyBF,OA/CrD,M,s8ECPA,8CACe,SAASS,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIxH,UAAU,sDAGtBuH,EAASvG,UAAYN,OAAO+G,OAAOD,GAAcA,EAAWxG,UAAW,CACrE0G,YAAa,CACXC,MAAOJ,EACP9G,UAAU,EACVD,cAAc,KAGdgH,GAAY,YAAeD,EAAUC,K,6BCb3C,gEAGe,SAASI,EAAaC,GACnC,IAAIC,EAA4B,cAChC,OAAO,WACL,IACIC,EADAC,EAAQ,YAAeH,GAG3B,GAAIC,EAA2B,CAC7B,IAAIG,EAAY,YAAeC,MAAMR,YACrCK,EAASI,QAAQC,UAAUJ,EAAOK,UAAWJ,QAE7CF,EAASC,EAAMM,MAAMJ,KAAMG,WAG7B,OAAO,YAA0BH,KAAMH,M,6fC2B/BQ,EASAC,EAQAC,EAmBAC,EAWAC,EAcAC,EAUAC,E,OAtGCC,EAAmB,CAI5BC,8BAA+B,0BAI/BvC,oBAAqB,gBAIrBwC,YAAa,IAIbC,aAAc,IAIdC,kBAAmB,OAInBC,iBAAkB,GAIlBC,SAAU,oBAGd,SAAYb,GACR,8BACA,kCACA,gCAHJ,CAAYA,MAAoB,KAShC,SAAYC,GACR,YACA,cAFJ,CAAYA,MAAiB,KAQ7B,SAAYC,GACR,wBACA,+CACA,gCACA,gCACA,iCACA,8BACA,oCACA,qBACA,kCACA,kBACA,8CACA,kCACA,yCAbJ,CAAYA,MAAkB,KAmB9B,SAAYC,GACR,4BACA,gCAFJ,CAAYA,MAAiB,KAW7B,SAAYC,GACR,qDACA,+CACA,+BACA,mEACA,uDACA,sEACA,yBACA,mCARJ,CAAYA,MAAK,KAcjB,SAAYC,GACR,sBACA,gBACA,kBAHJ,CAAYA,MAAe,KAU3B,SAAYC,GAIR,oBAIA,gBAIA,kBAIA,8BAIA,wBAIA,kCAIA,cA5BJ,CAAYA,MAAiB,K,IAyCjBQ,EAVCC,EAAgD,CACzDC,OAAQ,KAMCC,EAAiB,OAG9B,SAAYH,GACR,4BACA,gCAFJ,CAAYA,MAAU,K,IAMTI,EAAU,UACVC,EAAa,EACbC,EAAmBF,EAAO,S,6BCnKxB,SAASG,EAAgBC,EAAKjJ,EAAK+G,GAYhD,OAXI/G,KAAOiJ,EACTnJ,OAAOC,eAAekJ,EAAKjJ,EAAK,CAC9B+G,MAAOA,EACPpH,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZoJ,EAAIjJ,GAAO+G,EAGNkC,EAZT,mC,ywECOA,IAAYC,EAPZ,kCAOA,SAAYA,GASR,iEASA,2EAQA,uEASA,2EAMA,yEASA,+EASA,uGASA,2FAMA,iGAOA,mFAQA,sFAQA,8EAQA,sFAQA,sFAOA,4EAQA,oFASA,4CAMA,sFAMA,gFAMA,8FAOA,8GAQA,oHAMA,sHAMA,4EAOA,wFAMA,gEAMA,wEAMA,wFAMA,0GAOA,kEAMA,0GAMA,kGAMA,gGAOA,sFAOA,gGAMA,4GAMA,gHAMA,4FAMA,kIAMA,gEAMA,0DAMA,oFAMA,oDAMA,oEAMA,4FAOA,sFAOA,4FAOA,4EAMA,oEAKA,kEAMA,kEAMA,oFAOA,oEASA,sFAOA,sFAOA,kFASA,oFAOA,oEAOA,wEAMA,wEA/ZJ,CAAYA,MAAU,M,6BCJpB7I,EAAOC,QAAUwF,EAAQ,M,6BCHZ,SAASqD,IAetB,OAdAA,EAAWrJ,OAAOsJ,QAAU,SAAU9J,GACpC,IAAK,IAAIE,EAAI,EAAGA,EAAIiI,UAAUhI,OAAQD,IAAK,CACzC,IAAI6J,EAAS5B,UAAUjI,GAEvB,IAAK,IAAIQ,KAAOqJ,EACVvJ,OAAOM,UAAUkJ,eAAeC,KAAKF,EAAQrJ,KAC/CV,EAAOU,GAAOqJ,EAAOrJ,IAK3B,OAAOV,GAGF6J,EAASzB,MAAMJ,KAAMG,WAf9B,mC,6BCAA,iUAmDO,IAAM+B,EAAmC,eACnCC,EAA4C,wBAC5CC,EAAwC,oBACxCC,EAAqC,iBACrCC,EAAuD,a,qHC7CvDC,EAAyB,CAClCC,wBAAyB,CACrBC,KAAM,6BACNC,KAAM,+GAEVC,qBAAsB,CAClBF,KAAM,0BACNC,KAAM,mFAEVE,kBAAmB,CACfH,KAAM,sBACNC,KAAM,8EAEVG,iBAAkB,CACdJ,KAAM,sBACNC,KAAM,oFAEVI,wBAAyB,CACrBL,KAAM,6BACNC,KAAM,2EAEVK,aAAc,CACVN,KAAM,gBACNC,KAAM,+EAEVM,6BAA8B,CAC1BP,KAAM,sBACNC,KAAM,+IAEVO,oBAAqB,CACjBR,KAAM,wBACNC,KAAM,uGAEVQ,mBAAoB,CAChBT,KAAM,uBACNC,KAAM,sFAEVS,kBAAmB,CACfV,KAAM,gBACNC,KAAM,6IAEVU,mBAAoB,CAChBX,KAAM,iBACNC,KAAM,iGAEVW,mBAAoB,CAChBZ,KAAM,kBACNC,KAAM,mBAEVY,mBAAoB,CAChBb,KAAM,iBACNC,KAAM,wFAEVa,mBAAoB,CAChBd,KAAM,kBACNC,KAAM,mBAEVc,mBAAoB,CAChBf,KAAM,kBACNC,KAAM,oLAEVe,uBAAwB,CACpBhB,KAAM,2BACNC,KAAM,qJAGVgB,yBAA0B,CACtBjB,KAAM,6BACNC,KAAM,6HAEViB,4BAA6B,CACzBlB,KAAM,gCACNC,KAAM,oIAEVkB,yBAA0B,CACtBnB,KAAM,yBACNC,KAAM,6EAEVmB,sBAAuB,CACnBpB,KAAM,4BACNC,KAAM,8FAEVoB,sBAAuB,CACnBrB,KAAM,4BACNC,KAAM,gGAEVqB,oBAAqB,CACjBtB,KAAM,yBACNC,KAAM,wCAEVsB,wBAAyB,CACrBvB,KAAM,uBACNC,KAAM,6CAEVuB,2BAA4B,CACxBxB,KAAM,gCACNC,KAAM,mHAEVwB,kBAAmB,CACfzB,KAAM,sBACNC,KAAM,2BAEVyB,uBAAwB,CACpB1B,KAAM,4BACNC,KAAM,oDAEV0B,yBAA0B,CACtB3B,KAAM,+BACNC,KAAM,2FAEV2B,mBAAoB,CAChB5B,KAAM,uBACNC,KAAM,8CAEV4B,wBAAyB,CACrB7B,KAAM,4BACNC,KAAM,6DAEV6B,eAAgB,CACZ9B,KAAM,mBACNC,KAAM,4CAEV8B,iBAAkB,CACd/B,KAAM,sCACNC,KAAM,iFAEV+B,YAAa,CACThC,KAAM,mBACNC,KAAM,6EAEVgC,iBAAkB,CACdjC,KAAM,qBACNC,KAAM,sBAEViC,sBAAuB,CACnBlC,KAAM,0BACNC,KAAM,4BAEVkC,yBAA0B,CACtBnC,KAAM,6BACNC,KAAM,+BAEVmC,iBAAkB,CACdpC,KAAM,oBACNC,KAAM,4FAEVoC,wBAAyB,CACrBrC,KAAM,4BACNC,KAAM,kKAEVqC,qBAAsB,CAClBtC,KAAM,yBACNC,KAAM,sOAEVsC,mBAAoB,CAChBvC,KAAM,uBACNC,KAAM,wDAEVuC,oBAAqB,CACjBxC,KAAM,0CACNC,KAAM,mEAEVwC,8BAA+B,CAC3BzC,KAAM,kDACNC,KAAM,qEAEVyC,sBAAuB,CACnB1C,KAAM,2BACNC,KAAM,mEAEV0C,2BAA4B,CACxB3C,KAAM,2BACNC,KAAM,uGAEV2C,0BAA2B,CACvB5C,KAAM,0BACNC,KAAM,+DAEV4C,mBAAoB,CAChB7C,KAAM,qCACNC,KAAM,gD,cASV,WAAY6C,EAAmBC,GAA/B,MACI,YAAMD,EAAWC,IAAa,K,OAC9B,EAAK7G,KAAO,kBAEZnG,OAAOiN,eAAe,EAAMC,EAAgB5M,W,EA2TpD,OAjUqC,iBAa1B,EAAA6M,8BAAP,SAAqCC,GACjC,OAAO,IAAIF,EAAgBnD,EAAuBC,wBAAwBC,KACnEF,EAAuBC,wBAAwBE,KAAI,uBAAuBkD,IAO9E,EAAAC,2BAAP,WACI,OAAO,IAAIH,EAAgBnD,EAAuBI,qBAAqBF,KACnE,GAAGF,EAAuBI,qBAAqBD,OAOhD,EAAAoD,wBAAP,SAA+BC,GAC3B,OAAO,IAAIL,EAAgBnD,EAAuBK,kBAAkBH,KAC7DF,EAAuBK,kBAAkBF,KAAI,uBAAuBqD,IAOxE,EAAAC,4BAAP,SAAmCC,GAC/B,OAAO,IAAIP,EAAgBnD,EAAuBM,iBAAiBJ,KAC5DF,EAAuBM,iBAAiBH,KAAI,qBAAqBuD,IAMrE,EAAAC,uCAAP,SAA8CC,GAC1C,OAAO,IAAIT,EAAgBnD,EAAuBO,wBAAwBL,KACnEF,EAAuBO,wBAAwBJ,KAAI,YAAYyD,IAMnE,EAAAC,mBAAP,SAA0BC,EAAkBF,GACxC,OAAO,IAAIT,EAAgBnD,EAAuBQ,aAAaN,KACxDF,EAAuBQ,aAAaL,KAAI,0BAA0ByD,EAAS,0BAA0BE,EAASC,MAAM,KAAK,KAM7H,EAAAC,mCAAP,SAA0CJ,GACtC,OAAO,IAAIT,EAAgBnD,EAAuBS,6BAA6BP,KACxEF,EAAuBS,6BAA6BN,KAAI,0CAA0CyD,IAOtG,EAAAK,+BAAP,SAAsCC,GAClC,OAAO,IAAIf,EAAgBnD,EAAuBU,oBAAoBR,KAC/DF,EAAuBU,oBAAoBP,KAAI,kBAAkB+D,IAOrE,EAAAC,wBAAP,SAA+BC,EAAsBC,GACjD,OAAO,IAAIlB,EAAgBnD,EAAuBY,kBAAkBV,KAC7DF,EAAuBY,kBAAkBT,KAAI,mBAAmBiE,EAAY,eAAeC,IAM/F,EAAAC,yBAAP,WACI,OAAO,IAAInB,EAAgBnD,EAAuBa,mBAAmBX,KACjEF,EAAuBa,mBAAmBV,OAO3C,EAAAoE,yBAAP,SAAgCC,GAC5B,OAAO,IAAIrB,EAAgBnD,EAAuBc,mBAAmBZ,KAC9DF,EAAuBc,mBAAmBX,KAAI,MAAMqE,IAMxD,EAAAC,yBAAP,WACI,OAAO,IAAItB,EAAgBnD,EAAuBe,mBAAmBb,KACjEF,EAAuBe,mBAAmBZ,OAO3C,EAAAuE,yBAAP,SAAgCC,GAC5B,OAAO,IAAIxB,EAAgBnD,EAAuBgB,mBAAmBd,KAC9DF,EAAuBgB,mBAAmBb,KAAI,MAAMwE,IAMxD,EAAAC,yCAAP,WACI,OAAO,IAAIzB,EAAgBnD,EAAuBkB,uBAAuBhB,KAClEF,EAAuBkB,uBAAuBf,KAAI,MAMtD,EAAA0E,2CAAP,WACI,OAAO,IAAI1B,EAAgBnD,EAAuBmB,yBAAyBjB,KACvEF,EAAuBmB,yBAAyBhB,OAMjD,EAAA2E,8CAAP,WACI,OAAO,IAAI3B,EAAgBnD,EAAuBoB,4BAA4BlB,KAC1EF,EAAuBoB,4BAA4BjB,OAMpD,EAAA4E,oCAAP,WACI,OAAO,IAAI5B,EAAgBnD,EAAuBqB,yBAAyBnB,KAAMF,EAAuBqB,yBAAyBlB,OAO9H,EAAA6E,iCAAP,SAAwCC,GACpC,OAAO,IAAI9B,EAAgBnD,EAAuBsB,sBAAsBpB,KAASF,EAAuBsB,sBAAsBnB,KAAI,iBAAiB8E,IAOhJ,EAAAC,mCAAP,SAA0CD,GACtC,OAAO,IAAI9B,EAAgBnD,EAAuBuB,sBAAsBrB,KAASF,EAAuBuB,sBAAsBpB,KAAI,iBAAiB8E,IAOhJ,EAAAE,0BAAP,SAAiCC,GAC7B,OAAO,IAAIjC,EAAgBnD,EAAuBwB,oBAAoBtB,KAASF,EAAuBwB,oBAAoBrB,KAAI,kBAAkBiF,IAO7I,EAAAC,8BAAP,WACI,OAAO,IAAIlC,EAAgBnD,EAAuByB,wBAAwBvB,KAAM,GAAGF,EAAuByB,wBAAwBtB,OAM/H,EAAAmF,+BAAP,WACI,OAAO,IAAInC,EAAgBnD,EAAuB0B,2BAA2BxB,KAAM,GAAGF,EAAuB0B,2BAA2BvB,OAMrI,EAAAoF,6BAAP,WACI,OAAO,IAAIpC,EAAgBnD,EAAuB2B,kBAAkBzB,KAAM,GAAGF,EAAuB2B,kBAAkBxB,OAMnH,EAAAqF,6BAAP,WACI,OAAO,IAAIrC,EAAgBnD,EAAuB4B,uBAAuB1B,KAAM,GAAGF,EAAuB4B,uBAAuBzB,OAM7H,EAAAsF,oCAAP,WACI,OAAO,IAAItC,EAAgBnD,EAAuB6B,yBAAyB3B,KAAM,GAAGF,EAAuB6B,yBAAyB1B,OAMjI,EAAAuF,iCAAP,WACI,OAAO,IAAIvC,EAAgBnD,EAAuB8B,mBAAmB5B,KAAMF,EAAuB8B,mBAAmB3B,OAMlH,EAAAwF,mCAAP,WACI,OAAO,IAAIxC,EAAgBnD,EAAuB+B,wBAAwB7B,KAAMF,EAAuB+B,wBAAwB5B,OAM5H,EAAAyF,0BAAP,WACI,OAAO,IAAIzC,EAAgBnD,EAAuBgC,eAAe9B,KAAMF,EAAuBgC,eAAe7B,OAM1G,EAAA0F,uBAAP,WACI,OAAO,IAAI1C,EAAgBnD,EAAuBiC,iBAAiB/B,KAAM,GAAGF,EAAuBiC,iBAAiB9B,OAOjH,EAAA2F,0BAAP,SAAiCC,GAC7B,OAAO,IAAI5C,EAAgBnD,EAAuBkC,YAAYhC,KAAM,GAAGF,EAAuBkC,YAAY/B,KAAO4F,IAM9G,EAAAC,4BAAP,WACI,OAAO,IAAI7C,EAAgBnD,EAAuBmC,iBAAiBjC,KAAM,GAAGF,EAAuBmC,iBAAiBhC,OAMjH,EAAA8F,iCAAP,WACI,OAAO,IAAI9C,EAAgBnD,EAAuBoC,sBAAsBlC,KAAM,GAAGF,EAAuBoC,sBAAsBjC,OAM3H,EAAA+F,oCAAP,WACI,OAAO,IAAI/C,EAAgBnD,EAAuBqC,yBAAyBnC,KAAM,GAAGF,EAAuBqC,yBAAyBlC,OAMjI,EAAAgG,4BAAP,WACI,OAAO,IAAIhD,EAAgBnD,EAAuBsC,iBAAiBpC,KAAM,GAAGF,EAAuBsC,iBAAiBnC,OAMjH,EAAAiG,6BAAP,WACI,OAAO,IAAIjD,EAAgBnD,EAAuBuC,wBAAwBrC,KAAM,GAAGF,EAAuBuC,wBAAwBpC,OAM/H,EAAAkG,2BAAP,WACI,OAAO,IAAIlD,EAAgBnD,EAAuBwC,qBAAqBtC,KAAMF,EAAuBwC,qBAAqBrC,OAMtH,EAAAmG,8BAAP,WACI,OAAO,IAAInD,EAAgBnD,EAAuByC,mBAAmBvC,KAAMF,EAAuByC,mBAAmBtC,OAMlH,EAAAoG,+BAAP,WACI,OAAO,IAAIpD,EAAgBnD,EAAuB0C,oBAAoBxC,KAAMF,EAAuB0C,oBAAoBvC,OAMpH,EAAAqG,sCAAP,WACI,OAAO,IAAIrD,EAAgBnD,EAAuB2C,8BAA8BzC,KAAMF,EAAuB2C,8BAA8BxC,OAGxI,EAAAsG,gCAAP,WACI,OAAO,IAAItD,EAAgBnD,EAAuB8C,0BAA0B5C,KAAMF,EAAuB8C,0BAA0B3C,OAMhI,EAAAuG,8BAAP,WACI,OAAO,IAAIvD,EAAgBnD,EAAuB+C,mBAAmB7C,KAAMF,EAAuB+C,mBAAmB5C,OAE7H,E,CAjUqC,M,wFC1LrC,cAwHA,OAjHW,EAAAwG,gBAAP,SAAuBC,GACnB,GAAIC,EAAYC,QAAQF,GACpB,MAAM,IAAgBnD,4BAA4BmD,GAEtD,IACMG,EADkB,uCACQC,KAAKJ,GACrC,IAAKG,GAAWA,EAAQnR,OAAS,EAC7B,MAAM,IAAgB2N,wBAAwB,6BAA6B0D,KAAKC,UAAUN,IAO9F,MALuC,CACnCO,OAAQJ,EAAQ,GAChBK,WAAYL,EAAQ,GACpBM,OAAQN,EAAQ,KAUjB,EAAAD,QAAP,SAAeQ,GACX,MAAuB,qBAARA,IAAwBA,GAAO,IAAMA,EAAI1R,QAOrD,EAAA2R,WAAP,SAAkBC,GACd,GAAIA,IAAWX,EAAYC,QAAQU,GAC/B,IACI,IAAMpI,EAAM6H,KAAKQ,MAAMD,GACvB,OAAmC,IAA5BvR,OAAOyR,KAAKtI,GAAKxJ,OAC1B,MAAO+R,IAEb,OAAO,GAGJ,EAAAC,WAAP,SAAkBN,EAAaO,GAC3B,OAA+B,IAAxBP,EAAIQ,QAAQD,IAGhB,EAAAE,SAAP,SAAgBT,EAAaO,GACzB,OAAQP,EAAI1R,QAAUiS,EAAOjS,QAAY0R,EAAIU,YAAYH,KAAaP,EAAI1R,OAASiS,EAAOjS,QAQvF,EAAAqS,oBAAP,SAA8BC,GAC1B,IAAM9I,EAAU,GACV+I,EAASD,EAAMnE,MAAM,KACrBqE,EAAS,SAACC,GAAc,OAAAC,mBAAmBD,EAAEE,QAAQ,MAAO,OASlE,OARAJ,EAAOK,SAAQ,SAACC,GACZ,GAAIA,EAAKjM,OAAQ,CACP,MAAeiM,EAAK1E,MAAM,SAAU,GAAnC5N,EAAG,KAAE+G,EAAK,KACb/G,GAAO+G,IACPkC,EAAIgJ,EAAOjS,IAAQiS,EAAOlL,QAI/BkC,GAQJ,EAAAsJ,iBAAP,SAAwBC,GACpB,OAAOA,EAAIC,KAAI,SAAAC,GAAS,OAAAA,EAAMrM,WAO3B,EAAAsM,4BAAP,SAAmCH,GAC/B,OAAOA,EAAII,QAAO,SAAAF,GACd,OAAQhC,EAAYC,QAAQ+B,OAQ7B,EAAAG,gBAAP,SAA0B1B,GACtB,IACI,OAAOL,KAAKQ,MAAMH,GACpB,MAAOK,GACL,OAAO,OASR,EAAAsB,aAAP,SAAoBC,EAAiBC,GAOjC,OAFsB,IAAIC,OAAOF,EAAQX,QAAQ,MAAO,QAAQA,QAAQ,MAAO,SAASA,QAAQ,MAAO,QAE1Fc,KAAKF,IAE1B,E,oBClHE3S,EAAOC,QAAUwF,EAAQ,IAARA,I,uICdPqN,E,6BAAZ,SAAYA,GACR,iBACA,qBACA,qBACA,iBACA,6BACA,2BACA,6BACA,mBACA,mBATJ,CAAYA,MAAc,KAgBnB,IAAeC,EAAtB,0GASW,WACH,OAAOC,EAAsBC,0BAVrC,8BAwBW,SAAwBC,EAA0BC,EAAuBC,GAC5E,OAAO,IAAIJ,EAAsBE,EAAkBC,EAAeC,OAzB1E,KA0CaJ,EAAb,kDAWI,aAA+I,MAA5HK,EAA4H,uDAApG,KAAOF,EAA6F,uDAArE,GAAIC,EAAiE,uDAA9C,EAAGE,EAA2C,uDAAlBR,EAAeS,IAGxI,OAH2I,qBAC3I,gBAmJMC,UAAY,SAACC,EAAgBC,EAAgB5C,GACnD,IAAK,IAAI3R,EAAI,EAAGA,EAAI2R,EAAI1R,OAAQD,IAC5BsU,EAAKE,SAASD,EAASvU,EAAG2R,EAAI8C,WAAWzU,KAnJrCmU,GACJ,KAAKR,EAAeS,IAChB,EAAKM,UAAY,EACjB,MACJ,KAAKf,EAAegB,KAChB,EAAKD,UAAY,EACjB,MACJ,KAAKf,EAAeiB,MAChB,EAAKF,UAAY,EAIzB,EAAKV,cAAgBA,EACrB,EAAKE,cAAgBA,EACrB,EAAKD,SAAWA,EAChB,EAAKY,eAAiB,EAAKX,cAAgB,EAAKD,UAAY,EAAKD,cAAgB,GACjF,EAAKc,WAAa,EAAKb,SAAWc,KAAKC,IAAI,EAAKhB,cAAe,GAE/D,EAAKiB,WAAa,IAAIC,YAAY,IAGlC,IAAMZ,EAAO,IAAIa,SAAS,EAAKF,YAxB4G,OA2B3I,EAAKZ,UAAUC,EAAM,EAAG,QAExBA,EAAKc,UAAU,EAAG,GAAG,GAErB,EAAKf,UAAUC,EAAM,EAAG,YAExBA,EAAKc,UAAU,GAAI,IAAI,GAEvBd,EAAKe,UAAU,GAAI,EAAKX,WAAW,GAEnCJ,EAAKe,UAAU,GAAI,EAAKpB,UAAU,GAElCK,EAAKc,UAAU,GAAI,EAAKlB,eAAe,GAEvCI,EAAKc,UAAU,GAAI,EAAKP,gBAAgB,GAExCP,EAAKe,UAAU,GAAI,EAAKpB,UAAY,EAAKD,cAAgB,IAAI,GAE7DM,EAAKe,UAAU,GAAI,EAAKrB,eAAe,GAEvC,EAAKK,UAAUC,EAAM,GAAI,QAEzBA,EAAKc,UAAU,GAAI,GAAG,GAjDqH,EAXnJ,yCAyGW,cAzGX,kBA2JI,WACI,OAAOtN,KAAKmN,cA5JpB,oCAsEW,WACH,OAAO,IAAIpB,IAvEnB,6BAiFW,SAAuByB,GAE1B,IAAMC,EAAgBC,OAAeD,cAC7BC,OAAeC,qBAChB,EAGP,GAAMF,EACF,YAAmB7O,IAAf4O,GAA4BI,UAAUC,aAAaC,0BAA0BN,WACtE,IAAIC,EAAa,CAAED,eAEnB,IAAIC,EAGf,MAAM,IAAI5O,MAAM,+EA/F5B,GAA2CiN,I,iCCxD/BiC,E,kCAAZ,SAAYA,GACR,oCACA,wCACA,gCACA,oCACA,oCACA,+CACA,mDACA,mDACA,kEACA,yCACA,6CACA,6CACA,mDACA,+CACA,kCACA,kCACA,sCACA,sCACA,8BAnBJ,CAAYA,MAAS,M,6BCLN,SAASC,EAA8BjM,EAAQkM,GAC5D,GAAc,MAAVlM,EAAgB,MAAO,GAC3B,IAEIrJ,EAAKR,EAFLF,EAAS,GACTkW,EAAa1V,OAAOyR,KAAKlI,GAG7B,IAAK7J,EAAI,EAAGA,EAAIgW,EAAW/V,OAAQD,IACjCQ,EAAMwV,EAAWhW,GACb+V,EAAS5D,QAAQ3R,IAAQ,IAC7BV,EAAOU,GAAOqJ,EAAOrJ,IAGvB,OAAOV,EAZT,mC,mFCUamW,EACQ,CACb1L,KAAM,mBACNC,KAAM,uC,cA6BV,WAAY6C,EAAoBC,EAAuB4I,GAAvD,WACUxH,EAAcpB,EAAkBD,EAAS,KAAKC,EAAiBD,E,OACrE,cAAMqB,IAAY,KAClBpO,OAAOiN,eAAe,EAAM4I,EAAUvV,WAEtC,EAAKyM,UAAYA,GAAa,IAAUzK,aACxC,EAAK0K,aAAeA,GAAgB,GACpC,EAAK8I,SAAWF,GAAY,GAC5B,EAAKzP,KAAO,Y,EAcpB,OA5C+B,iBAiC3B,YAAA4P,iBAAA,SAAiBC,GACbxO,KAAKwO,cAAgBA,GAOlB,EAAAC,sBAAP,SAA6BC,GACzB,OAAO,IAAIL,EAAUF,EAAiC1L,KAAS0L,EAAiCzL,KAAI,KAAKgM,IAEjH,E,CA5C+B7P,Q,yLClBhB,SAAS,EAAW8P,EAAQC,EAAMC,GAc/C,OAZE,EADE,OAAAC,EAAA,KACW7O,QAAQC,UAER,SAAoByO,EAAQC,EAAMC,GAC7C,IAAIE,EAAI,CAAC,MACTA,EAAEC,KAAK5O,MAAM2O,EAAGH,GAChB,IACIhX,EAAW,IADGqX,SAASC,KAAK9O,MAAMuO,EAAQI,IAG9C,OADIF,GAAO,OAAApJ,EAAA,GAAe7N,EAAUiX,EAAM/V,WACnClB,GAIJ,EAAWwI,MAAM,KAAMD,WCZjB,SAAS,EAAiB0O,GACvC,IAAIM,EAAwB,oBAARC,IAAqB,IAAIA,SAAQxQ,EA8BrD,OA5BA,EAAmB,SAA0BiQ,GAC3C,GAAc,OAAVA,ICRkCQ,EDQER,GCPsB,IAAzDI,SAASK,SAASrN,KAAKoN,GAAIhF,QAAQ,kBDOQ,OAAOwE,ECR5C,IAA2BQ,EDUtC,GAAqB,oBAAVR,EACT,MAAM,IAAI/W,UAAU,sDAGtB,GAAsB,qBAAXqX,EAAwB,CACjC,GAAIA,EAAOI,IAAIV,GAAQ,OAAOM,EAAOK,IAAIX,GAEzCM,EAAOM,IAAIZ,EAAOa,GAGpB,SAASA,IACP,OAAO,EAAUb,EAAO1O,UAAW,OAAAwP,EAAA,GAAe3P,MAAMR,aAW1D,OARAkQ,EAAQ5W,UAAYN,OAAO+G,OAAOsP,EAAM/V,UAAW,CACjD0G,YAAa,CACXC,MAAOiQ,EACPrX,YAAY,EACZE,UAAU,EACVD,cAAc,KAGX,OAAAmN,EAAA,GAAeiK,EAASb,IAG1B,EAAiBA,GEvBnB,IAAM,EAAb,kDASI,WAAmBe,GAAoB,kCACnC,cAAMA,IACDjR,KAAO,eACZ,EAAKkR,QAAUD,EAHoB,EAT3C,YAAuC/Q,QAuB1B,EAAb,kDASI,WAAmBiR,GAAa,kCAC5B,cAAMA,IACDnR,KAAO,mBACZ,EAAKkR,QAAUC,EAHa,EATpC,YAA2CjR,QAwB9B,EAAb,kDAUI,WAAmBkR,EAAoBD,GAAc,kCACjD,cAAMA,IACDnR,KAAOoR,EAAa,iBACzB,EAAKF,QAAUC,EAHkC,EAVzD,YAAyCjR,S,qGCrD7BkP,E,uBAAZ,SAAYA,GACR,qBACA,mBACA,yBACA,qBAJJ,CAAYA,MAAS,KAOd,IAAMiC,EAAb,WAOI,WAAYC,EAAmBC,GAAoB,oBAC/ClQ,KAAKmQ,SAAWF,EAChBjQ,KAAKoQ,YAAc,cACnBpQ,KAAKqQ,eAAgB,IAAIC,MAAOC,cAChCvQ,KAAKwQ,cAAgBN,EACrBlQ,KAAKyQ,aAAe,GAZ5B,sCAeI,WACI,OAAOzQ,KAAKmQ,WAhBpB,mBAmBI,WACI,OAAOnQ,KAAKoQ,cApBpB,qBAuBI,WACI,OAAOpQ,KAAKqQ,gBAxBpB,qBA2BI,WACI,OAAOrQ,KAAKwQ,gBA5BpB,oBA+BI,WACI,OAAOxQ,KAAKyQ,iBAhCpB,M,6BCbA,8CACe,SAASC,EAA2BC,EAAGC,GACpD,IAAIC,EAEJ,GAAsB,qBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQN,KAAOE,EAAK,YAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAExY,OAAqB,CAC/G0Y,IAAIF,EAAIE,GACZ,IAAI3Y,EAAI,EAEJgZ,EAAI,aAER,MAAO,CACLtG,EAAGsG,EACHC,EAAG,WACD,OAAIjZ,GAAKyY,EAAExY,OAAe,CACxBiZ,MAAM,GAED,CACLA,MAAM,EACN3R,MAAOkR,EAAEzY,OAGbgS,EAAG,SAAWmH,GACZ,MAAMA,GAERC,EAAGJ,GAIP,MAAM,IAAIpZ,UAAU,yIAGtB,IAEIyZ,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACL7G,EAAG,WACDiG,EAAKF,EAAEG,OAAOC,aAEhBI,EAAG,WACD,IAAIO,EAAOb,EAAGc,OAEd,OADAH,EAAmBE,EAAKN,KACjBM,GAETxH,EAAG,SAAW0H,GACZH,GAAS,EACTF,EAAMK,GAERN,EAAG,WACD,IACOE,GAAoC,MAAhBX,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIY,EAAQ,MAAMF,O,gBCpD1B,OAOC,WACA,aAEA,IAAIM,EAAS,GAAG7P,eAEhB,SAAS8P,IAGR,IAFA,IAAIC,EAAU,GAEL7Z,EAAI,EAAGA,EAAIiI,UAAUhI,OAAQD,IAAK,CAC1C,IAAI8Z,EAAM7R,UAAUjI,GACpB,GAAK8Z,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BF,EAAQ/C,KAAKgD,QACP,GAAIhB,MAAMC,QAAQe,IACxB,GAAIA,EAAI7Z,OAAQ,CACf,IAAI+Z,EAAQJ,EAAW1R,MAAM,KAAM4R,GAC/BE,GACHH,EAAQ/C,KAAKkD,SAGT,GAAgB,WAAZD,EACV,GAAID,EAAI1C,WAAa9W,OAAOM,UAAUwW,SACrC,IAAK,IAAI5W,KAAOsZ,EACXH,EAAO5P,KAAK+P,EAAKtZ,IAAQsZ,EAAItZ,IAChCqZ,EAAQ/C,KAAKtW,QAIfqZ,EAAQ/C,KAAKgD,EAAI1C,aAKpB,OAAOyC,EAAQI,KAAK,KAGgBpZ,EAAOC,SAC3C8Y,EAAWM,QAAUN,EACrB/Y,EAAOC,QAAU8Y,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,6BCCD,IAAYO,EARZ,kCAQA,SAAYA,GAKR,mDAOA,2DAOA,6DAMA,iEAMA,mEAMA,iEAMA,iEAMA,iEAMA,mEAMA,6DAMA,sDAMA,oDAMA,sDAMA,sDAMA,oDAMA,oDAMA,kDAMA,sDAMA,sDAMA,oDAOA,sDAKA,kEAMA,oEAOA,sDAOA,wDAOA,wDAOC,8DAOA,kDAOA,oDAQD,oEA7LJ,CAAYA,MAA2B,M,+pHCL1B,EAKT,WAAmBC,EAA0BC,GAAyB,+BAK/D,KAAAC,OAAS,SACZC,GAEA,IAAMC,EAAa,EAAKC,qBAAqBF,EAAkB,EAAKG,qBAAsB,EAAKC,uBAE/F,IAAKH,EACD,OAAO,KAGX,IAAMI,EAAkC,EAApBJ,EAAWva,OAEzB4a,EAAS,IAAI3F,YAAY0F,GACzBtG,EAAO,IAAIa,SAAS0F,GAG1B,OAFA,EAAKC,gBAAgBxG,EAAM,EAAGkG,GAEvBK,GAGH,KAAAxG,UAAY,SAACC,EAAgBC,EAAgB5C,GACjD,IAAK,IAAI3R,EAAI,EAAGA,EAAI2R,EAAI1R,OAAQD,IAC5BsU,EAAKE,SAASD,EAASvU,EAAG2R,EAAI8C,WAAWzU,KAIzC,KAAA8a,gBAAkB,SAACxG,EAAgBC,EAAgBf,GACvD,IAAK,IAAIxT,EAAI,EAAGA,EAAIwT,EAAMvT,OAAQD,IAAMuU,GAAU,EAAG,CACjD,IAAM7B,EAAIqC,KAAKC,KAAK,EAAGD,KAAKgG,IAAI,EAAGvH,EAAMxT,KACzCsU,EAAK0G,SAASzG,EAAQ7B,EAAI,EAAQ,MAAJA,EAAiB,MAAJA,GAAY,KAIvD,KAAA+H,qBAAuB,SAC3BQ,EACAC,EACAC,GAEA,IAAKF,EACD,OAAO,KAGX,GAAIE,IAAYD,GAAWC,EAAUD,EACjC,OAAOD,EAQX,IALA,IAAMG,EAAQF,EAAUC,EAClBE,EAAYtG,KAAKuG,MAAML,EAAShb,OAASmb,GACzCG,EAAW,IAAIC,aAAaH,GAC9BI,EAAY,EACZC,EAAY,EACTA,EAAYL,GAAW,CAI1B,IAHA,IAAMM,EAAgB5G,KAAKuG,OAAOI,EAAY,GAAKN,GAC/CQ,EAAQ,EACRC,EAAQ,EACLJ,EAAYE,GAAiBF,EAAYR,EAAShb,QACrD2b,GAASX,EAASQ,KAClBI,IAEJN,EAASG,KAAeE,EAAQC,EAGpC,OAAON,GAhEPzT,KAAK4S,qBAAuBN,EAC5BtS,KAAK6S,sBAAwBN,GCJxB,EAAb,WAKI,WAAmByB,GAA2B,+BAIvC,KAAAC,OAAS,SAACC,EAAuBC,EAA0BC,GAC9D,IAEMC,EAAoB,IAAI,EAAeH,EAAQ1G,WAF3B,MAKpB8G,EAAWJ,EAAQK,wBAAwBJ,GACjD,IAAK,EAAKK,0BAA2B,CACjC,IAeMC,EAAO,IAAIC,KAAK,CAfA,wlBAeiB,CAAEC,KAAM,0CAC/C,EAAKH,0BAA4BI,IAAIC,gBAAgBJ,GAMzD,IAAM,EAAKD,4BAA+BN,EAAQY,aAoE9C,MAAM,IAAIjW,MAAM,sDAnEhBqV,EAAQY,aACHC,UAAU,EAAKP,2BACfQ,MAAK,WACF,IAAMC,EAAc,IAAIC,iBAAiBhB,EAAS,oBAClDe,EAAYE,KAAKC,UAAY,SAACC,GAC1B,IAAMC,EAA2BD,EAAGE,KAEpC,GAAInB,IAAiBA,EAAaoB,SAAU,CACxC,IAAMC,EAAYpB,EAAkB7B,OAAO8C,GACrCG,IACFrB,EAAasB,iBAAiB,CAC1B3C,OAAQ0C,EACRE,OAAO,EACPC,aAActF,KAAKuF,SAEV,KAIzBvB,EAASwB,QAAQb,GACjBA,EAAYa,QAAQ5B,EAAQ6B,aAC5B,EAAKC,mBAAqB,CACtBC,oBAAqBhB,EACrBlT,OAAQuS,EACR4B,OAAQ/B,MAGfgC,OAAM,WACH,IAAMC,EAAc,WAChB,IAAIC,EAAa,EACjB,IACI,OAAOnC,EAAQoC,sBAAsBD,EAAY,EAAG,GACtD,MAAOvG,GAELuG,EAAa,KAEb,IADA,IAAIE,EAAkBrC,EAAQ1G,WACvB6I,EAAa,OAASE,GAAoB,MAC7CF,IAAe,EACfE,IAAoB,EAExB,OAAOrC,EAAQoC,sBAAsBD,EAAY,EAAG,IAZxC,GAepBD,EAAWI,eAAiB,SAACC,GACzB,IAAMnB,EAAamB,EAAMC,YAAYC,eAAe,GAEpD,GAAIvC,IAAiBA,EAAaoB,SAAU,CACxC,IAAMC,EAAYpB,EAAkB7B,OAAO8C,GACrCG,IACFrB,EAAasB,iBAAiB,CAC1B3C,OAAQ0C,EACRE,OAAO,EACPC,aAActF,KAAKuF,SAEV,KAIzBvB,EAASwB,QAAQM,GACjBA,EAAWN,QAAQ5B,EAAQ6B,aAC3B,EAAKC,mBAAqB,CACtBC,oBAAqBG,EACrBrU,OAAQuS,EACR4B,OAAQ/B,OAQrB,KAAAyC,sBAAwB,SAAC1C,GACxB,EAAK8B,qBACD,EAAKA,mBAAmBC,sBACxB,EAAKD,mBAAmBC,oBAAoBY,WAAW3C,EAAQ6B,aAC/D,EAAKC,mBAAmBC,oBAAsB,MAE9C,EAAKD,mBAAmBjU,SACxB,EAAKiU,mBAAmBjU,OAAO8U,aAC3B,EAAKC,wBACL,EAAKd,mBAAmBE,OAAOa,YAAYhM,SAAQ,SAACiM,GAAD,OAAgBA,EAAMC,UAE7E,EAAKjB,mBAAmBjU,OAAS,QApHzC/B,KAAK8W,uBAAyB9C,EANtC,iDA+HW,SAAckD,GACjBlX,KAAKwU,0BAA4B0C,MAhIzC,K,gYCqCa,EAAb,WAsBI,WACqBC,EACAC,EACjBC,EACAlD,GAAyB,+BAHR,KAAAgD,eACA,KAAAC,WApBb,KAAAE,YAAsD,GAwCvD,KAAAC,OAAS,WACZ,GAAI,EAAKC,uBACL,OAAO,EAAKA,uBAAuBC,QAGvC,EAAKD,uBAAyB,IAAI,IAElC,IACI,EAAKE,qBACP,MAAO5H,GACL,GAAIA,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1B,EAAK0H,uBAAuBI,OAAOD,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAEvE,EAAK2H,uBAAuBI,OAAO9H,GAEvC,OAAO,EAAK0H,uBAAuBC,QAGvC,IAAMI,EAAMnK,OAAOE,UAEfkK,EACAD,EAAIC,cACJD,EAAIE,oBACJF,EAAIG,iBACJH,EAAII,eAYR,GATMJ,EAAIhK,eACNiK,EAAe,SAACI,EAAqCC,EAAoDC,GACrGP,EAAIhK,aACCiK,aAAaI,GACblD,KAAKmD,GACLhC,MAAMiC,KAIdN,EAIE,CACH,IAAMnG,EAAO,WACT,EAAK0G,QAAQ,IAAI,IAA6B,EAAKC,SAC/C,EAAKC,iBAAmB,EAAKA,gBAAgBC,QAC7C,EAAKH,QAAQ,IAAI,IAAsB,EAAKC,SAC5C,EAAKd,uBAAuBiB,WAE5BX,EACI,CAAEY,OAAO,EAAKtB,UAAW,CAAEA,SAAU,EAAKA,UAAmBuB,OAAO,IACpE,SAACxE,GACG,EAAKoE,gBAAkBpE,EACvB,EAAKkE,QAAQ,IAAI,IAAsB,EAAKC,SAC5C,EAAKd,uBAAuBiB,aAC7B,SAAC3I,GACA,IAAM8I,EAAW,oDAAH,OAAuD9I,GACrE,EAAK0H,uBAAuBI,OAAOgB,GACnC,EAAKP,QAAQ,IAAI,IAAsB,EAAKC,OAAQM,QAKrC,cAA3B,EAAKC,YAAYC,MAGjB,EAAKD,YAAYE,SACZ/D,KAAKrD,GACLwE,OAAM,SAAC6C,GACJ,EAAKxB,uBAAuBI,OAA5B,8CAA0EoB,OAGlFrH,QAlCW,CACf,IAAMiH,EAAW,yCACjB,EAAKpB,uBAAuBI,OAAOgB,GACnC,EAAKP,QAAQ,IAAI,IAAsBO,EAAU,KAmCrD,OAAO,EAAKpB,uBAAuBC,SAGhC,KAAAwB,GAAK,WACR,OAAO,EAAKX,QAGT,KAAAY,OAAS,SAACC,GAGb,OAFA,EAAKd,QAAQ,IAAI,IAA8B,EAAKC,OAAQa,IAErD,EAAKC,OAAOD,GAAanE,MAC5B,SAACkB,GAEG,OADA,EAAKmC,QAAQ,IAAI,IAA6B,EAAKC,OAAQa,IACpD,CACHE,OAAQ,kBAAW,iHACfnD,EAAOoD,mBACAtZ,KAAKsX,YAAY6B,GACxBnZ,KAAKqY,QAAQ,IAAI,IAA6BrY,KAAKsY,OAAQa,IAH5C,kBAIRnZ,KAAKuZ,WAJG,iDAMnBN,GAAI,WACA,OAAOE,GAEXK,KAAM,WACF,OAAOtD,EAAOsD,aAM3B,KAAAH,OAAS,SAACF,GACTA,GAAe,EAAK7B,YAAY6B,KAChC,EAAK7B,YAAY6B,GAAaM,eACvB,EAAKnC,YAAY6B,GACxB,EAAKd,QAAQ,IAAI,IAA6B,EAAKC,OAAQa,MA6F3D,KAAAC,OAAS,SAAOD,GAAP,OAA4D,kHACzE,OADyE,SACnEnZ,KAAKuX,SAD8D,OAEnErB,EAAS,IAAIwD,EAAA,EAAyB1Z,KAAK2Z,oBAAqBR,GACtEnZ,KAAKsX,YAAY6B,GAAejD,EAHyC,SAKrElW,KAAKmX,aAAalD,OAAOjU,KAAK6Y,YAAa7Y,KAAKuY,gBAAiBrC,GALI,sDAOrElW,KAAKqY,QAAQ,IAAI,IAA0BrY,KAAKsY,OAAQa,EAA3C,OAPwD,oBAUnEtZ,EAA8BqW,EAVqC,kBAWlErW,GAXkE,0DAcrE,KAAAwY,QAAU,SAAC5B,GACf,EAAKmD,WAAWvB,QAAQ5B,GACxBoD,EAAA,EAAOjiB,SAASygB,QAAQ5B,IAGpB,KAAAiB,mBAAqB,WACnB,EAAKmB,cAIX,EAAKA,YAAc/M,EAAA,EAAsBgO,gBAAgBC,EAAeC,YAAY5N,iBAjPpFpM,KAAK2Z,oBAAsBI,EAAeC,YAAYjN,eAAiB,GACvE/M,KAAKsY,OAASjB,GAAgC,cAC9CrX,KAAK4Z,WAAa,IAAIK,EAAA,EACtBja,KAAKuY,gBAAkBpE,GAAe,KACtCnU,KAAKka,eAAgB,EAjC7B,wCAoCI,WACI,OAAOC,QAAQ1B,QAAQsB,EAAeC,eArC9C,gBAwCI,WACI,OAAOG,QAAQvC,OAAO,mCAzC9B,qBA6JiB,W,4HACT,IAAWwC,KAAYpa,KAAKsX,YACpB8C,IACMlE,EAASlW,KAAKsX,YAAY8C,KAE5BlE,EAAOuD,Q,GAKnBzZ,KAAKqY,QAAQ,IAAI,IAAoBrY,KAAKsY,UACtCtY,KAAKwX,uB,gBAEL,O,SAAMxX,KAAKwX,uB,OACXxX,KAAKwX,uBAAyB,K,OAGlC,O,SAAMxX,KAAKqa,sB,mFA9KnB,kBAmLI,WACI,OAAOra,KAAK4Z,aApLpB,sBAuLI,WACI,OAAO5Z,KAAKsa,qBAAqBtF,MAAK,SAACuF,GACnC,MAAO,CACHC,cAAeT,EAAeC,YAAY9N,cAC1CuO,aAAcV,EAAeC,YAAY7N,SACzCuO,aAAc,IAAaC,QAC3BC,aAAc,aACdC,MAAON,EACPO,WAAYf,EAAeC,YAAY5N,cACvCuI,KAAM,IAAKoG,kBAhM3B,yBAqMW,SAAYpc,EAAcc,GAC7B,GAxMyC,gCAwMrCd,EAGA,MAAM,IAAIE,MAAM,aAAeF,EAAO,qCAFtCqB,KAAKmX,aAAa6D,cAAcvb,KAvM5C,gCA6MY,WAAkB,WAChBwb,EAAgC,aAGtC,QAAiCrc,IAA7BoB,KAAKkb,oBACL,OAAOf,QAAQ1B,QAAQzY,KAAKkb,qBAIhC,QAA6Btc,IAAzBoB,KAAKuY,kBAAkCvY,KAAKuY,gBAAgBC,OAC5D,OAAO2B,QAAQ1B,QAAQwC,GAI3Bjb,KAAKkb,oBAAsBD,EAG3B,IAAME,EAA6Bnb,KAAKuY,gBAAgBxB,YAAY,GAAGqE,cAAchE,SAGrF,QAAIxY,IAAcuc,EACd,OAAOhB,QAAQ1B,QAAQzY,KAAKkb,qBAGhC,IAAMG,EAA6B,IAAI,IAcvC,OAXAzN,UAAUC,aAAayN,mBAAmBtG,MAAK,SAACuG,GAA8B,oBACrDA,GADqD,IAC1E,2BAA8B,KAAnBC,EAAmB,QAC1B,GAAIA,EAAOpE,WAAa+D,EAAoB,CAExC,EAAKD,oBAAsBM,EAAOjB,MAClC,QALkE,8BAQ1Ec,EAAS5C,QAAQ,EAAKyC,wBACvB,kBAAMG,EAAS5C,QAAQ,EAAKyC,wBAExBG,EAAS5D,UAnPxB,iCAiRkB,W,6HACLzX,KAAK6Y,Y,oDAIV7Y,KAAKmX,aAAaP,sBAAsB5W,KAAK6Y,aAKzC4C,GAAoB,EACpB,UAAWzb,KAAK6Y,cAChB4C,GAAW,IAGXA,E,oBACKzb,KAAKka,c,iBAGN,OADAla,KAAKka,eAAgB,E,UACfla,KAAK6Y,YAAYY,Q,QACvBzZ,KAAK6Y,YAAc,KACnB7Y,KAAKka,eAAgB,E,mCAElB,OAASla,KAAK6Y,aAA0C,YAA3B7Y,KAAK6Y,YAAYC,M,iBAOrD,O,UAAM9Y,KAAK6Y,YAAY6C,U,qDA/SnC,KAE4B,EAAA1B,YAAqClO,EAAA,EAAkBE,wB,MCtCvE2P,E,sSCwBC,EAAb,WAgBI,WAAmBC,EAAqBC,EAAmBxE,GAAsB,+BAZzE,KAAAC,YAAsD,GAUtD,KAAAwE,cAAwB,GAwBzB,KAAAvE,OAAS,WACZ,GAAI,EAAKwE,aAAaxR,YAAY,UAAY,EAAKwR,aAAa5jB,OAAS,EAAG,CACxE,IAAMygB,EAAW,EAAKmD,aAAe,gEAErC,OADA,EAAK1D,QAAQ,IAAI,IAAsBO,EAAU,KAC1CuB,QAAQvC,OAAOgB,GAG1B,EAAKP,QAAQ,IAAI,IAA6B,EAAKC,SACnD,EAAKD,QAAQ,IAAI,IAAsB,EAAKC,UAIzC,KAAAW,GAAK,WACR,OAAO,EAAKX,QAGT,KAAAY,OAAS,SAAOC,GAAP,OAAyD,uHAGjC,OAFpCnZ,KAAKqY,QAAQ,IAAI,IAA8BrY,KAAKsY,OAAQa,IADS,SAG3BnZ,KAAKgc,OAAO7C,GAHe,cAG/DjD,EAH+D,OAKrElW,KAAKqY,QAAQ,IAAI,IAA6BrY,KAAKsY,OAAQa,IALU,kBAM9DgB,QAAQ1B,QAAQ,CACnBY,OAAQ,kBAA0B,0GAI9B,OAHAnD,EAAOoD,mBACAtZ,KAAKsX,YAAY6B,GACxBnZ,KAAKqY,QAAQ,IAAI,IAA6BrY,KAAKsY,OAAQa,IAH7B,SAIxBnZ,KAAKuZ,UAJmB,iDAMlCN,GAAI,WACA,OAAOE,GAEXK,KAAM,WACF,OAAOtD,EAAOsD,WAjB+C,iDAsBlE,KAAAH,OAAS,SAACF,GACTA,GAAe,EAAK7B,YAAY6B,KAChC,EAAK7B,YAAY6B,GAAaM,eACvB,EAAKnC,YAAY6B,GACxB,EAAKd,QAAQ,IAAI,IAA6B,EAAKC,OAAQa,MAI5D,KAAAI,QAAU,WACb,IAAK,IAAMa,KAAY,EAAK9C,YACxB,GAAI8C,EAAU,CACV,IAAMlE,EAAS,EAAKoB,YAAY8C,GAC5BlE,IAAWA,EAAOV,UAClBU,EAAOuD,QAMnB,OADA,EAAKpB,QAAQ,IAAI,IAAoB,EAAKC,SACnC6B,QAAQ1B,WAkIX,KAAAJ,QAAU,SAAC5B,GACf,EAAKmD,WAAWvB,QAAQ5B,GACxBoD,EAAA,EAAOjiB,SAASygB,QAAQ5B,IAlNxBzW,KAAKsY,OAASjB,GAAgC,cAC9CrX,KAAK4Z,WAAa,IAAIK,EAAA,EACtBja,KAAKic,WAAaL,EACI,qBAAXlO,QAA0C,qBAATgH,MAAwB1U,KAAKic,sBAAsBvH,KAC3F1U,KAAK+b,aAAgBH,EAAcjd,KAEnCqB,KAAK+b,aAAeF,GAAY,cAIpC7b,KAAKkc,uBAAyBlc,KAAKmc,aA3B3C,wCA8BI,WACI,OAAOnc,KAAKkc,yBA/BpB,gBAkCI,WACI,OAAO/B,QAAQ1B,QAAQzY,KAAKic,cAnCpC,kBAkGI,WACI,OAAOjc,KAAK4Z,aAnGpB,sBAsGI,WACI,OAAO5Z,KAAKkc,uBAAuBlH,MAA+B,SAACnV,GAC/D,OAAOsa,QAAQ1B,QAAQ,CACnB+B,cAAe3a,EAAOqM,cACtBuO,aAAc5a,EAAOsM,SACrBuO,aAAc,IAAaC,QAC3BC,aAAc,aACdC,MAAO,OACPC,WAAYjb,EAAOuM,cACnBuI,KAAM,IAAKyH,YA/G3B,wBAoHY,WAAU,WAGR1S,EAAwB1J,KAAKic,WAAWI,MAAM,EADtB,KAGxBC,EAAgD,IAAI,IAEpDC,EAAgB,SAAC7S,GACnB,IAAM8C,EAAiB,IAAIa,SAAS3D,GAE9B8S,EAAU,SAACC,GACb,OAAOC,OAAOC,aAAanQ,EAAKoQ,SAASH,GAAQjQ,EAAKoQ,SAASH,EAAQ,GAAIjQ,EAAKoQ,SAASH,EAAQ,GAAIjQ,EAAKoQ,SAASH,EAAQ,KAI/H,GAAI,SAAWD,EAAQ,GAOvB,GAAI,SAAWA,EAAQ,IAAM,SAAWA,EAAQ,IAAhD,CAWA,IANA,IAAMK,EAAqBrQ,EAAKsQ,SAAS,IAAI,GACvCC,EAAuBvQ,EAAKwQ,UAAU,IAAI,GAC1CxP,EAAqBhB,EAAKyQ,UAAU,IAAI,GACxC/Q,EAAwBM,EAAKwQ,UAAU,IAAI,GAE7CE,EAAc,GAAKjQ,KAAKC,IAAI2P,EAAa,GAAI,GACzB,SAAjBL,EAAQU,GAAiBA,GAAO,EACnC,GAAIA,EAAMC,IAEN,YADAb,EAAa1E,OAAO,wDAI5B,EAAKkE,cAAgBoB,EAAM,EAC3BZ,EAAa7D,QAAQ3M,EAAA,EAAkBsR,iBAAiB5P,EAAYtB,EAAe6Q,SAjB/ET,EAAa1E,OAAO,0DAPpB0E,EAAa1E,OAAO,mDA2B5B,GAAsB,qBAAXlK,QAA0C,qBAATgH,MAAwBhL,aAAkBgL,KAAM,CACxF,IAAM2I,EAAqB,IAAIC,WAE/BD,EAAOE,OAAS,SAAC9G,GACb,IAAM/M,EAAuB+M,EAAMze,OAAsB6H,OACzD0c,EAAc7S,IAGlB2T,EAAOG,kBAAkB9T,OACtB,CACH,IAAM+T,EAAY/T,EAClB6S,EAAckB,EAAE1K,OAAOsJ,MAAMoB,EAAEC,WAAYD,EAAEC,WAAaD,EAAEE,aAEhE,OAAOrB,EAAa7E,UA5K5B,oBA+KkB,SAAO0B,G,6IAQb,OAPEyE,EAAU,SAAC9N,GACb,IAAM8I,EAAW,oCAAH,OAAuC,EAAKmD,aAA5C,cAA8DjM,GAE5E,MADA,EAAKuI,QAAQ,IAAI,IAA0B,EAAKC,OAAQa,EAAaP,IAC/D,IAAI/Z,MAAM+Z,I,kBAIV5Y,KAAKuX,S,OAE2B,O,SAAMvX,KAAKkc,uB,cAA3C7P,E,OACA6J,EAAS,IAAIwD,EAAA,EAAyBrN,EAAOU,eAAiB,GAAIoM,GAExEnZ,KAAKsX,YAAY6B,GAAejD,EAC1B2H,EAAuB7d,KAAKic,WAAWI,MAAMrc,KAAK8b,eAElDgC,EAAc,SAACC,GACb7H,EAAOV,WAIXU,EAAOR,iBAAiB,CACpB3C,OAAQgL,EACRpI,OAAO,EACPC,aAActF,KAAKuF,QAEvBK,EAAOuD,UAGW,qBAAX/L,QAA0C,qBAATgH,MAAwBmJ,aAAiBnJ,OAC3E2I,EAAqB,IAAIC,YACxBM,QAAU,SAACvI,GAAoCuI,EAAQvI,EAAG/F,aAEjE+N,EAAOE,OAAS,SAAC9G,GACb,IAAMuH,EAA2BvH,EAAMze,OAAsB6H,OAC7Die,EAAYE,IAGhBX,EAAOG,kBAAkBK,IAGzBC,GADMG,EAAYJ,GACJ9K,OAAOsJ,MAAM4B,EAAEP,WAAYO,EAAEP,WAAaO,EAAEN,a,kBAGvDzH,G,kCAEP0H,EAAQ,EAAD,I,8DA7NnB,K,OCxBsB,EAAtB,kC,gVCWMM,GAAqB,mBACtB,IAAe5R,IAAM,aADC,cAEtB,IAAeQ,MAAQ,eAFD,cAGtB,IAAeqR,IAAM,cAHC,cAItB,IAAeC,SAAW,aAJJ,cAKtB,IAAeC,UAAY,2BALL,cAMtB,IAAexR,KAAO,eANA,cAOtB,IAAeyR,KAAO,cAPA,GAiBd,EAAb,WAeI,WAAmBC,GAA2B,oBATtC,KAAAC,qBAA+B,EAE/B,KAAAC,uBAAiC,EACjC,KAAAC,uBAAiC,EAIjC,KAAAC,kBAA4B,EAGhC3e,KAAKsY,OAASiG,GAA0C,cACxDve,KAAK4e,cAAe,EACpB5e,KAAK6e,cAAe,EAlB5B,sCAqBW,WACH,OAAO7e,KAAKsY,SAtBpB,mBAyBW,SAAMvF,EAAqB+L,EAAiBvN,QAClB3S,IAAzBoB,KAAK+e,iBACL/e,KAAK+e,gBAAgB/P,KAAK+D,GAC1B/S,KAAKgf,qBAAqBhK,MAAK,WACrB8J,GACFA,OAEL,SAAChP,GACMyB,GACFA,EAAIzB,YAG0BlR,IAA/BoB,KAAKif,wBACZjf,KAAKif,sBAAsBC,MAAMnM,GACjC/S,KAAK2e,mBAAqB5L,EAAO4K,cAvC7C,mBA2CW,SAAMmB,EAAiBvN,GAA6B,WAEvD,GADAvR,KAAK6e,cAAe,OACUjgB,IAA1BoB,KAAKmf,iBACLnf,KAAKof,8BAA8BpK,MAAK,WAC9B8J,GACFA,OAEL,SAAChP,GACMyB,GACFA,EAAIzB,WAGT,QAAmClR,IAA/BoB,KAAKif,sBACZ,GAAKjf,KAAKqf,WAAWzS,YAAc,IAAeN,KAAOtM,KAAKqf,WAAWzS,YAAc,IAAeE,OAC/F9M,KAAKqf,WAAWzS,YAAc,IAAeC,OAAuC,IAA9B7M,KAAKqf,WAAWC,UAMtE,CACH,IAAIC,EAAgB,IAAInS,YAAYpN,KAAK2e,mBACzC3e,KAAKif,sBAAsBzF,KAAK+F,GAAevK,MAAK,SAACwK,GACjDD,EAAgBE,EAAA,EAAqBC,UAAUH,EAAe,EAAKF,YACnE,IAAMM,EAAY,IAAIjL,KAAK,CAAC6K,GAAgB,CAAE5K,KAAMuJ,EAAsB,EAAKmB,WAAWzS,aAC1F,EAAKgT,UAAUC,IAAMnS,OAAOkH,IAAIC,gBAAgB8K,GAChD,EAAKG,iBAAiB9K,MAAK,WACjB8J,GACFA,OAEL,SAAChP,GACMyB,GACFA,EAAIzB,SAGb,SAACA,GACMyB,GACFA,EAAIzB,WArBZiQ,QAAQC,KAAR,gFACMhgB,KAAKigB,YACPjgB,KAAKigB,WAAWjgB,WAyBlBA,KAAKigB,YACPjgB,KAAKigB,WAAWjgB,QAvFhC,kBA4FI,SAAWqM,GAAyB,WAChC,GAA8B,qBAAlBoB,cAAiF,qBAAvCC,OAAeC,mBAAqC,CACtG3N,KAAKqf,WAAahT,EAClB,IAAM6T,EAAmBhC,EAAsBle,KAAKqf,WAAWzS,gBAC9ChO,IAAbshB,EAEAH,QAAQC,KAAR,sCACmC,IAAehgB,KAAKqf,WAAWzS,WADlE,iCAGgC,qBAAjBuT,aAAgCA,YAAYC,gBAAgBF,IAC3ElgB,KAAK4f,UAAY,IAAIS,MACrBrgB,KAAK+e,gBAAkB,GACvB/e,KAAKsgB,gBAAkB,IAAIH,YAC3BngB,KAAK4f,UAAUC,IAAMjL,IAAIC,gBAAgB7U,KAAKsgB,iBAC9CtgB,KAAK4f,UAAUW,OACfvgB,KAAKsgB,gBAAgBE,aAAe,SAAC/J,GACjC,EAAKiI,uBAAwB,EAC7B,EAAK4B,gBAAgBG,SAhID,KAiIpB,EAAKtB,iBAAmB,EAAKmB,gBAAgBI,gBAAgBR,GAC7D,EAAKf,iBAAiBwB,SAAW,SAACnB,GAC9B,EAAKR,qBAAqB7I,OAAM,SAAC6C,GAC7Ba,EAAA,EAAOjiB,SAASygB,QAAQ,IAAI,IAAgBW,QAGpD,EAAKmG,iBAAiByB,YAAc,SAACpB,GACjC,EAAKJ,8BAA8BjJ,OAAM,SAAC6C,GACtCa,EAAA,EAAOjiB,SAASygB,QAAQ,IAAI,IAAgBW,QAGpD,EAAKmG,iBAAiB0B,cAAgB,SAACrB,GACnC,EAAKf,uBAAwB,IAGrCze,KAAKgf,qBAAqB7I,OAAM,SAAC6C,GAC7Ba,EAAA,EAAOjiB,SAASygB,QAAQ,IAAI,IAAgBW,SAKhD+G,QAAQC,KAAR,iBACc,IAAehgB,KAAKqf,WAAWzS,WAD7C,oEAEA5M,KAAKif,sBAAwB,IAAI,IACjCjf,KAAKif,sBAAsB5S,OAASrM,KAAKqf,WACzCrf,KAAK4f,UAAY,IAAIS,UAvIrC,oBA4II,WACI,OAAOrgB,KAAK6e,eA7IpB,uBAgJI,WACI,YAAuBjgB,IAAnBoB,KAAK4f,UACE5f,KAAK4f,UAAUkB,aAElB,IApJhB,mBAuJW,WACE9gB,KAAK4e,mBAAmChgB,IAAnBoB,KAAK4f,YAC3B5f,KAAK4f,UAAUmB,QACf/gB,KAAK4e,cAAe,KA1JhC,oBA8JW,SAAOE,EAAiBvN,GACvBvR,KAAK4e,mBAAmChgB,IAAnBoB,KAAK4f,YAC1B5f,KAAK4f,UAAUoB,OAAOhM,MAAK,WACjB8J,GACFA,OAEL,SAAChP,GACMyB,GACFA,EAAIzB,MAGZ9P,KAAK4e,cAAe,KAzKhC,yBAiLI,WACI,OAAO5e,KAAK4f,YAlLpB,gCAqLkB,W,oIACmBhhB,IAAzBoB,KAAK+e,iBAAkC/e,KAAK+e,gBAAgB5mB,OAAS,GAAM6H,KAAKihB,yB,iBAChFjhB,KAAKye,uBAAwB,EACvByC,EAASlhB,KAAK+e,gBAAgBoC,Q,SAEhCnhB,KAAKmf,iBAAiBiC,aAAaF,G,uDAEnClhB,KAAK+e,gBAAgBsC,QAAQH,GAE7BnB,QAAQuB,IACJ,mE,2BAGR,O,UAAMthB,KAAK8f,iB,oCACJ9f,KAAKuhB,e,iBACZ,O,UAAMvhB,KAAKof,8B,2DApMvB,yCAwMkB,W,wHACNpf,KAAKuhB,iBAAkBvhB,KAAKihB,wB,gBAE5B,OADAjhB,KAAKsgB,gBAAgBkB,c,SACfxhB,KAAK8f,iB,kDA3MvB,4BA+MkB,W,kIACL9f,KAAKwe,0BAA0C5f,IAAnBoB,KAAK4f,U,mBAClC5f,KAAKwe,qBAAsB,EACrBxe,KAAKyhB,cACPzhB,KAAKyhB,aAAazhB,MAEtBA,KAAK4f,UAAU8B,QAAU,WACf,EAAKzB,YACP,EAAKA,WAAW,IAGnBjgB,KAAK4e,a,gBACN,O,SAAM5e,KAAK4f,UAAUoB,O,kDA3NrC,0BAgOY,WACJ,OAAQhhB,KAAKwV,eAAsC5W,IAA1BoB,KAAKmf,kBAAmE,IAAhCnf,KAAK+e,gBAAgB5mB,QAC/E6H,KAAK0e,wBAA0B1e,KAAKye,uBAA6D,SAApCze,KAAKsgB,gBAAgBqB,aAlOjG,mCAqOY,WACJ,YAAkC/iB,IAA1BoB,KAAKmf,mBAAmCnf,KAAKmf,iBAAiByC,aAtO9E,KC5BsB,EAAtB,kC,SCEa,EAAb,WAMI,WAAmB/F,GAAqB,+BA0CjC,KAAA5C,GAAK,WACR,OAAO,EAAKX,QA1CZ7Z,EAAA,EAAUK,uBAAuB,WAAa,gFAC9CkB,KAAK6hB,OAAS,WAAYhG,EAAU,KAR5C,wCAWI,SAAkBxP,GACd5N,EAAA,EAAUqjB,oBAAoB9hB,KAAK+hB,gBAAiB,yBACpD/hB,KAAK+hB,gBAAkB1V,EACvB,IAAI2V,EAAuB,EACvBhiB,KAAK+hB,gBAAgBzC,YACrB0C,EAAehiB,KAAK+hB,gBAAgBrY,OAAOiU,iBAE3B/e,IAAhBoB,KAAK6hB,SACL7hB,KAAKiiB,gBAAkB,oBAAqB,GAAI,CAACC,GAAIliB,KAAK6hB,OAAQM,MAAOH,EAAcI,WAAW,OAnB9G,mBAuBW,SAAMrP,GACTtU,EAAA,EAAUK,uBAAuBkB,KAAK+hB,gBAAiB,wCAC1BnjB,IAAzBoB,KAAKiiB,iBACLjiB,KAAKiiB,gBAAgB/C,MAAM,IAAImD,WAAWtP,EAAOsJ,MAAM,OA1BnE,mBA8BW,WAAK,gBACYzd,IAAhBoB,KAAK6hB,SACL7hB,KAAKiiB,gBAAgBK,GAAG,UAAU,WAC1B,EAAKP,gBAAgBzC,YACrB,EAAKyC,gBAAgBQ,aAAa,EAAKN,gBAAgBO,cACvD,YAAa,EAAKX,OACd,IAAIY,UAAU,EAAKV,gBAAgBrY,QACnC,EACA,EAAKqY,gBAAgBrY,OAAOiU,WAC5B,IAER,YAAa,EAAKkE,QAClB,EAAKA,YAASjjB,KAElBoB,KAAKiiB,gBAAgBS,WA5CjC,KCmCsB,EAAtB,+GAQW,WACH,IAAMC,EAAc,IAAI,GAAY,GACpC,OAAO,IAAI,EAAgB,IAAI,EAAeA,MAVtD,iCAsBW,SAA2BvL,GAC9B,IAAMuL,EAAc,IAAI,GAAY,GACpC,OAAO,IAAI,EAAgB,IAAI,EAAeA,EAAavL,MAxBnE,8BAmCW,SAAwBwE,GAAuD,IAAlCjd,EAAkC,uDAAnB,oBAC/D,OAAO,IAAI,EAAgB,IAAI,EAAgBid,EAAMjd,MApC7D,6BAgDW,SAAuBikB,GAE1B,GAAIA,aAAuB,EACvB,OAAO,IAAI,EAAgB,IAAI,IAAyBA,IAG5D,GAAIA,aAAuBC,EAAA,EACvB,OAAO,IAAI,EAAgBD,GAE/B,GAA2B,qBAAhBE,aAA+BF,aAAuBE,YAAa,CAC1E,IAAMH,EAAc,IAAI,GAAY,GACpC,OAAO,IAAI,EAAgB,IAAI,EAAeA,EAAa,KAAM,KAAMC,IAG3E,MAAM,IAAI/jB,MAAM,wBA9DxB,sCAyEW,WACH,OAAO,IAAI,EAAsB,IAAI,KA1E7C,+BAuFW,SAAyBkkB,GAC5B,QAAenkB,IAAXmkB,EACA,OAAOC,EAAYC,2BAEvB,GAAIF,aAAkB,EAClB,OAAO,IAAI,EAAsBA,GAGrC,MAAM,IAAIlkB,MAAM,wBA/FxB,iCA2GW,SAA2Bgd,GAC9B,OAAO,IAAI,EAAsB,IAAI,EAAgBA,MA5G7D,8BAyHW,SAAwB+G,GAC3B,GAAIA,aAAuB,EACvB,OAAO,IAAI,EAAsB,IAAI,IAA0BA,IAGnE,GAAIA,aAAuB,IACvB,OAAO,IAAI,EAAsBA,GAGrC,GAAIA,aAAuB,IACvB,OAAO,IAAI,EAAsBA,GAGrC,MAAM,IAAI/jB,MAAM,0BAtIxB,KA6Ka,EAAb,kDAQI,WAAmBkD,GAAoB,kCACnC,gBACKka,WAAala,EAFiB,EAR3C,wCAgBI,WACI,OAAO/B,KAAKic,WAAW5P,SAjB/B,mBAyBW,SAAMyS,EAAiBvN,GAC1BvR,KAAKic,WAAW1C,UAAUvE,MAAK,WACrB8J,GACFA,OAEL,SAAChP,GACMyB,GACFA,EAAIzB,QAhCpB,gBA0CW,WACH,OAAO9P,KAAKic,WAAWhD,OA3C/B,gBAmDI,WACI,OAAOjZ,KAAKic,WAAWxH,OApD/B,oBA6DW,WACH,OAAOzU,KAAKic,WAAW1E,WA9D/B,oBAwEW,SAAO4B,GACV,OAAOnZ,KAAKic,WAAW/C,OAAOC,KAzEtC,oBAkFW,SAAOA,GACV,OAAOnZ,KAAKic,WAAW5C,OAAOF,KAnFtC,qBA4FW,WACH,OAAOnZ,KAAKic,WAAW1C,YA7F/B,kBAsGI,WACI,OAAOvZ,KAAKic,WAAWiH,SAvG/B,yBA0GW,SAAYvkB,EAAcc,GAG7B,GAFAhB,EAAA,EAAU0kB,YAAY1jB,EAAO,cAEzBb,IAAcoB,KAAKic,WAAWmH,YAG9B,MAAM,IAAIvkB,MAAM,kEAFhBmB,KAAKic,WAAWmH,YAAYzkB,EAAMc,KA9G9C,yBAqHW,SAAYd,EAAc0kB,GAC7B,QAAIzkB,IAAcoB,KAAKic,WAAWqH,YAC9B,OAAOtjB,KAAKic,WAAWqH,YAAY3kB,EAAM0kB,GAEzC,MAAM,IAAIxkB,MAAM,oEAzH5B,sBA+HI,WACI,OAAOmB,KAAKic,WAAWsH,eAhI/B,GAAqC,GAoIxB,EAAb,kDAQI,WAAmBxN,GAA8B,kCAC7C,gBACKyN,gBAAkBzN,EAFsB,EARrD,wCAaI,SAAkB1J,GACdrM,KAAKwjB,gBAAgBnX,OAASA,IAdtC,mBAiBW,SAAM0G,GACT/S,KAAKwjB,gBAAgBtE,MAAMnM,KAlBnC,mBAqBW,WACH/S,KAAKwjB,gBAAgB/J,UAtB7B,gBAyBW,WACH,OAAOzZ,KAAKwjB,gBAAgBvK,OA1BpC,yBA6BW,SAAYta,EAAcc,GAC7B,MAAM,IAAIZ,MAAM,oEA9BxB,yBAiCW,SAAYF,EAAc0kB,GAC7B,MAAM,IAAIxkB,MAAM,sEAlCxB,GAA2C,G,QCnV9B,EAAb,WAOI,iCANQ,KAAA4kB,cAAwB,EADpC,yCA+CW,WACCzjB,KAAKyjB,eAITzjB,KAAKyjB,cAAe,MApD5B,uBAoBW,SAAgBC,GAGnB,MAFAjlB,EAAA,EAAUklB,wBAAwBD,EAAU,YAEtC,IAAI7kB,MAAM,0BAvBxB,wBAmCW,SAAkB+c,GAGrB,MAFAnd,EAAA,EAAU0kB,YAAYvH,EAAM,QAEtB,IAAI/c,MAAM,4BAtCxB,K,yDCDa,EAAb,WAKI,iCALJ,qDAgBW,SAAoB+kB,GACvBnlB,EAAA,EAAU0kB,YAAYS,EAAK,OAC3BnlB,EAAA,EAAUU,wBAAwBykB,EAAIC,SAAU,OAEhD,IAAMC,EAA+C,IAAI,EAOnDC,EAAmBH,EAAII,KAAK3Z,QAAQ,KAC1C,IAAK,IAAM0Z,EACP,MAAM,IAAIllB,MAAM,4CAEpBilB,EAAaG,OAASL,EAAII,KAAKE,OAAO,EAAGH,GAIzC,IAAMI,EAAsBP,EAAIQ,SAAS7Z,YAAY,KAAO,EAC5D,IAAK,IAAM4Z,EACP,MAAM,IAAItlB,MAAM,2CAOpB,GAJAilB,EAAaO,MAAQT,EAAIQ,SAASF,OAAOC,GAGzCL,EAAaQ,gBAAkBV,EAAIW,aAAa/U,IAAI,yBAChD5Q,IAAcklB,EAAaQ,gBAC3B,MAAM,IAAIzlB,MAAM,sDAGpB,OAAOilB,IAhDf,uBA2DW,SAAiBO,GACpB5lB,EAAA,EAAUU,wBAAwBklB,EAAO,SAEzC,IAAMP,EAA+C,IAAI,EAEzD,OADAA,EAAaO,MAAQA,EACdP,IAhEf,8BAiFW,SAAwBQ,EAAyBD,EAAeJ,GACnExlB,EAAA,EAAUU,wBAAwBmlB,EAAiB,mBACnD7lB,EAAA,EAAUU,wBAAwBklB,EAAO,SACzC5lB,EAAA,EAAUU,wBAAwB8kB,EAAQ,UAE1C,IAAMH,EAA+C,IAAI,EAIzD,OAHAA,EAAaO,MAAQA,EACrBP,EAAaG,OAASA,EACtBH,EAAaQ,gBAAkBA,EACxBR,MA1Ff,KAmGa,EAAb,4HAAoD,G,0HCrF9B,GAAtB,kDAKI,qDALJ,yDAkBW,SAAwBQ,EAAyBL,GACpDxlB,EAAA,EAAUU,wBAAwBmlB,EAAiB,mBACnD7lB,EAAA,EAAUU,wBAAwB8kB,EAAQ,UAE1C,IAAMO,EAAmC,IAAI,GAG7C,OAFAA,EAAIC,WAAWrB,YAAYxhB,GAAA,EAAW8iB,4BAA6BJ,GACnEE,EAAIC,WAAWrB,YAAYxhB,GAAA,EAAW+iB,+BAAgCV,GAC/DO,IAzBf,oCA6CW,SAA8BI,EAA4BX,GAC7DxlB,EAAA,EAAUU,wBAAwBylB,EAAoB,sBACtDnmB,EAAA,EAAUU,wBAAwB8kB,EAAQ,UAE1C,IAAMO,EAAmC,IAAI,GAG7C,OAFAA,EAAIC,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkCD,GACxEJ,EAAIC,WAAWrB,YAAYxhB,GAAA,EAAW+iB,+BAAgCV,GAC/DO,IApDf,sBAsEW,SAAgBM,EAAeR,GAClC7lB,EAAA,EAAU0kB,YAAY2B,EAAU,YAEhC,IAAMC,EAA0C,IAAI,GAMpD,OALAA,EAAW3B,YAAYxhB,GAAA,EAAWojB,6BAA8BF,EAASG,SAAW,KAAOH,EAASjB,UAA8B,KAAlBiB,EAAS3P,KAAc,GAAK,IAAM2P,EAAS3P,YAEvJvW,IAAc0lB,GACdS,EAAW3B,YAAYxhB,GAAA,EAAW8iB,4BAA6BJ,GAE5DS,IA/Ef,0BAoGW,SAAoB1e,EAAeie,GACtC7lB,EAAA,EAAU0kB,YAAY9c,EAAU,YAChC5H,EAAA,EAAU0kB,YAAYmB,EAAiB,mBAEvC,IAAME,EAAmC,IAAI,GAG7C,OAFAA,EAAIC,WAAWrB,YAAYxhB,GAAA,EAAWsjB,iCAAkC7e,EAAS8e,MACjFX,EAAIC,WAAWrB,YAAYxhB,GAAA,EAAW8iB,4BAA6BJ,GAC5DE,MA3Gf,GAAsDY,GAAA,GA8LzC,GAAb,kDAII,+CACI,gBACKC,qBAAuB,IAAIC,GAAA,EAChC,EAAKC,aAAeC,EAAA,EAAaC,OAHrC,EAJJ,oDAkBI,SAA8BhmB,GAC1BhB,EAAA,EAAUU,wBAAwBM,EAAO,SAEzCO,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWijB,iCAAkCplB,KArB3F,qCA2CI,WACI,OAAOO,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAWA,GAAA,EAAW8jB,wCA5C3E,IA+BI,SAAqCjmB,GACjChB,EAAA,EAAUU,wBAAwBM,EAAO,SACzCO,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAW8jB,qCAAsCjmB,KAjC/F,2BAoDI,WACI,OAAOO,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAWA,GAAA,EAAW8iB,gCArD3E,wBA8DI,WACI,OAAQc,EAAA,EAAqBxlB,KAAKqlB,qBAAqB/B,YAAY,iCAA0B1kB,KA/DrG,IAwEI,SAAwBa,GACpBO,KAAKqlB,qBAAqBjC,YAAY,4BAA0BoC,EAAA,EAAa/lB,MAzErF,sBAkFI,WACI,OAAOO,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAW+jB,qCAnFhE,IA4FI,SAAsBlmB,GAClBO,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAW+jB,mCAAoClmB,KA7F7F,+BAuGW,SAAkBA,GACrBhB,EAAA,EAAUU,wBAAwBM,EAAO,SAEzC,IAAMmmB,EAAsB5lB,KAAK6lB,gBACjCD,EAAU5W,KAAKvP,GACfO,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWkkB,+CAAgDF,EAAUzT,KAAK,QA5GxH,2BAsHI,WAEI,YAAoHvT,IAAhHoB,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAWkkB,oDAAgDlnB,GAC1FoB,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAWkkB,gDAAgDxf,MAAM,KAEvG,KA3HnB,qBAsII,WACI,OAAOtG,KAAKsjB,YAAY1hB,GAAA,EAAWA,GAAA,EAAWmkB,4CAvItD,IAiJI,SAAqBtmB,GACjBhB,EAAA,EAAUU,wBAAwBM,EAAO,SAEzCO,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWmkB,yCAA0CtmB,KApJnG,kBA8JI,WACI,OAAOO,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAW+iB,kCA/JhE,sBAoKW,SAASqB,EAAoBC,EAAgBC,EAAqBC,GACrEnmB,KAAKojB,YAAYxhB,GAAA,EAAWA,GAAA,EAAWwkB,uCAAwCJ,GAC/EhmB,KAAKojB,YAAYxhB,GAAA,EAAWA,GAAA,EAAWykB,mCAAoCJ,GAC3EjmB,KAAKojB,YAAYxhB,GAAA,EAAWA,GAAA,EAAW0kB,uCAAwCJ,GAC/ElmB,KAAKojB,YAAYxhB,GAAA,EAAWA,GAAA,EAAW2kB,uCAAwCJ,KAxKvF,yBAoLW,SAAYxnB,EAAc0kB,GAC7B,OAAOrjB,KAAKqlB,qBAAqB/B,YAAY3kB,EAAM0kB,KArL3D,yBAgMW,SAAY1kB,EAA2Bc,GAC1CO,KAAKqlB,qBAAqBjC,YAAYzkB,EAAMc,KAjMpD,sBA2MI,WACI,OAAOO,KAAKqlB,uBA5MpB,mBAqNW,cArNX,gCAyNW,SAAmB1mB,EAAcc,EAAe+mB,GACnD,IAAMC,EAA+Cjd,KAAKQ,MAAMhK,KAAKqlB,qBAAqB/B,YAAY,iCAA+B,OAErImD,EAAkB9nB,GAAQc,EAE1BO,KAAKqlB,qBAAqBjC,YAAY,iCAA+B5Z,KAAKC,UAAUgd,MA9N5F,0BAiOW,SAAaC,GAChB1mB,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAW+kB,sCAAuCC,GAAA,EAAgBF,MAlOhH,gCAqOW,WACH1mB,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWilB,2CAA4C,UAtOrG,wCAwOW,WACH7mB,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWklB,iDAAkD,UAzO3G,6BA2OW,WACH9mB,KAAKqlB,qBAAqBjC,YAAY,8BAA4B,UA5O1E,mCA+OI,WACI,OAAOpjB,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAWmlB,wCAhPhE,IAmPI,SAAmCC,GAC/BhnB,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWmlB,sCAAuCC,KApPhG,oCAuPI,WACI,OAAOhnB,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAWqlB,qCAxPhE,IA2PI,SAAoCC,GAChClnB,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWqlB,mCAAoCC,KA5P7F,uCA+PI,WACI,OAAQ7U,GAAA,EAAoCrS,KAAKqlB,qBAAqB/B,YAAY1hB,GAAA,EAAWulB,+CAA2CvoB,KAhQhJ,IAmQI,SAAuCyN,GACnCrM,KAAKqlB,qBAAqBjC,YAAYxhB,GAAA,EAAWulB,0CAA2C9U,GAAA,EAA4BhG,QApQhI,GAAiD,I,oUCjL3B,GAAtB,WAYI,WAAsB+a,EAA0B3C,EAAgC4C,GAAqC,oBACjHrnB,KAAKonB,iBAA+BxoB,IAAhBwoB,EAA6BA,EAAc,EAAYE,6BAC3EtnB,KAAKyjB,cAAe,EACpBzjB,KAAKunB,eAAiB9C,EAAW+C,QACjCxnB,KAAKynB,sBAAwBJ,EAC7BrnB,KAAK0nB,4BAjBb,yCA0DW,SAAM5I,EAAiB6I,GAC1BlpB,EAAA,EAAUmpB,gBAAgB5nB,KAAKyjB,cAC/B,YAA0BzjB,KAAK6nB,SAAQ,GAAO/I,EAAI6I,KA5D1D,wBAoEI,WACI,OAAO3nB,KAAK8nB,WArEpB,qBAkFoB,SAAQC,G,yHAChB/nB,KAAKyjB,a,oDAITzjB,KAAKyjB,cAAe,GAEhBsE,E,oBACI/nB,KAAK8nB,S,gBACL,O,SAAM9nB,KAAK8nB,SAASE,YAAYzO,U,OAChC,O,SAAMvZ,KAAK8nB,SAASD,U,kDA5FpC,uCA2Ic,WAEN,IAAII,EAAgC,qBAAXva,OAA0B,UAAY,OAC3Dwa,EAAS,UACTC,EAAY,UAES,qBAAdva,YACPqa,EAAaA,EAAa,IAAMra,UAAUwa,SAC1CF,EAASta,UAAUya,UACnBF,EAAYva,UAAU0a,YAG1B,IAAMC,EAAmBvoB,KAAKwoB,uBAC1B,IAAI,IACA,IAAI,IAAQ,IAAI,IAAGP,EAAYC,EAAQC,MAE/CnoB,KAAK8nB,SAAW9nB,KAAKyoB,wBACjBC,EAAWC,sBAAsB3oB,KAAKunB,gBACtCvnB,KAAKynB,sBACLznB,KAAKonB,YACLmB,KA/JZ,oCAkKoB,SAAuBK,G,6HAInC,OAHAnqB,EAAA,EAAUmpB,gBAAgB5nB,KAAKyjB,cACzBe,EAAyC,IAAI,I,SAE7CxkB,KAAK6oB,qB,OACX,O,SAAM7oB,KAAK8nB,SAASgB,UAAUF,EAAiBpE,EAAI/L,QAAS+L,EAAI5M,Q,OACxB,O,SAAM4M,EAAI/M,Q,OAClD,OADM5X,E,iBACAG,KAAK6oB,qB,iCAEJhpB,G,mDA3Kf,iDA+KoB,SAAoC+oB,G,qHAGhD,OAFAnqB,EAAA,EAAUmpB,gBAAgB5nB,KAAKyjB,c,SAEzBzjB,KAAK6oB,qB,OACX,O,SAAM7oB,KAAK8nB,SAASgB,UAAUF,OAAiBhqB,OAAWA,G,kDAnLlE,gDAsLoB,W,qHAEZ,OADAH,EAAA,EAAUmpB,gBAAgB5nB,KAAKyjB,c,SACzBzjB,KAAK6oB,qB,kDAxLnB,gCA2LoB,W,yHACR7oB,KAAK8nB,S,gBACL,O,SAAM9nB,KAAK8nB,SAASiB,kB,oFA7LhC,6BAwGW,WACH,OAAOC,GAAA,EAAsBC,uBAzGrC,6BAuHW,SAAuBC,GAC1BF,GAAA,EAAsBC,qBAAuBC,IAxHrD,mCAkMc,SAA6BzE,GACnC,IAAMH,EAAkBG,EAAWnB,YAAY1hB,GAAA,EAAW8iB,iCAA6B9lB,GAavF,OAZwB0lB,GAAuC,KAApBA,EACvC,IAAI6E,GAAA,EAAuC7E,GAC3C,IAAI8E,GAAA,GACA,SAACC,GACG,IAAMzE,EAAqBH,EAAWnB,YAAY1hB,GAAA,EAAWijB,sCAAkCjmB,GAC/F,OAAOub,QAAQ1B,QAAQmM,MAE3B,SAACyE,GACG,IAAMzE,EAAqBH,EAAWnB,YAAY1hB,GAAA,EAAWijB,sCAAkCjmB,GAC/F,OAAOub,QAAQ1B,QAAQmM,UA7M3C,K,6UCDa,GAAb,kDASI,WAAmB0E,EAA4BlC,GAAyB,0BACpE,IAAMmC,EAAqCD,EADyB,OAEpE7qB,EAAA,EAAU0kB,YAAYoG,EAAkB,gBAExC9qB,EAAA,EAAUU,wBACNoqB,EAAiB9E,WAAWnB,YAAY1hB,GAAA,EAAW8jB,sCACnD9jB,GAAA,EAAWA,GAAA,EAAW8jB,wCAE1B,cAAM0B,EAAamC,EAAiB9E,WAAY,IAAI+E,GAAA,IAC/CC,wBAAyB,EATsC,EAT5E,4CAkEI,WAGI,OAFAhrB,EAAA,EAAUmpB,gBAAgB5nB,KAAKypB,wBAExBzpB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAW+jB,mCAAoC,0CArE1F,8BA+EI,WACI,OAAO3lB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAhFtD,IA0FI,SAA8B6E,GAC1BjrB,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkC6E,KA5FjF,qCAsGI,WAGI,OAFAjrB,EAAA,EAAUmpB,gBAAgB5nB,KAAKypB,wBAExBzpB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAW8jB,wCAzGtD,wBAmHI,WAGI,OAFAjnB,EAAA,EAAUmpB,gBAAgB5nB,KAAKypB,wBAE3BzpB,KAAKykB,WAAWnB,YAAY,4BAA0BkC,EAAA,EAAaA,EAAA,EAAaC,WAAaD,EAAA,EAAaA,EAAA,EAAaC,QAChHD,EAAA,EAAaC,OAEbD,EAAA,EAAamE,WAzHhC,sBAoII,WACI,OAAO3pB,KAAKunB,iBArIpB,gCAoJW,SAAmBzI,EAA2CvN,GACjE,YAA0BvR,KAAK4pB,uBAAuB,IAAgBC,aAAc/K,EAAIvN,KArJhG,6CAiKW,SAAgCuN,EAAiBvN,GACpD,YAA0BvR,KAAK8pB,oCAAoC,IAAgBC,cAAejL,EAAIvN,KAlK9G,4CA6KW,SAA+BuN,EAAiBvN,GACnD,YAA0BvR,KAAKgqB,qCAAsClL,EAAIvN,KA9KjF,0CA+LW,SAA6BsJ,EAAgCiE,EAAiBvN,GACjF9S,EAAA,EAAU0kB,YAAYtI,EAAO,SAEvBtJ,GACFA,EAAI,0BAnMhB,yCAiNW,SAA4BuN,EAAiBvN,GAC1CuN,GACFA,MAnNZ,mBA6NW,SAAMA,EAAiB6I,GAC1BlpB,EAAA,EAAUmpB,gBAAgB5nB,KAAKypB,wBAC/B,YAA0BzpB,KAAK6nB,SAAQ,GAAO/I,EAAI6I,KA/N1D,qBAyOoB,SAAQI,GAAkB,W,sOAClC/nB,KAAKypB,uB,qDAIL1B,E,gBAEA,OADA/nB,KAAKypB,wBAAyB,E,SACxBzpB,KAAK6oB,qB,OAGf,O,SAAM,EAAMhB,QAAO,UAACE,G,kDAnP5B,oCAsPc,SAAuBuB,GAC7B,OAAO,IAAIW,EAAA,EACPX,EACAtpB,KAAKykB,cAzPjB,qCA4Pc,SACNyF,EACA7C,EACAD,EACAmB,GACA,IAAM4B,EAA8B/C,EACpC,OAAO,IAAIgD,GAAA,EAAwBF,EAAgB7C,EAAmB8C,EAAY5B,EAAkBvoB,SAlQ5G,yBA4BW,SAAkBspB,EAA4Be,EAAgEjD,GACjH,IAAMmC,EAAqCD,EAG3C,OAFAe,EAA+B5F,WAAW6F,QAAQf,EAAiB9E,YAChD,IAAI8F,EAAiBjB,EAAclC,OA/B9D,GAAsC,I,qUCCzB,GAAb,kDAYI,WAAmBkC,EAA4BlC,GAAyB,0BACpE3oB,EAAA,EAAUK,uBAAuBwqB,EAAc,gBAC/C,IAAMa,EAA+Bb,EAF+B,OAGpE7qB,EAAA,EAAUK,uBAAuBqrB,EAAY,iBAE7C,cAAM/C,EAAa+C,EAAW1F,WAAY,IAAI+F,GAAA,IACzCC,iBAAmB,GACxB,EAAKC,mBAAqB,GAE1B,EAAKC,8BAA+B,EACpC,EAAKpD,eAAiB4C,EAAW1F,WAEjChmB,EAAA,EAAUU,wBAAwB,EAAKslB,WAAWnB,YAAY1hB,GAAA,EAAW8jB,sCAAuC9jB,GAAA,EAAWA,GAAA,EAAW8jB,uCAZlE,EAZ5E,2DA0DI,WAGI,OAFAjnB,EAAA,EAAUmpB,gBAAgB5nB,KAAK2qB,8BAExB3qB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAW8jB,wCA7DtD,8BAuEI,WACI,OAAO1lB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAxEtD,IAmFI,SAA8BplB,GAC1BO,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkCplB,KApFjF,sBA+FI,WACI,OAAOO,KAAKunB,iBAhGpB,gCA+GW,SAAmBzI,EAA2CvN,GAGjE,GAFA9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK2qB,8BAEqB,IAAhDnyB,OAAOyR,KAAKjK,KAAK0qB,oBAAoBvyB,aAAgByG,IAAcoB,KAAK4qB,mBAAoB,CAC5F,IAAM1W,EAA0BlU,KAAK6qB,qBAErC7qB,KAAK8nB,SAASgD,cAAcC,WAAW,SAAU7W,EAAQ8W,QACzDhrB,KAAK8nB,SAASmD,eAAeC,oBAAoBhX,EAAQiX,mBAEbnrB,KAAK8nB,SACtCsD,WAAWprB,KAAK0qB,mBAAoB1qB,KAAK4qB,oBAGxD,YAA0B5qB,KAAK4pB,uBAAuB,IAAgBC,aAAc/K,EAAIvN,KA5HhG,6CAwIW,SAAgCuN,EAAiBvN,GACpD,GAAoD,IAAhD/Y,OAAOyR,KAAKjK,KAAK0qB,oBAAoBvyB,aAAgByG,IAAcoB,KAAK4qB,mBAAoB,CAC5F,IAAM1W,EAA0BlU,KAAK6qB,qBAErC7qB,KAAK8nB,SAASgD,cAAcC,WAAW,SAAU7W,EAAQ8W,QACzDhrB,KAAK8nB,SAASmD,eAAeC,oBAAoBhX,EAAQiX,mBAEbnrB,KAAK8nB,SACtCsD,WAAWprB,KAAK0qB,mBAAoB1qB,KAAK4qB,oBAGxD,YAA0B5qB,KAAK8pB,oCAAoC,IAAgBC,cAAejL,EAAIvN,KAnJ9G,4CA8JW,SAA+BuN,EAAiBvN,GACnD,YAA0BvR,KAAKgqB,qCAAsClL,EAAIvN,KA/JjF,0CA8KW,SAA6BsJ,EAAgCiE,EAAiBvN,GACjF9S,EAAA,EAAU0kB,YAAYtI,EAAO,SAEvBtJ,GACFA,EAAI,0BAlLhB,yCAgMW,SAA4BuN,EAAiBvN,GAC1CuN,GACFA,MAlMZ,uBA8MW,SAAUuM,EAAsBC,GACnC7sB,EAAA,EAAUmpB,gBAAgB5nB,KAAK2qB,8BAC/BlsB,EAAA,EAAUU,wBAAwBmsB,EAAU,YAC5C7sB,EAAA,EAAUU,wBAAwBksB,EAAc,gBAEhDrrB,KAAKyqB,iBAAiBzb,KAAK,CAACsc,EAAUD,MAnN9C,wCAiOW,SAA2BC,EAAkBzQ,EAAmC0Q,GACnF9sB,EAAA,EAAUmpB,gBAAgB5nB,KAAK2qB,8BAC/BlsB,EAAA,EAAUU,wBAAwBmsB,EAAU,YAC5C7sB,EAAA,EAAU0kB,YAAYtI,EAAO,SAE7B,IAAM2Q,EAA4C3Q,EAClDpc,EAAA,EAAUU,wBAAwBqsB,EAAUnH,MAAO,eAEnDrkB,KAAK0qB,mBAAmBY,GAAY,IAAIG,GAAA,EAAcD,EAAWD,KAzOzE,2BAsPW,SAAc1Q,EAAmCyQ,GACpD7sB,EAAA,EAAU0kB,YAAYtI,EAAO,SAE7B,IAAM2Q,EAA4C3Q,EAClDpc,EAAA,EAAUU,wBAAwBqsB,EAAUnH,MAAO,eAEnDrkB,KAAK4qB,mBAAqB,IAAIa,GAAA,EAAcD,EAAWF,KA5P/D,mBAqQW,SAAMxM,EAAiB6I,GAC1BlpB,EAAA,EAAUmpB,gBAAgB5nB,KAAK2qB,8BAE/B,YAA0B3qB,KAAK6nB,SAAQ,GAAO/I,EAAI6I,KAxQ1D,oCA2Qc,SAAuB2B,GAC7B,OAAO,IAAIW,EAAA,EAAiBX,EAActpB,KAAKykB,cA5QvD,qCA+Qc,SAAwByF,EAAiC7C,EAAuCD,EAA0BmB,GAChI,IAAMmD,EAA6BtE,EACnC,OAAO,IAAIuE,GAAA,EAAwBzB,EAAgB7C,EAAmBqE,EAAWnD,EAAkBvoB,QAjR3G,qBAoRoB,SAAQ+nB,GAAkB,W,sOAClC/nB,KAAK2qB,6B,qDAIL5C,E,gBAEA,OADA/nB,KAAK2qB,8BAA+B,E,SAC9B,EAAM9C,QAAO,UAACE,G,kDA3RhC,gCA+RY,WACJ,IAAI1D,EACAJ,EACAK,EACEsH,EAAwB,QAE1BhtB,IAAcoB,KAAK4qB,qBACnBvG,EAAQrkB,KAAK4qB,mBAAmBY,UAAUnH,MAC1CJ,EAASjkB,KAAK4qB,mBAAmBY,UAAUvH,OAC3CK,EAAkBtkB,KAAK4qB,mBAAmBY,UAAUlH,iBAIxD,cAAuB9rB,OAAOyR,KAAKjK,KAAK0qB,oBAAxC,eAA6D,CAAxD,IAAMY,EAAQ,KACTO,EAA+B7rB,KAAK0qB,mBAAmBY,GAG7D,QAAc1sB,IAAVylB,EACAA,EAAQwH,EAAcL,UAAUnH,WAEhC,GAAIA,IAAUwH,EAAcL,UAAUnH,MAClC,MAAM,IAAIxlB,MAAM,gDAIxB,QAAeD,IAAXqlB,EACAA,EAAS4H,EAAcL,UAAUvH,YAEjC,GAAIA,IAAW4H,EAAcL,UAAUvH,OACnC,MAAM,IAAIplB,MAAM,mEAIxB,QAAwBD,IAApB0lB,EACAA,EAAkBuH,EAAcL,UAAUlH,qBAE1C,GAAIA,IAAoBuH,EAAcL,UAAUlH,gBAC5C,MAAM,IAAIzlB,MAAM,kDAIxB,IAAMitB,EAAkB,QAAUzH,EAAQ,eAAiBiH,EAC3DM,EAAY5c,KAAK8c,GAGrB,MAAO,CACHd,OAAQ,CACJ/R,GAAIoL,EACJ3rB,SAA0BkG,IAApB0lB,EAAiCtkB,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWA,GAAA,EAAW8iB,8BAAgCJ,EAC7HyH,SAAU,QAEdZ,uBAAoBvsB,IAAcoB,KAAK4qB,mBAAsBgB,EAAc,CAAC,QAAUvH,EAAQ,oBAlV1G,GAAsC,I,gDCbhB,GAAtB,kCA2Ca,GAAb,WAKI,WAAYxU,GAA6B,+BACrC7P,KAAKgsB,sBAAwBnc,EAC7B7P,KAAKunB,eAAiB,IAAIjC,GAAA,EACpBtlB,KAAKgsB,sBAAsBC,QAAQhzB,GAAA,EAAYizB,eACjDlsB,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWuqB,iBAAkBnsB,KAAKgsB,sBAAsBC,QAAQhzB,GAAA,EAAYizB,eAGhH1zB,OAAOyR,KAAKjK,KAAKgsB,sBAAsBC,SAASlhB,SAAQ,SAACrB,EAAgB+S,EAAexd,GACpF,EAAKsoB,eAAenE,YAAY1Z,EAAQ,EAAKsiB,sBAAsBC,QAAQviB,OAbvF,sCAoBI,WACI,OAAO1J,KAAKgsB,sBAAsBC,QAAQzzB,OAAOyR,KAAKjK,KAAKgsB,sBAAsBC,SAASG,MAAK,SAAC1zB,GAAD,OAAiBA,EAAI2zB,gBAAkB,OAAOA,oBArBrJ,yBA4BI,WACI,OAAOrsB,KAAKgsB,sBAAsBM,cAAgB,KAAYC,OA7BtE,2BAoCI,WACI,OAAOvsB,KAAKgsB,sBAAsBM,cAAgB,KAAYE,SArCtE,uBA6CI,WACI,OAAOxsB,KAAKgsB,sBAAsBS,WA9C1C,yBAoDI,WACI,OAAOzsB,KAAKgsB,sBAAsBU,aArD1C,sBA4DI,WACI,OAAO1sB,KAAKunB,iBA7DpB,sBAmEW,WACH,MAAO,OApEf,KCvDa,GAAb,4HAAyCoF,EAAA,GCD5B,GAAb,WAII,WAAY9c,GAA0B,oBAClC7P,KAAKgsB,sBAAwBnc,EALrC,yCAWI,WACI,OAAO7P,KAAKgsB,wBAZpB,sBAkBW,WACH,MAAO,YAAchsB,KAAKgsB,sBAAsB1c,eAnBxD,KCEa,GAAb,kDASI,WAAmBsd,EAAejuB,EAAckuB,GAAkB,kCAC9D,cAAMA,IACDC,eAAiBF,EACtB,EAAKG,cAAgBpuB,EAHyC,EATtE,4CAeI,WACI,OAAOqB,KAAK8sB,iBAhBpB,qBAmBI,WACI,OAAO9sB,KAAK+sB,kBApBpB,GAAsCJ,EAAA,GC8BzB,GAAb,8FA2CW,SAAe7N,EAAiBvN,GACnC,YAA0BvR,KAAKgtB,iBAAiBlX,UAAWgJ,EAAIvN,KA5CvE,6BAqDW,SAAgBuN,EAAiBvN,GACpC,GAAIvR,KAAKgtB,4BAA4BvN,EAAA,EACjC,MAAM,IAAI5gB,MAAM,uEAEhB,YAA2BmB,KAAKgtB,iBAA2CnW,aAAciI,EAAIvN,KAzDzG,gCAoEW,SAAmB0b,EAAcC,EAAsBC,GAG1D,GAFA1uB,EAAA,EAAUU,wBAAwB+tB,EAAc,gBAE5CltB,KAAKgtB,4BAA4BhE,GAAA,EAAuB,CACxD,GAA2B,mBAAvBiE,EAAKZ,cACL,MAAM,IAAIxtB,MAAM,oFAEfmB,KAAKgtB,iBAA2ClC,cAAcC,WAAWmC,EAAcC,QAEzF,GAAIntB,KAAKgtB,4BAA4BvN,EAAA,EAAsB,CAC9D,GAA2B,sBAAvBwN,EAAKZ,cACL,MAAM,IAAIxtB,MAAM,wFAEfmB,KAAKgtB,iBAA0CI,iBAAiBrC,WAAWmC,EAAcC,MAjF1G,8BA8FW,SAAiBF,EAAcI,EAA+BC,EAAsBxd,GACvF,YAA0B9P,KAAKgtB,iBAAiBO,mBAAmBN,EAAMI,GAAUC,EAASxd,KA/FpG,mBAgIW,cAhIX,yBAoIY,WAAW,WACf9P,KAAKwtB,kBAAoBxtB,KAAKgtB,iBAAiBS,iBAAiBvU,QAAO,SAACwU,GACvC,+BAAzBA,EAAgB/uB,KACV,EAAKgvB,WACP,EAAKA,UAAU,IAAI,GAAoBD,EAAgBE,eAE3B,0BAAzBF,EAAgB/uB,KACjB,EAAKkvB,cACP,EAAKA,aAAa,IAAI,GAAoBH,EAAgBE,eAE9B,+BAAzBF,EAAgB/uB,KACjB,EAAKmvB,aACP,EAAKA,YAAY,IAAI,GAA2B,IAAI,GAAuBJ,EAA+C7d,WAE9F,mCAAzB6d,EAAgB/uB,MACjB,EAAKovB,iBACP,EAAKA,gBAAgB,IAAI,GAA2B,IAAI,GAAuBL,EAAmD7d,cAK9I7P,KAAKguB,yBAA2BhuB,KAAKgtB,iBAAiBiB,cAAc/U,QAAO,SAAChP,GAClE,EAAKgkB,wBACP,EAAKA,uBAAuB,IAAI,GAAiBhkB,EAAEikB,WAAYjkB,EAAEvL,aA3JjF,6BAUW,SAAsByvB,GACzB,IAAMC,EAAkCD,EAAWE,aAE7C9J,EAAkB,IAAI+J,EAI5B,OAFA/J,EAAIwI,iBAAmBqB,EACvB7J,EAAIgK,cACGhK,IAjBf,6BAyBW,SAAuBiK,GAC1B,IAAMC,EAAkCD,EAAYH,aAE9C9J,EAAkB,IAAI+J,EAI5B,OAFA/J,EAAIwI,iBAAmB0B,EACvBlK,EAAIgK,cACGhK,MAhCf,K,uSCTa,GAAb,kDASI,WAAmB8E,EAAuClC,GAAyB,0BAC/E,IAAM+C,EAAab,EAD4D,OAE/E7qB,EAAA,EAAU0kB,YAAYgH,EAAY,iBAElC,cAAM/C,EAAa+C,EAAW1F,WAAY,IAAIkK,GAAA,IAEzCC,mCAAoC,OAE2DhwB,IAAhG,EAAK6lB,WAAWnB,YAAY1hB,GAAA,EAAWmkB,8CAA0CnnB,IACjFH,EAAA,EAAUU,wBACN,EAAKslB,WAAWnB,YAAY1hB,GAAA,EAAWmkB,0CACvCnkB,GAAA,EAAWA,GAAA,EAAWmkB,2CAG9BtnB,EAAA,EAAUU,wBACN,EAAKslB,WAAWnB,YAAY1hB,GAAA,EAAWkkB,gDACvClkB,GAAA,EAAWA,GAAA,EAAWkkB,iDAE1BrnB,EAAA,EAAUU,wBAAwB,EAAKslB,WAAWnB,YAC9C1hB,GAAA,EAAW8jB,sCACX9jB,GAAA,EAAWA,GAAA,EAAW8jB,uCApBqD,EATvF,2DAwEI,WAGI,OAFAjnB,EAAA,EAAUmpB,gBAAgB5nB,KAAK4uB,mCAExB5uB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAW8jB,wCA3EtD,2BAsFI,WAGI,OAFAjnB,EAAA,EAAUmpB,gBAAgB5nB,KAAK4uB,mCAExB5uB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWkkB,gDAAgDxf,MAAM,OAzF5G,qBAmGI,WAGI,OAFA7H,EAAA,EAAUmpB,gBAAgB5nB,KAAK4uB,mCAExB5uB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWmkB,8CAA0CnnB,KAtGhG,8BAgHI,WACI,OAAOoB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAjHtD,IA2HI,SAA8BplB,GAC1BO,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkCplB,KA5HjF,sBAsII,WACI,OAAOO,KAAKunB,iBAvIpB,gCAsJW,SAAmBzI,EAAgDvN,GACtE9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK4uB,mCAC/B,YAA0B5uB,KAAK4pB,uBAAuB,IAAgBG,cAAejL,EAAIvN,KAxJjG,6CAoKW,SAAgCuN,EAAiBvN,GACpD,YAA0BvR,KAAK8pB,oCAAoC,IAAgBC,cAAejL,EAAIvN,KArK9G,4CAgLW,SAA+BuN,EAAiBvN,GACnD,YAA0BvR,KAAKgqB,qCAAsClL,EAAIvN,KAjLjF,kCA4LW,SAAqBsd,GAExB,GADApwB,EAAA,EAAUK,uBAAuB+vB,EAAM,+BACmEjwB,IAAtGoB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWkkB,oDAAgDlnB,GAA0B,CACjH,IAAMgnB,EAAsB5lB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWkkB,gDAAgDxf,MAAM,KACnHmW,EAAgBmJ,EAAUvb,QAAQwkB,GACpCpS,GAAS,IACTmJ,EAAUkJ,OAAOrS,EAAO,GACxBzc,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWkkB,+CAAgDF,EAAUzT,KAAK,MACtGnS,KAAK+uB,gBAAgBnJ,OApMrC,+BAiNW,SAAkBiJ,GACrBpwB,EAAA,EAAUK,uBAAuB+vB,EAAM,wBACvC,IAAIjJ,EAAsB,QACgFhnB,IAAtGoB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWkkB,oDAAgDlnB,IACvFgnB,EAAY5lB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWkkB,gDAAgDxf,MAAM,MAC1F0oB,SAASH,KACpBjJ,EAAU5W,KAAK6f,GACf7uB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWkkB,+CAAgDF,EAAUzT,KAAK,QAG1GnS,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWkkB,+CAAgD+I,GACvFjJ,EAAY,CAACiJ,IAEjB7uB,KAAK+uB,gBAAgBnJ,KA9N7B,mBAuOW,SAAM9G,EAAiB6I,GAC1BlpB,EAAA,EAAUmpB,gBAAgB5nB,KAAK4uB,mCAC/B,YAA0B5uB,KAAK6nB,SAAQ,GAAO/I,EAAI6I,KAzO1D,0BAmPW,cAnPX,6BA4PiB,W,uCAAmC,oHA5PpD,qBA8PoB,SAAQI,GAAkB,W,sOAClC/nB,KAAK4uB,kC,oDAIT5uB,KAAK4uB,mCAAoC,GAErC7G,E,gBACA,O,SAAM/nB,KAAK6oB,qB,OACX,O,SAAM,EAAMhB,QAAO,UAACE,G,kDAvQhC,oCA2Qc,SAAuBuB,GAC7B,OAAO,IAAIW,EAAA,EAAiBX,EAActpB,KAAKykB,cA5QvD,qCA+Qc,SACNyF,EACA7C,EACAD,EACAmB,GAEA,IAAM4B,EAA8B/C,EAEpC,OAAO,IAAI6H,GAAA,EAA6B/E,EAAgB7C,EAAmB8C,EAAY5B,EAAkBvoB,QAvRjH,6BA0RY,SAAgB4lB,GACpB,IAAMsJ,EAAmB,GAAWC,eAAenvB,MAC7CkvB,IACFA,EAAKE,mBAAmB,iBAAkB,qBAAsB,CAACC,GAAIzJ,IACrEsJ,EAAKI,iBAAiB,QAAS9lB,KAAKC,UAAU,CAC1CwP,GAAI,cACJta,KAAM,iBACN0wB,GAAIzJ,UAjSpB,GAA2C,I,WlB1B3C,SAAYjK,GAMR,qCAOA,qDAOA,mDApBJ,CAAYA,MAAa,K,0BmBGZ,GAAb,WAQI,WAAoB3C,GAAqB,oBACrChZ,KAAKuvB,WAAavW,EAT1B,wCAgDI,WACI,OAAOhZ,KAAKuvB,cAjDpB,yBAqBW,SAAkB1vB,GACrB,IAAM2vB,EAAmCC,GAAA,EAAmBC,SAAS7vB,EAAO+sB,MAExE5T,EAAwB2C,EAAcgU,cAE1C,OAAQH,EAAaI,mBACjB,KAAK,KAAkBC,cACnB7W,EAAS2C,EAAcmU,qBACvB,MACJ,KAAK,KAAkBC,sBACnB/W,EAAS2C,EAAcoU,sBACvB,MACJ,QACI/W,EAAS2C,EAAcgU,cAI/B,OAAO,IAAIK,EAAehX,OAtClC,K,oBCEa,GAAb,WAWI,WAAsBA,EAA4BiX,EAAsB1qB,GAAgC,oBACpGvF,KAAKuvB,WAAavW,EAClBhZ,KAAKkwB,iBAAmBD,EACxBjwB,KAAKmwB,cAAgB5qB,EAd7B,wCAwBI,WACI,OAAOvF,KAAKuvB,aAzBpB,wBAmCI,WACI,OAAOvvB,KAAKkwB,mBApCpB,qBA4CI,WACI,OAAOlwB,KAAKmwB,kBA7CpB,K,kBCIa,GAAb,kDAEI,WAAoBnX,EAA4BiX,EAAsB1qB,GAAgC,uCAC5FyT,EAAQiX,EAAc1qB,GAHpC,mDAcW,SAAkB1F,GACrB,IAAImZ,EAASoX,EAAA,EAAmBvxB,MAC5B0G,EAAmC,KAAsB8qB,QAE7D,GAAIxwB,aAAkBywB,EAAA,GAAuBzwB,EAAO+sB,KAAM,CACtD,IAAM4C,EAAmCC,GAAA,EAAmBC,SAAS7vB,EAAO+sB,MAC5E5T,EAASuX,GAAA,EAAgBC,0BAA0BhB,EAAaI,mBAOpE,OAJM/vB,EAAO4kB,aACTlf,EAAa,KAA8B1F,EAAO4kB,WAAWnB,YAAY,qCAAmC,KAAsB,KAAsB+M,YAGrJ,IAAII,EAAoBzX,EAAQnZ,EAAOowB,cAAgBM,GAAA,EAAgBG,0BAA0BnrB,GAAYA,OA3B5H,GAAyC,ICD5B,GAAb,WAGI,WAAoBorB,GAAgC,oBAChD3wB,KAAK4wB,mBAAqBD,EAAU1F,eAJ5C,6CAqBW,SAAU4F,GACb7wB,KAAK4wB,mBAAmBE,UAAUD,KAtB1C,wBA6BW,SAAWE,GACd/wB,KAAK4wB,mBAAmBE,UAAUC,KA9B1C,mBAoCW,WACH/wB,KAAK4wB,mBAAmBI,kBArChC,6BAWW,SAAsB5C,GAGzB,OAAO,IAAI6C,EAF6B7C,EAAWE,kBAZ3D,K,SCJa,GAAb,kDAKI,qDALJ,yDAoBW,SAAwB4C,EAAsBjN,EAAgBkN,GACjE1yB,EAAA,EAAUU,wBAAwB+xB,EAAc,gBAChDzyB,EAAA,EAAUU,wBAAwB8kB,EAAQ,UAE1C,IAAMmN,EAAyC,IAAIC,GAAA,EAWnD,OAVAD,EAAmBhO,YACfxhB,GAAA,EAAW0vB,wBACXD,GAAA,EAAoBE,YAAYC,cACpCJ,EAAmBhO,YAAYxhB,GAAA,EAAW8iB,4BAA6BwM,GACvEE,EAAmBhO,YAAYxhB,GAAA,EAAW+iB,+BAAgCV,GAEtEkN,GACAC,EAAmBhO,YAAYxhB,GAAA,EAAW6vB,2BAA4BN,GAGnEC,IAnCf,oCAwDW,SACHxM,EAA4BX,EAAgBkN,GAE5C1yB,EAAA,EAAUU,wBAAwBylB,EAAoB,sBACtDnmB,EAAA,EAAUU,wBAAwB8kB,EAAQ,UAE1C,IAAMmN,EAAyC,IAAIC,GAAA,EAWnD,OAVAD,EAAmBhO,YACfxhB,GAAA,EAAW0vB,wBACXD,GAAA,EAAoBE,YAAYC,cACpCJ,EAAmBhO,YAAYxhB,GAAA,EAAWijB,iCAAkCD,GAC5EwM,EAAmBhO,YAAYxhB,GAAA,EAAW+iB,+BAAgCV,GAEtEkN,GACAC,EAAmBhO,YAAYxhB,GAAA,EAAW6vB,2BAA4BN,GAGnEC,IAzEf,sBAgGW,SACHpN,EACAM,EACA6M,GAEA1yB,EAAA,EAAUK,uBAAuBklB,EAAM,QACvC,IAAM0N,EAAoB1N,aAAgBpP,IAAMoP,EAAO,IAAIpP,IAAJ,gBAAiBoP,EAAjB,4BACvDvlB,EAAA,EAAUK,uBAAuB4yB,EAAc,gBAE/C,IAAMN,EAAyC,IAAIC,GAAA,EAUnD,OATAD,EAAmBhO,YACfxhB,GAAA,EAAW0vB,wBACXD,GAAA,EAAoBE,YAAYC,cACpCJ,EAAmBhO,YAAYxhB,GAAA,EAAWojB,6BAA8B0M,EAAapiB,iBAEjF1Q,IAAc0lB,GACd8M,EAAmBhO,YAAYxhB,GAAA,EAAW8iB,4BAA6BJ,GAGpE8M,IAnHf,0BAsIW,SAAoB/qB,EAAeie,GACtC7lB,EAAA,EAAU0kB,YAAY9c,EAAU,YAEhC,IAAM+qB,EAAyC,IAAIC,GAAA,EAUnD,OATAD,EAAmBhO,YACfxhB,GAAA,EAAW0vB,wBACXD,GAAA,EAAoBE,YAAYC,cACpCJ,EAAmBhO,YAAYxhB,GAAA,EAAWsjB,iCAAkC7e,EAASiJ,iBAEjF1Q,IAAc0lB,GACd8M,EAAmBhO,YAAYxhB,GAAA,EAAW8iB,4BAA6BJ,GAGpE8M,MAnJf,GAAwCC,GAAA,GCA3B,GAAb,kDAKI,qDALJ,+CA+EI,WACI,OAAOrxB,KAAKsjB,YAAY1hB,GAAA,EAAW6vB,6BAhF3C,IAmEI,SAAyBhyB,GACrBhB,EAAA,EAAUU,wBAAwBM,EAAO,SACzCO,KAAKojB,YAAYxhB,GAAA,EAAW6vB,2BAA4BhyB,MArEhE,+BAmBW,SAAwBkyB,EAAuBT,EAAsBjN,GACxExlB,EAAA,EAAUU,wBAAwBwyB,EAAe,iBACjDlzB,EAAA,EAAUU,wBAAwB+xB,EAAc,gBAChDzyB,EAAA,EAAUU,wBAAwB8kB,EAAQ,UAE1C,IAAM2N,EAA6C,IAAIP,GAAA,EAKvD,OAJAO,EAAqBxO,YAAYxhB,GAAA,EAAW0vB,wBAAyBD,GAAA,EAAoBE,YAAYM,gBACrGD,EAAqBxO,YAAYxhB,GAAA,EAAW6vB,2BAA4BE,GACxEC,EAAqBxO,YAAYxhB,GAAA,EAAW8iB,4BAA6BwM,GACzEU,EAAqBxO,YAAYxhB,GAAA,EAAW+iB,+BAAgCV,GACrE2N,IA7Bf,oCA+CW,SAA8BD,EAAuB/M,EAA4BX,GACpFxlB,EAAA,EAAUU,wBAAwBwyB,EAAe,iBACjDlzB,EAAA,EAAUU,wBAAwBylB,EAAoB,sBACtDnmB,EAAA,EAAUU,wBAAwB8kB,EAAQ,UAE1C,IAAM2N,EAA6C,IAAIP,GAAA,EAKvD,OAJAO,EAAqBxO,YAAYxhB,GAAA,EAAW0vB,wBAAyBD,GAAA,EAAoBE,YAAYM,gBACrGD,EAAqBxO,YAAYxhB,GAAA,EAAW6vB,2BAA4BE,GACxEC,EAAqBxO,YAAYxhB,GAAA,EAAWijB,iCAAkCD,GAC9EgN,EAAqBxO,YAAYxhB,GAAA,EAAW+iB,+BAAgCV,GACrE2N,MAzDf,GAA0CP,GAAA,G,+CCI7B,GAAb,iG,2BAOW9xB,OAAS,SACZuyB,EACAC,EACAnE,GAEA,IAAM+D,EAAwBG,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAW6vB,2BAA4B,IAC7FQ,EAAqBH,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAW0vB,yBAC9DrN,EAAiB6N,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAW+iB,gCAC1DqC,EAAmB8K,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAW8jB,qCAAsC,SAClGwM,EAA4BJ,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAWuwB,yCAA0C,QAE/GC,EAAyC,GAC/CA,EAAYn5B,GAAA,EAAYizB,cAAgB0B,EACxCwE,EAAYC,GAAA,EAAoBC,QAAUR,EAAOE,WAAW1O,YAAY,4BAA0BkC,EAAA,EAAaA,EAAA,EAAaC,SAAS4G,cACrI+F,EAAYC,GAAA,EAAoBE,UAAYvL,EAC5CoL,EAAYC,GAAA,EAAoBG,0BAA4BN,EACxDP,IACAS,EAAYC,GAAA,EAAoBI,OAASd,EACrCM,IAAeZ,GAAA,EAAoBE,YAAYM,iBAC/CO,EAAYn5B,GAAA,EAAYy5B,qBAAuBf,IAIvD,IAAMgB,EACFV,IAAeZ,GAAA,EAAoBE,YAAYM,eAAiB,YAC9D,GACAe,EACFX,IAAeZ,GAAA,EAAoBE,YAAYM,eAAiB,KAC9DI,IAAeZ,GAAA,EAAoBE,YAAYC,aAAe,KAC9D,KAEAvF,EAAqC,GAErB,MAAlB8F,EAASrI,OAAoC,KAAnBqI,EAASrI,QACnCuC,EAAQ8F,EAASc,YAAcd,EAASrI,OAO5C,IAAIrjB,EAAmByrB,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAWsjB,iCAAkC,IAClG,IAAK7e,EAAU,CACX,IAAMysB,EAAqBC,GAAA,EAAsBC,cAAc/O,GACzDD,EAAe8N,EAAOE,WAAW1O,YACnC1hB,GAAA,EAAWojB,6BADM,gBAERf,EAFQ,YAEEgP,EAAwB35B,UAAU45B,SAFpC,OAE8CJ,IAC7DK,EAA2BnP,EAAK1Z,SAAS,KAAO0Z,EAAOA,EAAO,IACpE3d,EAAW,GAAH,OAAM8sB,GAAN,OAAyBR,GAAzB,OAAyCM,EAAwB35B,UAAU85B,OAA3E,YAAqFR,GAGjG,EAAKS,mBAAmBvB,EAAQM,EAAa/rB,GAE7C,IAAMitB,EAA6G,SAAhFxB,EAAOE,WAAW1O,YAAY,oCAAqC,SACtG,OAAO,IAAIiQ,GAAA,EAAoBltB,EAAU+rB,EAAanG,EAAS,IAAIuH,GAAA,EAA6BC,GAAA,EAAUC,qBAAqB5B,GAASwB,EAAmB1F,IA7DnK,YAA6CmF,GAAA,GAE1B,GAAAz5B,YAAS,sCACL85B,OAAiB,MACjB,GAAAF,QAAkB,gBACnC,I,ICbMS,G,iTC+BC,GAAb,kDAUI,WAAmBC,EAAmCxM,GAAyB,0BAC3E,IAAMyM,EAA0BD,EAChCn1B,EAAA,EAAU0kB,YAAYyQ,EAAc,iBAEpC,cAAMxM,EAAayM,EAAwBpP,WAAY,IAAI,KAEtDqP,gBAAiB,EACtB,EAAKC,gBAAiB,EACtB,EAAKxM,eAAiBsM,EAAwBpP,WAAW+C,QAEzD,IAAMwM,EAAc,EAAKC,mBAVkD,OAW3E,EAAKnM,SAASkM,YAAYvkB,IAAIukB,GAX6C,EAVnF,2CA6EW,SAAQlV,EAAiBvN,GAC5B,YAA0BvR,KAAK8nB,SAAShS,UAAWgJ,EAAIvN,KA9E/D,wBAuFW,SAAWuN,EAAiBvN,GAC/B,YAA0BvR,KAAK8nB,SAASjR,aAAciI,EAAIvN,KAxFlE,8BAkGI,WACI,OAAOvR,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAnGtD,IA6GI,SAA8B6E,GAC1BjrB,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkC6E,KA/GjF,sBAyHI,WACI,OAAO1pB,KAAKunB,iBA1HpB,kCAiII,WACI,OAAOvnB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWsyB,wCAlItD,IA0II,SAAkCC,GAC9Bn0B,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWsyB,sCAAuCC,KA3ItF,6BAsJW,SAAgBrV,EAA2CvN,GAAyB,WACvF,GAAIvR,KAAK8zB,eAAgB,CACrBr1B,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/B,IAcMK,EAd8D,mHAChE,OADgE,SAC1Dp0B,KAAK8nB,SAAShS,UAD4C,OAEhE,OAFgE,SAE1D9V,KAAK6oB,qBAFqD,OAMhE,OAHA7oB,KAAK8zB,gBAAiB,EAEhBtP,EAAyC,IAAI,IALa,SAM1DxkB,KAAK8nB,SAASgB,UAAU,IAAgBiB,aAAcvF,EAAI/L,QAAS+L,EAAI5M,QANb,OAQ7B,OAR6B,UAQvB4M,EAAI/M,QARmB,QAShE,OADMvN,EAR0D,iBAS1DlK,KAAK6oB,qBATqD,iCAWzD3e,GAXyD,iDAgBpEkqB,EAAWje,OAAM,WAGb,EAAK0R,SAAQ,GAAM1R,OAAM,kBAG7B,YAA0Bie,EAAWC,SAAQ,WACzC,EAAKP,gBAAiB,KACtBhV,EAAIvN,MAjLpB,+BAqLW,SAAkB+iB,EAAkBxV,EAAiByV,GACxD,YAA2Bv0B,KAAK8nB,SAAkC0M,YAAYF,GAAWxV,EAAIyV,KAtLrG,mBA+LW,SAAMzV,EAAiBvN,GAC1B9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAE/B,YAA0B/zB,KAAK6nB,SAAQ,GAAO/I,EAAIvN,KAlM1D,qBAqMoB,SAAQwW,GAAkB,W,sOAClC/nB,KAAK+zB,e,qDAILhM,E,gBAEA,OADA/nB,KAAK+zB,gBAAiB,E,SAChB/zB,KAAK6oB,qB,OACX,O,SAAM,EAAMhB,QAAO,UAACE,G,kDA7MhC,oCAiNc,SAAuBuB,GAC7B,OAAO,IAAIW,EAAA,EAAiBX,EAActpB,KAAKunB,kBAlNvD,qCAqNc,SACN2C,EACA7C,EACAD,EACAmB,GAEA,IAAMP,EAA+BZ,EAErC,OAAO,IAAIqN,GAAA,EAAqBvK,EAAgB7C,EAAmBW,EAAaO,EAAkBvoB,QA7N1G,8BAgOY,WAGJ,MAAO,CACH00B,QAAS,CACLC,SAJkB30B,KAAKykB,WAAWnB,YAAY,kCAAmC,WAKjFsR,qBAAiBh2B,EACjBgvB,aAAc5tB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWizB,kCACrDC,eAAgB90B,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWmzB,kCAA8Bn2B,GACrFo2B,OAAQh1B,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWqzB,0BAAsBr2B,GACrEs2B,eAAgBl1B,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWulB,+CAA2CvoB,IAEtGg0B,QAAS,QA5OrB,GAA4C,I,qBD/B5C,SAAYe,GAIR,6CAJJ,CAAYA,QAAsB,K,IEOtBwB,G,gTCAC,GAAb,WAcI,WAAmBC,GAA+B,oBAZ1C,KAAAC,aAA6B,KAC7B,KAAAC,SAAqB,KAErB,KAAAC,sBAA6B,OAUb32B,IAAhBw2B,IACAA,EAActpB,EAAA,EAAkBE,yBAEpChM,KAAKw1B,KAAKJ,GAlBlB,mDAyBW,SAAgBK,EAA2B3W,EAAiBvN,GAA6B,WAC5F,YAAqD,mHAC7CvR,KAAK01B,2BACCC,EAAY31B,KAAK41B,gBAAgBH,IACjCI,EAAiB,IAAIniB,aAAa1T,KAAK81B,QAAQ39B,OAASw9B,EAAUx9B,SACzDsX,IAAIzP,KAAK81B,QAAS,GACjCD,EAAepmB,IAAIkmB,EAAW31B,KAAK81B,QAAQ39B,QAC3C6H,KAAK81B,QAAUD,EAN8B,gDAO/C/W,EAAIvN,KAjClB,uBAuCW,SAAUuN,EAAiBvN,GACJ,OAAtBvR,KAAKq1B,eACLr1B,KAAK81B,QAAU,IAAIpiB,aACnBqiB,cAAc/1B,KAAKu1B,uBACnBv1B,KAAKq1B,aAAa5b,QAAQzE,MAAK,WACrB8J,GACFA,OAEL,SAAChP,GACMyB,GACFA,EAAIzB,MAGZ9P,KAAKq1B,aAAe,QApDhC,kBAwDY,SAAKD,GACTp1B,KAAKo1B,YAAcA,EACnBp1B,KAAK81B,QAAU,IAAIpiB,eA1D3B,sCA6DY,WAAwB,WAC5B,GAA0B,OAAtB1T,KAAKq1B,aAAuB,CAC5Br1B,KAAK0X,qBAEL1X,KAAKu1B,sBAAwBS,aAAY,WACrC,EAAKC,sBAFW,QAhEhC,gCAuEY,WAEJj2B,KAAKq1B,aAAevpB,EAAA,EAAsBgO,kBAI1C9Z,KAAKs1B,SAAWt1B,KAAKq1B,aAAaa,aAClCl2B,KAAKs1B,SAASa,KAAK12B,MAAQ,EAC3BO,KAAKs1B,SAASxf,QAAQ9V,KAAKq1B,aAAatf,aACxC/V,KAAKo2B,UAAYp2B,KAAKq1B,aAAavU,cAhF3C,6BAmFY,SAAgB6U,GACpB,OAAQ31B,KAAKo1B,YAAYlpB,eACrB,KAAK,EACD,OAAOlM,KAAKq2B,kBAAkB,IAAI5T,UAAUkT,GAAY,KAC5D,KAAK,GACD,OAAO31B,KAAKq2B,kBAAkB,IAAIC,WAAWX,GAAY,OAC7D,KAAK,GACD,OAAO31B,KAAKq2B,kBAAkB,IAAIE,WAAWZ,GAAY,YAC7D,QACI,MAAM,IAAI,KAAsB,uEA5FhD,+BAgGY,SAAkBA,EAAgCa,GAEtD,IADA,IAAMC,EAAc,IAAI/iB,aAAaiiB,EAAUx9B,QACtCD,EAAI,EAAGA,EAAIy9B,EAAUx9B,OAAQD,IAClCu+B,EAAYv+B,GAAKy9B,EAAUz9B,GAAKs+B,EAEpC,OAAOC,IArGf,+BAwGY,WACJ,GAA4B,IAAxBz2B,KAAK81B,QAAQ39B,OAAjB,CAUA,IANA,IAAM4kB,EAAe/c,KAAKo1B,YAAYjpB,SAChCuqB,EAAe12B,KAAKq1B,aAAasB,qBACjCC,EAAa52B,KAAK81B,QAAQ39B,OAAS4kB,EACnC8Z,EAAc72B,KAAKq1B,aAAayB,aAAa/Z,EAAc6Z,EAAY52B,KAAKo1B,YAAYhpB,eAGrFoa,EAAU,EAAGA,EAAUzJ,EAAcyJ,IAI1C,IAFA,IAAIuQ,EAAgBvQ,EACdmP,EAAYkB,EAAYlgB,eAAe6P,GACpCtuB,EAAI,EAAGA,EAAI8H,KAAK81B,QAAQ39B,OAAQD,IAAK6+B,GAAiBha,EAC3D4Y,EAAUz9B,GAAK8H,KAAK81B,QAAQiB,GAIhC/2B,KAAKo2B,UAAYp2B,KAAKq1B,aAAavU,cACnC9gB,KAAKo2B,UAAYp2B,KAAKq1B,aAAavU,aAGvC4V,EAAa3jB,OAAS8jB,EACtBH,EAAa5gB,QAAQ9V,KAAKs1B,UAC1BoB,EAAavU,MAAMniB,KAAKo2B,WAGxBp2B,KAAKo2B,WAAaS,EAAYpW,SAG9BzgB,KAAK81B,QAAU,IAAIpiB,gBAxI3B,uBA2IkB,SAAUiiB,G,6HAMpB,OAL0B,OAAtB31B,KAAKq1B,cACLr1B,KAAK0X,qBAEH3V,EAAgC/B,KAAKq1B,aAAasB,qBAClD5gB,EAAoC/V,KAAKq1B,aAAatf,Y,SACtD/V,KAAKq1B,aAAa2B,gBAAgBrB,GAAW,SAACsB,GAChDl1B,EAAOgR,OAASkkB,EAChBl1B,EAAO+T,QAAQC,GACfhU,EAAOogB,MAAM,M,oDApJzB,KCLa,GAAb,WAUI,WAAY+U,EAAmBC,GAA6B,oBACxDn3B,KAAKsY,OAAS4e,EACdl3B,KAAKo3B,gBAAkBD,EAZ/B,2CAsBI,WACI,OAAOn3B,KAAKsY,SAvBpB,uBAiCI,WACI,OAAOtY,KAAKo3B,oBAlCpB,KCoBa,GAAb,WAMI,WAAmBpe,EAAsB4T,EAAcyK,GAAkB,oBACrEr3B,KAAKuvB,WAAavW,EAClBhZ,KAAKunB,eAAiB,IAAIjC,GAAA,EACtBtlB,KAAKuvB,aAAe+H,GAAA,EAAaC,SAC3B3K,IACF5sB,KAAKw3B,YAAchuB,KAAKQ,MAAM4iB,GAC0B,cAApD5sB,KAAKw3B,YAAYC,iBAAiBpL,gBAClCrsB,KAAKuvB,WAAa+H,GAAA,EAAaI,yBAIvC13B,KAAKkwB,iBAAmBmH,EACxBr3B,KAAKunB,eAAenE,YAAY,qCAAmC,KAAsB,KAAsBuU,gBAlB3H,wCAgDI,WACI,OAAO33B,KAAKuvB,aAjDpB,4BAoDI,WACI,OAAOvvB,KAAKw3B,YAAYI,mBArDhC,kCAwDI,WACI,OAAO53B,KAAKw3B,YAAYK,yBAzDhC,sBA4DI,WACI,OAAO73B,KAAKunB,iBA7DpB,mCAgEI,WACI,OAAOvnB,KAAKw3B,cAjEpB,wBAoEI,WACI,OAAOx3B,KAAKkwB,oBArEpB,4CAsBW,SAAqCtD,GACxC,IAD8D,EACxDkL,EAA0C,GADc,cAE3ClL,EAAKntB,OAFsC,IAE9D,2BAA+B,KAApBP,EAAoB,QAIrBW,EAAS,IAAIk4B,EAHkD,cAAxC74B,EAAKu4B,iBAAiBpL,cAC/CiL,GAAA,EAAaI,sBAAgE,aAAxCx4B,EAAKu4B,iBAAiBpL,cAC3DiL,GAAA,EAAaU,qBAAuBV,GAAA,EAAaC,SACG,KAAM,MAC9D13B,EAAO23B,YAAcx3B,KAAKi4B,yBAAyB/4B,GACnD44B,EAAQ9oB,KAAKnP,IAR6C,8BAU9D,OAAOi4B,IAhCf,yCAmCW,SAAmClL,GACtC,IAD4D,EACtDkL,EAA0C,GADY,cAEzClL,EAAKntB,OAFoC,IAE5D,2BAA+B,KAApBP,EAAoB,QAIrBW,EAAS,IAAIk4B,EAHkD,cAAxC74B,EAAKu4B,iBAAiBpL,cAC/CiL,GAAA,EAAaI,sBAAgE,aAAxCx4B,EAAKu4B,iBAAiBpL,cAC3DiL,GAAA,EAAaU,qBAAuBV,GAAA,EAAaC,SACG,KAAM,MAC9D13B,EAAO23B,YAAcx3B,KAAKk4B,uBAAuBh5B,GACjD44B,EAAQ9oB,KAAKnP,IAR2C,8BAU5D,OAAOi4B,IA7Cf,sCAwEY,SAAgClL,GACpC,MAAO,CACHuL,iBAAkBvL,EAAKuL,iBAAmBC,WAAWxL,EAAKuL,kBAAoB,EAC9EE,uBAAwBzL,EAAKyL,uBAAyBD,WAAWxL,EAAKyL,wBAA0B,EAChGZ,iBAAkB7K,EAAK6K,iBACvBG,iBAAkBhL,EAAKgL,kBAAoB,EAC3CC,uBAAwBjL,EAAKiL,uBAAyBO,WAAWxL,EAAKiL,wBAA0B,EAChGS,6BAA8B1L,EAAK0L,6BAA+BF,WAAWxL,EAAK0L,8BAAgC,EAClHpB,UAAWtK,EAAKsK,WAAatK,EAAK2L,wBAClCC,sCAAuC5L,EAAK4L,sCAAwCJ,WAAWxL,EAAK4L,uCAAyC,KAjFzJ,oCAqFY,SAA8B5L,GAClC,MAAO,CACHuL,iBAAkBvL,EAAKuL,iBAAmBC,WAAWxL,EAAKuL,kBAAoB,EAC9EE,uBAAwBzL,EAAKyL,uBAAyBD,WAAWxL,EAAKyL,wBAA0B,EAChGZ,iBAAkB7K,EAAK6K,iBACvBG,iBAAkBhL,EAAKgL,iBACvBC,uBAAwBjL,EAAKiL,uBAAyBO,WAAWxL,EAAKiL,wBAA0B,EAChGS,6BAA8B1L,EAAK0L,6BAA+BF,WAAWxL,EAAK0L,8BAAgC,EAClHpB,UAAWtK,EAAKsK,WAAatK,EAAK6L,sBAClCC,0BAA2B9L,EAAK+L,sBAAwB/L,EAAK8L,0BAC7DF,sCAAuC5L,EAAK4L,sCAAwCJ,WAAWxL,EAAK4L,uCAAyC,OA/FzJ,KAwGa,GAAb,kDAEI,WAAoBxf,EAA4BiX,EAAsB1qB,GAAgC,uCAC5FyT,EAAQiX,EAAc1qB,GAHpC,mDAcW,SAAkB1F,GACrB,IAAMmZ,EAASoX,EAAA,EAAmBvxB,MAC9B0G,EAAmC,KAAsB8qB,QAM7D,OAJMxwB,EAAO4kB,aACTlf,EAAa,KAA8B1F,EAAO4kB,WAAWnB,YAAY,qCAAmC,KAAsB,KAAsB+M,YAGrJ,IAAIuI,EAA0C5f,EAAQnZ,EAAOowB,aAAc1qB,OAtB1F,GAA+D,ICpHlD,GAAb,WAKI,WAAmByT,EAAsBqe,GAAkB,oBACvDr3B,KAAKuvB,WAAavW,EAClBhZ,KAAKunB,eAAiB,IAAIjC,GAAA,EACtBtM,IAAWse,GAAA,EAAaC,WACxB94B,EAAA,EAAUK,uBAAuBu4B,EAAY,cAC7Cr3B,KAAKkwB,iBAAmBmH,EACxBr3B,KAAKunB,eAAenE,YAAY,qCAAmC,KAAsB,KAAsBuU,gBAX3H,wCAeI,WACI,OAAO33B,KAAKuvB,aAhBpB,sBAmBI,WACI,OAAOvvB,KAAKunB,iBApBpB,wBAuBI,WACI,OAAOvnB,KAAKkwB,qBAxBpB,KAgCa,GAAb,kDAEI,WAAoBlX,EAA4BiX,EAAsB1qB,GAAgC,uCAC5FyT,EAAQiX,EAAc1qB,GAHpC,mDAcW,SAAkB1F,GACrB,IAAMmZ,EAASoX,EAAA,EAAmBvxB,MAC9B0G,EAAmC,KAAsB8qB,QAM7D,OAJMxwB,EAAO4kB,aACTlf,EAAa,KAA8B1F,EAAO4kB,WAAWnB,YAAY,qCAAmC,KAAsB,KAAsB+M,YAGrJ,IAAIwI,EAAgC7f,EAAQnZ,EAAOowB,aAAc1qB,OAtBhF,GAAqD,ICpCxC,GAAb,kDAGI,WAAmByT,EAAsBqe,EAAoBzK,GAAS,MAGlE,GAHkE,qBAClE,cAAM5T,EAAQqe,IAHVyB,YAAwB,GAI5Br6B,EAAA,EAAUK,uBAAuB8tB,EAAM,sBACjCA,EAAKntB,OAAWmtB,EAAKntB,MAAM,GAAI,qBACdmtB,EAAKntB,OADS,IACjC,2BAA+B,KAApBP,EAAoB,QAC3B,EAAK45B,YAAY9pB,KAAK9P,EAAK65B,YAAc75B,EAAK85B,mBAFjB,+BAH6B,SAH1E,yCAaI,WACI,OAAOh5B,KAAK84B,gBAdpB,GAA8C,I,2TCmBjC,GAAb,WA2CI,WAAmBxP,GAA0B,oBACzC,IAAMC,EAAqCD,EAC3C7qB,EAAA,EAAU0kB,YAAYoG,EAAkB,gBAExCvpB,KAAKunB,eAAiBgC,EAAiB9E,WAAW+C,QAClDxnB,KAAKi5B,kBAhDb,oDAWI,WACI,OAAOj5B,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAZtD,IAsBI,SAA8B6E,GAC1BjrB,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkC6E,KAxBjF,sBAkCI,WACI,OAAO1pB,KAAKunB,iBAnCpB,gCA8DiB,SAAmB4P,EAA+BtI,G,+HAC7B,O,SAAM7uB,KAAKk5B,YAAYC,cAAchC,EAAatI,G,WAA1EhvB,E,QACMu5B,G,sBACF,IAAIv6B,MAAJ,+CAAkDgB,EAAOw5B,OAAzD,sBAA6Ex5B,EAAOw3B,a,cAExFiC,EAAkCz5B,EAAO+sB,KACzC2M,EAAU,IAAI,GAAaD,EAASpC,UAAWC,G,kBAC9CoC,G,kDArEf,2CAgFiB,SAA8BA,G,2HACT,O,SAAMv5B,KAAKk5B,YAAYM,iBAAiBD,G,cAAhE15B,E,yBACC,IAAI,GACPA,EAAOu5B,GAAK9B,GAAA,EAAaU,qBAAuBV,GAAA,EAAaC,SAC7D13B,EAAO0V,KACP1V,EAAOw3B,a,kDArFnB,iCAkGiB,SAAoBF,G,2HACC,O,SAAMn3B,KAAKk5B,YAAYO,YAAYtC,G,UAA3Dt3B,E,OACFs3B,IAAgBuC,GAAA,EAAiBC,8B,yCAC1B,GAA6BC,8BAA8B/5B,EAAO+sB,O,gCAEtE,GAA6BiN,4BAA4Bh6B,EAAO+sB,O,kDAvG/E,uCAmHiB,SAA0BuK,EAA+BtI,G,2HACpC,O,SAAM7uB,KAAKk5B,YAAYY,WAAW3C,EAAatI,G,cAAvEhvB,E,yBACC,IAAI,GACPA,EAAOu5B,GAAK9B,GAAA,EAAaI,sBAAwBJ,GAAA,EAAaC,SAC9D13B,EAAOw3B,WACPx3B,EAAO+sB,O,kDAxHnB,gCAsIiB,SAAmB2M,EAAuBnS,G,6HAIrB,OAHxB+C,EAA8B/C,EACpC3oB,EAAA,EAAUK,uBAAuBqrB,EAAY,e,SAETnqB,KAAKk5B,YAAYa,iBAAiBR,EAASpP,G,cAAzEtqB,E,yBACC,IAAI,GACPA,EAAOu5B,GAAK9B,GAAA,EAAaU,qBAAuBV,GAAA,EAAaC,SAC7D13B,EAAO0V,KACP1V,EAAOw3B,a,kDA9InB,gCA2JiB,SAAmBkC,G,2HACE,O,SAAMv5B,KAAKk5B,YAAYc,cAAcT,G,cAA7D15B,E,yBACCG,KAAKi6B,UAAUp6B,EAAQy3B,GAAA,EAAa4C,sB,kDA7JnD,+BAyKiB,SAAkBX,G,2HACG,O,SAAMv5B,KAAKk5B,YAAYiB,aAAaZ,G,cAA5D15B,E,yBACCG,KAAKi6B,UAAUp6B,EAAQy3B,GAAA,EAAa8C,oB,kDA3KnD,mBAoLW,cApLX,6BAyLc,WAEN,IAAInS,EAAgC,qBAAXva,OAA0B,UAAY,OAC3Dwa,EAAS,UACTC,EAAY,UAES,qBAAdva,YACPqa,EAAaA,EAAa,IAAMra,UAAUwa,SAC1CF,EAASta,UAAUya,UACnBF,EAAYva,UAAU0a,YAG1B,IAAMC,EACF,IAAI8R,GAAA,EACA,IAAI,IAAQ,IAAI,IAAGpS,EAAYC,EAAQC,IACvCnoB,KAAKunB,gBAEbvnB,KAAKk5B,YAAc,IAAIoB,GAAA,EAAwB/R,KA1MvD,uBA6MY,SAAU1oB,EAAuB06B,EAA6Bzb,GAMlE,OAJI,IAAI,GACAjf,EAAOu5B,GAAKmB,EAAgBjD,GAAA,EAAaC,SACzC13B,EAAOw3B,gBAjNvB,KClBa,GAAb,WAGI,WAAoBmD,GAAwB,WAExC,GAFwC,oBAFpC,KAAAC,kBAAoC,GAGxCh8B,EAAA,EAAUK,uBAAuB07B,EAAU,iBACnB,IAApBA,EAASriC,OACT,MAAM,IAAI0G,MAAM,8BAEpB27B,EAASzvB,SAAQ,SAACwuB,GACd,GAAIA,EAAQpC,cAAgBuC,GAAA,EAAiBC,8BACzC,MAAM,IAAI96B,MAAM,yEAA2E06B,EAAQrC,WAEvG,EAAKuD,kBAAkBzrB,KAAKuqB,MAZxC,iDAmBI,WACI,OAAOv5B,KAAKy6B,kBAAkBtvB,KAAI,SAACouB,GAAD,OAA2BA,EAAQrC,aAAW/kB,KAAK,QApB7F,2BAeW,SAAoBqoB,GACvB,OAAO,IAAIE,EAA2BF,OAhB9C,MPAA,SAAYrF,GACR,uBACA,2BAFJ,CAAYA,QAA4B,KAQjC,IAAM,GAAb,WAOI,WAAmBwF,EAA0CplB,EAAc2hB,GAA8E,IAA3D0D,EAA2D,uDAA9BtD,GAAA,EAAauD,kBAGpI,GAHqJ,oBACrJ76B,KAAKunB,eAAiB,IAAIjC,GAAA,EAC1BtlB,KAAKuvB,WAAaqL,EACd56B,KAAKuvB,aAAe+H,GAAA,EAAaC,SACjC,GAAIoD,IAAexF,GAA6B2F,SAAU,CACtD,IAAMlO,EAAoEpjB,KAAKQ,MAAMuL,GACrF9W,EAAA,EAAUK,uBAAuB8tB,EAAM,QACvC5sB,KAAK+6B,cAAgBnO,EAAKoO,kBAAkB9D,UAC5Cl3B,KAAKi7B,UAAYrO,EAAKoO,kBAAkBE,UACrC,CACH,IAAM,EAAqD1xB,KAAKQ,MAAMuL,GACtE9W,EAAA,EAAUK,uBAAuB,EAAM,QACvCkB,KAAKi7B,UAAY,EAAKC,MACuB,WAAzC,EAAKC,kBAAkB9O,gBACvBrsB,KAAKuvB,WAAa+H,GAAA,EAAa8D,cAEjBx8B,IAAds4B,GAAyC,KAAdA,IAC3Bl3B,KAAK+6B,cAAgB7D,OAG1B,CACH,IAAM,EAA+B1tB,KAAKQ,MAAMuL,GAChD9W,EAAA,EAAUK,uBAAuB,EAAM,QACvCkB,KAAKkwB,iBAAmB,EAAKmH,WAC7Br3B,KAAKunB,eAAenE,YAAY,qCAAmC,KAAsB,KAAsBuU,eAEnH33B,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWy5B,iCAAkC9lB,GAjCrF,4CAoCI,WACI,OAAOvV,KAAKunB,iBArCpB,kBAwCI,WACI,OAAOvnB,KAAKuvB,aAzCpB,qBA4CI,WACI,OAAOvvB,KAAK+6B,gBA7CpB,wBAgDI,WACI,OAAO/6B,KAAKkwB,mBAjDpB,iBAoDI,WACI,OAAOlwB,KAAKi7B,cArDpB,KA6Da,GAAb,kDAEI,WAAoBjiB,EAA4BiX,EAAsB1qB,GAAgC,uCAC5FyT,EAAQiX,EAAc1qB,GAHpC,mDAcW,SAAkB1F,GACrB,IAAMmZ,EAASoX,EAAA,EAAmBvxB,MAC9B0G,EAAmC,KAAsB8qB,QAM7D,OAJMxwB,EAAO4kB,aACTlf,EAAa,KAA8B1F,EAAO4kB,WAAWnB,YAAY,qCAAmC,KAAsB,KAAsB+M,YAGrJ,IAAIiL,EAAsCtiB,EAAQnZ,EAAOowB,aAAc1qB,OAtBtF,GAA2D,IQrE9C,GAAb,WAGI,WAAoBg0B,GAEhB,GAFqC,oBACrC96B,EAAA,EAAUK,uBAAuBy6B,EAAS,gBACtCA,EAAQpC,cAAgBuC,GAAA,EAAiBC,8BACzC,MAAM,IAAI96B,MAAM,oEAEpBmB,KAAKu7B,iBAAmBhC,EARhC,8CAeI,WACI,OAAOv5B,KAAKu7B,oBAhBpB,0BAWW,SAAmBhC,GACtB,OAAO,IAAIiC,EAAyBjC,OAZ5C,K,uSCiBa,GAAb,WA4CI,WAAmBjQ,EAA4BlC,GAAwB,oBACnE,IAAMmC,EAAqCD,EAC3C7qB,EAAA,EAAU0kB,YAAYoG,EAAkB,gBAExCvpB,KAAKy7B,oBAAsBrU,EAC3B3oB,EAAA,EAAU0kB,YAAYnjB,KAAKy7B,oBAAqB,eAEhDz7B,KAAKunB,eAAiBgC,EAAiB9E,WAAW+C,QAClDxnB,KAAK07B,cApDb,oDAYI,WACI,OAAO17B,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAbtD,IAuBI,SAA8B6E,GAC1BjrB,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkC6E,KAzBjF,sBAmCI,WACI,OAAO1pB,KAAKunB,iBApCpB,gCAiEiB,SAAmB1M,G,kIAExBA,aAAiB,I,uBACX8gB,EAA0C37B,KAAKk5B,YAAY0C,gBAAgB/gB,EAAO7a,KAAKy7B,qB,kBACtFz7B,KAAKi6B,UAAU0B,EAAiBxG,GAA6B2F,cAAUl8B,I,YACvEic,aAAiB,I,wBAClB,EAA0C7a,KAAKk5B,YAAY2C,cAAchhB,EAAO7a,KAAKy7B,qB,kBACpFz7B,KAAKi6B,UAAU,EAAiB9E,GAA6B2G,OAAQjhB,EAAMkhB,aAAa7E,Y,cAEzF,IAAIr4B,MAAM,0D,mDA1E5B,mBAoFW,cApFX,yBAyFY,WAEJ,IAAIopB,EAAgC,qBAAXva,OAA0B,UAAY,OAC3Dwa,EAAS,UACTC,EAAY,UAES,qBAAdva,YACPqa,EAAaA,EAAa,IAAMra,UAAUwa,SAC1CF,EAASta,UAAUya,UACnBF,EAAYva,UAAU0a,YAG1B,IAAMC,EACF,IAAI8R,GAAA,EACA,IAAI,IAAQ,IAAI,IAAGpS,EAAYC,EAAQC,IACvCnoB,KAAKunB,gBAEbvnB,KAAKk5B,YAAc,IAAIoB,GAAA,EAAwB/R,KA1GvD,uBA6GkB,SAAUoT,EAAyChB,EAA0CzD,G,2HACvE,O,SAAMyE,E,cAAhCrC,E,yBACC,IAAI,GACPqB,EACArB,EAAS/jB,KACT2hB,EACAoC,EAASF,GAAK9B,GAAA,EAAauD,kBAAoBvD,GAAA,EAAaC,W,+CAnHxE,KCfa,GAAb,WAGI,iCACIv3B,KAAKunB,eAAiB,IAAIjC,GAAA,EAJlC,4CAsEI,WACI,OAAOtlB,KAAKunB,kBAvEpB,4BAgBW,WACH,IAAMuK,EAAS,IAAIkK,EAEnB,OADAlK,EAAOrN,WAAWrB,YAAYxhB,GAAA,EAAWq6B,kDAAmD,iDACrFnK,IAnBf,2BA8BW,SAAqBlM,GACxBnnB,EAAA,EAAUy9B,8BAA8BtW,EAAW,aACnD,IAAMkM,EAAS,IAAIkK,EAEnB,OADAlK,EAAOrN,WAAWrB,YAAYxhB,GAAA,EAAWq6B,kDAAmDrW,EAAUzT,QAC/F2f,IAlCf,uCA6CW,SAAiCqK,GACpC,GAAIA,EAAQhkC,OAAS,EACjB,MAAM,IAAI0G,MAAM,kDAEpB,IAAMu9B,EAAa,IAAIJ,EACjBK,EAAkB,GAUxB,OATAF,EAAQpxB,SAAQ,SAAC+mB,GAEb,GADAuK,EAAMrtB,KAAK8iB,EAAO9K,eACQpoB,IAAtBkzB,EAAOwK,YAAkD,KAAtBxK,EAAOwK,WAAmB,CAC7D,IAAMC,EAAiBzK,EAAO9K,SAAWplB,GAAA,EAAW+jB,mCAAmCrW,WACvF8sB,EAAW3X,WAAWrB,YAAYmZ,EAAgBzK,EAAOwK,gBAGjEF,EAAW3X,WAAWrB,YAAYxhB,GAAA,EAAWq6B,kDAAmDI,EAAMlqB,QAE/FiqB,MA5Df,KCJa,GAAb,WAKI,WAAoBpV,EAAkBwV,GAAmC,oBACrE/9B,EAAA,EAAUK,uBAAuBkoB,EAAU,YAC3CvoB,EAAA,EAAUK,uBAAuB09B,EAA6B,+BAC9Dx8B,KAAKy8B,aAAezV,EACpBhnB,KAAK08B,gCAAkCF,EAT/C,0CAwBI,WACI,OAAOx8B,KAAKy8B,eAzBpB,uCA4BI,WACI,OAAOz8B,KAAK08B,mCA7BpB,yBAoBW,SAAkB78B,GACrB,OAAO,IAAI88B,EAA+B98B,EAAOmnB,SAAUnnB,EAAO28B,iCArB1E,KCHa,GAAb,WAII,WAAoBxV,EAAkBsV,GAAmB,oBACrD79B,EAAA,EAAUK,uBAAuBkoB,EAAU,YAC3ChnB,KAAKy8B,aAAezV,EACpBhnB,KAAK48B,eAAiBN,EAP9B,0CAwBI,WACI,OAAOt8B,KAAKy8B,eAzBpB,sBA4BI,WACI,OAAOz8B,KAAK48B,kBA7BpB,2BAoBW,SAAoB5V,EAAkBsV,GACzC,OAAO,IAAIO,EAAqB7V,EAAUsV,OArBlD,K,mBCDa,GAAb,6JAYW,WACH,OAAOQ,EAA6BC,WAb5C,sBAgBW,WACH,OAAOD,EAA6BE,iBAjB5C,uBAoBW,WACH,OAAOF,EAA6BG,kBArB5C,+BAwBW,WACH,OAAOH,EAA6BI,0BAzB5C,oBA4BW,WACH,OAAOJ,EAA6BK,eA7B5C,yBAgCW,WACH,OAAOL,EAA6BM,oBAjC5C,sBAoCW,WACH,OAAON,EAA6BO,iBArC5C,sBAwCW,WACH,OAAOP,EAA6BQ,iBAzC5C,kCA4CW,WACH,OAAOR,EAA6BS,+BA7C5C,G,OAAkD,GAEtB,GAAAR,SAAmB,8BACnB,GAAAI,aAAuB,eACvB,GAAAH,eAAyB,MACzB,GAAAE,wBAAkC,QAClC,GAAAD,gBAA0B,uCAC1B,GAAAG,kBAA4B,oBAC5B,GAAAC,eAAyB,oCACzB,GAAAC,eAAyB,2CACzB,GAAAC,2BAAuC,CAAC,UAAW,SAAU,YAAa,OAAQ,QAAS,6BAA8B,iBAAkB,WAAY,eAAgB,oBAAqB,aCkDjN,IChEKC,GDgEC,GAAb,WAEI,aAAkF,IAA/DC,EAA+D,uDAAxB,GAAWC,EAAa,2DAA/D,KAAAD,eAAkD,KAAAC,OAFzE,0DAUW,SAAuBj+B,GAC1B,QAAcb,IAAVa,EAAJ,CAIA,IAAMk+B,EAAiB39B,KAAK49B,oBAAoBn+B,EAAMwZ,IAQtD,OAPI0kB,GAAU,EACV39B,KAAKy9B,aAAa3O,OAAO6O,EAAQ,EAAGl+B,GAEpCO,KAAKy9B,aAAazuB,KAAKvP,GAIpBO,KAAK69B,eAAep+B,EAAMwZ,OAvBzC,iCA8BW,SAAoBA,GACvB,OAAOjZ,KAAKy9B,aAAaK,WAAU,SAACC,GAAD,OAA6BA,EAAE9kB,KAAOA,OA/BjF,4BAsCW,SAAeA,GAClB,OAAOjZ,KAAKy9B,aAAarR,MAAK,SAAC2R,GAAD,OAA6BA,EAAE9kB,KAAOA,OAvC5E,+BA6CW,SAAkBA,GACrBjZ,KAAKy9B,aAAez9B,KAAKy9B,aAAanyB,QAAO,SAACyyB,GAAD,OAA6BA,EAAE9kB,KAAOA,OA9C3F,gBAoDI,WACI,OAAOjZ,KAAKy9B,aAAarR,MAAK,SAAC2R,GAAD,OAA0C,IAAbA,EAAEC,YArDrE,cA2DI,WACI,OAAOh+B,KAAK69B,eAAe79B,KAAK09B,UA5DxC,KAqLaO,GAEF,QAFEA,GAIO,kBAJPA,GAKE,aALFA,GAMA,UANAA,GAOW,sBAOXC,GACO,iBADPA,GAGS,mBAHTA,GASK,eATLA,GAUA,UAVAA,GAWG,aAXHA,GAYc,wBAZdA,GAagB,0BAbhBA,GAcE,Y,SErQF,GAAb,WASI,iCAEIl+B,KAAKm+B,kBAAoB,GAA6BC,aACtDp+B,KAAKq+B,WAAa,GAA6BC,WAC/Ct+B,KAAK+8B,SAAW,GAA6B/Y,KAC7ChkB,KAAKg9B,eAAiB,GAA6BuB,WACnDv+B,KAAKm9B,aAAe,GAA6BqB,SACjDx+B,KAAKy+B,gBAAkB,IAAIC,GAAA,EAAmB,IAhBtD,gDA0BW,SAAa9vB,EAA0B+vB,EAA0B7f,EAAUvN,GAAS,WAEvF,IAEI9S,EAAA,EAAUK,uBAAuB8P,EAAM,QAEvC,IAAMgwB,EAAuBhwB,EAAK0U,YAAY1hB,GAAA,EAAW8jB,qCAAsC,GAA6BmZ,qBACtHC,EAAmBlwB,EAAK0U,YAAY1hB,GAAA,EAAWm9B,4BAA6B,qBAC5EC,EAAuBpwB,EAAK0U,YAAY1hB,GAAA,EAAWq9B,4BAA6Bj/B,KAAK+8B,UACrFvuB,EAAwBI,EAAK0U,YAAY1hB,GAAA,EAAWs9B,sCACpD5a,EAA0B1V,EAAK0U,YAAY1hB,GAAA,EAAW8iB,6BACtDya,EAA6BvwB,EAAK0U,YAAY1hB,GAAA,EAAW+iB,gCACzDxb,EAAoByF,EAAK0U,YAAY1hB,GAAA,EAAWijB,kCAEtDpmB,EAAA,EAAUU,wBAAwBy/B,EAAc,gBAChDngC,EAAA,EAAUU,wBAAwB2/B,EAAU,YAC5CrgC,EAAA,EAAUU,wBAAwB6/B,EAAc,gBAEhD,IAAM5M,EAAyC,GAC/CA,EAAYpyB,KAAKm+B,kBAAkBI,YAAcv+B,KAAKg9B,eACtD5K,EAAYpyB,KAAKm+B,kBAAkBS,cAAgBA,EACnDxM,EAAYpyB,KAAKm+B,kBAAkBW,UAAYA,EAE/C,IAAM7S,EAAqC,GACvCzd,IACAyd,EAAQjsB,KAAKm+B,kBAAkB3vB,eAAiBA,GAEpDyd,EAAQjsB,KAAKm+B,kBAAkBiB,aAAe,GAA6BA,iBAElDxgC,IAArB+/B,EACAvM,EAAYpyB,KAAKm+B,kBAAkBkB,QAAUV,GAE7ClgC,EAAA,EAAUK,uBAAuBqgC,EAAoBn/B,KAAKq+B,WAAWiB,+BACrErT,EAAQjsB,KAAKm+B,kBAAkBgB,oBAAsBA,EACjD7a,EACA2H,EAAQjsB,KAAKm+B,kBAAkB7Z,iBAAmBA,EAC3Cnb,EACP8iB,EAAQjsB,KAAKm+B,kBAAkBoB,eAA/B,iBAA0Dp2B,GAE1D1K,EAAA,EAAUK,uBAAuBwlB,EAAiBtkB,KAAKq+B,WAAWmB,6BAI1E,IAAM1N,EAA0B,GAChCA,EAAO7F,QAAUA,EACjBjsB,KAAKy+B,gBAAgBgB,QAAU3N,EAE/B,IAAMzrB,EAAQ,kBAAsB24B,GAAtB,OAAqCh/B,KAAKm9B,cAGxDn9B,KAAKy+B,gBAAgBiB,QAAQ,KAAgBC,KAAMt5B,EAAU+rB,EAAa,MAAMpd,MAAK,SAACskB,GAElF,IAAMsG,EAAoBlB,GAAA,EAAmBmB,mBAAmB,EAAK1B,kBAAkByB,UAAWtG,EAASrN,SAE3G,GAAKqN,EAASF,GAAd,CAmBA,IAAM0G,EAAsCt2B,KAAKQ,MAAMsvB,EAAS/jB,MAIhE,GAHIuqB,IACAA,EAAaF,UAAYA,GAEvB9gB,EAAI,CACN,IACIA,EAAGghB,GACL,MAAO51B,GACCqH,GACFA,EAAIrH,GAGZ4U,OAAKlgB,QA9BL,GAAM2S,EAAK,CAEP,IACIwuB,EADAv6B,EAAuB,EAAK64B,WAAW2B,sCAAsCl1B,QAAQ,WAAYwuB,EAASD,OAAO/pB,YAErH,IACIywB,EAAgBv2B,KAAKQ,MAAMsvB,EAAS/jB,MACpC/P,GAAgB,KAAJ,OAASu6B,EAAcjwB,MAAMrN,KAA7B,aAAsCs9B,EAAcjwB,MAAMD,QAA1D,KACd,MAAO3F,GACL1E,GAAgB,KAAJ,OAAS8zB,EAAS/jB,KAAlB,KAEZqqB,IACAp6B,GAAgB,IAAJ,OAAQo6B,IAGxBruB,EAAI/L,OAmBb2Q,OAAO,SAACjM,OAEb,MAAO4F,GACL,GAAMyB,EACF,GAAIzB,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1ByB,EAAIoG,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAGxC0B,EAAIzB,MA3HxB,mBAuIW,SAAMlB,EAA0BqxB,GAAoB,WACvD,OAAO,IAAI9lB,SAAc,SAAC1B,EAAqBb,GAC3C,IAEInZ,EAAA,EAAUK,uBAAuB8P,EAAM,EAAKyvB,WAAW6B,YAAYp1B,QAAQ,QAAS,WACpFrM,EAAA,EAAUU,wBAAwB8gC,EAAc,EAAK5B,WAAW6B,YAAYp1B,QAAQ,QAAS,UAE7F,IAAMk0B,EAAuBpwB,EAAK0U,YAAY1hB,GAAA,EAAWq9B,4BAA6B,EAAKlC,UACrFvuB,EAAwBI,EAAK0U,YAAY1hB,GAAA,EAAWs9B,sCAEpD9M,EAAyC,GAC/CA,EAAY,EAAK+L,kBAAkBI,YAAc,EAAKvB,eACtD5K,EAAY,EAAK+L,kBAAkB8B,cAAgBA,EAEnD,IAAMhU,EAAqC,GACvCzd,IACAyd,EAAQ,EAAKkS,kBAAkB3vB,eAAiBA,GAGpD,IAAMsjB,EAA0B,GAChCA,EAAO7F,QAAUA,EACjB,EAAKwS,gBAAgBgB,QAAU3N,EAE/B,IAAMzrB,EAAQ,kBAAsB24B,GAAtB,OAAqC,EAAK7B,cAGxD,EAAKsB,gBAAgBiB,QAAQ,KAAgBS,OAAQ95B,EAAU+rB,EAAa,MAAMpd,MAAK,SAACskB,GAE/EA,EAASF,GAId3gB,OAEDtC,OAAO,SAACjM,OAEb,MAAO4F,GACL,GAAIA,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1B8H,EAAOD,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAG3C+H,EAAO9H,WAjL3B,K,oBCXa,GAAb,kDAGI,WACIwc,EACA8T,EACAnU,EACAhT,GAAW,0BACP,cAAMqT,EAAa8T,EAAMnU,EAAShT,GAClC,IAAM2T,EAAOpjB,KAAKQ,MAAM,EAAKyiB,UAFtB,YAGW7tB,IAAdguB,EAAKjY,OACL,EAAK0rB,4BAA8BzT,EAAKjY,MAJrC,EAPnB,yDAeI,WACI,OAAO3U,KAAKqgC,gCAhBpB,GAAmD,MCWtC,GAAb,iCAKW,KAAAC,oBAAsB,SAACzwB,GAC1B,IAAM0wB,EAAW,IAAI,IAErB,IACI,GAAI1wB,EAAQyc,cAAgB,KAAYC,KAAM,CAC1C,IAAMiU,EAAiD,IAAI,GAA8B3wB,EAAQyc,YAAazc,EAAQ4wB,YAAa,GAAI5wB,EAAQoJ,IAC/IsnB,EAAS9nB,QAAQ+nB,QACV3wB,EAAQyc,cAAgB,KAAYE,QAC3C+T,EAAS9nB,QAAQ,IAAI,GAA8B5I,EAAQyc,YAAazc,EAAQ6wB,mBAAe9hC,EAAWiR,EAAQoJ,KAExH,MAAO/O,GACLq2B,EAAS3oB,OAAT,+CAAwD1N,IAG5D,OAAOq2B,EAAS9oB,SAMb,KAAAkpB,sBAAwB,SAAC9wB,GAE5B,IAAM0wB,EAAW,IAAI,IAErB,IACI,GAAI1wB,EAAQyc,cAAgB,KAAYC,KAAM,CAC1C,IAAMc,EAAU,GAAH,OAAMxd,EAAQ4c,SAAW5c,EAAQ4c,SAAW,IACzD8T,EAAS9nB,QAAQ,IAAImoB,GAAA,EAAoB,KAAYrU,KAAMc,EAASxd,EAAQoJ,MAElF,MAAO/O,GACLq2B,EAAS3oB,OAAT,wCAAiD1N,IAGrD,OAAOq2B,EAAS9oB,UCtCX,GAAb,4JAEW,SAAOqa,EAA0BC,EAAoBnE,GAExD,IAAMoR,EAAuBlN,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAWq9B,4BAA6B,GAA6Bjb,MAC1HxV,EAAwBsjB,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAWs9B,qCAAsC,eAEvG74B,EAAQ,gBAAoB24B,GAApB,OAAmC,GAA6B6B,eACxEnX,EAAgBoI,EAAOE,WAAW1O,YAAY1hB,GAAA,EAAWk/B,kCAA8BliC,GAC7FH,EAAA,EAAUK,uBAAuB4qB,EAAO,SAExC,IAAM0I,EAAyC,GAC/CA,EAAY,GAA6BgM,aAAaG,YAAc,GAA6BA,WACjGnM,EAAY,GAA6BgM,aAAa1U,OAASA,EAC/D0I,EAAY,GAA6BgM,aAAa5vB,eAAiBA,EACvE,IAAM8kB,EAA6G,SAAhFxB,EAAOE,WAAW1O,YAAY,oCAAqC,SACtG,OAAO,IAAIiQ,GAAA,EAAoBltB,EAAU+rB,EAAa,GAAI,IAAI,GAAyCqB,GAAA,EAAUC,qBAAqB5B,GAASwB,EAAmB1F,OAhB1K,GAAmDmF,GAAA,G,UCVtC,GAAb,4H,MAA8D,GCAjD,GAAb,kDAGI,WAAYgO,EAAwBlU,GAAkB,kCAClD,cAAMA,IACDmU,mBAAqBD,EAFwB,EAH1D,gDASI,WACI,OAAO/gC,KAAKghC,uBAVpB,GAAqDrU,EAAA,GCGxC,GAAb,kDAII,WAAmBsU,EACAC,EACAC,EACAC,EACApoB,EACAqoB,EACA5gB,EACAhU,EACAwjB,EACArD,EACAnI,GAA+B,kCAC9C,cAAMyc,EAAcE,EAAUpoB,EAAQqoB,EAAM5gB,EAAUhU,EAAQwjB,EAAcrD,EAAMnI,IAC7EnM,OAAS2oB,EACd,EAAKK,aAAeH,EAH0B,EAdtD,+CAuBI,WACI,OAAOnhC,KAAKsY,SAxBpB,wBA8BI,WACI,OAAOtY,KAAKshC,iBA/BpB,GAAmDC,GAAA,G,uSCItC,GAAb,WAOI,WAAY1U,GAAiB,+BANrB,KAAAkH,gBAA0B,EAC1B,KAAAyN,gBAAiC,IAAIxwB,MAuBtC,KAAAywB,qBAAuB,SAACpY,EAA0BuE,GACrD,EAAK8T,cAAgB9T,GAGlB,KAAA+T,gBAAkB,SAACC,EAAkB9xB,GACpC8xB,GACA,EAAKC,cAIN,KAAAC,+BAAiC,SAACC,EAAoB/oB,GACtC,MAAf+oB,GAEsB,MAAfA,GACP,EAAKF,cAIN,KAAAG,yBAA2B,SAACC,GAC1BA,EAGD,EAAKC,cAAgB,cAFrB,EAAKL,cAgBL,KAAAA,WAAa,aArDjB7hC,KAAK0hC,cAAgB7U,EACrB7sB,KAAKkiC,cAAgB,cACrBliC,KAAKmiC,8BAAgC,IAAI,IAVjD,2CAaI,WACI,OAAOniC,KAAK0hC,gBAdpB,qBAiBI,WACI,OAAO1hC,KAAKkiC,gBAlBpB,6BAqBI,WACI,OAAOliC,KAAKmiC,8BAA8B1qB,UAtBlD,qBAmDiB,SAAQ3H,G,kIACZ9P,KAAK+zB,e,iBAEN/zB,KAAK+zB,gBAAiB,E,cACG/zB,KAAKwhC,iB,yDAC1B,OADOY,E,iBACDA,EAAW/oB,S,0MAxDjC,KCRa,GAAb,kDAGI,WAAmBgpB,EAAkBxV,GAAkB,kCACnD,cAAMA,IAEDyV,YAAcD,EAHgC,EAH3D,yCASI,WACI,OAAOriC,KAAKsiC,gBAVpB,GAAsC3V,EAAA,GAezB,GAAb,kDAGI,WAAmB4V,EAAmB1V,GAAkB,kCACpD,cAAMA,IAED2V,aAAeD,EAHgC,EAH5D,yCASI,WACI,OAAOviC,KAAKwiC,iBAVpB,GAAuC7V,EAAA,GAe1B,GAAb,kDAGI,WAAmB8V,EAAmC5V,GAAkB,kCACpE,cAAMA,IACD6V,gBAAkBD,EAF6C,EAH5E,6CAQI,WACI,OAAOziC,KAAK0iC,oBATpB,GAA0C/V,EAAA,GAc7B,GAAb,kDAKI,WAAmBsU,EAAuBvoC,EAAa+G,EAA8CotB,GAAkB,kCACnH,cAAMA,IAED8V,QAAUjqC,EACf,EAAKkqC,UAAYnjC,EACjB,EAAKojC,kBAAoB5B,EAL0F,EAL3H,uCAaI,WACI,OAAOjhC,KAAK4iC,YAdpB,eAiBI,WACI,OAAO5iC,KAAK2iC,UAlBpB,cAoBI,WACI,OAAO3iC,KAAK6iC,sBArBpB,GAAmDlW,EAAA,GA0BtC,GAAb,kDAWI,WAAmBmI,EAAwBpL,EAAeoZ,EAAuBC,EAC9DC,EAA6BC,EAAuBC,EAAoBzF,EAAsC5Q,GAAkB,kCAC/I,cAAMA,IACDsW,WAAarO,EAClB,EAAKsO,iBAAmB1Z,EACxB,EAAK2Z,gBAAkBP,EACvB,EAAKQ,oBAAsBP,EAC3B,EAAKQ,wBAA0BP,EAC/B,EAAKQ,iBAAmBP,EACxB,EAAKO,iBAAmBN,EACxB,EAAKO,iBAAmBhG,EATuH,EAZvJ,8CAuBI,WACI,OAAOz9B,KAAKojC,mBAxBpB,0BA2BI,WACI,OAAOpjC,KAAKmjC,aA5BpB,uBA+BI,WACI,OAAOnjC,KAAKqjC,kBAhCpB,2BAmCI,WACI,OAAOrjC,KAAKsjC,sBApCpB,+BAuCI,WACI,OAAOtjC,KAAKujC,0BAxCpB,wBA2CI,WACI,OAAOvjC,KAAKwjC,mBA5CpB,qBA+CI,WACI,OAAOxjC,KAAK0jC,gBAhDpB,wBAmDI,WACI,OAAO1jC,KAAKyjC,qBApDpB,GAA+C9W,EAAA,GAyDlC,GAAb,WAKI,WAAmBgX,EAAiBtW,EAAeR,GAAkB,oBACjE7sB,KAAK4jC,YAAcvW,EACnBrtB,KAAK6jC,YAAcF,EACnB3jC,KAAK0hC,cAAgB7U,EAR7B,yCAWI,WACI,OAAO7sB,KAAK4jC,cAZpB,mBAeI,WACI,OAAO5jC,KAAK6jC,cAhBpB,qBAmBI,WACI,OAAO7jC,KAAK0hC,kBApBpB,KCnHa,GAAb,WAGI,WAAmB9U,GAAY,oBAC3B5sB,KAAK8jC,oBAAsBt6B,KAAKQ,MAAM4iB,GAJ9C,sCAWI,WACI,OAAO5sB,KAAK8jC,oBAAoBnvB,OAZxC,mBAcI,WACI,OAAO3U,KAAK8jC,oBAAoBH,UAfxC,cAiBI,WACI,OAAO3jC,KAAK8jC,oBAAoB7qB,KAlBxC,oBAoBI,WACI,OAAOjZ,KAAK8jC,oBAAoBhF,WArBxC,yBAuBI,WACI,OAAO9+B,KAAK8jC,oBAAoB7C,gBAxBxC,kBA0BI,WACI,OAAOjhC,KAAK8jC,oBAAoBC,SA3BxC,iBA6BI,WACI,OAAO/jC,KAAK8jC,oBAAoBrkC,QA9BxC,iBAgCI,WACI,OAAOO,KAAK8jC,oBAAoBpa,SAjCxC,uBAOW,SAAgBkD,GACnB,OAAO,IAAIoX,EAAuBpX,OAR1C,KCgBa,GAAb,WAGI,WAAoBA,GAAY,oBAC5B5sB,KAAKikC,gCAAkCz6B,KAAKQ,MAAM4iB,GAJ1D,wCAWI,WACI,OAAO5sB,KAAKikC,gCAAgCF,SAZpD,cAeI,WACI,OAAO/jC,KAAKikC,gCAAgChrB,KAhBpD,mBAmBI,WACI,OAAOjZ,KAAKikC,gCAAgCN,UApBpD,wBAuBI,WACI,OAAO3jC,KAAKikC,gCAAgCxG,eAxBpD,iBA2BI,WACI,OAAOz9B,KAAKikC,gCAAgCva,QA5BpD,uBA+BI,WACI,OAAO1pB,KAAKikC,gCAAgCnB,cAhCpD,2BAmCI,WACI,OAAO9iC,KAAKikC,gCAAgClB,kBApCpD,+BAuCI,WACI,OAAO/iC,KAAKikC,gCAAgCjB,sBAxCpD,sBA2CI,WACI,OAAOhjC,KAAKikC,gCAAgCC,aA5CpD,mBA+CI,WACI,OAAOlkC,KAAKikC,gCAAgCE,UAhDpD,gBAmDI,WACI,OAAOnkC,KAAKikC,gCAAgCtvB,QApDpD,uBAOW,SAAgBiY,GACnB,OAAO,IAAIwX,EAAgCxX,OARnD,KA0Da,GAAb,WAII,WAAoBA,GAAY,oBAC5B5sB,KAAKqkC,+BAAiC76B,KAAKQ,MAAM4iB,GALzD,0CAYI,WACI,OAAO5sB,KAAKqkC,+BAA+BvF,WAbnD,kBAgBI,WACI,OAAO9+B,KAAKqkC,+BAA+BC,SAjBnD,kBAoBI,WACI,OAAOtkC,KAAKqkC,+BAA+BE,SArBnD,mBAwBI,WACI,OAAOvkC,KAAKqkC,+BAA+BG,UAzBnD,kBA4BI,WACI,OAAOxkC,KAAKqkC,+BAA+BI,SA7BnD,yBAgCI,WACI,OAAOzkC,KAAKqkC,+BAA+BpD,gBAjCnD,kBAoCI,WACI,OAAOjhC,KAAKqkC,+BAA+BK,UArCnD,uBAQW,SAAgB9X,GACnB,OAAO,IAAI+X,EAA2B/X,OAT9C,KC5Da,GAAb,WAII,WAAoBA,GAAY,oBAC5B5sB,KAAK4kC,mBAAqBp7B,KAAKQ,MAAM4iB,GAL7C,6CAYI,WACI,OAAO5sB,KAAK4kC,mBAAmBC,cAbvC,wBAgBI,WACI,OAAO7kC,KAAK4kC,mBAAmB1D,eAjBvC,cAoBI,WACI,OAAOlhC,KAAK4kC,mBAAmB3rB,KArBvC,oBAwBI,WACI,OAAOjZ,KAAK4kC,mBAAmB5d,WAzBvC,oBA4BI,WACI,OAAOhnB,KAAK4kC,mBAAmB9F,WA7BvC,yBAgCI,WACI,OAAO9+B,KAAK4kC,mBAAmB3D,gBAjCvC,kBAoCI,WACI,OAAOjhC,KAAK4kC,mBAAmBb,SArCvC,qBAwCI,WACI,OAAO/jC,KAAK4kC,mBAAmBE,YAzCvC,gBA4CI,WACI,OAAO9kC,KAAK4kC,mBAAmBjwB,OA7CvC,mBAgDI,WACI,MAAwC,UAAjC3U,KAAK4kC,mBAAmBjwB,QAjDvC,uBAQW,SAAgBiY,GACnB,OAAO,IAAImY,EAAsBnY,OATzC,KAsDa,GAAb,WAII,WAAoBA,GAAY,oBAC5B5sB,KAAKglC,iBAAmBx7B,KAAKQ,MAAM4iB,GAL3C,8CAYI,WACI,OAAO5sB,KAAKglC,iBAAiBC,eAbrC,wBAgBI,WACI,OAAOjlC,KAAKglC,iBAAiB9D,eAjBrC,cAoBI,WACI,OAAOlhC,KAAKglC,iBAAiB/rB,KArBrC,oBAwBI,WACI,OAAOjZ,KAAKglC,iBAAiBhe,WAzBrC,oBA4BI,WACI,OAAOhnB,KAAKglC,iBAAiBlG,WA7BrC,yBAgCI,WACI,OAAO9+B,KAAKglC,iBAAiB/D,gBAjCrC,kBAoCI,WACI,OAAOjhC,KAAKglC,iBAAiBjB,SArCrC,qBAwCI,WACI,OAAO/jC,KAAKglC,iBAAiBF,YAzCrC,gBA4CI,WACI,OAAO9kC,KAAKglC,iBAAiBrwB,QA7CrC,uBAQW,SAAgBiY,GACnB,OAAO,IAAIsY,EAAoBtY,OATvC,K,uSC5Ba,GAAb,kDAYI,WACI1C,EACA7C,EACAW,EACAO,EACA4c,GAA8D,kCAE9D,cAAMjb,EAAgB7C,EAAmBW,EAAaO,EAAkB4c,IAVpEC,2BAAqC,GAmGnC,EAAAC,KAAO,aAvFb,EAAKC,iCAAmCH,EACxC,EAAKI,+BAAiCrb,EACtC,EAAKsb,uBAAyB,EAAKC,mCACnC,EAAKC,kBAAoB,EAAKL,KAC9B,EAAKM,wBAA0B,EAAKC,wBACpC,EAAKC,yBAA2B,EAAKC,iBACrC,EAAKC,mBAAqB,EAAKC,eAC/B,EAAKC,+BAAiC,IAAI,GAA2B,eACrE,EAAKC,kCAAoC7e,EACzC,EAAK8e,4BAA6B,EAb4B,EAjBtE,8CAiCW,WACH,OAAO,sEAAsBnmC,KAAKmmC,6BAlC1C,qBAqCiB,SAAQntB,GAAe,W,2OAChChZ,KAAKmmC,4BAA6B,GAC9BnmC,KAAKomC,4B,gBAC2B,O,SAAMpmC,KAAKomC,4B,OAC3C,OADMC,E,gBACAA,EAAWxe,QAAQ7O,G,OAE7B,O,SAAM,EAAM6O,QAAO,UAAC7O,G,kDA3C5B,yBA8CiB,SAAYnJ,G,2HACW,O,SAAM7P,KAAKsmC,kB,cAArCD,E,yBACCA,EAAWE,KAAK,IAAI,GACvB,KAAYha,KACZ1c,K,kDAlDZ,8BAqDiB,SAAiBA,G,2HAGM,OAFH,IAAI,I,SAEK7P,KAAKsmC,kB,OAE3C,OAFMD,E,gBAEAA,EAAWE,KAAK,IAAI,GAA8B,KAAYha,KAAM1c,I,kDA1DlF,4BA6Dc,WACN,IAAI7P,KAAKwmC,qBAUT,OAPAxmC,KAAKymC,kBAAkBzmC,KAAKimC,+BAA+BpZ,UACvD7sB,KAAKimC,+BAA+BrG,UACpCxP,EAAA,EAAmBvxB,MACnB,KAAsBwxB,QACtB,iBAEJrwB,KAAKwmC,sBAAuB,EACrBrsB,QAAQ1B,YAxEvB,yCA2EoB,SACZiuB,EACAvuB,EACAwuB,G,+IACO,G,6CA/Ef,+BAmFc,SACN9Z,EACA+S,EACAgH,EACArhC,EACAuK,GAEA9P,KAAKwmC,sBAAuB,EAE5B,IAAMK,EAAwD,IAAI,GAC9DD,EACA92B,EACAvK,OACA3G,EACAiuB,GAEJ,IACU7sB,KAAKslC,iCAAiCwB,UACxC9mC,KAAKslC,iCAAiCwB,SAAS9mC,KAAKslC,iCAAkCuB,GAE5F,aAvGV,qCAmHoB,SAAwBR,G,4HACpCrmC,KAAK+mC,mBAAqB/mC,KAAKgnC,mB,kBACxBX,G,kDArHf,gDA2HkB,W,6JACNrmC,KAAKhB,eAAgBgB,KAAKwmC,qB,yCACnBrsB,QAAQ1B,W,OAMiB,OAH9BwuB,EAAyC,IAAI,I,kBAGTjnC,KAAKsmC,kB,OACI,OADzCD,E,gBAC+CA,EAAW7sB,O,UAA1D3J,E,QACF7P,KAAKhB,eAAgBgB,KAAKwmC,qB,wBAE1BS,EAAuBxuB,U,kBAChB0B,QAAQ1B,W,WAGd5I,E,0CACM7P,KAAKylC,sC,QAGV5Y,EAAoB7sB,KAAKimC,+BAA+BpZ,UAC1Dqa,GAAqB,E,eAGbr3B,EAAQs3B,wBAAwB9a,c,OAC/B,S,MACA,wB,MACA,Y,QAkOA,Y,MAKA,U,QA8CA,uB,yBApRK+a,EAAyC,GAAuB1X,SAAS7f,EAAQ4c,U,KAC/E2a,EAAezD,QAAQtX,c,OAOtB,oB,QA8BA,4B,QAiBA,0B,QAeA,Y,QAcA,e,QAYA,0B,QAYA,c,QAcA,iB,QAaA,mB,QAcA,gB,QA0BA,iB,QAiBA,sB,QAQA,U,gCA9LKgb,EAAwD,GAAgC3X,SAAS7f,EAAQ4c,UAEzG6a,EAA6CD,EAAoB5J,aAAatyB,KAAI,SAAC4yB,GAUrF,MAT0C,CACtC2G,OAAQ3G,EAAE2G,OACV6C,YAAaxJ,EAAEe,SACf7lB,GAAI8kB,EAAEkD,cACNjD,OAAQD,EAAE0G,OACVpC,QAAStE,EAAEyG,QACXgD,WAAYzJ,EAAEwG,OACdkD,kBAAmB1J,EAAEuG,WAKvBtkC,KAAKslC,iCAAiCoC,0BACxC1nC,KAAKslC,iCAAiCoC,yBAAyB1nC,KAAKslC,iCAChE,IAAI,GAA0B+B,EAAoBtD,OAAQsD,EAAoB3d,MAC1E2d,EAAoBvE,YAAauE,EAAoBtE,gBACrDsE,EAAoBrE,oBAAqBqE,EAAoBnD,WAC7DmD,EAAoBlD,QAASmD,EAAoBza,I,oCAUvD7sB,KAAKslC,iCAAiCqC,kCACxC3nC,KAAKslC,iCAAiCqC,iCAAiC3nC,KAAKslC,iCACxE,IAAI,GAA8B8B,EAAenG,cAC7C/C,GACAkJ,EAAe3nC,MAAOotB,I,oCAa5B7sB,KAAKslC,iCAAiCqC,kCACxC3nC,KAAKslC,iCAAiCqC,iCAAiC3nC,KAAKslC,iCACxE,IAAI,GAA8B8B,EAAenG,cAC7C/C,GACAkJ,EAAe3nC,MAAOotB,I,oCAW5B7sB,KAAKslC,iCAAiCqC,kCACxC3nC,KAAKslC,iCAAiCqC,iCAAiC3nC,KAAKslC,iCACxE,IAAI,GAA8B8B,EAAenG,cAC7C/C,GACAkJ,EAAe3nC,MAAOotB,I,oCAU5B7sB,KAAKslC,iCAAiCsC,wBACxC5nC,KAAKslC,iCAAiCsC,uBAAuB5nC,KAAKslC,iCAC9D,IAAI,GAAiB8B,EAAe3nC,MAAkBotB,I,oCAUxD7sB,KAAKslC,iCAAiCuC,wBACxC7nC,KAAKslC,iCAAiCuC,uBAAuB7nC,KAAKslC,iCAC9D,IAAI,GAAgC8B,EAAe3nC,MAAiBO,KAAKimC,+BAA+BpZ,Y,oCAU1G7sB,KAAKslC,iCAAiCqC,kCACxC3nC,KAAKslC,iCAAiCqC,iCAAiC3nC,KAAKslC,iCACxE,IAAI,GAA8B8B,EAAenG,cAC7C/C,GACAkJ,EAAe3nC,MAAOotB,I,oCAU5B7sB,KAAKslC,iCAAiCwC,yBACxC9nC,KAAKslC,iCAAiCwC,wBAAwB9nC,KAAKslC,iCAC/D,IAAI,GAAkB8B,EAAe3nC,MAAkBotB,I,oCAWzD7sB,KAAKslC,iCAAiCqC,kCACxC3nC,KAAKslC,iCAAiCqC,iCAAiC3nC,KAAKslC,iCACxE,IAAI,GAA8B8B,EAAenG,cAC7C/C,GACAkJ,EAAetI,SAAUjS,I,oCAU/Bkb,EAAqD,GAA2BrY,SAAS7f,EAAQ4c,UAEjGub,EAA2C,CAC7CtD,OAAQqD,EAAuBrD,OAC/B6C,YAAaQ,EAAuBjJ,SACpC7lB,GAAI8uB,EAAuB9G,cAC3BjD,OAAQ+J,EAAuBtD,OAC/BpC,QAAS0F,EAAuBvD,QAChCgD,WAAYO,EAAuBxD,OACnCkD,kBAAmBM,EAAuBzD,QAGxCtkC,KAAKslC,iCAAiC2C,gCACxCjoC,KAAKslC,iCAAiC2C,+BAA+BjoC,KAAKslC,iCACtE,IAAI,GACA0C,EACAnb,I,oCAUNqb,EAA2C,CAC7CjvB,GAAImuB,EAAenG,eAGjBjhC,KAAKslC,iCAAiC6C,iCACxCnoC,KAAKslC,iCAAiC6C,gCAAgCnoC,KAAKslC,iCACvE,IAAI,GAAqB4C,EAAoBrb,I,mCAWD,CAChD5T,GAAImuB,EAAenG,e,oCAMjBvX,EAAQ,IAAIN,GAAA,GACd,SAACC,GACG,IAAMzE,EAAqBwiB,EAAe1d,MAC1C,OAAOvP,QAAQ1B,QAAQmM,MAE3B,SAACyE,GACG,IAAMzE,EAAqBwiB,EAAe1d,MAC1C,OAAOvP,QAAQ1B,QAAQmM,MAE/B5kB,KAAKkqB,eAAiBR,E,4GAsBxB0e,EAAuC,GAAsB1Y,SAAS7f,EAAQ4c,UAE9E4b,EAA8C,IAAI,GAA8BD,EAAcnH,cAChGjhC,KAAKsoC,gBAAgBF,EAAclH,cACnCkH,EAAcphB,cACdpoB,OACAA,EACAwpC,EAAcvD,iBACdjmC,OACAA,EACAiR,EAAQ4c,cACR7tB,GAEAwpC,EAAcG,eAEY3pC,IAAtBypC,EAAahH,MAAsBgH,EAAahH,KAAKlpC,OAAS,GAEvDiwC,EAAcnvB,KAAOjZ,KAAKolC,8BADjC8B,GAAY,GASZA,GACMlnC,KAAKslC,iCAAiCkD,qBACxCxoC,KAAKslC,iCAAiCkD,oBAAoBxoC,KAAKslC,iCAC3D,IAAI,GAAyCrH,GAA0CoK,EAAcxb,UAGpFjuB,IAAtBypC,EAAahH,OACpBrhC,KAAKolC,2BAA6BgD,EAAcnvB,GAC1CjZ,KAAKslC,iCAAiCkD,qBACxCxoC,KAAKslC,iCAAiCkD,oBAAoBxoC,KAAKslC,iCAC3D,IAAI,GAAyCrH,GAA4CoK,EAAcxb,K,oCAW7G4b,EAAmC,GAAoB/Y,SAAS7f,EAAQ4c,UAExEic,EAA4C,IAAI,GAA8BD,EAAYxH,cAC5FjhC,KAAKsoC,gBAAgBG,EAAYvH,cACjCuH,EAAYzhB,cACZpoB,OACAA,EACA6pC,EAAYxD,kBACZrmC,OACAA,OACAA,EACAiR,EAAQ4c,cACR7tB,GAEEoB,KAAKslC,iCAAiCkD,qBACxCxoC,KAAKslC,iCAAiCkD,oBAAoBxoC,KAAKslC,iCAC3D,IAAI,GAAyCrH,GAAmDyK,EAAY7b,I,qJAWzH7sB,KAAKylC,sC,kCAEZzlC,KAAKwmC,sBAAuB,E,iCAGzBS,EAAuBxvB,S,oEA7ctC,8BAgdkB,W,iIACNzX,KAAKhB,a,yCACEmb,QAAQ1B,W,OAOL,OALdzY,KAAKwmC,sBAAuB,EAEtBmC,EAA0B3oC,KAAKylC,qC,kBAGjBkD,E,cAAVC,E,yBACCA,G,yCAEP5oC,KAAKymC,kBAAkBzmC,KAAK6oC,mBAAqB7oC,KAAK6oC,mBAAmBhc,UAAY,GAAI7sB,KAAK6oC,mBAAqB7oC,KAAK6oC,mBAAmBjJ,UAAY,GAAIxP,EAAA,EAAmBvxB,MAAO,KAAsBiqC,aAA3M,M,kBACO,M,4DA7dnB,8BAkeY,WAAgB,WACpB,OAAI9oC,KAAKhB,aACEmb,QAAQ1B,aAAqB7Z,GAEpCoB,KAAKomC,4BACEpmC,KAAKomC,4BAA4BpxB,MAAK,SAACqxB,GAC1C,OAAIA,EAAWvtB,UAAY,KAAgBiwB,cACvC,EAAKC,iBAAmB,KACxB,EAAK5C,4BAA8B,KAC5B,EAAKN,oBAET,EAAKM,+BACb,SAACt2B,GAGA,OAFA,EAAKk5B,iBAAmB,KACxB,EAAK5C,4BAA8B,KAC5B,EAAKN,sBAGhB9lC,KAAKwmC,qBACErsB,QAAQ1B,aAAqB7Z,IAGxCoB,KAAKomC,4BAA8BpmC,KAAKipC,cAAcj0B,MAAK,SAACqxB,GACxD,OAAOA,KAGJrmC,KAAKomC,+BA5fpB,6BA+fY,SAAgB8C,GACpB,IAAIhI,EAEJ,QAAItiC,IAAcsqC,EAA2B,CACzChI,EAAe,IAAIiI,GAAA,EADsB,oBAEfD,GAFe,IAEzC,2BAAqD,KAA1CE,EAA0C,QACjDlI,EAAazxB,IAAI25B,EAAYva,KAAMua,EAAYA,cAHV,+BAO7C,OAAOlI,MAzgBf,GAAgDlY,GAAA,G,uSCVnC,GAAb,+FACW,SAAkB8W,EAA6BxW,EAAuClC,GACzF,OAAO,IAAI,GAAiC0Y,EAAcxW,EAAclC,OAFhF,KAWa,GAAb,kDAUI,WAAmB0Y,EAA6BxW,EAAuClC,GAAyB,0BAC5G,IAAMiiB,EAAoB/f,EAC1B7qB,EAAA,EAAU0kB,YAAYkmB,EAAmB,gBACzC,IAAMC,EAAmBxJ,EAHmF,OAI5GrhC,EAAA,EAAU0kB,YAAYmmB,EAAkB,qBAExC,cAAMliB,EAAaiiB,EAAkB5kB,WAAY,IAAI,KAEhD8kB,iBAAmBD,EACxB,EAAKvV,gBAAiB,EACtB,EAAKxM,eAAiB8hB,EAAkB5kB,WAAW+C,QACnD,EAAKgiB,eAAiB,GAAWra,eAAX,iBACtB,EAAKsa,eAAoC,qBAAV/0B,MAA6C,qBAAZg1B,OAA2BC,GAAA,EAAQC,WAAaA,WAChH,EAAKC,iBAAsC,qBAAVn1B,MAA6C,qBAAZg1B,OAA2BC,GAAA,EAAQG,aAAeA,aAbR,EAVpH,2CAuCI,SAAqBhrB,GACjB9e,KAAKwpC,eAAe7b,UAAY7O,IAxCxC,wBA2CI,SAAwBA,GACpB9e,KAAKwpC,eAAe3b,aAAe/O,IA5C3C,qCAkDI,WACI,OAAO9e,KAAK+pC,gCAnDpB,sBAyDI,WACI,OAAO/pC,KAAKunB,iBA1DpB,wBA6DW,WACH,OAAOvnB,KAAK+zB,iBA9DpB,qBAqEW,SAAQrK,EAAe5K,EAAiBvN,GAC3C,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAK8nB,SAASkiB,4BAA8BtgB,EAC5C1pB,KAAKiqC,2BACLjqC,KAAK8nB,SAASoiB,aAAaprB,EAAIvN,GACjC,MAAOzB,GACL,GAAMyB,EACF,GAAIzB,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1ByB,EAAIoG,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAExC0B,EAAIzB,MAlFxB,wBA2FW,SAAWgP,EAAiBvN,GAC/B,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,qBACDn1B,IAA1BoB,KAAKmqC,kBACNnqC,KAAK6pC,iBAAiB7pC,KAAKmqC,kBAE9BnqC,KAAK8nB,SAASjR,aAAa7B,MAAK,WACtB8J,GACFA,OAEL,SAAChP,GACMyB,GACFA,EAAIzB,MAGd,MAAOA,GACL,GAAMyB,EACF,GAAIzB,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1ByB,EAAIoG,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAExC0B,EAAIzB,GAIZ9P,KAAK6nB,SAAQ,GAAM1R,OAAM,SAAC6C,GACtBa,EAAA,EAAOjiB,SAASygB,QAAQ,IAAI,IAAgBW,UArH5D,yBAiIW,SAAY2qB,EAAiB7kB,EAAiBvN,GACjD,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/B/zB,KAAKw0B,YAAYmP,EAAS7kB,EAAIvN,GAChC,MAAOzB,GACL,GAAMyB,EACF,GAAIzB,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1ByB,EAAIoG,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAExC0B,EAAIzB,GAKZ9P,KAAK6nB,SAAQ,GAAM1R,OAAM,SAAC6C,GACtBa,EAAA,EAAOjiB,SAASygB,QAAQ,IAAI,IAAgBW,UAjJ5D,mBA0JiB,W,gIACJhZ,KAAK+zB,e,gBAIN,OAHmB,QAAnB,EAAA/zB,KAAKwpC,sBAAc,SAAEY,kBACF,QAAnB,EAAApqC,KAAKwpC,sBAAc,SAAE/vB,QACrBzZ,KAAKwpC,oBAAiB5qC,E,SAChBoB,KAAK6nB,SAAQ,G,kDA/J/B,qBAuKoB,SAAQE,GAAkB,W,sOAClC/nB,KAAK+zB,e,qDAGLhM,E,gBAUA,YAT8BnpB,IAA1BoB,KAAKmqC,kBACLnqC,KAAK6pC,iBAAiB7pC,KAAKmqC,kBAE/BnqC,KAAK+zB,gBAAiB,EAChB/zB,KAAKwpC,iBACPxpC,KAAKwpC,eAAeY,kBACpBpqC,KAAKwpC,eAAe/vB,QACpBzZ,KAAKwpC,oBAAiB5qC,G,SAEpB,EAAMipB,QAAO,UAACE,G,kDArLhC,oCA6Lc,SAAuBuB,GAC7B,OAAO,IAAIW,EAAA,EAAiBX,EAActpB,KAAKunB,kBA9LvD,qCAyMc,SACN2C,EACA7C,EACAD,EACAmB,GAIA,OAAO,IAAI,GAA2B2B,EAAgB7C,EAFjBD,EAEiDmB,EAAkBvoB,QAjNhH,yBAoNY,SAAYqqC,EAAavrB,EAAevN,IAE5C,SAAmCkG,EAAqBqH,EAAevN,GAC7DkG,EACFA,EAAQzC,MAAK,SAACnV,GACV,IACUif,GACFA,IAEN,MAAO5U,GACCqH,GACFA,EAAI,yCAAD,OAA0CrH,EAA1C,UAGZ,SAAC8O,GACA,IACUzH,GACFA,EAAIyH,GAGV,MAAOlJ,QAIPyB,GACFA,EAAI,gBAKhB+4B,CA7BkBtqC,KAAK8nB,SA6BUwH,iBAAiB+a,GAAMvrB,EAAIvN,GAC5DvR,KAAKiqC,6BAnPb,sCAsPY,WAAwB,gBACErrC,IAA1BoB,KAAKmqC,kBACLnqC,KAAK6pC,iBAAiB7pC,KAAKmqC,kBAG/BnqC,KAAKmqC,iBAAmBnqC,KAAKypC,gBAAe,WACxC,EAAKc,YAAY,EAAKhB,iBAAiBiB,kBACxC,SA7PX,GAAsD,IClDzC,GAAb,kDAII,WAAmBxxB,EAAkCykB,EAA8B5Q,GAAkB,kCACjG,cAAMA,IACD0C,WAAavW,EAClB,EAAK0pB,gBAAkBjF,EAH0E,EAJzG,wCAUI,WACI,OAAOz9B,KAAKuvB,aAXpB,wBAcI,WACI,OAAOvvB,KAAK0iC,oBAfpB,GAA8D/V,EAAA,IfJ9D,SAAY6Q,GAER,+CAKA,2CAGA,yBAVJ,CAAYA,QAAwB,KgBG7B,IC8BKiN,GD9BC,GAAb,kDAUI,WAAmB5qC,EAAuC4M,EAAiBogB,GAAkB,kCACzF,cAAMpgB,EAAQogB,IACT6d,WAAa7qC,EAFuE,EAVjG,wCAmBI,WACI,OAAOG,KAAK0qC,eApBpB,GAAsDC,EAAA,GEQzC,GAAb,WAGI,WAAYC,GAAc,oBACtB5qC,KAAK6qC,WAAaD,EAJ1B,wCAOI,WACI,OAAO5qC,KAAK6qC,eARpB,KAkDa,GAAb,WAWI,WAAY5xB,EAAYyrB,EAAgB6C,EAAqBvJ,EAAiBqE,EAAkBmF,EAAqBC,EAA2BvgB,GAAc,oBAC1JlnB,KAAKsY,OAASW,EACdjZ,KAAK8qC,WAAapG,EAClB1kC,KAAK+qC,gBAAkBxD,EACvBvnC,KAAKgrC,WAAahN,EAClBh+B,KAAKsiC,YAAcD,EACnBriC,KAAKirC,eAAiBzD,EACtBxnC,KAAKkrC,sBAAwBzD,EAC7BznC,KAAKmrC,UAAYjkB,EACjBlnB,KAAKunB,eAAiB,IAAIjC,GAAA,EApBlC,wCA2BI,WACI,OAAOtlB,KAAK8qC,aA5BpB,uBA+BI,WACI,OAAO9qC,KAAK+qC,kBAhCpB,cAmCI,WACI,OAAO/qC,KAAKsY,SApCpB,6BAuCI,WACI,OAAOtY,KAAKkrC,wBAxCpB,kBA2CI,WACI,OAAOlrC,KAAKgrC,aA5CpB,mBA+CI,WACI,OAAOhrC,KAAKsiC,cAhDpB,sBAmDI,WACI,OAAOtiC,KAAKirC,iBApDpB,iBAuDI,WACI,OAAOjrC,KAAKmrC,YAxDpB,sBA2DI,WACI,OAAOnrC,KAAKunB,kBA5DpB,mBAuBW,SAAYtO,EAAY+N,EAAkBE,GAC7C,OAAO,IAAIkkB,EAAYnyB,EAAI,GAAIA,GAAI,GAAO,GAAO,EAAO+N,EAAUE,OAxB1E,K,uSClBsB,GAAtB,WAcI,iCAdJ,gEAsBW,SAA+BoC,EAAuC+hB,EAA0BC,EAAiBC,GAMpH,IAAIjC,EACAxqB,EACAvN,EAqBJ,OA5BA9S,EAAA,EAAUK,uBAAuBwqB,EAAc,GAA6BgV,WAAW4B,YAAYp1B,QAAQ,QAAS,WACpHrM,EAAA,EAAUK,uBAAuBwqB,EAAarF,OAAQ,GAA6Bqa,WAAW4B,YAAYp1B,QAAQ,QAAS,mCACtHwe,EAAahF,iBAAoBgF,EAAahG,YAAY1hB,GAAA,EAAWA,GAAA,EAAWijB,oCACjFpmB,EAAA,EAAUK,uBAAuBwqB,EAAahF,gBAAiB,GAA6Bga,WAAW4B,YAAYp1B,QAAQ,QAAS,gCAKpH,kBAATugC,GACP/B,EAAmB,IAAI,GAAiBhgB,EAAc+hB,GACtDvsB,EAAKwsB,EACL/5B,EAAMg6B,IAENjC,EAAmB,IAAI,GAAiBhgB,GACxCxK,EAAKusB,EACL95B,EAAM+5B,GAEVhC,EAAiBkC,yBACZ,WACS1sB,GACFA,OAGR,SAAChP,GACSyB,GACFA,EAAIzB,MAGTw5B,MAnDf,KAsGa,GAAb,kDAwFI,WAAmBhgB,EAAuCrQ,GAAW,MAYjE,GAZiE,qBACjE,gBAnFI8a,gBAA0B,EAI1B,EAAA0X,iBAA2B,EAK3B,EAAApN,WAA6B,GAA6BC,WAC1D,EAAAoN,mBAA6B,GAgmB7B,EAAAC,YAAc,SAACzhC,G,QACnB,EAAKuhC,iBAAkB,EACvB,KACyC,QAAhC,EAAC,EAAKG,kCAA0B,eAAEC,iBACnC,EAAKD,2BAA2BC,eAAe,EAAKD,2BAA4B1hC,IAEhD,QAA/B,EAAC,EAAK4hC,iCAAyB,eAAEC,sBAClC,EAAKD,0BAA0BC,oBAAoB,EAAKD,0BAA2B5hC,GAEzF,MAAOA,MAKL,EAAA8hC,eAAiB,SAAO9hC,GAAP,OAAgD,2IAE5B,QAAhC,EAAClK,KAAK4rC,kCAA0B,eAAEK,iBACnCjsC,KAAK4rC,2BAA2BK,eAAejsC,KAAK4rC,2BAA4B1hC,IAEhD,QAA/B,EAAClK,KAAK8rC,iCAAyB,eAAEI,sBAClClsC,KAAK8rC,0BAA0BI,oBAAoBlsC,KAAK8rC,0BAA2B5hC,GANtB,sDAWjE,OAXiE,mBAW3DlK,KAAKyZ,OAAM,GAXgD,0FAejE,EAAA0yB,WAAa,SAAOvD,EAA2B1+B,GAAlC,OAAgG,iIACjH,KACyC,QAAhC,EAAClK,KAAK4rC,kCAA0B,eAAE9E,WACnC9mC,KAAK4rC,2BAA2B9E,SAAS9mC,KAAK4rC,2BAA4B1hC,IAE1C,QAA/B,EAAClK,KAAK8rC,iCAAyB,eAAEM,uBAClCpsC,KAAK8rC,0BAA0BM,qBAAqBpsC,KAAK8rC,0BAA2B5hC,GAE1F,MAAOA,IARwG,iDAa7G,EAAAmiC,mCAAqC,SAACzD,EAA2B1+B,G,QACrE,IACI,IAAMoiC,EAA0B,EAAK7I,iBAAiB5F,eAAe3zB,EAAE+O,IACvE,QAA2Bra,IAAvB0tC,EAAkC,CAElC,OAAQpiC,EAAExR,KACN,KAAKwlC,GACDoO,EAAmB/E,YAAcr9B,EAAEzK,MACnC,MACJ,KAAKy+B,GACDoO,EAAmBC,OAASriC,EAAEzK,MAC9B,MACJ,KAAKy+B,GACDoO,EAAmB5lB,UAAYxc,EAAEzK,MACjC,MACJ,KAAKy+B,GACDoO,EAAmBjK,QAAUn4B,EAAEzK,MAC/B,MACJ,KAAKy+B,GACDoO,EAAmBE,qBAAuBtiC,EAAEzK,MAGpD,EAAKgkC,iBAAiBgJ,uBAAuBH,IAER,QAAhC,EAAC,EAAKV,kCAA0B,eAAEc,uBACJ,QAA/B,IAAKd,kCAA0B,SAAEc,oBAC7B,EAAKd,2BACL,IAAI,GAAyCpO,GAAyBmP,QAClE,CAAC,EAAKC,cAAcN,IAAsBpiC,EAAE2iB,cAG9D,MAAO3iB,MAKL,EAAA2iC,0BAA4B,SAACjE,EAA2B1+B,KAIxD,EAAA4iC,yBAA2B,SAAClE,EAA2B1+B,G,QAC3D,IACI,EAAKu5B,iBAAiBhG,aAAa1yB,SAAQ,SAACgzB,GAAD,OAA6BA,EAAEsE,SAAWtE,EAAEC,QAAiB9zB,EAAEm4B,YACrE,QAAhC,EAAC,EAAKuJ,kCAA0B,eAAEc,uBACJ,QAA/B,IAAKd,kCAA0B,SAAEc,oBAC7B,EAAKd,2BACL,IAAI,GAAyCpO,GAAyBmP,QAClE,EAAKI,gBAAe,GAAQ7iC,EAAE2iB,aAE5C,MAAO3iB,MAKL,EAAA8iC,iCAAmC,SAACpE,EAA2B1+B,G,QACnE,IACI,IAAM+iC,EAAuC,EAAKxJ,iBAAiBgJ,uBAAuBviC,EAAEu4B,kBACrE7jC,IAAnBquC,IACqC,QAAhC,EAAC,EAAKrB,kCAA0B,eAAEc,uBACJ,QAA/B,IAAKd,kCAA0B,SAAEc,oBAC7B,EAAKd,2BACL,IAAI,GAAyCpO,GAAyB0P,mBAClE,CAAC,EAAKN,cAAcK,IAAkB/iC,EAAE2iB,aAG1D,MAAO3iB,MAKL,EAAAijC,kCAAoC,SAACvE,EAA2B1+B,G,QACpE,IACI,IAAMkjC,EAA2C,EAAK3J,iBAAiB5F,eAAe3zB,EAAEu4B,YAAYxpB,SACzEra,IAAvBwuC,IAEA,EAAK3J,iBAAiB4J,kBAAkBnjC,EAAEu4B,YAAYxpB,KACjB,QAAhC,EAAC,EAAK2yB,kCAA0B,eAAEc,uBAEJ,QAA/B,IAAKd,kCAA0B,SAAEc,oBAC7B,EAAKd,2BACL,IAAI,GAAyCpO,GAAyB8P,iBAClE,CAAC,EAAKV,cAAcQ,IAAsBljC,EAAE2iB,cAG9D,MAAO3iB,MAKL,EAAAqjC,sBAAwB,SAAC3E,EAA2B1+B,G,gBACxD,IACI,OAAQA,EAAEy5B,SACN,KAAK1F,IACoC,QAAhC,EAAC,EAAK2N,kCAA0B,eAAE4B,eACJ,QAA/B,IAAK5B,kCAA0B,SAAE4B,YAC7B,EAAK5B,2BACL,IAAI,GAAiC1hC,EAAEmjB,aAASzuB,EAAWsL,EAAE2iB,aAErE,MACJ,KAAKoR,IACoC,QAAhC,EAAC,EAAK2N,kCAA0B,eAAE6B,gBACJ,QAA/B,IAAK7B,kCAA0B,SAAE6B,aAC7B,EAAK7B,2BACL,IAAI,GAAiC1hC,EAAEmjB,aAASzuB,EAAWsL,EAAE2iB,aAErE,MACJ,KAAKoR,IACoC,QAAhC,EAAC,EAAK2N,kCAA0B,eAAE8B,uBACJ,QAA/B,IAAK9B,kCAA0B,SAAE8B,oBAC7B,EAAK9B,2BACL,IAAI,GAAiC1hC,EAAEmjB,aAASzuB,EAAWsL,EAAE2iB,cAI/E,MAAO3iB,MAKL,EAAAyjC,2BAA6B,SAAC/E,EAA2B1+B,G,UAC7D,IAiBI,QAfuBtL,IAAnBsL,EAAE+1B,cAAiD,OAAnB/1B,EAAE+1B,eAClC,EAAK2N,SAASlkB,MAAQxf,EAAE+1B,cAG5B,EAAKwD,iBAAiBhG,aAAtB,aAAyCvzB,EAAEuzB,mBAEV7+B,IAA7B,EAAK6kC,iBAAiBoK,KACtB,EAAKC,aAAc,IAEc,QAAhC,EAAC,EAAKlC,kCAA0B,eAAEc,uBACJ,QAA/B,IAAKd,kCAA0B,SAAEc,oBAC7B,EAAKd,2BACL,IAAI,GAAyCpO,GAAyB0P,mBAAoB,EAAKH,gBAAe,GAAO7iC,EAAE2iB,aAG3H,EAAKghB,GAAG7P,OAAQ,CAChB,IAAMc,EAAkD,QAA1C,EAAW,EAAK8M,kCAA0B,eAAEnnB,WAAWnB,YAAY1hB,GAAA,EAAWm9B,kCAC3EngC,IAAbkgC,GAA0BA,EAAS3mC,OAAS,GAAK2mC,IAAa,EAAK+O,GAAGtG,aAEtE,EAAKwG,oBAAoBjP,IAGnC,MAAO50B,MAKL,EAAA8jC,yBAA2B,SAACpF,EAA2B1+B,G,QAC3D,KACyC,QAAhC,EAAC,EAAK0hC,kCAA0B,eAAE/D,0BACJ,QAA/B,IAAK+D,kCAA0B,SAAE/D,uBAC7B,EAAK+D,2BACL1hC,IAEV,MAAOA,MA5tBT,EAAKqd,eAAiB,IAAIjC,GAAA,EAC1B,EAAK2oB,YAAc,IAAI,GAGE3kB,EAAahG,YAAY1hB,GAAA,EAAWA,GAAA,EAAW8jB,wCAEpE4D,EAAalG,YAAYxhB,GAAA,EAAWA,GAAA,EAAW8jB,sCAAuC,GAA6BmZ,qBAEvH,EAAKpC,aAAenT,EAAahG,YAAY1hB,GAAA,EAAWA,GAAA,EAAW8jB,uCAE9DzM,EAqBD,EAAKyyB,mBAAqBzyB,MArBrB,CAEuC,IAAxCqQ,EAAazD,gBAAgB1tB,QAC7BmxB,EAAa4kB,kBAAkB,EAAKzR,cAIdnT,EAAahG,YAAY1hB,GAAA,EAAWA,GAAA,EAAW+kB,yCAErE2C,EAAa6kB,aAAavnB,GAAA,EAAgBwnB,QAK9C,IAAIC,EAAuB/kB,EAAahG,YAAY1hB,GAAA,EAAWA,GAAA,EAAWm9B,oCACrDngC,IAAjByvC,GAA+C,OAAjBA,GAAyBA,EAAal2C,QAAU,GAAKk2C,EAAal2C,OAAS,MACzGk2C,EAAe,QAEnB/kB,EAAalG,YAAYxhB,GAAA,EAAWA,GAAA,EAAWm9B,6BAA8BsP,GAOjF,EAAKC,WAAahlB,EAGlB,IAAMa,EAAab,EAxC8C,OAyCjE7qB,EAAA,EAAU0kB,YAAYgH,EAAY,gBAClC,EAAK5C,eAAiB4C,EAAW1F,WAAW+C,QAC5C,EAAKikB,iBAAkB,EACvB,EAAKhI,iBAAmB,IAAI,GAC5B,EAAKqK,aAAc,EACnB,EAAKS,yBAA2B,IA9CiC,EAxFzE,wDAmBI,SAAkCC,GAC9BxuC,KAAK4rC,2BAA6B4C,IApB1C,gBAwBI,WACI,OAAOxuC,KAAK4tC,WAzBpB,sBA6BI,WACI,OAAO5tC,KAAKyuC,6BA9BpB,8BAkCI,WACI,OAAOzuC,KAAK0uC,WAnCpB,IAsCI,SAA8BjvC,GAC1BhB,EAAA,EAAUU,wBAAwBM,EAAO,sBACzCO,KAAK0uC,UAAYjvC,IAxCzB,kBA4CI,WACI,OAAOO,KAAKsuC,aA7CpB,0BAiDI,WACI,OAAOtuC,KAAK4tC,SAAW5tC,KAAK4tC,SAASvO,OAASr/B,KAAK0rC,qBAlD3D,sBAsDI,WACI,OAAO1rC,KAAKunB,iBAvDpB,qCA2DI,WACI,OAAOvnB,KAAKy8B,eA5DpB,yBA+DI,W,QACI,QAA+B,QAAxB,EAAAz8B,KAAKyjC,iBAAiBoK,UAAE,eAAE7P,UAAyC,QAAzB,EAACh+B,KAAKyjC,iBAAiBoK,UAAE,eAAExL,WAhEpF,uBAmEI,WACI,OAAOriC,KAAKyrC,iBAAmBzrC,KAAK8tC,cApE5C,wBAuEI,WACI,OAAO9tC,KAAK+sC,gBAAe,KAxEnC,cA2EI,WACI,OAAO/sC,KAAK4sC,cAAc5sC,KAAKyjC,iBAAiBoK,MA5ExD,gBA+EI,WACI,OAAO7tC,KAAK4sC,cAAc5sC,KAAKyjC,iBAAiBzf,QAhFxD,qCA8IW,SAAwBlF,EAAevN,GAAc,WACxD,IACUvR,KAAKyuC,4BACPzuC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWuQ,uBAAwBr9B,GAEvEvR,KAAKiuC,YAAYY,aAAa7uC,KAAKunB,oBAAgB3oB,GAC9C,SAACkwC,GACOA,GACD,EAAKH,YAAY,IAAI9vC,MAAM,EAAKw/B,WAAW0Q,yBAA0Bx9B,GAEzE,EAAKq8B,SAAWkB,EAChB,EAAKE,eAAelwB,EAAIvN,MAE3B,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MA/JpC,oCAwKW,SAAuBuN,EAAevN,GAAc,WACvD,IAEUvR,KAAKyuC,4BACPzuC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWuQ,uBAAwBr9B,GAGvE9S,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAW0Q,yBAEhE/uC,KAAKyjC,iBAAiB/F,KAAO19B,KAAK4tC,SAAS3M,cAC3CjhC,KAAKyuC,2BAA6B,GAA8BQ,WAAWjvC,KAAMA,KAAKsuC,YAItFtuC,KAAKyuC,2BAA2B9gB,UAAY3tB,KAAK2rC,YACjD3rC,KAAKyuC,2BAA2B5gB,aAAe7tB,KAAKgsC,eACpDhsC,KAAKyuC,2BAA2B3H,SAAW9mC,KAAKmsC,WAEhDnsC,KAAKyuC,2BAA2B9G,iCAAmC3nC,KAAKqsC,mCACxErsC,KAAKyuC,2BAA2B3G,wBAA0B9nC,KAAK6sC,0BAC/D7sC,KAAKyuC,2BAA2B7G,uBAAyB5nC,KAAK8sC,yBAC9D9sC,KAAKyuC,2BAA2BxG,+BAAiCjoC,KAAKgtC,iCACtEhtC,KAAKyuC,2BAA2BtG,gCAAkCnoC,KAAKmtC,kCACvEntC,KAAKyuC,2BAA2BjG,oBAAsBxoC,KAAKutC,sBAC3DvtC,KAAKyuC,2BAA2B/G,yBAA2B1nC,KAAK2tC,2BAChE3tC,KAAKyuC,2BAA2B5G,uBAAyB7nC,KAAKguC,yBAE9DhuC,KAAKyuC,2BAA2B34B,QAAQ9V,KAAK4tC,SAASlkB,OACjD,WACG,EAAKslB,eAAelwB,EAAIvN,MAE3B,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MA3MpC,iCAqNW,SAAoBkxB,EAA2B3jB,EAAevN,GACjE9S,EAAA,EAAUK,uBAAuB2jC,EAAa,eAC9C,YAA0BziC,KAAKkvC,wBAAwBzM,GAAc3jB,EAAIvN,KAvNjF,mCAkOW,SAAsBujB,EAAwBgK,EAAkBjQ,EAAc/P,EAAevN,GAAc,WAC9G,IAKI9S,EAAA,EAAUU,wBAAwB21B,EAAgB90B,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,mBAC/FrM,EAAA,EAAUU,wBAAwB2/B,EAAU9+B,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,aACzFrM,EAAA,EAAUU,wBAAwB0vB,EAAM7uB,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,aAErF9K,KAAKiuC,YAAYY,aAAa7uC,KAAKunB,eAAgBuN,GAC9C,SAACga,GACErwC,EAAA,EAAUK,uBAAuBgwC,EAAM,EAAKzQ,WAAW0Q,yBACvD,EAAKnB,SAAWkB,EAChB,EAAKR,WAAW1pB,mBAAqBkqB,EAAKK,yBAEpCrwB,GACFA,EAAGgwB,EAAKK,6BAGf,SAACr/B,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MA1PpC,qCAmQW,SAAwBuN,EAAevN,GAC1C,YAA0BvR,KAAKovC,8BAA+BtwB,EAAIvN,KApQ1E,yCAuQiB,W,qHAGL,OAFA9S,EAAA,EAAUK,uBAAuBkB,KAAKunB,eAAgBvnB,KAAKq+B,WAAW0Q,yBACtEtwC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAASlkB,MAAO1pB,KAAKq+B,WAAW0Q,yB,SACjE/uC,KAAKiuC,YAAYoB,MAAMrvC,KAAKunB,eAAgBvnB,KAAK4tC,SAASlkB,O,OAEhE1pB,KAAK6nB,U,kDA5QjB,kCAoRW,SAAqB/I,EAAevN,GACvC,YAA0BvR,KAAKsvC,2BAA4BxwB,EAAIvN,KArRvE,sCAwRW,WACH,OAAOvR,KAAKyZ,OAAM,KAzR1B,mCAiSW,SAAsBqF,EAAevN,GAAc,I,EAAA,OACtD,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAC3DvvC,KAAKwvC,eACNxvC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWoR,6BAA6B3kC,QAAQ,YAAa,SAAUyG,GAE5E,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAK0vC,gBAAe,IAC5D,WACG,EAAKV,eAAelwB,EAAIvN,MAE3B,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MAjTpC,sCA0TW,SAAyBuN,EAAevN,GAAc,I,EAAA,OACzD,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUK,uBAAuBkB,KAAKyuC,2BAA4BzuC,KAAKq+B,WAAWkR,sBAClF9wC,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAE3DvvC,KAAKwvC,eACNxvC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWoR,6BAA6B3kC,QAAQ,YAAa,SAAUyG,GAE5E,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAK2vC,mBAAkB,IAC/D,WACG,EAAKX,eAAelwB,EAAIvN,MAE3B,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MA5UpC,kCAsVW,SAAqBq5B,EAAgB9rB,EAAevN,GAAc,I,EAAA,OACrE,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUU,wBAAwByrC,EAAQ5qC,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,WACvFrM,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAE3DvvC,KAAK4vC,SACN5vC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWkR,sBAAuBh+B,GAGjEvR,KAAK6tC,GAAG7P,QAAUh+B,KAAK6tC,GAAG50B,KAAO2xB,GAClC5qC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWwR,4BAA4B/kC,QAAQ,YAAa,SAAUyG,IAI1F,IADOvR,KAAKyjC,iBAAiB7F,oBAAoBgN,IAE7D5qC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWyR,2BAA4Bv+B,GAE5C,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAK+vC,eAAenF,GAAQ,IAAQ,WAC7E,EAAKoE,eAAelwB,EAAIvN,MAEvB,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MAhXpC,oCA0XW,SAAuBq5B,EAAuC9rB,EAAevN,GAAc,I,EAAA,OAC9F,IAEI,GADA9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBACzB/zB,KAAK8rC,2BAA6BlB,EAAO5oC,eAAe,MAE1D,YAA0BhC,KAAKgwC,2BAA2BpF,GAAyB9rB,EAAIvN,OACpF,CACH9S,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAC3DvvC,KAAKwvC,eACNxvC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWwR,4BAA4B/kC,QAAQ,YAAa,WAAYyG,GAE5G,IAAI0vB,EAAwB,GAC5B,GAAsB,kBAAX2J,EACP3J,EAAgB2J,OACb,GAAIA,EAAO5oC,eAAe,MAAO,CAEpCi/B,EADkC2J,EACN3xB,QACzB,GAAI2xB,EAAO5oC,eAAe,UAAW,CAExCi/B,EADoB2J,EACCA,OAEzBnsC,EAAA,EAAUU,wBAAwB8hC,EAAejhC,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,YAG/E,IADO9K,KAAKy9B,aAAaK,WAAU,SAACC,GAAD,OAAoBA,EAAE9kB,KAAOgoB,MAE3EjhC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWyR,2BAA4Bv+B,GAE5C,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAKiwC,gBAAgBhP,IAAiB,WAC/E,EAAK+N,eAAelwB,EAAIvN,MAEvB,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,OAGtC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MA9ZpC,qCAuaW,SAAwBuN,EAAevN,GAAc,I,EAAA,OACxD,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAC3DvvC,KAAKwvC,eACNxvC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWoR,6BAA6B3kC,QAAQ,YAAa,WAAYyG,GAE9E,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAK0vC,gBAAe,IAAS,WACtE,EAAKV,eAAelwB,EAAIvN,MAEvB,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MAtbpC,wCA+bW,SAA2BuN,EAAevN,GAAc,I,EAAA,OAC3D,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAC3DvvC,KAAKwvC,eACNxvC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWoR,6BAA6B3kC,QAAQ,YAAa,eAAgByG,GAElF,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAK2vC,mBAAkB,IAAS,WACzE,EAAKX,eAAelwB,EAAIvN,MAEvB,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MA9cpC,oCAwdW,SAAuBq5B,EAAgB9rB,EAAevN,GAAc,I,EAAA,OACvE,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUU,wBAAwByrC,EAAQ5qC,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,WACvFrM,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAE3DvvC,KAAK4vC,SACN5vC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWkR,sBAAuBh+B,GAGjEvR,KAAK6tC,GAAG7P,QAAUh+B,KAAK6tC,GAAG50B,KAAO2xB,GAClC5qC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWwR,4BAA4B/kC,QAAQ,YAAa,SAAUyG,IAI1F,IADOvR,KAAKyjC,iBAAiB7F,oBAAoBgN,IAE7D5qC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWyR,2BAA4Bv+B,GAE5C,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAK+vC,eAAenF,GAAQ,IAAS,WAC9E,EAAKoE,eAAelwB,EAAIvN,MAEvB,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MAlfpC,kCA4fW,SAAqB1B,EAAiBiP,EAAevN,GAAc,I,EAAA,OACtE,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUU,wBAAwB0Q,EAAS7P,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,YACxFrM,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAC3DvvC,KAAK4vC,SACN5vC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWkR,sBAAuBh+B,GAGlE1B,EAAQ1X,OAAS6H,KAAKuuC,0BACtBvuC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,mBAAoByG,GAEjE,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAKkwC,kBAAkBrgC,IAAW,WAC3E,EAAKm/B,eAAelwB,EAAIvN,MAEvB,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MAhhBpC,iCA0hBW,SAAoButB,EAAkBhgB,EAAevN,GAAc,I,EAAA,OACtE,IACI9S,EAAA,EAAUmpB,gBAAgB5nB,KAAK+zB,gBAC/Bt1B,EAAA,EAAUmpB,gBAAgB5nB,KAAKyuC,2BAA2BzvC,cAC1DP,EAAA,EAAUU,wBAAwB2/B,EAAU9+B,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,aACzFrM,EAAA,EAAUK,uBAAuBkB,KAAK4tC,SAAU5tC,KAAKq+B,WAAWkR,sBAC3DvvC,KAAK4vC,SACN5vC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWkR,sBAAuBh+B,GAEvC,QAA/B,EAAAvR,KAAKyuC,kCAA0B,SAAElE,YAAYvqC,KAAKmwC,yBAAyBrR,IAAY,WACnF,EAAKkQ,eAAelwB,EAAIvN,MAEvB,SAACzB,GACE,EAAK6+B,YAAY7+B,EAAOyB,MAElC,MAAOzB,GACL9P,KAAK2uC,YAAY7+B,EAAOyB,MA1iBpC,wBA8iBW,WACH,OAAOvR,KAAK+zB,iBA/iBpB,qBAkjBW,SAAQ/a,G,MACPhZ,KAAKhB,aAGTgB,KAAK+zB,gBAAiB,EACX,QAAX,EAAA/zB,KAAK8xB,cAAM,SAAErY,QACbzZ,KAAKsuC,gBAAa1vC,EAClBoB,KAAKy8B,kBAAe79B,EACpBoB,KAAKunB,oBAAiB3oB,EACtBoB,KAAK4tC,cAAWhvC,EAChBoB,KAAK0uC,eAAY9vC,EACjBoB,KAAKiuC,iBAAcrvC,EACnBoB,KAAKyrC,iBAAkB,EACvBzrC,KAAK8tC,aAAc,EACnB9tC,KAAKyjC,sBAAmB7kC,KAhkBhC,iCAmkBI,WACI,OAAOoB,KAAK8rC,4BApkBpB,0CAukBiB,SAA6B1d,G,yHAChCpuB,KAAK8rC,0B,gBACP,O,SAAM9rC,KAAK8rC,0BAA0BryB,Q,OAEzCzZ,KAAK8rC,0BAA4B1d,EACjCpuB,KAAK8rC,0BAA0BhM,aAAe9/B,K,kDA5kBtD,4BA+kBI,WACI,IADuB,EACjBowC,EAAiBpwC,KAAK80B,eACtBiJ,EAAgC/9B,KAAKy9B,aAAatyB,KAAI,SAACklC,GACzD,MAAO,CACHp3B,GAAIo3B,EAAKp3B,GACTwuB,kBAAmB4I,EAAK5I,kBACxBvgB,MAAOmpB,EAAKnpB,UAGdjvB,EAAkC,GATjB,cAUL,GAA6Bq4C,wBAVxB,IAUvB,2BAAuE,KAA5D53C,EAA4D,QAC7D63C,EAAcvwC,KAAKykB,WAAWnB,YAAY5qB,EAAK,IACzC,KAAR63C,IACAt4C,EAAMS,GAAO63C,IAbE,8BAiBvB,MAD+B,CAAEt3B,GAAIm3B,EAAQ3S,aAAcM,EAAGyS,uBAAwBv4C,KA/lB9F,0BAmmBW,WACH,IAAM6mC,EAAsB9+B,KAAK6tC,GAAM7tC,KAAK6tC,GAAGtG,YAAc,mBAC7D,OAAO/9B,KAAKC,UAAU,CAElBwP,GAAI,IACJ6lB,WACAmC,cAAejhC,KAAK4tC,SAAS3M,cAC7B5B,OAAQr/B,KAAK4tC,SAASvO,OACtB1qB,KAAMspB,OA3mBlB,qCA2zBY,SAAwBwE,GAE5B,QAAuB7jC,IADsBoB,KAAKyjC,iBAAiBgJ,uBAAuBhK,IAEhFziC,KAAK8rC,0BAA2B,CAClC,IAAM2E,EAAmBzwC,KAAKywC,iBAE9B,OADAA,EAAiBhT,aAAe,CAACgF,GAC1BziC,KAAK8rC,0BAA0B4E,sBAAsBD,EAAkB,WAj0B9F,wCAs0BY,SAA2BhO,GAC/BziC,KAAKyjC,iBAAiB4J,kBAAkB5K,EAAYxpB,IACpD,IAAMw3B,EAAmBzwC,KAAKywC,iBAE9B,OADAA,EAAiBhT,aAAe,CAACgF,GAC1BziC,KAAK8rC,0BAA0B4E,sBAAsBD,EAAkB,WA10BtF,mBA60BkB,SAAM5oB,G,6HAGZ,O,SADA7nB,KAAKyrC,iBAAkB,E,SACc,QAArC,EAAMzrC,KAAKyuC,kCAA0B,eAAEh1B,Q,OACvCzZ,KAAKyuC,gCAA6B7vC,EACH,QAA/B,EAAAoB,KAAK4rC,kCAA0B,SAAE/jB,U,mEAKjCA,GACA7nB,KAAK6nB,U,2DAx1BjB,mBA61BI,W,MACI,OAAO7nB,KAAKyrC,mBAA4C,QAAzB,EAACzrC,KAAKyjC,iBAAiBoK,UAAE,eAAExL,WA91BlE,yBAi2BI,W,MACI,OAAOriC,KAAKyrC,kBAA2C,QAA5B,EAAIzrC,KAAKyjC,iBAAiBoK,UAAE,eAAE7P,UAl2BjE,4BAq2BY,SAAelf,EAASvN,GAC5B,GAAMuN,EAAI,CACN,IACIA,IACF,MAAO5U,GACCqH,GACFA,EAAIrH,GAGZ4U,OAAKlgB,KA92BjB,yBAk3BY,SAAYkR,EAAYyB,GAC5B,GAAMA,EACF,GAAIzB,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1ByB,EAAIoG,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAGxC0B,EAAIzB,KAz3BpB,4BA+3BY,SAAe6gC,GAAoB,WAEjClT,EAA8Bz9B,KAAKyjC,iBAAiBhG,aAAatyB,KAAI,SAAC4yB,GACxE,OAAO,EAAK6O,cAAc7O,MAE9B,OAAK4S,EAGMlT,EAFAA,EAAanyB,QAAO,SAACyyB,GAAD,OAAiC,IAAbA,EAAEC,YAr4B7D,2BA24BY,SAAcD,GAClB,OAAO,IAAI,GAAYA,EAAE9kB,GAAI8kB,EAAE2G,OAAQ3G,EAAEwJ,YAAaxJ,EAAEC,OAAQD,EAAEsE,QAAStE,EAAEyJ,WAAYzJ,EAAE0J,kBAAmB1J,EAAE7W,SA54BxH,+BA+4BY,SAAkBmb,GAItB,OAHA5jC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAASvO,OAAQ,kBACxD5gC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAAS3M,cAAe,iBAExDz3B,KAAKC,UAAU,CAClBk6B,QAASzF,GAET+C,cAAejhC,KAAK4tC,SAAS3M,cAC7B8C,OAAQ/jC,KAAK4tC,SAASvO,OACtB1qB,KAAMspB,GACNx+B,MAAO4iC,MAz5BnB,4BA65BY,SAAepB,EAAuBoB,GAI1C,OAHA5jC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAASvO,OAAQ,kBACxD5gC,EAAA,EAAUU,wBAAwB8hC,EAAe,iBAE1Cz3B,KAAKC,UAAU,CAClBk6B,QAASzF,GAET+C,cAAeA,EACf8C,OAAQ/jC,KAAK4tC,SAASvO,OACtB1qB,KAAMspB,GACNx+B,MAAO4iC,MAv6BnB,4BA26BY,SAAeE,GAInB,OAHA9jC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAASvO,OAAQ,kBACxD5gC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAAS3M,cAAe,iBAExDz3B,KAAKC,UAAU,CAClBk6B,QAASzF,GAET+C,cAAejhC,KAAK4tC,SAAS3M,cAC7B8C,OAAQ/jC,KAAK4tC,SAASvO,OACtB1qB,KAAMspB,GACNx+B,MAAO8iC,MAr7BnB,6BAy7BY,SAAgBtB,GAIpB,OAHAxiC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAASvO,OAAQ,kBACxD5gC,EAAA,EAAUU,wBAAwB8hC,EAAe,iBAE1Cz3B,KAAKC,UAAU,CAClBk6B,QAASzF,GAET+C,cAAeA,EACf8C,OAAQ/jC,KAAK4tC,SAASvO,OACtB1qB,KAAMspB,OAl8BlB,sCAs8BY,SAAyBa,GAK7B,OAJArgC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAASvO,OAAQ,kBACxD5gC,EAAA,EAAUU,wBAAwB2/B,EAAU,YAC5CrgC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAAS3M,cAAe,iBAExDz3B,KAAKC,UAAU,CAClBk6B,QAASzF,GACTY,WAEAmC,cAAejhC,KAAK4tC,SAAS3M,cAC7B8C,OAAQ/jC,KAAK4tC,SAASvO,OACtB1qB,KAAMspB,GACNx+B,MAAOq/B,MAl9BnB,+BAs9BY,SAAkBjvB,GAKtB,OAJApR,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAASvO,OAAQ,kBACxD5gC,EAAA,EAAUU,wBAAwBa,KAAK4tC,SAAS3M,cAAe,iBAC/DxiC,EAAA,EAAUU,wBAAwB0Q,EAAS,WAEpCrG,KAAKC,UAAU,CAElBw3B,cAAejhC,KAAK4tC,SAAS3M,cAC7B5B,OAAQr/B,KAAK4tC,SAASvO,OACtBgC,KAAMxxB,EACN8E,KAAMspB,SAh+BlB,GAAsC,IC5IzB,GAAb,WAKI,WAAmB7W,GAAyB,oBACxCpnB,KAAK4wC,gBAAkBxpB,EAN/B,kDASc,SAAetI,EAAcvN,GACnC,GAAMuN,EAAI,CACN,IACIA,IACF,MAAO5U,GACCqH,GACFA,EAAIrH,GAGZ4U,OAAKlgB,KAlBjB,yBAsBc,SAAYkR,EAAYyB,GAC9B,GAAMA,EACF,GAAIzB,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1ByB,EAAIoG,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAGxC0B,EAAIzB,OA7BpB,K,wSH4BA,SAAY26B,GACR,2BAAU,+BAAY,6BAD1B,CAAYA,QAAW,K,II7BXoG,GCAAC,GLoCN,G,kDAGF,WAAmBxnB,EAAuClC,EAA2B2pB,GAAmC,kCACpH,cAAMznB,EAAclC,IACf4pB,gBAAkBvG,GAAYwG,SAC7BF,IACF,EAAKG,eAAiBH,EACtB,EAAKlF,eAAiB,WAClB,EAAKmF,gBAAkBvG,GAAY0G,WAGvC,EAAKlF,eAAiB,WAClB,EAAK+E,gBAAkBvG,GAAYwG,UAGvC,EAAKG,WAAa,SAAOC,EAA2BnnC,GAAlC,OAAwE,oIAI1E,QAAZ,EAAIA,EAAErK,cAAM,eAAEowB,cAJwE,gBAKlF,OALkF,SAK5EjwB,KAAKsxC,eALuE,OAOlFtxC,KAAKuxC,gBAAgBrnC,EAAErK,OAAOowB,cAPoD,iDAW1F,EAAK6W,SAAW,SAAO8B,EAA0B1+B,GAAjC,OAA+E,4HACvFlK,KAAKgxC,kBAAoBvG,GAAYwG,SADkD,gBAGnF,OAHmF,kBAG7EjxC,KAAKsxC,eAHwE,sDAKnFtxC,KAAKgxC,gBAAkBvG,GAAYwG,SALgD,0DAxBiB,E,uCAmCxH,WACI,OAAOjxC,KAAKgxC,iB,IAGhB,SAAiBQ,GACbxxC,KAAKgxC,gBAAkBQ,I,0BAGpB,WACHxxC,KAAKgxC,gBAAkBvG,GAAY0G,Y,6BAG1B,W,qHAET,OADAnxC,KAAKgxC,gBAAkBvG,GAAYwG,S,SAC7BjxC,KAAKsxC,e,+EAOP,SAAgBxhC,G,UACpB,IACI,GAAM9P,KAAKkxC,eAAepK,SAAU,CAChC,IAAMD,EAAwD,IAAI,GACjD,QAD0F,EAClG,OAAL/2B,QAAK,IAALA,OAAK,EAALA,EAAOkJ,cAAM,QAAIoX,EAAA,EAAmBvxB,MACjB,QADsB,EACpC,OAALiR,QAAK,IAALA,OAAK,EAALA,EAAOmgB,oBAAY,QAAIngB,EACP,QADY,EACvB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOvK,iBAAS,QAAI,KAAsBujC,kBAC1ClqC,EACK,OAALkR,QAAK,IAALA,OAAK,EAALA,EAAO+c,WAEX7sB,KAAKkxC,eAAepK,SAAS9mC,KAAKkxC,eAAgBrK,IAExD,MAAO38B,O,0BAKC,W,2HAGN,O,SADAlK,KAAKyxC,iC,SACc,QAAnB,EAAMzxC,KAAK8nB,gBAAQ,eAAEjR,a,OACrB7W,KAAKgxC,gBAAkBvG,GAAYwG,S,8GAhFC,IA2FnC,GAAb,kDAYI,WAAmB7pB,GAAyB,kCACxC,cAAMA,IATF2M,gBAA0B,EAE1B,EAAA2d,gBAA0B,EAE1B,EAAArT,WAA6B,GAA6BC,WAC1D,EAAAqT,mBAA6B,mCAC7B,EAAAC,sBAAgC,SAIpC,EAAKrqB,eAAiB,IAAIjC,GAAA,EAFc,EAZhD,4CAiBI,WACI,OAAOtlB,KAAKunB,iBAlBpB,qCAqBI,WACI,OAAOvnB,KAAK+pC,gCAtBpB,wBAyBI,W,MACI,OAA4B,QAA5B,EAAO/pC,KAAKupC,wBAAgB,eAAE9L,eA1BtC,mCAgDW,SAAsBqC,EAAmBhB,EAAkB+S,EAA4BC,EAAmBC,GAAiB,WAE9H,IAEI,GAA4B,kBAAjBjS,EAA2B,CAElCrhC,EAAA,EAAUK,uBAAuBghC,EAAc9/B,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,oBAC5FrM,EAAA,EAAUU,wBAAwB2/B,EAAU9+B,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,aAEnF9K,KAAKupC,kBACPvpC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWuQ,uBAAwBmD,GAGvE,IAAIljB,EAAegjB,OACNjzC,IAATiwB,GAA+B,OAATA,GAA0B,KAATA,IAAeA,EAAO,GAA6BgQ,qBAG9F7+B,KAAKgyC,4BAA8B,GAAwBC,iBACvDjyC,KAAK2xC,mBACL3xC,KAAK4xC,uBACT5xC,KAAKgyC,4BAA4B7D,aAAavnB,GAAA,EAAgBwnB,QAC9DpuC,KAAKgyC,4BAA4B9D,kBAAkBrf,GACnD7uB,KAAKgyC,4BAA4B5uB,YAAYxhB,GAAA,EAAWA,GAAA,EAAW8jB,sCAAuCmJ,GAC1G7uB,KAAKgyC,4BAA4B5uB,YAAYxhB,GAAA,EAAWA,GAAA,EAAWm9B,6BAA8BD,GAEjG,IAAMz4B,EAAmBrG,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWq9B,6BAChE54B,GACArG,KAAKgyC,4BAA4B5uB,YAAYxhB,GAAA,EAAWA,GAAA,EAAWq9B,6BAA8B54B,GAErG,IAAM6rC,EAA6BlyC,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWojB,8BAC1EktB,GACAlyC,KAAKgyC,4BAA4B5uB,YAAYxhB,GAAA,EAAWA,GAAA,EAAWojB,8BAA+BktB,GAItGlyC,KAAKupC,iBAAmB,IAAI,GAAiBvpC,KAAKgyC,6BAClDhyC,KAAKupC,iBAAiBiF,uBAAyBxuC,KAE/CA,KAAKupC,iBAAiB4I,sBAClBrS,EACAhB,EACAjQ,GACC,SAAChvB,GAEOA,GACD,EAAK8uC,YAAY,IAAI9vC,MAAM,EAAKw/B,WAAW0Q,yBAA0BgD,GAGzE,EAAKC,4BAA4BptB,mBAAqB/kB,EAGtD,EAAK0pC,iBAAiB6I,wBACjB,WACG,EAAKpD,eAAe8C,EAAQC,MAE/B,SAACjiC,GACE,EAAK6+B,YAAY7+B,EAAOiiC,SAInC,SAACjiC,GACE,EAAK6+B,YAAY7+B,EAAOiiC,UAGD,kBAAjBjS,GAEdrhC,EAAA,EAAUK,uBAAuBghC,EAAc9/B,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,oBAC5FrM,EAAA,EAAUU,wBAAwB2/B,EAAU9+B,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,aAGzF9K,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWm9B,4BAA6BD,GAExE9+B,KAAKupC,iBAAmBzJ,EAExB9/B,KAAKupC,iBAAiBiF,uBAAyBxuC,KAE/CvB,EAAA,EAAUK,uBAAuBkB,KAAKupC,iBAAkBvpC,KAAKq+B,WAAW0Q,yBACxEtwC,EAAA,EAAUK,uBAAuBkB,KAAKupC,iBAAiBuF,KAAKplB,MAAO1pB,KAAKq+B,WAAW0Q,yBAEnF/uC,KAAKgyC,4BAA8BlS,EAAahO,OAEhD9xB,KAAKgvC,eAAe6C,EAAoBC,IAExC9xC,KAAK2uC,YACD,IAAI9vC,MAAMmB,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS,8BACvDgnC,GAGV,MAAOhiC,GACL9P,KAAK2uC,YAAY7+B,EAAyB,kBAAX+hC,EAAsBE,EAASD,MAzI1E,oCAkJW,SAAuBhzB,EAAevN,GAAc,WAEvD,YAAqD,2GAGjD,OAHiD,SAG3CvR,KAAKsxC,eAHsC,OAKjD,OALiD,SAK3CtxC,KAAKupC,iBAAiB+F,2BALqB,OAOjD,OAPiD,SAO3CtvC,KAAKupC,iBAAiB6F,8BAPqB,OAQjDpvC,KAAK6nB,UAR4C,gDAU/C/I,EAAIvN,KA9JlB,kCAuKW,SAAqB1B,EAAiBiP,EAAevN,G,MAExD,IACI9S,EAAA,EAAUK,uBAAuBkB,KAAKupC,iBAAkBvpC,KAAKq+B,WAAWkR,sBACxE9wC,EAAA,EAAUU,wBAAwB0Q,EAAS7P,KAAKq+B,WAAW6B,YAAYp1B,QAAQ,QAAS+E,IAEnE,QAArB,EAAA7P,KAAKupC,wBAAgB,SAAE8I,qBAAqBxiC,EAASiP,EAAIvN,GAC3D,MAAOzB,GAEL9P,KAAK2uC,YAAY7+B,EAAOyB,MAhLpC,oCAyLW,SAAuBuN,EAAevN,GAAc,WACvD,YAAqD,uHAE7C9S,EAAA,EAAUK,uBAAuBkB,KAAKupC,iBAAkBvpC,KAAKq+B,WAAWkR,sBACxE9wC,EAAA,EAAUK,uBAAuBkB,KAAKupC,iBAAiBuF,KAAKplB,MAAO1pB,KAAKq+B,WAAW0Q,8BAErDnwC,IAA1BoB,KAAKsyC,iBALoC,gBAMzC,OANyC,SAMnCtyC,KAAKuyC,8BAN8B,OAc7C,OANA9zC,EAAA,EAAUK,uBAAuBkB,KAAKsyC,iBAAkBtyC,KAAKq+B,WAAWkR,sBAEnEvvC,KAAKwyC,UACNxyC,KAAK2uC,YAAY,IAAI9vC,MAAMmB,KAAKq+B,WAAWkR,sBAAuBh+B,GAXzB,UAcvCvR,KAAKyyC,6BAdkC,QAgB7CzyC,KAAK0xC,gBAAiB,EAhBuB,wBAmB7C,OAnB6C,0BAkB7C1xC,KAAK0xC,gBAAiB,EAlBuB,UAmBvC1xC,KAAKsxC,eAnBkC,6EAsB/CxyB,EAAIvN,KAhNlB,mCAwNW,SAAsBuN,EAAevN,GAAc,WACtD,YAAqD,kIAExCvR,KAAK0xC,eAFmC,gBAIzC,OAJyC,SAInC1xC,KAAKsxC,eAJ8B,wCAU7C,OADAtxC,KAAK0xC,gBAAiB,EATuB,SAUvC,IAAIv3B,SAAQ,SAAC1B,EAAqBb,G,MACf,QAArB,IAAK06B,wBAAgB,SAAEb,+BAA+Bh5B,EAASb,MAXtB,+BAe7C,OAf6C,oCAevC5X,KAAKsxC,eAfkC,0DAiB/CxyB,EAAIvN,KA1OlB,wBA6OW,WACH,OAAOvR,KAAK+zB,iBA9OpB,qBAiPW,SAAQ/a,EAAiBsU,EAAsB/b,GAA6B,WAC/E,YAAqD,uHAC7CvR,KAAKhB,YAAegB,KAAK0xC,eADoB,iDAIjD,OAJiD,SAI3C1xC,KAAKsxC,eAJsC,OAKjDtxC,KAAK+zB,gBAAiB,EACU,QAAhC,EAAA/zB,KAAKgyC,mCAA2B,SAAEv4B,QAClCzZ,KAAK+pC,mCAAgCnrC,EACrCoB,KAAKunB,oBAAiB3oB,EACtBoB,KAAK4wC,qBAAkBhyC,EACvBoB,KAAKgyC,iCAA8BpzC,EACd,QAArB,EAAAoB,KAAKupC,wBAAgB,SAAE1hB,UACvB7nB,KAAKupC,sBAAmB3qC,EAZyB,iDAa/C0uB,EAAS/b,KA/PvB,0BAqQkB,W,2HAGN,O,SADAvR,KAAK0xC,gBAAiB,E,SACK,QAA3B,EAAM1xC,KAAKsyC,wBAAgB,eAAEI,kB,OAC7B1yC,KAAKsyC,sBAAmB1zC,E,yGAzQpC,yCAqRkB,W,6IAGuBA,IAAzBoB,KAAK4wC,kBACL5wC,KAAK4wC,gBAAkB,EAAYtpB,8BAInCtnB,KAAKgyC,4BAA4B1uB,YAAY1hB,GAAA,EAAWA,GAAA,EAAW8iB,gCAC/D1kB,KAAK2xC,oBACT3xC,KAAKgyC,4BAA4B5uB,YAAYxhB,GAAA,EAAWA,GAAA,EAAW8iB,6BAA8B,IAI/FgF,EAAgBipB,mBAAmB3yC,KAAKupC,iBAAiBuF,KAAKplB,OAIpEsV,GAFIA,EAAuBh/B,KAAKgyC,4BAA4B1uB,YACxD1hB,GAAA,EAAWA,GAAA,EAAWojB,8BAA+B,GAA6B4tB,aAC1D9nC,QAAQ,WAAY9K,KAAKupC,iBAAiBuF,KAAK+D,uBAErE37B,E,gBAAuB8nB,G,OAAe,GAA6B8T,W,YAAc,GAA6B1U,aAAa1U,M,YAASA,GAE1I1pB,KAAKgyC,4BAA4B5uB,YAAYxhB,GAAA,EAAWA,GAAA,EAAWsjB,kCAAmChO,GAEtGlX,KAAKsyC,iBAAmB,IAAI,GAAkCtyC,KAAKgyC,4BAA6BhyC,KAAK4wC,gBAAiB5wC,M,wBAEtH,O,oCAAMA,KAAKsxC,e,+EA/SvB,wCAuTY,WAA0B,WAC9B,OAAO,IAAIn3B,SAAQ,SAAC1B,EAAqBb,GACrC,EAAK06B,iBAAiBS,gCAAgCt6B,EAASb,QAzT3E,oBA6TI,WAGI,SAAK5X,KAAKupC,iBAAiByJ,cAAgBhzC,KAAKsyC,qBAK5CtyC,KAAK0xC,gBAAkB1xC,KAAKsyC,iBAAiBx5B,QAAU2xB,GAAY0G,WAAanxC,KAAKsyC,iBAAiBx5B,QAAU2xB,GAAYwI,aAK5HjzC,KAAKupC,iBAAiB2J,mBA1UlC,GAA4C,I,2TMxG/B,GAAb,kDASI,WAAmBC,EAAkD/rB,GAAyB,0BAC1F,IAAMgsB,EAA2DD,EADyB,OAE1F10C,EAAA,EAAU0kB,YAAYiwB,EAA6B,2BAEnD30C,EAAA,EAAUU,wBACNi0C,EAA4BC,0BAC5BzxC,GAAA,EAAWA,GAAA,EAAW8jB,wCAE1B,cAAM0B,EAAagsB,EAA4B3uB,WAAY,IAAI6uB,GAAA,IAC1D7pB,wBAAyB,EAT4D,EATlG,uDAiCW,WAEH,OADAhrB,EAAA,EAAUK,uBAAuBkB,KAAKupC,iBAAkB,gBACjDvpC,KAAKupC,iBAAiBkH,mBAnCrC,8BAsCI,WACI,OAAOzwC,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAvCtD,IA0CI,SAA8B6E,GAC1BjrB,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkC6E,KA5CjF,wBA+CI,SAAwBzL,GACpBxf,EAAA,EAAUK,uBAAuBmf,EAAG,gBACpCje,KAAKupC,iBAAmBtrB,IAjDhC,qCAoDI,WAGI,OAFAxf,EAAA,EAAUmpB,gBAAgB5nB,KAAKypB,wBAExBzpB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAW8jB,wCAvDtD,sBA0DI,WACI,OAAO1lB,KAAKunB,iBA3DpB,6CA8DW,SAAgCzI,EAAiBvN,GACpD,YAA0BvR,KAAK8pB,oCAAoC,IAAgBC,cAAejL,EAAIvN,KA/D9G,4CAkEW,SAA+BuN,EAAiBvN,GACnD,YAA0BvR,KAAKgqB,qCAAsClL,EAAIvN,KAnEjF,mBAsEiB,W,wHACJvR,KAAKypB,uB,gBACN,O,SAAMzpB,KAAK6nB,SAAQ,G,kDAxE/B,mCA6EiB,SAAsB4oB,EAAoC9M,G,2HAGnE,OAFM4P,EAAQvzC,KAAK8nB,SACnBrpB,EAAA,EAAUK,uBAAuBy0C,EAAM,qB,SACjCA,EAAKC,qBAAqB/C,EAAkB9M,G,kDAhF1D,8BAmFW,SAAiB8P,GACpBzzC,KAAK8mC,SAAW,SAACl8B,EAAQV,GACfupC,EAAY3M,UACd2M,EAAY3M,SAAS2M,EAAavpC,IAG1ClK,KAAKosC,qBAAuB,SAACxhC,EAAQV,GAC3BupC,EAAYrH,sBACdqH,EAAYrH,qBAAqBqH,EAAavpC,IAGtDlK,KAAK0zC,YAAc,SAAC9oC,EAAQV,GAClBupC,EAAYhG,cACdgG,EAAYhG,aAAagG,EAAavpC,IAG9ClK,KAAKoxC,WAAa,SAACxmC,EAAQV,GACjBupC,EAAYjG,aACdiG,EAAYjG,YAAYiG,EAAavpC,IAG7ClK,KAAK+rC,oBAAsB,SAACnhC,EAAQV,GAC1BupC,EAAY1H,qBACd0H,EAAY1H,oBAAoB0H,EAAavpC,IAGrDlK,KAAKksC,oBAAsB,SAACthC,EAAQV,GAC1BupC,EAAYvH,qBACduH,EAAYvH,oBAAoBuH,EAAavpC,IAGrDlK,KAAK6rC,eAAiB,SAACjhC,EAAQV,GACrBupC,EAAY5H,gBACd4H,EAAY5H,eAAe4H,EAAavpC,IAGhDlK,KAAKisC,eAAiB,SAACrhC,EAAQV,GACrBupC,EAAYxH,gBACdwH,EAAYxH,eAAewH,EAAavpC,MAzHxD,iCA8HW,WACHlK,KAAK8mC,cAAWloC,EAChBoB,KAAK0zC,iBAAc90C,EACnBoB,KAAKoxC,gBAAaxyC,EAClBoB,KAAK6rC,oBAAiBjtC,EACtBoB,KAAKisC,oBAAiBrtC,EACtBoB,KAAKosC,0BAAuBxtC,EAC5BoB,KAAK+rC,yBAAsBntC,EAC3BoB,KAAKksC,yBAAsBttC,IAtInC,qBAgJoB,SAAQmpB,GAAkB,W,sOAClC/nB,KAAKypB,uB,qDAIL1B,E,gBAEA,OADA/nB,KAAKypB,wBAAyB,E,SACxBzpB,KAAK6oB,qB,OAGf,O,SAAM,EAAMhB,QAAO,UAACE,G,kDA1J5B,oCA6Jc,SAAuBuB,GAC7B,OAAO,IAAIW,EAAA,EACPX,EACAtpB,KAAKykB,cAhKjB,qCAmKc,SACNyF,EACA7C,EACAD,EACAmB,GACA,IAAM4B,EAA8B/C,EACpC,OAAO,IAAIusB,GAAA,EAA+BzpB,EAAgB7C,EAAmB8C,EAAY5B,EAAkBvoB,UAzKnH,GAA2C,I,uSCV9B,GAAb,WAWI,WAAmBonB,GAAyB,oBACxCpnB,KAAK4wC,gBAAkBxpB,EACvBpnB,KAAKunB,eAAiB,IAAIjC,GAAA,EAC1BtlB,KAAK4zC,oBAAiBh1C,EACtBoB,KAAKypB,wBAAyB,EAftC,yDAqCW,SAAsBqW,EAA6BhhB,EAAevN,GACrE,IAAM+3B,EAAmBxJ,EACzBrhC,EAAA,EAAUK,uBAAuBwqC,EAAkB,gBAInDtpC,KAAK4zC,eAAiB,IAAI,GAAsB9T,EAAahO,OAAQ9xB,KAAK4wC,iBAC1EnyC,EAAA,EAAUK,uBAAuBkB,KAAK4zC,eAAgB,cACtD5zC,KAAK4zC,eAAeC,iBAAiB7zC,MAErC,YAA0BspC,EAAiBwK,6BAA6B9zC,KAAK4zC,gBAAiB90B,EAAIvN,KA/C1G,8BAyGI,WACI,OAAOvR,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCA1GtD,IAoHI,SAA8B6E,GAC1BjrB,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkC6E,KAtHjF,qCAgII,WAGI,OAFAjrB,EAAA,EAAUmpB,gBAAgB5nB,KAAKypB,wBAExBzpB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAW8jB,wCAnItD,sBA6II,WACI,OAAO1lB,KAAKunB,iBA9IpB,oCA0JW,SAAuBzI,EAAevN,GACzCvR,KAAK4zC,eAAeb,gCAAgCj0B,EAAIvN,KA3JhE,mCAuKW,SAAsBuN,EAAevN,GACxCvR,KAAK4zC,eAAenC,+BAA+B3yB,EAAIvN,KAxK/D,oCA8KW,SAAuBuN,EAAevN,GAAc,WACvDvR,KAAK4zC,eAAeG,sBACpB,YAAqD,gLAAiBj1B,EAAIvN,KAhLlF,mBAyLW,SAAMuN,EAAiB6I,GAC1BlpB,EAAA,EAAUmpB,gBAAgB5nB,KAAKypB,wBAC/B,YAA0BzpB,KAAK6nB,SAAQ,GAAO/I,EAAI6I,KA3L1D,qBAqMoB,SAAQI,G,yHAChB/nB,KAAKypB,uB,qDAGHzpB,KAAK4zC,e,gBACP,O,SAAM5zC,KAAK4zC,eAAen6B,Q,OAC1BzZ,KAAK4zC,oBAAiBh1C,E,OAEtBmpB,IACA/nB,KAAKypB,wBAAyB,G,oDA9M1C,K,8UCkCa,GAAb,WAuHI,WAAmBH,EAA4BlC,GAAyB,oBACpE,IAAMmC,EAAqCD,EAC3C7qB,EAAA,EAAU0kB,YAAYoG,EAAkB,gBAEpB,OAAhBnC,IAEIpnB,KAAKonB,iBADWxoB,IAAhBwoB,EACsC,qBAAX1Z,YAA0B9O,EAAY,EAAYqkB,2BAE1DmE,GAI3BpnB,KAAKunB,eAAiBgC,EAAiB9E,WAAW+C,QAClDxnB,KAAKyjB,cAAe,EACpBzjB,KAAKg0C,kBAAmB,EACxBh0C,KAAKynB,sBAAwB,IAAIwsB,GAAA,EACjCj0C,KAAKk0C,sBAAwB,IAAIC,GAAA,EACjCn0C,KAAKo0C,4BAxIb,oDAuEI,WACI,OAAOp0C,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWijB,mCAxEtD,IAkFI,SAA8B6E,GAC1BjrB,EAAA,EAAUU,wBAAwBuqB,EAAO,SACzC1pB,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWijB,iCAAkC6E,KApFjF,sBA8FI,WACI,OAAO1pB,KAAKunB,iBA/FpB,oCAyGI,WACI,OAAOvnB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWq6B,qDAAuD,kDA1G7G,uBAwJW,SAAUoF,GAAY,MACnBgT,GAAsB,mBACvB,QAAU,oBADa,cAEvB,QAAU,qBAFa,cAGvB,QAAU,sBAHa,cAIvB,QAAU,mBAJa,cAKvB,QAAU,qBALa,cAMvB,QAAU,qBANa,cAOvB,QAAU,sBAPa,cAQvB,QAAU,oBARa,cASvB,QAAU,qBATa,cAUvB,QAAU,oBAVa,cAWvB,QAAU,qBAXa,cAYvB,QAAU,oBAZa,cAavB,QAAU,qBAba,cAcvB,QAAU,qBAda,cAevB,QAAU,oBAfa,cAgBvB,QAAU,sBAhBa,cAiBvB,QAAU,wBAjBa,cAkBvB,QAAU,wBAlBa,cAmBvB,QAAU,qBAnBa,cAoBvB,QAAU,uBApBa,cAqBvB,QAAU,oBArBa,cAsBvB,QAAU,wBAtBa,cAuBvB,QAAU,sBAvBa,cAwBvB,QAAU,mBAxBa,cAyBvB,QAAU,qBAzBa,cA0BvB,QAAU,sBA1Ba,cA2BvB,QAAU,uBA3Ba,cA4BvB,QAAU,qBA5Ba,cA6BvB,QAAU,qBA7Ba,cA8BvB,QAAU,mBA9Ba,cA+BvB,QAAU,sBA/Ba,cAgCvB,QAAU,sBAhCa,cAiCvB,QAAU,sBAjCa,cAkCvB,QAAU,oBAlCa,cAmCvB,QAAU,wBAnCa,cAoCvB,QAAU,qBApCa,cAqCvB,QAAU,oBArCa,cAsCvB,QAAU,qBAtCa,cAuCvB,QAAU,qBAvCa,cAwCvB,QAAU,oBAxCa,cAyCvB,QAAU,qBAzCa,cA0CvB,QAAU,uBA1Ca,cA2CvB,QAAU,wBA3Ca,cA4CvB,QAAU,uBA5Ca,cA6CvB,QAAU,oBA7Ca,cA8CvB,QAAU,sBA9Ca,cA+CvB,QAAU,sBA/Ca,cAgDvB,QAAU,sBAhDa,cAiDvB,QAAU,sBAjDa,cAkDvB,QAAU,sBAlDa,cAmDvB,QAAU,sBAnDa,cAoDvB,QAAU,sBApDa,cAqDvB,QAAU,qBArDa,cAsDvB,QAAU,wBAtDa,cAuDvB,QAAU,yBAvDa,cAwDvB,QAAU,oBAxDa,cAyDvB,QAAU,sBAzDa,cA0DvB,QAAU,qBA1Da,cA2DvB,QAAU,sBA3Da,cA4DvB,QAAU,sBA5Da,cA6DvB,QAAU,qBA7Da,cA8DvB,QAAU,qBA9Da,cA+DvB,QAAU,mBA/Da,cAgEvB,QAAU,sBAhEa,cAiEvB,QAAU,qBAjEa,cAkEvB,SAAW,uBAlEY,cAmEvB,QAAU,wBAnEa,cAoEvB,QAAU,sBApEa,cAqEvB,QAAU,sBArEa,cAsEvB,QAAU,sBAtEa,cAuEvB,QAAU,oBAvEa,cAwEvB,QAAU,mBAxEa,cAyEvB,QAAU,sBAzEa,cA0EvB,QAAU,oBA1Ea,cA2EvB,QAAU,sBA3Ea,cA4EvB,QAAU,yBA5Ea,cA6EvB,QAAU,qBA7Ea,cA8EvB,QAAU,oBA9Ea,cA+EvB,QAAU,wBA/Ea,cAgFvB,QAAU,sBAhFa,cAiFvB,QAAU,qBAjFa,cAkFvB,QAAU,sBAlFa,cAmFvB,QAAU,qBAnFa,cAoFvB,QAAU,sBApFa,cAqFvB,QAAU,uBArFa,cAsFvB,QAAU,sBAtFa,cAuFvB,QAAU,qBAvFa,cAwFvB,QAAU,qBAxFa,cAyFvB,QAAU,qBAzFa,cA0FvB,QAAU,wBA1Fa,cA2FvB,QAAU,sBA3Fa,cA4FvB,QAAU,uBA5Fa,cA6FvB,QAAU,yBA7Fa,cA8FvB,QAAU,yBA9Fa,cA+FvB,QAAU,sBA/Fa,cAgGvB,QAAU,qBAhGa,cAiGvB,QAAU,wBAjGa,cAkGvB,QAAU,qBAlGa,cAmGvB,QAAU,qBAnGa,cAoGvB,QAAU,qBApGa,cAqGvB,QAAU,sBArGa,cAsGvB,QAAU,qBAtGa,cAuGvB,QAAU,sBAvGa,cAwGvB,QAAU,qBAxGa,cAyGvB,QAAU,uBAzGa,cA0GvB,QAAU,qBA1Ga,cA2GvB,QAAU,oBA3Ga,cA4GvB,QAAU,qBA5Ga,cA6GvB,QAAU,yBA7Ga,cA8GvB,QAAU,qBA9Ga,cA+GvB,QAAU,qBA/Ga,cAgHvB,QAAU,mBAhHa,cAiHvB,QAAU,oBAjHa,cAkHvB,QAAU,sBAlHa,cAmHvB,QAAU,sBAnHa,cAoHvB,QAAU,wBApHa,cAqHvB,QAAU,uBArHa,cAsHvB,QAAU,yBAtHa,cAuHvB,QAAU,sBAvHa,GA0HxBrtB,EAAWhnB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWmlB,sCAAuC,SACzFG,EAAQlnB,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWqlB,mCAAoC,IACnFqtB,EAAeC,EAAkBC,UAAUnT,GAU/C,OATIrhC,KAAKy0C,yBACLztB,EAAW,QAEXE,EAAQA,GAASmtB,EAAuBrtB,GAExCE,IACAotB,EAAO,gBAAH,OAAmBptB,EAAnB,aAA6BotB,EAA7B,aAERA,EAAO,yKAAH,OAA4KttB,EAA5K,aAAyLstB,EAAzL,cA9RZ,4BA6SW,SAAejT,EAAcviB,EAAyCvN,EAA2B2E,GACpGlW,KAAK00C,UAAUrT,GAAM,EAAOviB,EAAIvN,EAAK2E,KA9S7C,4BA4TW,SAAeo+B,EAAcx1B,EAAyCvN,EAA2B2E,GACpGlW,KAAK00C,UAAUJ,GAAM,EAAMx1B,EAAIvN,EAAK2E,KA7T5C,mBAsUW,SAAM4I,EAAiBvN,GAC1B9S,EAAA,EAAUmpB,gBAAgB5nB,KAAKyjB,cAE/B,YAA0BzjB,KAAK6nB,SAAQ,GAAO/I,EAAIvN,KAzU1D,wBAgVI,WACI,OAAOvR,KAAKk5B,cAjVpB,qBA8VoB,SAAQnR,G,yHAChB/nB,KAAKyjB,a,qDAILsE,E,oBACI/nB,KAAKk5B,Y,gBACL,O,SAAMl5B,KAAKk5B,YAAYrR,U,OAI/B7nB,KAAKyjB,cAAe,E,kDAzW5B,qCAkXc,SAAwB6F,GAC9B,OAAO,IAAIqrB,GAAA,EACPrrB,EACAtpB,KAAKunB,kBArXjB,oCAyXc,SACN2C,EACA7C,EACAD,EACAwtB,GACA,OAAO,IAAIn1B,EAAA,EAAqByK,EAAgB7C,EAC5CutB,EAAmB50C,KAAMA,KAAKonB,eA/X1C,uCAkYc,WAAyB,WAE3Ba,EAAgC,qBAAXva,OAA0B,UAAY,OAC3Dwa,EAAS,UACTC,EAAY,UAES,qBAAdva,YACPqa,EAAaA,EAAa,IAAMra,UAAUwa,SAC1CF,EAASta,UAAUya,UACnBF,EAAYva,UAAU0a,YAG1B,IAAMssB,EAAoB50C,KAAK60C,wBAC3B,IAAI,IACA,IAAI,IAAQ,IAAI,IAAG5sB,EAAYC,EAAQC,MAEzC7D,EAAkBtkB,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAW8iB,iCAA6B9lB,GAC1FsrB,EAAkB5F,GAAuC,KAApBA,EACvC,IAAI6E,GAAA,EAAuC7E,GAC3C,IAAI8E,GAAA,GACA,SAACC,GACG,IAAMzE,EAAqB,EAAK2C,eAAejE,YAAY1hB,GAAA,EAAWijB,sCAAkCjmB,GACxG,OAAOub,QAAQ1B,QAAQmM,MAE3B,SAACyE,GACG,IAAMzE,EAAqB,EAAK2C,eAAejE,YAAY1hB,GAAA,EAAWijB,sCAAkCjmB,GACxG,OAAOub,QAAQ1B,QAAQmM,MAGnC5kB,KAAKk5B,YAAcl5B,KAAK80C,uBACpB5qB,EACAlqB,KAAKynB,sBACLznB,KAAKonB,YACLwtB,GAEJ50C,KAAKk5B,YAAY6b,kBAAoBC,GAAA,EAAsBC,gCACtD5iC,GAAA,EAAoCrS,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWulB,+CAA2CvoB,OAtanI,uBA0ac,SAAUyiC,EAAc6T,EAAiBp2B,EAAyCvN,EAA2B4jC,GAAyE,WAC5L,IACI12C,EAAA,EAAUmpB,gBAAgB5nB,KAAKyjB,cAC/B,IACI2xB,EADExV,EAAY,cAGdwV,EADAD,aAAsB,EACH,IAAI,IAA0BA,GAC1CA,aAAsB,IACVA,OACGv2C,IAAfu2C,EACY,IAAI,EAAgBA,QAEpBv2C,EAEvBoB,KAAKk0C,sBAAsBmB,QAAQ,IAAI,GAAiBzV,EAAWyB,EAAM6T,GAAQ,SAAChrC,GAE9E,GADA,EAAK8pC,kBAAmB,EAClBl1B,EACF,IACIA,EAAG5U,GACL,MAAOA,GACCqH,GACFA,EAAIrH,GAIhB4U,OAAKlgB,EAEL,EAAK02C,eAAen/B,OAAM,kBAE3B,SAACjM,GACMqH,GACFA,EAAIrH,KAETkrC,IAGHp1C,KAAKs1C,eAAen/B,OAAM,eAE5B,MAAOrG,GACL,GAAMyB,EACF,GAAIzB,aAAiBjR,MAAO,CACxB,IAAM8Y,EAAoB7H,EAC1ByB,EAAIoG,EAAWhZ,KAAO,KAAOgZ,EAAW9H,cAExC0B,EAAIzB,GAMZ9P,KAAK6nB,SAAQ,GAAM1R,OAAM,kBA5drC,0BAgeoB,W,8HACPnW,KAAKyjB,cAAiBzjB,KAAKg0C,iB,gBAEM,OADlCh0C,KAAKg0C,kBAAmB,E,SACgBh0C,KAAKk0C,sBAAsBqB,U,cAA7D7V,E,yBACC1/B,KAAKk5B,YAAYsc,MAAM9V,EAAQ2B,KAAM3B,EAAQ+V,OAAQ/V,EAAQE,UAAWF,EAAQ5gB,GAAI4gB,EAAQnuB,IAAKmuB,EAAQyV,a,mDApe5H,yBAkJW,SAAkB7rB,EAA4Be,EAAgEjD,GACjH,IAAMmC,EAAqCD,EAE3C,OADAe,EAA+B5F,WAAW6F,QAAQf,EAAiB9E,YAC5D,IAAI8vB,EAAkBjrB,EAAclC,KArJnD,uBAweY,SAAiBia,GACrB,OAAOA,EAAKv2B,QAAQ,KAAM,SACrBA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,cA7e3B,KAkfa,GAQT,WAAY80B,EAAmByB,EAAcoU,EAAiB32B,EAAyCvN,EAA2B4jC,GAA8B,oBAC5Jn1C,KAAK4/B,UAAYA,EACjB5/B,KAAKqhC,KAAOA,EACZrhC,KAAKy1C,OAASA,EACdz1C,KAAK8e,GAAKA,EACV9e,KAAKuR,IAAMA,EACXvR,KAAKm1C,WAAaA,G,2DJ/iB1B,SAAYtE,GAKR,6BAMA,iCAXJ,CAAYA,QAAoC,KCAhD,SAAYC,GAKR,yBAMA,mBAMA,2BAjBJ,CAAYA,QAAkC,KIUvC,IAAM,GAAb,WAWI,WAAmB4E,GAG6B,IAF7BC,EAE6B,uDAFyB9E,GAAqC+E,UAC3FC,EAC6B,uDADqB/E,GAAmCgF,QACrFC,EAA6B,4EAC5Ct3C,EAAA,EAAUK,uBAAuB42C,EAAe,iBAChD11C,KAAKunB,eAAiB,IAAIjC,GAAA,EAC1BtlB,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWo0C,sCAAuCN,GAClF11C,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWq0C,sCAAuCpF,GAAqC8E,IACvH31C,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWs0C,oCAAqCpF,GAAmC+E,IACnH71C,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWu0C,qCAAsCz5B,OAAOq5B,IApBhG,0CAuCW,WAEH,OADA/1C,KAAKo2C,aACEp2C,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWy0C,kCAzC1D,qBA4CW,SAAQjoB,GACXpuB,KAAKo2C,aACYhoB,EAAWE,aACnBxD,cAAcwrB,iCAAiCt2C,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWy0C,mCA/CvG,yBAyDI,WACI,OAAOr2C,KAAKykB,WAAWnB,YAAY1hB,GAAA,EAAWo0C,wCA1DtD,IAoEI,SAAyBN,GACrBj3C,EAAA,EAAUU,wBAAwBu2C,EAAe,iBACjD11C,KAAKykB,WAAWrB,YAAYxhB,GAAA,EAAWo0C,sCAAuCN,KAtEtF,sBAgFI,WACI,OAAO11C,KAAKunB,iBAjFpB,wBAoFY,WACJ,IAAM4G,EAAanuB,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAW20C,6BAA8B,MACtFC,EAAahtC,KAAKQ,MAAMmkB,GAExBunB,EAAgB11C,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWo0C,uCAC7DN,IACAc,EAAWd,cAAgBA,GAG/B,IAAMC,EAAgB31C,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWq0C,uCAC7DN,IACAa,EAAWb,cAAgBA,GAG/B,IAAME,EAAc71C,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWs0C,qCAC3DL,IACAW,EAAWX,YAAcA,GAI7BW,EAAWC,UAAY,gBAEvB,IAAMC,EAAqB12C,KAAKunB,eAAejE,YAAY1hB,GAAA,EAAWu0C,sCAC3C,SAAvBO,EACAF,EAAWT,cAAe,EACI,UAAvBW,IACPF,EAAWT,cAAe,GAG9B/1C,KAAKunB,eAAenE,YAAYxhB,GAAA,EAAWy0C,+BAAgC7sC,KAAKC,UAAU+sC,OAjHlG,uBA+BW,SAAgB5pB,GACnBnuB,EAAA,EAAUK,uBAAuB8tB,EAAM,QACvC,IAAMkF,EAAS,IAAI6kB,EAA8B,IAGjD,OAFA7kB,EAAOvK,eAAiB,IAAIjC,GAAA,EAC5BwM,EAAOrN,WAAWrB,YAAYxhB,GAAA,EAAW20C,6BAA8B3pB,GAChEkF,MApCf,KCJa,GAAb,WAGI,WAAoB3D,GAAkB,oBAClC,IAAMyoB,EAAIptC,KAAKQ,MAAMmkB,GACrB1vB,EAAA,EAAUK,uBAAuB83C,EAAEC,MAAM,GAAI,SAC7C72C,KAAK82C,aAAeF,EAAEC,MAAM,GANpC,8CA+BI,WACI,OAAO72C,KAAK82C,eAhCpB,yBA2CI,WACI,OAAO92C,KAAK+2C,aAAaC,wBAAwBC,gBA5CzD,8BAuDI,WACI,OAAOj3C,KAAK+2C,aAAaC,wBAAwBE,YAxDzD,6BAkEI,WACI,OAAOl3C,KAAK+2C,aAAaC,wBAAwBG,oBAnEzD,wBA6EI,WACI,OAAOn3C,KAAK+2C,aAAaC,wBAAwBI,gBA9EzD,yBAiBW,SAAkBv3C,GACrBpB,EAAA,EAAUK,uBAAuBe,EAAQ,UACzC,IAAM+sB,EAAe/sB,EAAO4kB,WAAWnB,YAAY1hB,GAAA,EAAWy5B,kCAE9D,OADA58B,EAAA,EAAUK,uBAAuB8tB,EAAM,QAChC,IAAIyqB,EAA8BzqB,OArBjD,M,6BCdA,4DAEI0qB,EAA4BC,IAAMC,cAAc,IACrCF,EAAaG,SACbH,EAAaI,SAarB,SAASC,EAAmBC,EAAQC,GACzC,IAAIC,EAAWC,qBAAWT,GAC1B,OAAOM,GAAUE,EAASD,IAAkBA,I,6BCZ9C,IAAYG,EAoBApoB,EA3BZ,oEAOA,SAAYooB,GAKR,yBAMA,mCAMA,qBAjBJ,CAAYA,MAAe,KAoB3B,SAAYpoB,GACR,yBACA,yBACA,qDACA,qCACA,qBACA,uCACA,yCACA,+BACA,6BATJ,CAAYA,MAAiB,M,0ECxBhB32B,EAAb,kCACkB,EAAAg/C,QAAkB,4BAClB,EAAA/rB,aAAuB,iBACvB,EAAAgsB,YAAsB,eACtB,EAAAxlB,oBAA8B,kBAC9B,EAAAylB,KAAe,OACf,EAAAC,UAAoB,cACpB,EAAAC,gBAA0B,aAC1B,EAAAC,iBAA2B,e,6BCJ7C,IAAYhhB,EAPZ,kCAOA,SAAYA,GAMR,yBAOA,2BAMA,6CAOA,2CAOA,6CAMA,6CAOA,2CAMA,6CAOA,2CAMA,6CAMA,gEAMA,4DAMA,sDAMA,oDAMA,gDAMA,8CAMA,8CAMA,kDAjHJ,CAAYA,MAAY,M,qGCAZihB,E,+BAAZ,SAAYA,GACR,mBACA,uBAFJ,CAAYA,MAAW,KAKhB,IAAMC,EAAb,WASI,WACIlsB,EACA8T,EACAnU,EACAhT,GAEA,GAFW,oBATP,KAAAw/B,SAAgB,KAWhBnsB,IAAgBisB,EAAYhsB,MAAQ6T,GAA4B,kBAAVA,EACtD,MAAM,IAAI,IAAsB,4BAGpC,GAAI9T,IAAgBisB,EAAY/rB,QAAU4T,KAAUA,aAAgBhzB,aAChE,MAAM,IAAI,IAAsB,+BAOpC,OAJApN,KAAK04C,gBAAkBpsB,EACvBtsB,KAAKy4C,SAAWrY,EAChBpgC,KAAK24C,YAAc1sB,GAAoB,GACvCjsB,KAAKsY,OAASW,GAAU,cAChBjZ,KAAKssB,aACT,KAAKisB,EAAY/rB,OACbxsB,KAAK44C,SAA+B,OAApB54C,KAAK0sB,WAAsB1sB,KAAK0sB,WAAW/O,WAAa,EACxE,MACJ,KAAK46B,EAAYhsB,KACbvsB,KAAK44C,SAAW54C,KAAKysB,SAASt0B,QAhC9C,6CAoCI,WACI,OAAO6H,KAAK04C,kBArCpB,mBAwCI,WACI,OAAO14C,KAAK24C,cAzCpB,gBA4CI,WACI,OAAO34C,KAAKy4C,WA7CpB,oBAgDI,WACI,GAAIz4C,KAAK04C,kBAAoBH,EAAY/rB,OACrC,MAAM,IAAI,IAAsB,oCAGpC,OAAOxsB,KAAKy4C,WArDpB,sBAwDI,WACI,GAAIz4C,KAAK04C,kBAAoBH,EAAYhsB,KACrC,MAAM,IAAI,IAAsB,kCAGpC,OAAOvsB,KAAKy4C,WA7DpB,cAgEI,WACI,OAAOz4C,KAAKsY,WAjEpB,M,0ECTa+Z,EAAb,kCACkB,EAAAI,MAAgB,QAChB,EAAAomB,yBAAmC,MACnC,EAAAC,wBAAkC,eAClC,EAAAC,mBAA6B,aAC7B,EAAAC,iBAA2B,aAC3B,EAAAC,0BAAoC,sBACpC,EAAAC,oBAA8B,sBAC9B,EAAA5mB,OAAiB,SACjB,EAAA6mB,wBAAkC,0BAClC,EAAA5mB,SAAmB,WACnB,EAAA6mB,UAAoB,YACpB,EAAA5mB,yBAAmC,yBACnC,EAAA6mB,4BAAsC,8BACtC,EAAAC,kBAA4B,oBAC5B,EAAAC,UAAoB,a,6BClBvB,SAASC,EAAgB7oC,GAItC,OAHA6oC,EAAkBhhD,OAAOiN,eAAiBjN,OAAOmX,eAAiB,SAAyBgB,GACzF,OAAOA,EAAE8oC,WAAajhD,OAAOmX,eAAegB,IAEvC6oC,EAAgB7oC,GAJzB,mC,6BCOA,IAAY+oC,EAPZ,kCAOA,SAAYA,GAIR,yBAKA,qDAKA,mDAMA,yCAKA,6CAKA,uCAKA,mCAKA,mCAKA,6BA7CJ,CAAYA,MAAqB,M,gICDpBC,EAAb,kDAQI,WACIrtB,EACAW,EACA2S,EACAga,EACAxZ,EACAhmB,EACAy/B,EACA5gC,GAAW,MAEX,GAFW,qBAENgU,EACD,MAAM,IAAI,IAAkB,QAGhC,IAAK2S,EACD,MAAM,IAAI,IAAkB,aAGhC,IAAM3T,EAAqC,GAY3C,GAXAA,EAAQ,IAAYksB,MAAQlrB,EAC5BhB,EAAQ,IAAYmsB,WAAaxY,EACjC3T,EAAQ,IAAYqsB,mBAAoB,IAAIhoC,MAAOC,cAC/CqpC,IACA3tB,EAAQ,IAAYisB,aAAe0B,GAGnCx/B,IACA6R,EAAQ,IAAYosB,iBAAmBj+B,GAGvCy/B,EACA,IAAK,IAAMhnB,KAAcgnB,EACjBhnB,IACA5G,EAAQ4G,GAAcgnB,EAAkBhnB,IAzBzC,OAgCP,EADA5Z,EACA,YAAMqT,EAAa8T,EAAMnU,EAAShT,GAElC,YAAMqT,EAAa8T,EAAMnU,IAGxB6tB,SAAW7sB,EAChB,EAAKiV,cAAgBtC,EACrB,EAAKma,gBAAkBH,EACvB,EAAKI,aAAe5/B,EACpB,EAAK6/B,sBAAwBJ,EAzClB,eAhBnB,sCA4DI,WACI,OAAO75C,KAAK85C,WA7DpB,qBAgEI,WACI,OAAO95C,KAAKkiC,gBAjEpB,uBAoEI,WACI,OAAOliC,KAAK+5C,kBArEpB,oBAwEI,WACI,OAAO/5C,KAAKg6C,eAzEpB,6BA4EI,WACI,OAAOh6C,KAAKi6C,0BA7EpB,GAA6C,KAgF3B,EAAAtZ,sBAAwB,SAAC9wB,GACnC,IAAIod,EAAO,KACP2S,EAAY,KACZga,EAAc,KAEdx/B,EAAW,KACTy/B,EAA+C,GAErD,GAAIhqC,EAAQoc,QACR,IAAK,IAAM4G,KAAchjB,EAAQoc,QACzB4G,IACIA,EAAWxG,gBAAkB,IAAY8rB,KAAK9rB,cAC9CY,EAAOpd,EAAQoc,QAAQ4G,GAChBA,EAAWxG,gBAAkB,IAAY+rB,UAAU/rB,cAC1DuT,EAAY/vB,EAAQoc,QAAQ4G,GACrBA,EAAWxG,gBAAkB,IAAYisB,iBAAiBjsB,cAC9Cxc,EAAQoc,QAAQ4G,GAC5BA,EAAWxG,gBAAkB,IAAY6rB,YAAY7rB,cAC5DutB,EAAc/pC,EAAQoc,QAAQ4G,GACvBA,EAAWxG,gBAAkB,IAAYgsB,gBAAgBhsB,cAChEjS,EAAWvK,EAAQoc,QAAQ4G,GAE3BgnB,EAAkBhnB,GAAchjB,EAAQoc,QAAQ4G,IAMhE,OAAO,IAAI8mB,EACP9pC,EAAQyc,YACRW,EACA2S,EACAga,EACA/pC,EAAQuwB,KACRhmB,EACAy/B,EACAhqC,EAAQoJ,M,0GC/GE8Z,EAAtB,kGAmBc,SACNjB,EACAM,EACA/rB,GAEArG,KAAKk6C,gBAAgB,IAAWrzB,2CAC5B,IAAoBkyB,mBACpBjnB,EACAM,EACA/rB,GAEJrG,KAAKk6C,gBAAgB,IAAWpzB,iDAC5B,IAAoBmyB,0BACpBnnB,EACAM,EACA/rB,GAEJrG,KAAKk6C,gBAAgB,IAAWvzB,sCAC5B,IAAoByyB,UACpBtnB,EACAM,EACA/rB,GAEJrG,KAAKk6C,gBAAgB,IAAWC,gDAC5B,IAAoBhB,wBACpBrnB,EACAM,EACA/rB,GAEJrG,KAAKk6C,gBAAgB,IAAWE,4CAC5B,IAAoBlB,oBACpBpnB,EACAM,EACA/rB,GAEJrG,KAAKk6C,gBAAgB,IAAWG,mDAC5B,IAAoBhB,4BACpBvnB,EACAM,EACA/rB,GAEJ,IAAMi0C,EAA+C9wC,KAAKQ,MAAM8nB,EAAOE,WAAW1O,YAAY,gCAA+B,OAE7H9qB,OAAOyR,KAAKqwC,GAAmBvvC,SAAQ,SAACtL,EAAe86C,EAAat7C,GAChEmzB,EAAY3yB,GAAS66C,EAAkB76C,QA/DnD,6BAmEc,SACN+6C,EACAC,EACA3oB,EACAM,EACA/rB,GAEA,IAAM5G,EAAgBqyB,EAAOE,WAAW1O,YAAYk3B,OAAQ57C,IAExDa,GAAW4G,IAAgD,IAApCA,EAAS+D,OAAOqwC,KACvCroB,EAAYqoB,GAAiBh7C,EAAMi7C,wBA7E/C,4BAEW,SAAqBz2B,GACxB,GAAMA,EAAQ,CACV,GAAIA,EAAOoI,cAAcliB,WAAW,SAChC,MAAO,YAEX,GAAI8Z,EAAOoI,cAAcliB,WAAW,SAChC,MAAO,YAGf,MAAO,qBAXf,M,kGCRgB,WAAUwwC,GACxB,OAAoBpD,IAAMqD,YAAW,SAAU7c,EAAG8c,GAChD,OAAoBtD,IAAMuD,cAAc,MAAOj5C,YAAS,GAAIk8B,EAAG,CAC7D8c,IAAKA,EACLF,UAAW7oC,IAAWisB,EAAE4c,UAAWA,UCNrCzmC,EAAuBqjC,IAAMC,cAAc,MAC/CtjC,EAAQqzB,YAAc,cACPrzB,QCDX6mC,EAAY,CAAC,WAAY,YAAa,UAAW,MAOjDC,EAAuBzD,IAAMqD,YACjC,SAAUK,EAAMJ,GACd,IAAIK,EAAWD,EAAKC,SAChBP,EAAYM,EAAKN,UACjBQ,EAAUF,EAAKE,QACfC,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCnjD,EAAQ+V,YAA8BitC,EAAMF,GAE5CnD,EAASD,YAAmBuD,EAAU,YAC1C,OAAoB3D,IAAMuD,cAAcQ,EAAWz5C,YAAS,CAC1Dg5C,IAAKA,EACLF,UAAW7oC,IAAWqpC,EAAUvD,EAAS,IAAMuD,EAAUvD,EAAQ+C,IAChE1iD,OAEL+iD,EAAQzT,YAAc,UACtByT,EAAQO,aAnBW,CACjBJ,QAAS,MAmBIH,QCxBXD,EAAY,CAAC,WAAY,YAAa,KAAM,OAAQ,SAAU,OAAQ,WAAY,MAQlFS,EAAgBC,EAAiB,MACjCC,EAAgBD,EAAiB,MACjCE,EAAWC,YAAmB,aAC9BC,EAAYD,YAAmB,aAAc,CAC/CN,UAAWE,IAETM,EAAeF,YAAmB,gBAAiB,CACrDN,UAAWI,IAETK,EAAWH,YAAmB,YAAa,CAC7CN,UAAW,MAETU,EAAWJ,YAAmB,YAAa,CAC7CN,UAAW,MAETW,EAAaL,YAAmB,eAChCM,EAAaN,YAAmB,eAChCO,EAAiBP,YAAmB,oBAIpCQ,EAAoB7E,IAAMqD,YAAW,SAAUK,EAAMJ,GACvD,IAAIK,EAAWD,EAAKC,SAChBP,EAAYM,EAAKN,UACjB0B,EAAKpB,EAAKoB,GACVhb,EAAO4Z,EAAK5Z,KACZib,EAASrB,EAAKqB,OACdlc,EAAO6a,EAAK7a,KACZmc,EAAWtB,EAAKsB,SAChBnB,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCnjD,EAAQ+V,YAA8BitC,EAAMF,GAE5CnD,EAASD,YAAmBuD,EAAU,QACtCsB,EAAcC,mBAAQ,WACxB,MAAO,CACLC,mBAAoB9E,EAAS,aAE9B,CAACA,IACJ,OAAoBL,IAAMuD,cAAc6B,EAAYjF,SAAU,CAC5Dj4C,MAAO+8C,GACOjF,IAAMuD,cAAcQ,EAAWz5C,YAAS,CACtDg5C,IAAKA,GACJ5iD,EAAO,CACR0iD,UAAW7oC,IAAW6oC,EAAW/C,EAAQyE,GAAM,MAAQA,EAAIhb,GAAQ,QAAUA,EAAMib,GAAU,UAAYA,KACvGlc,EAGJmX,IAAMuD,cAAca,EAAU,KAAMY,GAAYA,OAElDH,EAAK7U,YAAc,OACnB6U,EAAKb,aAjCc,CACjBnb,MAAM,GAiCRgc,EAAKQ,IAAM5B,EACXoB,EAAKS,MAAQhB,EACbO,EAAKU,SAAWhB,EAChBM,EAAKW,KAAOpB,EACZS,EAAKY,KAAOjB,EACZK,EAAK7vB,KAAOyvB,EACZI,EAAKa,OAAShB,EACdG,EAAKc,OAAShB,EACdE,EAAKe,WAAahB,EACHC,O,2ECtEA,SAAS,EAAKpkD,EAAQolD,EAAUC,GAiB7C,OAfE,EADqB,qBAAZp9C,SAA2BA,QAAQuP,IACrCvP,QAAQuP,IAER,SAAcxX,EAAQolD,EAAUC,GACrC,IAAIC,ECLK,SAAwBC,EAAQH,GAC7C,MAAQ5kD,OAAOM,UAAUkJ,eAAeC,KAAKs7C,EAAQH,IAEpC,QADfG,EAAS,OAAA5tC,EAAA,GAAe4tC,MAI1B,OAAOA,EDDQ,CAAcvlD,EAAQolD,GACjC,GAAKE,EAAL,CACA,IAAI56C,EAAOlK,OAAOglD,yBAAyBF,EAAMF,GAEjD,OAAI16C,EAAK8M,IACA9M,EAAK8M,IAAIvN,KAAKo7C,GAGhB36C,EAAKjD,QAIT,EAAKzH,EAAQolD,EAAUC,GAAYrlD,K,6BEf5C,IAAIylD,E,oEACJ,IAAIC,EAAQ,IAAIr7B,WAAW,IACZ,SAASs7B,IAEtB,IAAKF,KAGHA,EAAoC,qBAAXG,QAA0BA,OAAOH,iBAAmBG,OAAOH,gBAAgBvuC,KAAK0uC,SAA+B,qBAAbC,UAAgE,oBAA7BA,SAASJ,iBAAkCI,SAASJ,gBAAgBvuC,KAAK2uC,WAGrO,MAAM,IAAIh/C,MAAM,4GAIpB,OAAO4+C,EAAgBC,GCjBV,4HCQf,ICFeI,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAMpyC,KAAKmyC,IDG5CE,EAAY,GAEP/lD,EAAI,EAAGA,EAAI,MAAOA,EACzB+lD,EAAUjvC,MAAM9W,EAAI,KAAOoX,SAAS,IAAI4U,OAAO,IAoBlCza,MAjBf,SAAmByB,GACjB,IAAIuB,EAAStM,UAAUhI,OAAS,QAAsByG,IAAjBuB,UAAU,GAAmBA,UAAU,GAAK,EAG7E49C,GAAQE,EAAU/yC,EAAIuB,EAAS,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAM,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAM,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAM,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAMwxC,EAAU/yC,EAAIuB,EAAS,IAAM,IAAMwxC,EAAU/yC,EAAIuB,EAAS,KAAOwxC,EAAU/yC,EAAIuB,EAAS,KAAOwxC,EAAU/yC,EAAIuB,EAAS,KAAOwxC,EAAU/yC,EAAIuB,EAAS,KAAOwxC,EAAU/yC,EAAIuB,EAAS,KAAOwxC,EAAU/yC,EAAIuB,EAAS,MAAM4f,cAMzf,IAAKyxB,EAASC,GACZ,MAAMjmD,UAAU,+BAGlB,OAAOimD,GEHMG,MApBf,SAAYze,EAAS0e,EAAK1xC,GAExB,IAAI2xC,GADJ3e,EAAUA,GAAW,IACF4e,SAAW5e,EAAQke,KAAOA,KAK7C,GAHAS,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACP1xC,EAASA,GAAU,EAEnB,IAAK,IAAIvU,EAAI,EAAGA,EAAI,KAAMA,EACxBimD,EAAI1xC,EAASvU,GAAKkmD,EAAKlmD,GAGzB,OAAOimD,EAGT,OAAO10C,EAAU20C,ICfb,EAA2B,WAC7B,OAAO,KAGLE,EAAiC,WACnC,OAAO,IAAaxzC,QAAQ,IAAIa,OAAO,IAAK,KAAM,IAAI4yC,gB,kFCA7CC,EACU,CACf/7C,KAAM,qBACNC,KAAM,oEAHD87C,EAKY,CACjB/7C,KAAM,wBACNC,KAAM,4CAPD87C,EASiB,CACtB/7C,KAAM,wBACNC,KAAM,yDAXD87C,EAae,CACpB/7C,KAAM,wBACNC,KAAM,+PAfD87C,EAuBc,CACnB/7C,KAAM,2CACNC,KAAM,kLAzBD87C,EA2BiB,CACtB/7C,KAAM,8BACNC,KAAM,yR,cASV,WAAY6C,EAAmBC,GAA/B,MACI,YAAMD,EAAWC,IAAa,K,OAC9B,EAAK7G,KAAO,gCAEZnG,OAAOiN,eAAe,EAAMg5C,EAA8B3lD,W,EAiDlE,OAvDmD,iBAYxC,EAAA4lD,4BAAP,WACI,OAAO,IAAID,EAA8BD,EAAuD/7C,KAC5F+7C,EAAuD97C,OAMxD,EAAAi8C,sCAAP,WACI,OAAO,IAAIF,EAA8BD,EAAyD/7C,KAC9F+7C,EAAyD97C,OAO1D,EAAAk8C,+BAAP,SAAsCC,GAClC,OAAO,IAAIJ,EAA8BD,EAA8D/7C,KAAS+7C,EAA8D97C,KAAI,oBAAoBm8C,IAMnM,EAAAC,mCAAP,WACI,OAAO,IAAIL,EAA8BD,EAA4D/7C,KACjG+7C,EAA4D97C,OAM7D,EAAAq8C,iCAAP,WACI,OAAO,IAAIN,EAA8BD,EAA2D/7C,KAChG+7C,EAA2D97C,OAM5D,EAAAs8C,uCAAP,WACI,OAAO,IAAIP,EAA8BD,EAA8D/7C,KAAM+7C,EAA8D97C,OAEnL,E,CAvDmD,M,2EC1CpC,SAASu8C,EAAe/zC,EAAKhT,GAC1C,OCLa,SAAyBgT,GACtC,GAAI8F,MAAMC,QAAQ/F,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKhT,GACjD,GAAsB,qBAAX4Y,QAA4BA,OAAOC,YAAYvY,OAAO0S,GAAjE,CACA,IAAIg0C,EAAO,GACPC,GAAK,EACLC,GAAK,EACL/tC,OAAKzS,EAET,IACE,IAAK,IAAiCygD,EAA7BC,EAAKp0C,EAAI4F,OAAOC,cAAmBouC,GAAME,EAAKC,EAAG3tC,QAAQP,QAChE8tC,EAAKlwC,KAAKqwC,EAAG5/C,QAETvH,GAAKgnD,EAAK/mD,SAAWD,GAH8CinD,GAAK,IAK9E,MAAO5tC,GACP6tC,GAAK,EACL/tC,EAAKE,EACL,QACA,IACO4tC,GAAsB,MAAhBG,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIF,EAAI,MAAM/tC,GAIlB,OAAO6tC,GFnBuB,CAAqBh0C,EAAKhT,IAAM,OAAAqnD,EAAA,GAA2Br0C,EAAKhT,IGLjF,WACb,MAAM,IAAIJ,UAAU,6IHIgF,K,2JIMhFu5B,EAAtB,WAMI,iCANJ,+CAqFI,SAAyB5xB,QArF7B,KAuFkB,EAAA8xB,cAAW,qCACPC,aAAuB,gBACvB,EAAAK,eAAyB,kBACzC,GAQC,IAAM2tB,EAAb,kDAOI,+CACI,gBACKC,iBAAmB,IAAI,IAFhC,EAPJ,4CAmBI,WACI,OAAOz/C,KAAKy/C,iBAAiBh7B,aApBrC,qCA6BI,WACI,OAAOzkB,KAAKy/C,iBAAiBpM,2BA9BrC,IAwCI,SAAqC5zC,GACjC,IAAUN,wBAAwBM,EAAO,SACzCO,KAAKy/C,iBAAiBpM,0BAA4B5zC,IA1C1D,wBA6CI,WACI,OAAOO,KAAKy/C,iBAAiBl6B,cA9CrC,IAiDI,SAAwB9lB,GACpBO,KAAKy/C,iBAAiBl6B,aAAe9lB,IAlD7C,yBA6DW,SAAYd,EAA2Bc,GAC1CO,KAAKy/C,iBAAiBr8B,YAAYzkB,EAAMc,KA9DhD,yBA0EW,SAAYd,EAA2B0kB,GAC1C,OAAOrjB,KAAKy/C,iBAAiBn8B,YAAY3kB,KA3EjD,sBAuFW,SAASqnB,EAAuBC,EAAmBC,EAAwBC,GAC9EnmB,KAAKojB,YAAY,IAAWgD,sCAAuCJ,GACnEhmB,KAAKojB,YAAY,IAAWiD,kCAA5B,UAAkEJ,IAC9DC,GACAlmB,KAAKojB,YAAY,IAAWkD,sCAAuCJ,GAEnEC,GACAnmB,KAAKojB,YAAY,IAAWmD,sCAAuCJ,KA9F/E,gCAkGW,SAAmBxnB,EAAcc,EAAe+mB,GACnDxmB,KAAKy/C,iBAAiBC,mBAAmB/gD,EAAMc,EAAO+mB,KAnG9D,mBA4GW,gBA5GX,GAA6C6K,I,6BC7G9B,SAASsuB,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EALT,mC,4jBCOaE,EAAb,kDAGI,WAAY7vC,EAAmBC,EAAsB6vC,GAAiB,kCAClE,cAAM9vC,EAAWC,IAEZ8vC,cAAgBD,EAH6C,EAH1E,UAA+B,KAUlBE,EAAb,kDACI,WAAYF,GAAiB,uCACnB,0BAA2B,IAAUG,MAAOH,GAF1D,UAA6CD,GAMhCK,EAAb,kDACI,WAAYJ,GAAiB,uCACnB,qBAAsB,IAAUG,MAAOH,GAFrD,UAAwCD,GAM3BM,EAAb,kDACI,WAAYL,GAAiB,uCACnB,wBAAyB,IAAUG,MAAOH,GAFxD,UAA2CD,GAM9BO,EAAb,kDACI,WAAYN,GAAiB,uCACnB,6BAA8B,IAAUG,MAAOH,GAF7D,UAAgDD,GAMnCQ,EAAb,kDACI,WAAYP,GAAiB,uCACnB,4BAA6B,IAAUG,MAAOH,GAF5D,UAA+CD,GAMlCS,EAAb,kDACI,WAAYR,GAAiB,uCACnB,0BAA2B,IAAUG,MAAOH,GAF1D,UAA6CD,GAMhCU,EAAb,kDACI,WAAYT,GAAiB,uCACnB,gCAAiC,IAAUG,MAAOH,GAFhE,UAAmDD,GAMtCW,EAAb,kDACI,oDACU,0BAA2B,IAAUP,MAAO,IAF1D,UAA6CJ,GAYhCY,EAAb,kDAGI,WAAYC,EAAsBC,GAAkB,kCAChD,cAAM,6BAA8B,IAAUV,MAAOS,IAChDE,eAAiBD,EAF0B,EAHxD,UAAgDd,GASnCgB,EAAb,kDAII,WAAYH,EAAsBvqB,EAAmBwqB,GAAkB,kCACnE,cAAM,kCAAmC,IAAUV,MAAOS,IACrDE,eAAiBD,EACtB,EAAKG,cAAgB3qB,EAH8C,EAJ3E,UAAqD0pB,GAWxCkB,EAAb,kDAMI,WAAYL,EAAsBvqB,EAAmBwqB,GAAkB,kCACnE,cAAM,oBAAqB,IAAUV,MAAOS,IACvCE,eAAiBD,EACtB,EAAKK,qBAAuB,IAAI3wC,KAAKswC,GAAYM,qBACjD,EAAKH,cAAgB3qB,EACrB,EAAK+qB,oBAAsB,IAAI7wC,KAAK8lB,GAAWgrB,qBALoB,EAN3E,UAAuCtB,GAe1BuB,EAAb,kDAGI,WAAYV,EAAsB7wC,GAAa,kCAC3C,cAAM,8BAA+B,IAAUowC,MAAOS,IACjDW,UAAYxxC,EAF0B,EAHnD,UAAiDgwC,GASpCyB,EAAb,kDAGI,WAAYZ,EAAsB7wC,GAAa,kCAC3C,cAAM,2BAA4B,IAAUowC,MAAOS,IAC9CW,UAAYxxC,EAF0B,EAHnD,UAA8CgwC,GASjC0B,EAAb,kDACI,WAAYb,GAAoB,uCACtB,6BAA8B,IAAUT,MAAOS,GAF7D,UAAgDb,GAMnC2B,EAAb,kDAGI,WAAYd,EAAsB7wC,GAAa,kCAC3C,cAAM,4BAA6B,IAAUowC,MAAOS,IAC/CW,UAAYxxC,EAF0B,EAHnD,UAA+CgwC,I,+PCnFlC4B,EAA2D,CACpEC,kBAAmB,WACf,OAAOxnC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExD6C,qBAAsB,WAClB,OAAOznC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExD8C,mBAAoB,WAChB,OAAO1nC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExD+C,eAAgB,WACZ,MAAO,IAEXC,mBAAoB,WAChB,OAAO,MAEXC,qBAAsB,WAClB,OAAO,MAEXC,oBAAqB,WACjB,OAAO,MAEXC,sBAAuB,WACnB,OAAO/nC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExDoD,WAAY,WACR,OAAOhoC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExDqD,cAAe,WACX,OAAOjoC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExDsD,OAAQ,WACJ,OAAOloC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExDuD,eAAgB,WACZ,OAAOnoC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExDwD,YAAa,WACT,OAAOpoC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExDyD,UAAW,WACP,OAAOroC,QAAQvC,OAAO6mC,EAAA,EAA8BM,qCAExD0D,iBAAkB,WACd,OAAO,MAEXC,oBAAqB,aAGrBC,2BAA4B,aAG5BC,4BAA6B,aAG7BC,cAAe,WACX,MAAMpE,EAAA,EAA8BM,oCAExC+D,UAAW,WACP,MAAMrE,EAAA,EAA8BM,oCAExCgE,UAAW,aAGXC,iBAAkB,aAGlBC,iBAAkB,WACd,OAAO,MAEXC,yBAA0B,aAG1BC,oBAAqB,aAGrBC,iBAAkB,WACd,MAAM3E,EAAA,EAA8BM,qC,qCChG5C,cA0DA,OAnDW,EAAAsE,8BAAP,SAAqCxzC,EAAuByzC,GACxD,OAAQzzC,EAAQK,WACZ,KAAKnC,EAAA,EAAUw1C,YACX,OAAO,IAAkBC,MAC7B,KAAKz1C,EAAA,EAAU01C,iBACX,OAAO,IAAkBC,UAC7B,KAAK31C,EAAA,EAAU41C,oBACX,GAAI9zC,EAAQ+zC,kBAAoB,IAAgBC,UAAYh0C,EAAQ+zC,kBAAoB,IAAgBE,MACpG,OAAO,IAAkBC,aAE7B,MACJ,KAAKh2C,EAAA,EAAUi2C,sBACX,OAAO,IAAkBC,eAC7B,KAAKl2C,EAAA,EAAUm2C,aACX,OAAO,IAAkBC,OAC7B,KAAKp2C,EAAA,EAAUq2C,mBACf,KAAKr2C,EAAA,EAAUs2C,mBACX,GAAIf,GAAiBA,IAAkB,IAAkBI,UAErD,MAEJ,OAAO,IAAkBY,KAC7B,KAAKv2C,EAAA,EAAUw2C,WACX,GAAIjB,GAAiBA,IAAkB,IAAkBa,OAErD,MAEJ,OAAO,IAAkBG,KAC7B,KAAKv2C,EAAA,EAAUy2C,oBACX,GAAIlB,GAAiBA,IAAkB,IAAkBW,eAErD,MAEJ,OAAO,IAAkBK,KAC7B,KAAKv2C,EAAA,EAAU02C,cACf,KAAK12C,EAAA,EAAU22C,cACf,KAAK32C,EAAA,EAAU42C,sBACf,KAAK52C,EAAA,EAAU62C,sBACX,GAAI/0C,EAAQ+zC,kBAAoB,IAAgBC,UAAYh0C,EAAQ+zC,kBAAoB,IAAgBE,MAAO,CAC3G,GAAIR,GAAiBA,IAAkB,IAAkBE,OAASF,IAAkB,IAAkBS,aAElG,MAEJ,OAAO,IAAkBO,MAMrC,OAAO,MAEf,E,WCnEMO,EAAmC,CACrCjtD,SADqC,EAErCktD,WAAYnkD,IAFyB,KAGrCokD,SAHqC,GAIrCC,OAAQ,IAAIC,EAAJ,OAGCC,EAAc3N,2BAGC2N,EAAYzN,SCpBxC,SAAgB0N,EACZ5I,EACA3tC,GAEA,0BAAW2tC,EACAA,EAAP,GAEJ,ECfG,IACM3pB,EAAN,QCGP,SAmBgBwyB,EAnBhB,GAmB6B,iBAAW7I,EAAX,EAAWA,SACpC8I,qBAAU,WACNztD,2BAAkCuJ,IAAlCvJ,WACD,CAFHytD,IAIA,IAAML,EAAiBvI,mBAAQ,WAC3B,OAAO7kD,oBD7BR,oBC6BC,KACD,CAFH,IAKA,EAAgC0tD,mBAAhC,uBAAM,EAAN,KAAM,EAAN,KAEA,EAAoCA,mBAA4B3kD,IAAhE,4BAAM,EAAN,KAAM,EAAN,KAEM4kD,EAAgBC,iBAAtB,GAEAH,qBAAU,WACN,IAAMI,EAAa7tD,EAAA,kBAA2BiY,YAC1C,OAAQA,EAAR,WACI,KAAK9B,IAAL,cACA,KAAKA,IAAL,gBACA,KAAKA,IAAL,cACA,KAAKA,IAAL,mBACA,KAAKA,IAAL,oBACA,KAAKA,IAAL,cACA,KAAKA,IAAL,mBACA,KAAKA,IAAL,WACA,KAAKA,IAAL,sBACA,KAAKA,IAAL,sBACI,IAAM23C,EAAkB9tD,EAAxB,kBFpBpB,SAAsC+tD,EAAmCC,GACrE,GAAID,WAAkBC,EAAtB,OACI,SAGJ,IAAMC,EAAkB,YAAxB,GAEA,OAAOF,EAAA,OAAcG,YACjB,IAAMC,EAAWF,EAAjB,QACA,SAAKC,IAAL,IAIQA,kBAA2BC,EAA5B,eACCD,mBAA4BC,EAD7B,gBAECD,aAAsBC,EAF9B,YEQiBC,CAAsBN,EAA3B,IACIV,gDACAiB,MAEAjB,gDAOhB,OAFAA,0EAEO,WAEH,IACIA,+DACAptD,6BAGT,CAACA,EAAUmtD,EAhCdM,IAkCAA,qBAAU,WACN,IAAMI,EAAa7tD,EAAA,kBAA2BiY,YAC1C,IAAMwpB,EAAS6sB,kCAAyDX,EAAxE,SACA,OAAIlsB,IACA2rB,gCAA8Bn1C,EAAQK,UAAtC80C,+CAAsFO,EAAcY,QAApGnB,mBACAO,YACAa,SAUR,OAPApB,0EAEAptD,iCAAuC,eAKhC,WACH,IACIotD,+DACAptD,6BAGT,CAACA,EAtBJytD,IAwBA,IAAMgB,EAA6B,CAC/BzuD,WACAktD,aACAC,WACAC,UAGJ,OACI,kBAACE,EAAD,UAAsBzlD,MAAO4mD,GADjC,GC9FJ,IAAaC,EAAU,kBAAoBvO,qBAApC,ICDP,SAASwO,EAAW3uD,EAApB,GACI,IAAM4uD,EAAc5uD,EAApB,iBACA,OAAI4uD,aAA2BC,iBAAoCA,EAApCA,gBAAyEA,EAAxG,WAC4BD,EAAA,QAAmBE,YACvC,QAAID,YAA+BA,2BAA8CC,WAAjF,mBAGID,iBAAoCA,gCAAmDC,gBAA3F,kBAGID,kBAAqCA,iCAAoDC,iBAA7F,mBAOGC,IAEP,KClBR,SAAS,EAAT,OACI,OAAGC,IAAiBA,YAAyBA,EAAzBA,eAAuDA,EAA3E,kBACI,EAGGJ,SAAP,EAOJ,SAAgBK,EAAmBD,GAC/B,MAA8CN,IAAxC,EAAN,EAAQvB,SAAuBD,EAA/B,EAA+BA,WACzBgC,EDYV,SAA2BL,GACvB,MAAiCH,IAA3B,EAAN,EAAM,SAAYxB,EAAlB,EAAkBA,WAEZiC,EAAoBjC,IAAenkD,IAAfmkD,aAAkDyB,EAAW3uD,EAAvF,GACA,EAA8B0tD,mBAA9B,sBAAM,EAAN,KAAM,EAAN,KASA,OAPAD,qBAAU,WACN,IAAM2B,EAAiBT,EAAW3uD,EAAlC,GACKqvD,4BAAL,IACIC,OAEL,CAACpC,EAAY2B,EAAoB7uD,EALpCytD,IAOA,ECzBgB8B,CAAWP,GAA3B,IAEMG,EAAoBjC,IAAenkD,IAAfmkD,SAAmDsC,EAAgBZ,EAAaM,EAA1G,GACA,EAAgDxB,mBAAhD,sBAAM,EAAN,KAAM,EAAN,KAMA,OAJAD,qBAAU,WACNgC,EAAoBD,EAAgBZ,EAAaM,EAAjDO,MACD,CAACb,EAAaM,EAFjBzB,IAIA,EChBJ,SAAgBiC,EAAhB,GAAsC,sDAA2C/K,EAA3C,EAA2CA,SACvEroC,EAAUoyC,IAUhB,OAFwBO,EAPsBpK,mBAAQ,WAClD,MAAO,CACH8K,WACAC,gBACAC,oBAEL,CAACF,EAAUC,EANd,MASuBtzC,eAAuBvT,IAA9C,QAEQ42C,kBAACA,IAADA,cACK4N,EAAsB5I,EAF/B,IAMJ,KClBJ,SAAgBmL,EAAhB,GAAwC,sDAA2CnL,EAA3C,EAA2CA,SACzEroC,EAAUoyC,IAUhB,OAFwBO,EAPsBpK,mBAAQ,WAClD,MAAO,CACH8K,WACAC,gBACAC,oBAEL,CAACF,EAAUC,EANd,MASwBtzC,eAAuBvT,IAA3C,SAAwEuT,eAAuBvT,IAAnG,eAOA,KALQ42C,kBAACA,IAADA,cACK4N,EAAsB5I,EAF/B,M,yFCrBKj3B,EAAb,4CACY,KAAAqiC,SAAqB,GACrB,KAAAC,WAAuB,GAFnC,+CAgBW,SAAYlvD,EAA0B2qB,GACzC,IAAIwkC,EAGAA,EADe,kBAARnvD,EACIA,EAEA,IAAWA,GAG1B,IAAK,IAAIyY,EAAI,EAAGA,EAAInR,KAAK2nD,SAASxvD,OAAQgZ,IACtC,GAAInR,KAAK2nD,SAASx2C,KAAO02C,EACrB,OAAO7nD,KAAK4nD,WAAWz2C,GAI/B,OAAOkS,IA/Bf,yBA0CW,SAAY3qB,EAA0B+G,GACzC,IAAIooD,EAGAA,EADe,kBAARnvD,EACIA,EAEA,IAAWA,GAG1B,IAAK,IAAIyY,EAAI,EAAGA,EAAInR,KAAK2nD,SAASxvD,OAAQgZ,IACtC,GAAInR,KAAK2nD,SAASx2C,KAAO02C,EAErB,YADA7nD,KAAK4nD,WAAWz2C,GAAK1R,GAK7BO,KAAK2nD,SAAS34C,KAAK64C,GACnB7nD,KAAK4nD,WAAW54C,KAAKvP,KA3D7B,mBAqEW,WAGH,IAFA,IAAMqoD,EAAY,IAAIxiC,EAEbnU,EAAI,EAAGA,EAAInR,KAAK2nD,SAASxvD,OAAQgZ,IACtC22C,EAAUH,SAAS34C,KAAKhP,KAAK2nD,SAASx2C,IACtC22C,EAAUF,WAAW54C,KAAKhP,KAAK4nD,WAAWz2C,IAG9C,OAAO22C,IA7Ef,qBAuFW,SAAQC,GAAyC,WACpD/nD,KAAK2nD,SAAS58C,SAAQ,SAACrS,GACnB,QAA0DkG,IAAtDmpD,EAAsBzkC,YAAY5qB,OAAKkG,GAA0B,CACjE,IAAMa,EAAQ,EAAK6jB,YAAY5qB,GAC/BqvD,EAAsB3kC,YAAY1qB,EAAK+G,SA3FvD,gBAuGI,WACI,OAAOO,KAAK2nD,aAxGpB,M,0ECUeK,MARf,SAAyBvoD,GACvB,IAAIo7C,EAAM2K,iBAAO/lD,GAIjB,OAHA4lD,qBAAU,WACRxK,EAAIsL,QAAU1mD,IACb,CAACA,IACGo7C,GCdM,SAASoN,EAAiB54C,GACvC,IAAIwrC,EAAMmN,EAAgB34C,GAC1B,OAAO64C,uBAAY,WACjB,OAAOrN,EAAIsL,SAAWtL,EAAIsL,QAAQ/lD,MAAMy6C,EAAK16C,aAC5C,CAAC06C,M,oGCNFsN,EAAU,Q,4BCEVpN,EAAY,CAAC,YAAa,WAAY,MAMtCqN,EAAa,SAAoBv+C,GACnC,OAAOA,EAAI,GAAG00C,eDRiB8J,ECQQx+C,EDPhCw+C,EAAOv9C,QAAQq9C,GAAS,SAAU3oC,EAAG8oC,GAC1C,OAAOA,EAAI/J,kBCM+BliC,MAAM,GDRrC,IAAkBgsC,GCYlB,SAASzM,EAAmBhE,EAAQ2Q,GACjD,IAAItN,OAAiB,IAAVsN,EAAmB,GAAKA,EAC/BC,EAAmBvN,EAAK1T,YACxBA,OAAmC,IAArBihB,EAA8BJ,EAAWxQ,GAAU4Q,EACjElN,EAAYL,EAAKK,UACjBC,EAAeN,EAAKM,aAEpBkN,EAA2BlR,IAAMqD,YAAW,SAAU8N,EAAO7N,GAC/D,IAAIF,EAAY+N,EAAM/N,UAClBO,EAAWwN,EAAMxN,SACjByN,EAAWD,EAAMrN,GACjBuN,OAAmB,IAAbD,EAAsBrN,GAAa,MAAQqN,EACjD1wD,EAAQ+V,YAA8B06C,EAAO3N,GAE7C8N,EAAiBlR,YAAmBuD,EAAUtD,GAClD,OAAoBL,IAAMuD,cAAc8N,EAAK/mD,YAAS,CACpDg5C,IAAKA,EACLF,UAAW7oC,IAAW6oC,EAAWkO,IAChC5wD,OAIL,OAFAwwD,EAAYlN,aAAeA,EAC3BkN,EAAYlhB,YAAcA,EACnBkhB,I,iHCzBIl4B,EAAb,mHACW,SAAsCu4B,GACzC,IAAI9vC,EAAS,IAAaue,SAC1B,OAAQuxB,GACJ,KAAK,IAAkBC,QACnB/vC,EAAS,IAAagwC,iBACtB,MACJ,KAAK,IAAkB5tB,QACvB,KAAK,IAAkBrL,sBACvB,KAAK,IAAkBF,cACvB,KAAK,IAAkBo5B,eACnBjwC,EAAS,IAAaoiB,QACtB,MACJ,KAAK,IAAkBv8B,MACvB,KAAK,IAAkBqqD,WACvB,KAAK,IAAkBC,UACvB,QACInwC,EAAS,IAAaue,SAG9B,OAAOve,IApBf,uCAuBW,SAAiC8vC,GACpC,IAAI9vC,EAAS,IAAmBowC,YAChC,OAAQN,GACJ,KAAK,IAAkBC,QACvB,KAAK,IAAkBE,eACvB,KAAK,IAAkB7tB,QACnBpiB,EAAS,IAAmBowC,YAC5B,MACJ,KAAK,IAAkBr5B,sBACvB,KAAK,IAAkBF,cACvB,KAAK,IAAkBhxB,MACvB,KAAK,IAAkBqqD,WACvB,KAAK,IAAkBC,UACvB,QACInwC,EAAS,IAAmBna,MAGpC,OAAOma,IAxCf,0CA2CW,SAAoC8vC,GACvC,IAAI9vC,EAAgC,IAAsBqX,QAC1D,OAAQy4B,GACJ,KAAK,IAAkBjqD,MACnBma,EAAS,IAAsB2e,aAC/B,MACJ,KAAK,IAAkB0xB,gBACnBrwC,EAAS,IAAsBqwC,gBAC/B,MACJ,KAAK,IAAkBH,WACnBlwC,EAAS,IAAsBswC,qBAC/B,MACJ,KAAK,IAAkBH,UACnBnwC,EAAS,IAAsBmwC,UAC/B,MACJ,QACInwC,EAAS,IAAsBqX,QAIvC,OAAOrX,IA/Df,uCAmEW,SAAiCuwC,GACpC,IAAIt5B,EAAuB,2EAC3B,OAAQs5B,GACJ,KAAK,IAAsBJ,UACvBl5B,EAAe,qEACf,MACJ,KAAK,IAAsBq5B,qBACvBr5B,EAAe,gEACf,MACJ,KAAK,IAAsBo5B,gBACvBp5B,EAAe,4FAKvB,OAAOA,MAlFf,M,6jBCasBu5B,EAAtB,WAMI,iCANJ,yDAsBW,WACH,OAAOC,EAAsBlqD,aAvBrC,KAuCsBkqD,EAAtB,iKASW,WACH,OAAO,IAAIC,MAVnB,GAAoDF,GAqCvCE,EAAb,kDAUI,+CACI,gBACKpxC,OAAS,cACd,EAAKqxC,WAAa,IAAI,IAH1B,EAVJ,wCA8BI,WACI,OAAO3pD,KAAKqf,YA/BpB,IAoBI,SAAkBhT,QACCzN,IAAXyN,GAAmC,OAAXA,IACxBrM,KAAKqf,WAAa,IAAsBuqC,0BAE5C5pD,KAAKqf,WAAahT,IAxB1B,oBAwCI,WACI,OAAOrM,KAAK2pD,WAAWn0C,WAzC/B,gBAkDW,WACH,OAAOxV,KAAKsY,SAnDpB,kBA8DiB,SAAKuxC,G,mIACRC,EAAqB,IAAIrnC,UAAUonC,GACrCE,EAAqB,OAEMnrD,IAA3BoB,KAAKgqD,kB,sBACDhqD,KAAKgqD,kBAAkB7xD,OAAS0xD,EAAWlsC,Y,uBAC3CmsC,EAAQr6C,IAAIzP,KAAKgqD,kBAAkB3tC,MAAM,EAAGwtC,EAAWlsC,aACvD3d,KAAKgqD,kBAAoBhqD,KAAKgqD,kBAAkB3tC,MAAMwtC,EAAWlsC,Y,kBAC1DxD,QAAQ1B,QAAQoxC,EAAWlsC,a,OAEtCmsC,EAAQr6C,IAAIzP,KAAKgqD,mBACjBD,EAAa/pD,KAAKgqD,kBAAkB7xD,OACpC6H,KAAKgqD,uBAAoBprD,E,aAItBmrD,EAAaF,EAAWlsC,aAAe3d,KAAK2pD,WAAWM,Y,iBACjB,O,UAAMjqD,KAAK2pD,WAAWnwC,O,gBACjD5a,KADRif,E,SACsBA,EAAMlI,M,iBAC1Bu0C,O,EACArsC,EAAM9K,OAAO4K,WAAaksC,EAAWlsC,WAAaosC,GAClDG,EAAYrsC,EAAM9K,OAAOsJ,MAAM,EAAGwtC,EAAWlsC,WAAaosC,GAC1D/pD,KAAKgqD,kBAAoB,IAAIvnC,UAAU5E,EAAM9K,OAAOsJ,MAAMwtC,EAAWlsC,WAAaosC,KAElFG,EAAYrsC,EAAM9K,OAEtB+2C,EAAQr6C,IAAI,IAAIgT,UAAUynC,GAAYH,GACtCA,GAAcG,EAAUvsC,W,wBAExB,O,UAAM3d,KAAK2pD,WAAWrwC,Y,yDAGvBywC,G,mDA9Ff,mBAwGW,SAAMF,GACT,IAAU/qD,uBAAuBkB,KAAK2pD,WAAY,kCAClD3pD,KAAK2pD,WAAWj0C,iBAAiB,CAC7B3C,OAAQ82C,EACRl0C,OAAO,EACPC,aAActF,KAAKuF,UA7G/B,mBAuHW,WACH7V,KAAK2pD,WAAWlwC,YAxHxB,GAA+CgwC,GAgIzBU,EAAtB,kDAKI,qDALJ,+CAiBW,SAAcC,GACjB,OAAO,IAAIC,EAA0BD,OAlB7C,GAAoDZ,GAoCvCa,EAAb,kDAWI,WAAmBD,GAAuC,kCACtD,gBACK9xC,OAAS,cACd,EAAKgyC,aAAeF,EAHkC,EAX9D,wCAkBI,SAAkB/9C,MAlBtB,mBAoBW,SAAM0G,GACH/S,KAAKsqD,aAAaprC,OACpBlf,KAAKsqD,aAAaprC,MAAMnM,KAtBpC,mBA0BW,WACG/S,KAAKsqD,aAAa7wC,OACpBzZ,KAAKsqD,aAAa7wC,UA5B9B,gBAgCW,WACH,OAAOzZ,KAAKsY,WAjCpB,GAA+C6xC,I,qIChP/BI,EAAgBC,EAAuB5M,GACnD,GAAI,IAAYv0C,QAAQmhD,GACpB,MAAM,IAAgB3kD,6BAG1B,IACI,IAAM4kD,EAA4B7M,EAAO8M,aAAaF,GACtD,OAAOhhD,KAAKQ,MAAMygD,GACpB,MAAOvgD,GACL,MAAM,IAAgBvE,8BAA8BuE,I,SAQ5CygD,EAAiCnD,GAC7C,GAAI,IAAYn+C,QAAQm+C,GACpB,MAAM,IAAgB7hD,8BAA8B,8BAExD,IAAMilD,EAA4BpD,EAAclhD,MAAM,IAAWukD,sBAAuB,GACxF,MAAO,CACHC,IAAKF,EAAgB,GACrBG,KAAMH,EAAgBzyD,OAAS,EAAI,IAAU2C,aAAe8vD,EAAgB,M,6BC7CpF,IAAI17C,EAAO1Q,EAAQ,KAIf8Q,EAAW9W,OAAOM,UAAUwW,SAQhC,SAAS2B,EAAQs/B,GACf,MAA8B,mBAAvBjhC,EAASrN,KAAKsuC,GASvB,SAASya,EAAYza,GACnB,MAAsB,qBAARA,EA4EhB,SAAS0a,EAAS1a,GAChB,OAAe,OAARA,GAA+B,kBAARA,EAShC,SAAS2a,EAAc3a,GACrB,GAA2B,oBAAvBjhC,EAASrN,KAAKsuC,GAChB,OAAO,EAGT,IAAIz3C,EAAYN,OAAOmX,eAAe4gC,GACtC,OAAqB,OAAdz3C,GAAsBA,IAAcN,OAAOM,UAuCpD,SAASqyD,EAAW5a,GAClB,MAA8B,sBAAvBjhC,EAASrN,KAAKsuC,GAwEvB,SAASxlC,EAAQpJ,EAAK0N,GAEpB,GAAY,OAAR1N,GAA+B,qBAARA,EAU3B,GALmB,kBAARA,IAETA,EAAM,CAACA,IAGLsP,EAAQtP,GAEV,IAAK,IAAIzJ,EAAI,EAAGkzD,EAAIzpD,EAAIxJ,OAAQD,EAAIkzD,EAAGlzD,IACrCmX,EAAGpN,KAAK,KAAMN,EAAIzJ,GAAIA,EAAGyJ,QAI3B,IAAK,IAAIjJ,KAAOiJ,EACVnJ,OAAOM,UAAUkJ,eAAeC,KAAKN,EAAKjJ,IAC5C2W,EAAGpN,KAAK,KAAMN,EAAIjJ,GAAMA,EAAKiJ,GA2ErC5I,EAAOC,QAAU,CACfiY,QAASA,EACTo6C,cA1RF,SAAuB9a,GACrB,MAA8B,yBAAvBjhC,EAASrN,KAAKsuC,IA0RrB+a,SAtSF,SAAkB/a,GAChB,OAAe,OAARA,IAAiBya,EAAYza,IAA4B,OAApBA,EAAI/wC,cAAyBwrD,EAAYza,EAAI/wC,cAChD,oBAA7B+wC,EAAI/wC,YAAY8rD,UAA2B/a,EAAI/wC,YAAY8rD,SAAS/a,IAqShFgb,WAlRF,SAAoBhb,GAClB,MAA4B,qBAAbib,UAA8Bjb,aAAeib,UAkR5DC,kBAzQF,SAA2Blb,GAOzB,MAL4B,qBAAhBnjC,aAAiCA,YAAYs+C,OAC9Ct+C,YAAYs+C,OAAOnb,GAElBA,GAASA,EAAIx9B,QAAYw9B,EAAIx9B,kBAAkB3F,aAqQ3Du+C,SA1PF,SAAkBpb,GAChB,MAAsB,kBAARA,GA0Pdqb,SAjPF,SAAkBrb,GAChB,MAAsB,kBAARA,GAiPd0a,SAAUA,EACVC,cAAeA,EACfF,YAAaA,EACba,OAlNF,SAAgBtb,GACd,MAA8B,kBAAvBjhC,EAASrN,KAAKsuC,IAkNrBub,OAzMF,SAAgBvb,GACd,MAA8B,kBAAvBjhC,EAASrN,KAAKsuC,IAyMrBwb,OAhMF,SAAgBxb,GACd,MAA8B,kBAAvBjhC,EAASrN,KAAKsuC,IAgMrB4a,WAAYA,EACZa,SA9KF,SAAkBzb,GAChB,OAAO0a,EAAS1a,IAAQ4a,EAAW5a,EAAI0b,OA8KvCC,kBArKF,SAA2B3b,GACzB,MAAkC,qBAApB4b,iBAAmC5b,aAAe4b,iBAqKhEC,qBAzIF,WACE,OAAyB,qBAAdx+C,WAAoD,gBAAtBA,UAAUy+C,SACY,iBAAtBz+C,UAAUy+C,SACY,OAAtBz+C,UAAUy+C,WAI/B,qBAAX3+C,QACa,qBAAb4+C,WAkITvhD,QAASA,EACTwhD,MAvEF,SAASA,IACP,IAAI1sD,EAAS,GACb,SAAS2sD,EAAYjc,EAAK73C,GACpBwyD,EAAcrrD,EAAOnH,KAASwyD,EAAc3a,GAC9C1wC,EAAOnH,GAAO6zD,EAAM1sD,EAAOnH,GAAM63C,GACxB2a,EAAc3a,GACvB1wC,EAAOnH,GAAO6zD,EAAM,GAAIhc,GACft/B,EAAQs/B,GACjB1wC,EAAOnH,GAAO63C,EAAIl0B,QAElBxc,EAAOnH,GAAO63C,EAIlB,IAAK,IAAIr4C,EAAI,EAAGkzD,EAAIjrD,UAAUhI,OAAQD,EAAIkzD,EAAGlzD,IAC3C6S,EAAQ5K,UAAUjI,GAAIs0D,GAExB,OAAO3sD,GAuDP4sD,OA5CF,SAAgB19C,EAAG29C,EAAGC,GAQpB,OAPA5hD,EAAQ2hD,GAAG,SAAqBnc,EAAK73C,GAEjCqW,EAAErW,GADAi0D,GAA0B,oBAARpc,EACXrhC,EAAKqhC,EAAKoc,GAEVpc,KAGNxhC,GAqCPhQ,KAhKF,SAAc8K,GACZ,OAAOA,EAAI9K,KAAO8K,EAAI9K,OAAS8K,EAAIiB,QAAQ,aAAc,KAgKzD8hD,SA7BF,SAAkBC,GAIhB,OAH8B,QAA1BA,EAAQlgD,WAAW,KACrBkgD,EAAUA,EAAQxwC,MAAM,IAEnBwwC,K,6BClUT,SAASC,EAAmBC,EAAKt0C,EAASb,EAAQo1C,EAAOC,EAAQv0D,EAAKsZ,GACpE,IACE,IAAIk7C,EAAOH,EAAIr0D,GAAKsZ,GAChBvS,EAAQytD,EAAKztD,MACjB,MAAOqQ,GAEP,YADA8H,EAAO9H,GAILo9C,EAAK97C,KACPqH,EAAQhZ,GAER0a,QAAQ1B,QAAQhZ,GAAOuV,KAAKg4C,EAAOC,GAIxB,SAASE,EAAkB99C,GACxC,OAAO,WACL,IAAIuwC,EAAO5/C,KACP4O,EAAOzO,UACX,OAAO,IAAIga,SAAQ,SAAU1B,EAASb,GACpC,IAAIm1C,EAAM19C,EAAGjP,MAAMw/C,EAAMhxC,GAEzB,SAASo+C,EAAMvtD,GACbqtD,EAAmBC,EAAKt0C,EAASb,EAAQo1C,EAAOC,EAAQ,OAAQxtD,GAGlE,SAASwtD,EAAO17C,GACdu7C,EAAmBC,EAAKt0C,EAASb,EAAQo1C,EAAOC,EAAQ,QAAS17C,GAGnEy7C,OAAMpuD,OA/BZ,mC,6BCOA,IAAYwxB,EAPZ,kCAOA,SAAYA,GAKR,qBAMA,iCAXJ,CAAYA,MAAkB,M,gRCAlBg9B,EAMAC,E,uBANZ,SAAYD,GACR,iCACA,mCACA,6BAHJ,CAAYA,MAAe,KAM3B,SAAYC,GACR,uBACA,2BAFJ,CAAYA,MAAkB,KAKvB,IA0JK3yC,EASA/F,EAnKCsV,EAAb,WAOI,WACIqjC,EACAt7B,GAA8B,oBAR1B,KAAAu7B,oBAAuCH,EAAgBvjC,YAS3D7pB,KAAKwtD,wBAA0BF,GAA4C,IAAIG,EAAoB,IAAIC,EAAQ,OAC/G1tD,KAAK2tD,eAAiB37B,EACtBhyB,KAAK4tD,kBAAoBC,SAAS77B,EAAW1O,YAAY,6BAA8B,KAAM,IAZrG,4CAeI,WACI,OAAOtjB,KAAK2tD,iBAhBpB,2BAmBI,WACI,OAAO3tD,KAAKutD,qBApBpB,IAuBI,SAA2B9tD,GACvBO,KAAKutD,oBAAsB9tD,EAC3BO,KAAK8tD,+BAAiCruD,IAAU2tD,EAAgBvjC,YAAc,IAAO,KACrF7pB,KAAKwtD,wBAAwBO,YAAcX,EAAgB3tD,KA1BnE,+BA6BI,WACI,OAAOO,KAAKwtD,0BA9BpB,sCAiCI,WACI,OAAOxtD,KAAK8tD,iCAlCpB,mCAqCI,WACI,OAAO9tD,KAAKutD,sBAAwBH,EAAgBvjC,cAtC5D,qCAyCI,WACI,OAAO7pB,KAAKgyB,WAAW1O,YAAY,IAAW2Y,uDAAmDr9B,KA1CzG,yBA6CI,WACI,OAAOoB,KAAK4tD,sBA9CpB,KAmDaH,EAAb,WAII,WAAYv5C,GAAgB,+BAIrB,KAAA85C,UAAY,WACf,OAAOxkD,KAAKC,UAAU,GAAM,SAAC/Q,EAAU+G,GACnC,GAAIA,GAA0B,kBAAVA,EAAoB,CACpC,IAAMwuD,EAAmB,GACzB,IAAK,IAAMC,KAAKzuD,EACRjH,OAAOwJ,eAAeC,KAAKxC,EAAOyuD,KAClCD,EAAYC,GAAKA,EAAEC,OAAO,GAAG9hC,cAAgB6hC,EAAEE,UAAU,IAAM3uD,EAAMyuD,IAG7E,OAAOD,EAEX,OAAOxuD,MAdXO,KAAKkU,QAAUA,EALvB,yCAuBI,WACI,OAAOlU,KAAKkU,UAxBpB,uBA2BI,WACI,OAAOlU,KAAK6kC,aA5BpB,IA+BI,SAAuBplC,GACnBO,KAAK6kC,YAAcplC,EAAM4sB,kBAhCjC,KAoCaqhC,EAKT,WAAYW,GAAM,oBACdruD,KAAKsuD,OAAS,IAAIC,EAClBvuD,KAAKquD,GAAKA,GAILE,EAMT,iCAIIvuD,KAAKrB,KAAO,YACZqB,KAAK4yB,QAH+B,SAIpC5yB,KAAKwuD,MAAQ,aACbxuD,KAAK6uB,KAAO,cAIP4/B,EAKT,WAAYrmC,EAAkBzpB,EAAci0B,GAAe,oBACvD5yB,KAAKooB,SAAWA,EAChBpoB,KAAKrB,KAAOA,EACZqB,KAAK4yB,QAAUA,IA+BvB,SAAYlY,GACR,wBACA,gBACA,cACA,sBACA,oBACA,oBANJ,CAAYA,MAAY,KASxB,SAAY/F,GACR,gBACA,oBACA,YACA,oBACA,0BACA,4BACA,wBACA,gCACA,oBACA,cACA,kBAXJ,CAAYA,MAAI,M,+FC5KH+5C,EAAb,kDAkBI,WAAmBttB,EAAmBpoB,EAAuBqoB,EAC1C5gB,EAAmBhU,EAAiBua,EACpCwV,EAAsCmyB,EAAoB1+B,EAC1DrD,EAAenI,GAA+B,kCAC7D,cAAM2c,EAAUpoB,EAAQqoB,EAAM5gB,EAAUhU,EAAQua,EAAUwV,EAA6BvM,EAAcrD,EAAMnI,IACtGmqC,cAAgBD,EAFwC,EArBrE,2CAiCI,WACI,OAAO3uD,KAAK4uD,kBAlCpB,G,OAA6C,I,qVCFhCC,EAAb,kDAGI,WAAY5+C,EAAmBoH,GAA4D,MAArCnH,EAAqC,uDAAd,IAAU4+C,KAAI,4BACvF,cAAM7+C,EAAWC,IACZ6+C,kBAAoB13C,EAF8D,EAH/F,+CAQI,WACI,OAAOrX,KAAK+uD,sBATpB,GAAsC,KAazBC,EAAb,kDACI,WAAY33C,GAAqB,uCACvB,+BAAgCA,GAF9C,UAAkDw3C,GAMrCI,EAAb,kDACI,WAAY53C,GAAqB,uCACvB,wBAAyBA,GAFvC,UAA2Cw3C,GAM9BK,EAAb,kDACI,WAAY73C,GAAqB,uCACvB,sBAAuBA,GAFrC,UAAyCw3C,GAM5BM,EAAb,kDAGI,WAAY93C,EAAuBvH,GAAa,kCAC5C,cAAM,wBAAyBuH,EAAe,IAAUxY,QACnDyiD,UAAYxxC,EAF2B,EAHpD,uCAQI,WACI,OAAO9P,KAAKshD,cATpB,GAA2CuN,GAa9BO,EAAb,kDAGI,WAAYn/C,EAAmBoH,EAAuB8B,GAAmB,kCACrE,cAAMlJ,EAAWoH,IACZg4C,gBAAkBl2C,EAF8C,EAH7E,6CAQI,WACI,OAAOnZ,KAAKqvD,oBATpB,GAA0CR,GAa7BS,EAAb,kDACI,WAAYj4C,EAAuB8B,GAAmB,uCAC5C,gCAAiC9B,EAAe8B,GAF9D,UAAmDi2C,GAMtCG,EAAb,kDACI,WAAYl4C,EAAuB8B,GAAmB,uCAC5C,+BAAgC9B,EAAe8B,GAF7D,UAAkDi2C,GAMrCI,EAAb,kDACI,WAAYn4C,EAAuB8B,GAAmB,uCAC5C,+BAAgC9B,EAAe8B,GAF7D,UAAkDi2C,GAMrCK,EAAb,kDAGI,WAAYp4C,EAAuB8B,EAAqBrJ,GAAa,kCACjE,cAAM,4BAA6BuH,EAAe8B,IAC7CmoC,UAAYxxC,EAFgD,EAHzE,uCAQI,WACI,OAAO9P,KAAKshD,cATpB,GAA+C8N,I,6BC3E/C,IAAY5pC,EAPZ,kCAOA,SAAYA,GAIR,uBAKA,2BATJ,CAAYA,MAAY,M,yKCkGZkqC,E,oCAlGCC,EAAb,kDAII,WAAY1/C,EAAmB2vB,EAAmB/S,GAAwD,MAArC3c,EAAqC,uDAAd,IAAU4+C,KAAI,4BACtG,cAAM7+C,EAAWC,IAEZgyB,cAAgBtC,EACrB,EAAK8B,cAAgB7U,EAJiF,EAJ9G,2CAWI,WACI,OAAO7sB,KAAKkiC,gBAZpB,qBAeI,WACI,OAAOliC,KAAK0hC,kBAhBpB,GAA4C,KAoB/BkuB,EAAb,kDAII,WAAYhwB,EAAmB/S,EAAmBxV,EAAuB8B,GAAmB,kCACxF,cAAM,4BAA6BymB,EAAW/S,IAEzCkiC,kBAAoB13C,EACzB,EAAKg4C,gBAAkBl2C,EAJiE,EAJhG,+CAWI,WACI,OAAOnZ,KAAK+uD,oBAZpB,uBAeI,WACI,OAAO/uD,KAAKqvD,oBAhBpB,GAA+CM,GAoBlCE,EAAb,kDAII,WAAYjwB,EAAmB/S,EAAmBxV,EAAuB8B,GAAmB,kCACxF,cAAM,wBAAyBymB,EAAW/S,IACrCkiC,kBAAoB13C,EACzB,EAAKg4C,gBAAkBl2C,EAHiE,EAJhG,+CAUI,WACI,OAAOnZ,KAAK+uD,oBAXpB,uBAcI,WACI,OAAO/uD,KAAKqvD,oBAfpB,GAA2CM,GAmB9BG,EAAb,kDAGI,WAAYlwB,EAAmBmwB,EAA0BljC,GAAiB,kCACtE,cAAM,2BAA4B+S,EAAW/S,IACxCmjC,qBAAuBD,EAF0C,EAH9E,kDAQI,WACI,OAAO/vD,KAAKgwD,yBATpB,GAA8CL,GAajCM,EAAb,kDAKI,WAAYrwB,EAAmBvoB,EAAuB8B,EAAqBkQ,EAA0BwD,GAAiB,kCAClH,cAAM,0BAA2B+S,EAAW/S,IAEvCkiC,kBAAoB13C,EACzB,EAAKg4C,gBAAkBl2C,EACvB,EAAK+2C,qBAAuB7mC,EALsF,EAL1H,+CAaI,WACI,OAAOrpB,KAAK+uD,oBAdpB,uBAiBI,WACI,OAAO/uD,KAAKqvD,kBAlBpB,4BAqBI,WACI,OAAOrvD,KAAKkwD,yBAtBpB,GAA6CP,IA0B7C,SAAYD,GACR,yBACA,2CACA,+CACA,iDACA,qDACA,mCACA,uCACA,mCACA,2EACA,mCAVJ,CAAYA,MAA2B,M,qGC9F3BS,E,uWAAZ,SAAYA,GACR,YACA,cACA,kBACA,cAJJ,CAAYA,MAAe,KAiBpB,IAAMzxB,EAAb,WAKI,WACIN,GAGA,GAH6B,qBAGxBA,EACD,MAAM,IAAI,IAAkB,gBAGhCp+B,KAAK24C,YAAcva,EAAanS,QAChCjsB,KAAKowD,gBAAkBhyB,EAAaiyB,YAd5C,yCAsCI,SAAmBjyB,GACfp+B,KAAK24C,YAAcva,EAAanS,QAChCjsB,KAAKowD,gBAAkBhyB,EAAaiyB,cAxC5C,wBA2CW,SAAW33D,EAAa+G,GAC3BO,KAAK24C,YAAYjgD,GAAO+G,IA5ChC,qBA+CW,SACH6wD,EACA1sC,GAGgC,WAFhCwO,EAEgC,uDAFb,GACnBgO,EACgC,uDADpB,KACZ1T,EAAgC,uDAAJ,KAGtB6jC,EAA2B,IAAI,IAE/BC,EAAiBF,IAAWH,EAAgB/zC,KAAO,OAASk0C,EAC5DG,EAAqB,SAACl7C,GAAkD,IAA9BqhC,EAA8B,uDAArB,GAC/C8Z,EAAqDn7C,EAC3D,MAAO,CACHA,KAAM/L,KAAKC,UAAUmtC,GACrB3qB,QAASziB,KAAKC,UAAU8L,EAAK0W,SAC7BW,KAAMgqB,EACNxd,GAAI7jB,EAAKwsB,YAAc,KAAOxsB,EAAKwsB,WAAa,IAChD1I,OAAQ9jB,EAAKwsB,WACb1K,WAAYuf,EAAE9mC,MAAQ8mC,EAAE9mC,MAAMD,QAAU6gD,EAAEr5B,WAAaq5B,EAAEr5B,WAAaq5B,EAAEC,gBAI1EC,EAAoB,SAACn8C,GACvB,IAAM4I,EAAS,IAAIC,WAEnB,OADAD,EAAOG,kBAAkB/I,GAClB,IAAI0F,SAAQ,SAAC1B,GAChB4E,EAAOwzC,UAAY,WACnBp4C,EAAQ4E,EAAOxd,aAKjB0mC,EAAO,SAACuqB,GACU,IAAKltC,EAAK4sC,EAAgB,EAAK7X,YAAa,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAExGpO,CADiD,KAAlC,EAAKnY,YAAYA,GAAsB,GAAK,IAAM,EAAKA,YAAYA,GAC9D0+B,GAAU97C,MAAM,SAAOO,GAAP,OAAoB,mHAChD+6C,IAAWH,EAAgBhwB,QAA8B,MAApB5qB,EAAKwsB,WADM,gBAGhDwuB,EAAyB93C,QAAQg4C,EAAmBl7C,IAHJ,sBAKjC,OALiC,SAK3BA,EAAKqX,OALsB,OAK1CgqB,EAL0C,OAMhD2Z,EAAyB93C,QAAQg4C,EAAmBl7C,EAAMqhC,IANV,8CAQrDzgC,OAAM,SAACrG,GACNygD,EAAyB34C,OAAO9H,OAQxC,GAJI9P,KAAKowD,kBACLpwD,KAAK24C,YAAY,iBAAmB,YAGpC2X,IAAWH,EAAgB/zC,MAAQsQ,EAAY,CAC/C,IAAMktB,EAAc,sBACpB55C,KAAK24C,YAAY,gBAAkBiB,EACnC55C,KAAK24C,YAAY,gBAAkBiB,EACb,qBAAVllC,MAAyBgY,aAAsBhY,KACvDk8C,EAAkBlkC,GAAoB1X,MAAM,SAAC+7C,GACzCxqB,EAAKwqB,MACN56C,OAAM,SAACrG,GACNygD,EAAyB34C,OAAO9H,MAGpCy2B,EAAK7Z,QAGL4jC,IAAWH,EAAgBxwB,MAAQS,IACnCpgC,KAAK24C,YAAY,gBAAkB,mBACnC34C,KAAK24C,YAAY,gBAAkB,oBAEvCpS,EAAKnG,GAET,OAAOmwB,EAAyB94C,UAxHxC,uBA2HY,SAAUP,GAA6B,IAAhBxM,EAAgB,uDAAF,GACnCsmD,EAAchxD,KAAKoyB,YAAY1nB,GACrC,OAAOsmD,EAAc95C,IAA6B,IAAtBA,EAAI7M,QAAQ,KAAc,IAAM,KAAO2mD,EAAc95C,IA7HzF,yBAgIY,WAA4B,IAAhBxM,EAAgB,uDAAF,GAC9B,OAAOlS,OAAOyR,KAAKS,GACdS,KAAI,SAAC+iD,GAAD,OAAYvb,mBAAmBub,GAAK,IAAMvb,mBAAmBjoC,EAAOwjD,OACxE/7C,KAAK,QAnIlB,iCAiBW,SAA0B8+C,EAAmBhlC,GAChD,IAAIilC,EAAsB,GAE1B,IACI,IAAMhmD,EAAM+gB,EAAQltB,OAAOuH,MAAM,WAC3B6qD,EAAiB,GACvBjmD,EAAIH,SAAQ,SAACqmD,GACT,IAAMC,EAAQD,EAAK9qD,MAAM,MACnBoD,EAAS2nD,EAAMlwC,QAAQkL,cACvB5sB,EAAQ4xD,EAAMl/C,KAAK,MACzBg/C,EAAUznD,GAAUjK,KAGxByxD,EAAcC,EAAUF,EAAU5kC,eACpC,MAAOniB,IAIT,OAAOgnD,MAnCf,M,iCCpBYI,E,kCAAZ,SAAYA,GACR,yBACA,mBAFJ,CAAYA,MAAa,M,6BCRzB,6CAEIC,EAFJ,OAEqCha,EAAMC,cAAc,MAC9Cga,EAAe,SAAsBC,EAAUtsC,GAKxD,YAJa,IAATA,IACFA,EAAO,MAGO,MAAZssC,EAAyB/0C,OAAO+0C,GAC7BtsC,GAAQ,MAEFosC,O,6BCXf,WAEIr9C,EAFJ,OAE2BqjC,EAAMC,cAAc,MAC/CtjC,EAAQqzB,YAAc,gBACPrzB,O,yHCSFw9C,EAAb,kDAsDI,WAAmB9kD,EACAT,EACAC,EACAW,EACAC,EACAd,EACAylD,EACAC,EACAtyC,GAAkB,kCACjC,cAAMlT,EAAeF,EAAeC,EAAUS,IACzCA,UAAYA,EACjB,EAAKG,eAAiBA,EACtB,EAAKC,WAAaA,EAClB,EAAK6kD,qBAAuBF,EAC5B,EAAKG,4BAA8BF,EACnC,EAAKG,aAAezyC,EAPa,EA9DzC,2CA0cI,WACI,OAAOtf,KAAK+xD,eA3cpB,kBAodI,WACI,GAAI/xD,KAAKsf,UACL,OAAOtf,KAAKmN,aAtdxB,0BAkeW,SAAa2F,GACZ9S,KAAK+xD,cACQ,IAAI1kD,SAASrN,KAAKmN,YAC1BG,UAAU,GAAIwF,GAAa,KAre5C,oCA+eI,WACI,OAAO9S,KAAK8xD,+BAhfpB,8CAwEW,SAAuCE,GAC1C,YAAoCpzD,IAAhCozD,EACON,EAAsB9H,yBAE1B8H,EAAsBO,sCACzBP,EAAsBQ,oCAAoCF,MA7EtE,mDAgFW,SAA6CG,GAChD,OAAQA,GACJ,IAAK,2BACD,OAAO,IAAIT,EACP,IAAe5kD,MACf,EACA,IACA,IACA,EACA,EACAqlD,EACAA,GACA,GACR,IAAK,+BACD,OAAO,IAAIT,EACP,IAAeU,MACf,EACA,KACA,IACA,GACA,EACAD,EACA,iCACA,GACR,IAAK,gCACD,OAAO,IAAIT,EACP,IAAeU,MACf,EACA,KACA,IACA,GACA,EACAD,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,KACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,MACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,KACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,KACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,MACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,MACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,gCACD,OAAO,IAAIT,EACP,IAAeW,UACf,EACA,KACA,KACA,EACA,GACAF,EACAA,GACA,GAER,IAAK,2BACD,OAAO,IAAIT,EACP,IAAeplD,IACf,EACA,IACA,KACA,EACA,GACA6lD,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIT,EACP,IAAeplD,IACf,EACA,KACA,KACA,EACA,GACA6lD,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIT,EACP,IAAe5kD,MACf,EACA,IACA,IACA,EACA,EACAqlD,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIT,EACP,IAAeplD,IACf,EACA,KACA,KACA,EACA,GACA6lD,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIT,EACP,IAAeplD,IACf,EACA,KACA,KACA,EACA,GACA6lD,EACA,4BACA,GACR,IAAK,0BACD,OAAO,IAAIT,EACP,IAAeplD,IACf,EACA,IACA,KACA,EACA,GACA6lD,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIT,EACP,IAAetzC,SACf,EACA,KACA,KACA,EACA,GACA+zC,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIT,EACP,IAAetzC,SACf,EACA,KACA,KACA,EACA,GACA+zC,EACAA,GACA,GACR,IAAK,2BACD,OAAO,IAAIT,EACP,IAAeplD,IACf,EACA,KACA,KACA,EACA,GACA6lD,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIT,EACP,IAAeplD,IACf,EACA,KACA,KACA,EACA,GACA6lD,EACA,4BACA,GACR,IAAK,kCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,MACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIT,EACP,IAAevzC,IACf,EACA,KACA,MACA,EACA,GACAg0C,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIT,EACP,IAAetzC,SACf,EACA,KACA,KACA,EACA,GACA+zC,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIT,EACP,IAAerzC,UACf,EACA,KACA,IACA,EACA,GACA8zC,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIT,EACP,IAAerzC,UACf,EACA,KACA,IACA,EACA,GACA8zC,EACAA,GACA,GACR,IAAK,oCACD,OAAO,IAAIT,EACP,IAAerzC,UACf,EACA,KACA,IACA,EACA,GACA8zC,EACAA,GACA,GACR,IAAK,8BACD,OAAO,IAAIT,EACP,IAAepzC,KACf,EACA,KACA,KACA,EACA,GACA6zC,EACAA,GACA,GACR,IAAK,8BACD,OAAO,IAAIT,EACP,IAAepzC,KACf,EACA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","file":"static/js/2.cd9c6385.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","module.exports = require(\"regenerator-runtime\");\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    // ADFS String\n    ADFS: \"adfs\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"]\n};\n\nexport const OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE\n];\n\nexport const OIDC_SCOPES = [\n    ...OIDC_DEFAULT_SCOPES,\n    Constants.EMAIL_SCOPE\n];\n\n/**\n * Request header names\n */\nexport enum HeaderNames {\n    CONTENT_TYPE = \"Content-Type\",\n    RETRY_AFTER = \"Retry-After\",\n    CCS_HEADER = \"X-AnchorMailbox\",\n    WWWAuthenticate = \"WWW-Authenticate\",\n    AuthenticationInfo = \"Authentication-Info\"\n}\n\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nexport enum PersistentCacheKeys {\n    ID_TOKEN = \"idtoken\",\n    CLIENT_INFO = \"client.info\",\n    ADAL_ID_TOKEN = \"adal.idtoken\",\n    ERROR = \"error\",\n    ERROR_DESC = \"error.description\",\n    ACTIVE_ACCOUNT = \"active-account\"\n}\n\n/**\n * String constants related to AAD Authority\n */\nexport enum AADAuthorityConstants {\n    COMMON = \"common\",\n    ORGANIZATIONS = \"organizations\",\n    CONSUMERS = \"consumers\"\n}\n\n/**\n * Keys in the hashParams sent by AAD Server\n */\nexport enum AADServerParamKeys {\n    CLIENT_ID = \"client_id\",\n    REDIRECT_URI = \"redirect_uri\",\n    RESPONSE_TYPE = \"response_type\",\n    RESPONSE_MODE = \"response_mode\",\n    GRANT_TYPE = \"grant_type\",\n    CLAIMS = \"claims\",\n    SCOPE = \"scope\",\n    ERROR = \"error\",\n    ERROR_DESCRIPTION = \"error_description\",\n    ACCESS_TOKEN = \"access_token\",\n    ID_TOKEN = \"id_token\",\n    REFRESH_TOKEN = \"refresh_token\",\n    EXPIRES_IN = \"expires_in\",\n    STATE = \"state\",\n    NONCE = \"nonce\",\n    PROMPT = \"prompt\",\n    SESSION_STATE = \"session_state\",\n    CLIENT_INFO = \"client_info\",\n    CODE = \"code\",\n    CODE_CHALLENGE = \"code_challenge\",\n    CODE_CHALLENGE_METHOD = \"code_challenge_method\",\n    CODE_VERIFIER = \"code_verifier\",\n    CLIENT_REQUEST_ID = \"client-request-id\",\n    X_CLIENT_SKU = \"x-client-SKU\",\n    X_CLIENT_VER = \"x-client-VER\",\n    X_CLIENT_OS = \"x-client-OS\",\n    X_CLIENT_CPU = \"x-client-CPU\",\n    X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\",\n    X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\",\n    X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\",\n    POST_LOGOUT_URI = \"post_logout_redirect_uri\",\n    ID_TOKEN_HINT= \"id_token_hint\",\n    DEVICE_CODE = \"device_code\",\n    CLIENT_SECRET = \"client_secret\",\n    CLIENT_ASSERTION = \"client_assertion\",\n    CLIENT_ASSERTION_TYPE = \"client_assertion_type\",\n    TOKEN_TYPE = \"token_type\",\n    REQ_CNF = \"req_cnf\",\n    OBO_ASSERTION = \"assertion\",\n    REQUESTED_TOKEN_USE = \"requested_token_use\",\n    ON_BEHALF_OF = \"on_behalf_of\",\n    FOCI = \"foci\",\n    CCS_HEADER = \"X-AnchorMailbox\"\n}\n\n/**\n * Claims request keys\n */\nexport enum ClaimsRequestKeys {\n    ACCESS_TOKEN = \"access_token\",\n    XMS_CC = \"xms_cc\"\n}\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nexport const PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\"\n};\n\n/**\n * SSO Types - generated to populate hints\n */\nexport enum SSOTypes {\n    ACCOUNT = \"account\",\n    SID = \"sid\",\n    LOGIN_HINT = \"login_hint\",\n    ID_TOKEN = \"id_token\",\n    DOMAIN_HINT = \"domain_hint\",\n    ORGANIZATIONS = \"organizations\",\n    CONSUMERS = \"consumers\",\n    ACCOUNT_ID = \"accountIdentifier\",\n    HOMEACCOUNT_ID = \"homeAccountIdentifier\"\n}\n\n/**\n * Disallowed extra query parameters.\n */\nexport const BlacklistedEQParams = [\n    SSOTypes.SID,\n    SSOTypes.LOGIN_HINT\n];\n\n/**\n * allowed values for codeVerifier\n */\nexport const CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\"\n};\n\n/**\n * The method used to encode the code verifier for the code challenge parameter. can be one\n * of plain or s256. if excluded, code challenge is assumed to be plaintext. for more\n * information, see the pkce rcf: https://tools.ietf.org/html/rfc7636\n */\nexport const CodeChallengeMethodValuesArray: string[] = [\n    CodeChallengeMethodValues.PLAIN,\n    CodeChallengeMethodValues.S256\n];\n\n/**\n * allowed values for response_mode\n */\nexport enum ResponseMode {\n    QUERY = \"query\",\n    FRAGMENT = \"fragment\",\n    FORM_POST = \"form_post\"\n}\n\n/**\n * allowed grant_type\n */\nexport enum GrantType {\n    IMPLICIT_GRANT = \"implicit\",\n    AUTHORIZATION_CODE_GRANT = \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT = \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT = \"password\",\n    REFRESH_TOKEN_GRANT = \"refresh_token\",\n    DEVICE_CODE_GRANT = \"device_code\",\n    JWT_BEARER = \"urn:ietf:params:oauth:grant-type:jwt-bearer\"\n}\n\n/**\n * Account types in Cache\n */\nexport enum CacheAccountType {\n    MSSTS_ACCOUNT_TYPE = \"MSSTS\",\n    ADFS_ACCOUNT_TYPE = \"ADFS\",\n    MSAV1_ACCOUNT_TYPE = \"MSA\",\n    GENERIC_ACCOUNT_TYPE = \"Generic\" // NTLM, Kerberos, FBA, Basic etc\n}\n\n/**\n * Separators used in cache\n */\nexport enum Separators {\n    CACHE_KEY_SEPARATOR = \"-\",\n    CLIENT_INFO_SEPARATOR = \".\"\n}\n\n/**\n * Credential Type stored in the cache\n */\nexport enum CredentialType {\n    ID_TOKEN = \"IdToken\",\n    ACCESS_TOKEN = \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME = \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN = \"RefreshToken\",\n}\n\n/**\n * Credential Type stored in the cache\n */\nexport enum CacheSchemaType {\n    ACCOUNT = \"Account\",\n    CREDENTIAL = \"Credential\",\n    ID_TOKEN = \"IdToken\",\n    ACCESS_TOKEN = \"AccessToken\",\n    REFRESH_TOKEN = \"RefreshToken\",\n    APP_METADATA = \"AppMetadata\",\n    TEMPORARY = \"TempCache\",\n    TELEMETRY = \"Telemetry\",\n    UNDEFINED = \"Undefined\",\n    THROTTLING = \"Throttling\"\n}\n\n/**\n * Combine all cache types\n */\nexport enum CacheType {\n    ADFS = 1001,\n    MSA = 1002,\n    MSSTS = 1003,\n    GENERIC = 1004,\n    ACCESS_TOKEN = 2001,\n    REFRESH_TOKEN = 2002,\n    ID_TOKEN = 2003,\n    APP_METADATA = 3001,\n    UNDEFINED = 9999\n}\n\n/**\n * More Cache related constants\n */\nexport const APP_METADATA = \"appmetadata\";\nexport const CLIENT_INFO = \"client_info\";\nexport const THE_FAMILY_ID = \"1\";\n\nexport const AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\n};\n\nexport enum AuthorityMetadataSource {\n    CONFIG = \"config\",\n    CACHE = \"cache\",\n    NETWORK = \"network\"\n}\n\nexport const SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\"\n};\n\n/**\n * Type of the authentication request\n */\nexport enum AuthenticationScheme {\n    BEARER = \"Bearer\",\n    POP = \"pop\",\n    SSH = \"ssh-cert\"\n}\n\n/**\n * Constants related to throttling\n */\nexport const ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\n};\n\nexport const Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n\n/**\n * Password grant parameters\n */\nexport enum PasswordGrantConstants {\n    username = \"username\",\n    password = \"password\"\n}\n\n/**\n * Response codes\n */\nexport enum  ResponseCodes {\n    httpSuccess = 200,\n    httpBadRequest = 400\n}\n\n/**\n * Region Discovery Sources\n */\nexport enum RegionDiscoverySources {\n    FAILED_AUTO_DETECTION = \"1\",\n    INTERNAL_CACHE = \"2\",\n    ENVIRONMENT_VARIABLE = \"3\",\n    IMDS = \"4\",\n}\n\n/**\n * Region Discovery Outcomes\n */\nexport enum RegionDiscoveryOutcomes {\n    CONFIGURED_MATCHES_DETECTED = \"1\",\n    CONFIGURED_NO_AUTO_DETECTION = \"2\",\n    CONFIGURED_NOT_DETECTED = \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL = \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED = \"5\"\n}\n\nexport enum CacheOutcome {\n    NO_CACHE_HIT = \"0\",\n    FORCE_REFRESH = \"1\",\n    NO_CACHED_ACCESS_TOKEN = \"2\",\n    CACHED_ACCESS_TOKEN_EXPIRED = \"3\",\n    REFRESH_CACHED_ACCESS_TOKEN = \"4\"\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class Contracts\r\n * @private\r\n */\r\nexport class Contracts {\r\n    public static throwIfNullOrUndefined(param: any, name: string): void {\r\n        if (param === undefined || param === null) {\r\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNull(param: any, name: string): void {\r\n        if (param === null) {\r\n            throw new Error(\"throwIfNull:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrWhitespace(param: string, name: string): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).trim().length < 1) {\r\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfDisposed(isDisposed: boolean): void {\r\n        if (isDisposed) {\r\n            throw new Error(\"the object is already disposed\");\r\n        }\r\n    }\r\n\r\n    public static throwIfArrayEmptyOrWhitespace(array: string[], name: string): void {\r\n        Contracts.throwIfNullOrUndefined(array, name);\r\n\r\n        if (array.length === 0) {\r\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\r\n        }\r\n\r\n        for (const item of array) {\r\n            Contracts.throwIfNullOrWhitespace(item, name);\r\n        }\r\n    }\r\n\r\n    public static throwIfFileDoesNotExist(param: any, name: string): void {\r\n        Contracts.throwIfNullOrWhitespace(param, name);\r\n\r\n        // TODO check for file existence.\r\n    }\r\n\r\n    public static throwIfNotUndefined(param: any, name: string): void {\r\n        if (param !== undefined) {\r\n            throw new Error(\"throwIfNotUndefined:\" + name);\r\n        }\r\n    }\r\n}\r\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    POLL_INTERVAL_MS: 50,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\n\nexport enum BrowserCacheLocation {\n    LocalStorage = \"localStorage\",\n    SessionStorage = \"sessionStorage\",\n    MemoryStorage = \"memoryStorage\"\n}\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport enum HTTP_REQUEST_TYPE {\n    GET = \"GET\",\n    POST = \"POST\"\n}\n\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nexport enum TemporaryCacheKeys {\n    AUTHORITY = \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireToken.account\",\n    SESSION_STATE = \"session.state\",\n    REQUEST_STATE = \"request.state\",\n    NONCE_IDTOKEN = \"nonce.id_token\",\n    ORIGIN_URI = \"request.origin\",\n    RENEW_STATUS = \"token.renew.status\",\n    URL_HASH = \"urlHash\",\n    REQUEST_PARAMS = \"request.params\",\n    SCOPES = \"scopes\",\n    INTERACTION_STATUS_KEY = \"interaction.status\",\n    CCS_CREDENTIAL = \"ccs.credential\",\n    CORRELATION_ID = \"request.correlationId\"\n}\n\n/**\n * Cache keys stored in-memory\n */\nexport enum InMemoryCacheKeys {\n    WRAPPER_SKU = \"wrapper.sku\",\n    WRAPPER_VER = \"wrapper.version\"\n}\n\n/**\n * API Codes for Telemetry purposes. \n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nexport enum ApiId {\n    acquireTokenRedirect = 861,\n    acquireTokenPopup = 862,\n    ssoSilent = 863,\n    acquireTokenSilent_authCode = 864,\n    handleRedirectPromise = 865,\n    acquireTokenSilent_silentFlow = 61,\n    logout = 961,\n    logoutPopup = 962\n}\n\n/*\n * Interaction type of the API - used for state and telemetry\n */\nexport enum InteractionType {\n    Redirect = \"redirect\",\n    Popup = \"popup\",\n    Silent = \"silent\"\n}\n\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nexport enum InteractionStatus {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup = \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login = \"login\",\n    /**\n     * Status set when logout call occuring\n     */ \n    Logout = \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken = \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent = \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect = \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None = \"none\"\n}\n\nexport const DEFAULT_REQUEST: RedirectRequest|PopupRequest = {\n    scopes: OIDC_DEFAULT_SCOPES\n};\n\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nexport const KEY_FORMAT_JWK = \"jwk\";\n\n// Supported wrapper SKUs\nexport enum WrapperSKU {\n    React = \"@azure/msal-react\",\n    Angular = \"@azure/msal-angular\"\n}\n\n// DatabaseStorage Constants\nexport const DB_NAME = \"msal.db\";\nexport const DB_VERSION = 1;\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines speech property ids.\r\n * @class PropertyId\r\n */\r\nexport enum PropertyId {\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to specify\r\n     * to specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]].\r\n     * @member PropertyId.SpeechServiceConnection_Key\r\n     */\r\n    SpeechServiceConnection_Key = 0,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromEndpoint]].\r\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\r\n     * @member PropertyId.SpeechServiceConnection_Endpoint\r\n     */\r\n    SpeechServiceConnection_Endpoint,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\r\n     * use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\r\n     * @member PropertyId.SpeechServiceConnection_Region\r\n     */\r\n    SpeechServiceConnection_Region,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\r\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\r\n     * @member PropertyId.SpeechServiceAuthorization_Token\r\n     */\r\n    SpeechServiceAuthorization_Token,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization type. Currently unused.\r\n     * @member PropertyId.SpeechServiceAuthorization_Type\r\n     */\r\n    SpeechServiceAuthorization_Type,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.endpointId]].\r\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\r\n     * @member PropertyId.SpeechServiceConnection_EndpointId\r\n     */\r\n    SpeechServiceConnection_EndpointId,\r\n\r\n    /**\r\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\r\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\r\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\r\n     */\r\n    SpeechServiceConnection_TranslationToLanguages,\r\n\r\n    /**\r\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\r\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\r\n     */\r\n    SpeechServiceConnection_TranslationVoice,\r\n\r\n    /**\r\n     * Translation features.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\r\n     */\r\n    SpeechServiceConnection_TranslationFeatures,\r\n\r\n    /**\r\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[LanguageUnderstandingModel]].\r\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\r\n     */\r\n    SpeechServiceConnection_IntentRegion,\r\n\r\n    /**\r\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyHostName,\r\n\r\n    /**\r\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPort,\r\n\r\n    /**\r\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyUserName,\r\n\r\n    /**\r\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPassword,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * @member PropertyId.SpeechServiceConnection_RecoMode\r\n     */\r\n    SpeechServiceConnection_RecoMode,\r\n\r\n    /**\r\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\r\n     * directly.\r\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\r\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\r\n     */\r\n    SpeechServiceConnection_RecoLanguage,\r\n\r\n    /**\r\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\r\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead use [[SessionEventArgs.sessionId]].\r\n     * @member PropertyId.Speech_SessionId\r\n     */\r\n    Speech_SessionId,\r\n\r\n    /**\r\n     * The spoken language to be synthesized (e.g. en-US)\r\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\r\n     */\r\n    SpeechServiceConnection_SynthLanguage,\r\n\r\n    /**\r\n     * The name of the TTS voice to be used for speech synthesis\r\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\r\n     */\r\n    SpeechServiceConnection_SynthVoice,\r\n\r\n    /**\r\n     * The string to specify TTS output audio format\r\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\r\n     */\r\n    SpeechServiceConnection_SynthOutputFormat,\r\n\r\n    /**\r\n     * The list of comma separated languages used as possible source languages\r\n     * Added in version 1.13.0\r\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\r\n     */\r\n    SpeechServiceConnection_AutoDetectSourceLanguages,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\r\n     * to use this property directly.\r\n     * Instead use [[SpeechConfig.outputFormat]].\r\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestDetailedResultTrueFalse,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\r\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestProfanityFilterTrueFalse,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\r\n     * @member PropertyId.SpeechServiceResponse_JsonResult\r\n     */\r\n    SpeechServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\r\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\r\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\r\n     */\r\n    SpeechServiceResponse_JsonErrorDetails,\r\n\r\n    /**\r\n     * The cancellation reason. Currently unused.\r\n     * @member PropertyId.CancellationDetails_Reason\r\n     */\r\n    CancellationDetails_Reason,\r\n\r\n    /**\r\n     * The cancellation text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonText\r\n     */\r\n    CancellationDetails_ReasonText,\r\n\r\n    /**\r\n     * The Cancellation detailed text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\r\n     */\r\n    CancellationDetails_ReasonDetailedText,\r\n\r\n    /**\r\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\r\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\r\n     */\r\n    LanguageUnderstandingServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The URL string built from speech configuration.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * NOTE: Added in version 1.7.0.\r\n     */\r\n    SpeechServiceConnection_Url,\r\n\r\n    /**\r\n     * The initial silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n\r\n    /**\r\n     * The end silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EndSilenceTimeoutMs,\r\n\r\n    /**\r\n     * A boolean value specifying whether audio logging is enabled in the service or not.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EnableAudioLogging,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity setting.\r\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_ProfanityOption,\r\n\r\n    /**\r\n     * A string value specifying which post processing option should be used by service.\r\n     * Allowed values are \"TrueText\".\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_PostProcessingOption,\r\n\r\n    /**\r\n     *  A boolean value specifying whether to include word-level timestamps in the response result.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_RequestWordLevelTimestamps,\r\n\r\n    /**\r\n     * The number of times a word has to be in partial results to be returned.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_StablePartialResultThreshold,\r\n\r\n    /**\r\n     * A string value specifying the output format option in the response result. Internal use only.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_OutputFormatOption,\r\n\r\n    /**\r\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n\r\n    /**\r\n     * Identifier used to connect to the backend service.\r\n     * @member PropertyId.Conversation_ApplicationId\r\n     */\r\n    Conversation_ApplicationId,\r\n\r\n    /**\r\n     * Type of dialog backend to connect to.\r\n     * @member PropertyId.Conversation_DialogType\r\n     */\r\n    Conversation_DialogType,\r\n\r\n    /**\r\n     * Silence timeout for listening\r\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\r\n     */\r\n    Conversation_Initial_Silence_Timeout,\r\n\r\n    /**\r\n     * From Id to add to speech recognition activities.\r\n     * @member PropertyId.Conversation_From_Id\r\n     */\r\n    Conversation_From_Id,\r\n\r\n    /**\r\n     * ConversationId for the session.\r\n     * @member PropertyId.Conversation_Conversation_Id\r\n     */\r\n    Conversation_Conversation_Id,\r\n\r\n    /**\r\n     * Comma separated list of custom voice deployment ids.\r\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\r\n     */\r\n    Conversation_Custom_Voice_Deployment_Ids,\r\n\r\n    /**\r\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\r\n     * @member PropertyId.Conversation_Speech_Activity_Template\r\n     * Added in version 1.10.0.\r\n     */\r\n    Conversation_Speech_Activity_Template,\r\n\r\n    /**\r\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\r\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\r\n     * Added in version 1.15.0.\r\n     */\r\n    Conversation_Request_Bot_Status_Messages,\r\n\r\n    /**\r\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\r\n     * channel authentication.\r\n     * Added in version 1.15.1.\r\n     */\r\n    Conversation_Agent_Connection_Id,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromHost]].\r\n     */\r\n    SpeechServiceConnection_Host,\r\n\r\n    /**\r\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\r\n     */\r\n    ConversationTranslator_Host,\r\n\r\n    /**\r\n     * Optionally set the the host's display name.\r\n     * Used when joining a conversation.\r\n     */\r\n    ConversationTranslator_Name,\r\n\r\n    /**\r\n     * Optionally set a value for the X-CorrelationId request header.\r\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\r\n     */\r\n    ConversationTranslator_CorrelationId,\r\n\r\n    /**\r\n     * Set the conversation token to be sent to the speech service. This enables the\r\n     * service to service call from the speech service to the Conversation Translator service for relaying\r\n     * recognitions. For internal use.\r\n     */\r\n    ConversationTranslator_Token,\r\n\r\n    /**\r\n     * The reference text of the audio for pronunciation evaluation.\r\n     * For this and the following pronunciation assessment parameters, see\r\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_ReferenceText,\r\n\r\n    /**\r\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_GradingSystem,\r\n\r\n    /**\r\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Granularity,\r\n\r\n    /**\r\n     * Defines if enable miscue calculation.\r\n     * With this enabled, the pronounced words will be compared to the reference text,\r\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_EnableMiscue,\r\n\r\n    /**\r\n     * The json string of pronunciation assessment parameters\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Json,\r\n\r\n    /**\r\n     * Pronunciation assessment parameters.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Params,\r\n\r\n    /**\r\n     * Version of Speaker Recognition API to use.\r\n     * Added in version 1.18.0\r\n     */\r\n    SpeakerRecognition_Api_Version\r\n}\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Make sure not to export internal modules.\r\n//\r\nexport * from \"./CognitiveSubscriptionKeyAuthentication\";\r\nexport * from \"./CognitiveTokenAuthentication\";\r\nexport * from \"./IAuthentication\";\r\nexport * from \"./IConnectionFactory\";\r\nexport * from \"./ISynthesisConnectionFactory\";\r\nexport * from \"./IntentConnectionFactory\";\r\nexport * from \"./RecognitionEvents\";\r\nexport * from \"./ServiceRecognizerBase\";\r\nexport * from \"./RecognizerConfig\";\r\nexport * from \"./SpeechServiceInterfaces\";\r\nexport * from \"./WebsocketMessageFormatter\";\r\nexport * from \"./SpeechConnectionFactory\";\r\nexport * from \"./TranscriberConnectionFactory\";\r\nexport * from \"./TranslationConnectionFactory\";\r\nexport * from \"./SpeechSynthesisConnectionFactory\";\r\nexport * from \"./EnumTranslation\";\r\nexport * from \"./ServiceMessages/Enums\";\r\nexport * from \"./ServiceMessages/TranslationSynthesisEnd\";\r\nexport * from \"./ServiceMessages/TranslationHypothesis\";\r\nexport * from \"./ServiceMessages/TranslationPhrase\";\r\nexport * from \"./TranslationServiceRecognizer\";\r\nexport * from \"./ServiceMessages/SpeechDetected\";\r\nexport * from \"./ServiceMessages/SpeechHypothesis\";\r\nexport * from \"./ServiceMessages/SpeechKeyword\";\r\nexport * from \"./SpeechServiceRecognizer\";\r\nexport * from \"./TranscriptionServiceRecognizer\";\r\nexport * from \"./ServiceMessages/DetailedSpeechPhrase\";\r\nexport * from \"./ServiceMessages/SimpleSpeechPhrase\";\r\nexport * from \"./AddedLmIntent\";\r\nexport * from \"./IntentServiceRecognizer\";\r\nexport * from \"./ServiceMessages/IntentResponse\";\r\nexport * from \"./RequestSession\";\r\nexport * from \"./SpeechContext\";\r\nexport * from \"./DynamicGrammarBuilder\";\r\nexport * from \"./DynamicGrammarInterfaces\";\r\nexport * from \"./DialogServiceAdapter\";\r\nexport * from \"./AgentConfig\";\r\nexport * from \"./Transcription/Exports\";\r\nexport * from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nexport * from \"./SynthesisTurn\";\r\nexport * from \"./SynthesisAdapterBase\";\r\nexport * from \"./SynthesizerConfig\";\r\nexport * from \"./SynthesisContext\";\r\nexport * from \"./SpeakerRecognitionConfig\";\r\nexport * from \"./SpeakerIdMessageAdapter\";\r\n\r\nexport const OutputFormatPropertyName: string = \"OutputFormat\";\r\nexport const CancellationErrorCodePropertyName: string = \"CancellationErrorCode\";\r\nexport const ServicePropertiesPropertyName: string = \"ServiceProperties\";\r\nexport const ForceDictationPropertyName: string = \"ForceDictation\";\r\nexport const AutoDetectSourceLanguagesOpenRangeOptionName: string = \"OpenRange\";\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: \"client_info_decoding_error\",\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\n    },\n    clientInfoEmptyError: {\n        code: \"client_info_empty_error\",\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\n    },\n    tokenParsingError: {\n        code: \"token_parsing_error\",\n        desc: \"Token cannot be parsed. Please review stack trace to determine root cause.\"\n    },\n    nullOrEmptyToken: {\n        code: \"null_or_empty_token\",\n        desc: \"The token is null or empty. Please review the trace to determine the root cause.\"\n    },\n    endpointResolutionError: {\n        code: \"endpoints_resolution_error\",\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\n    },\n    networkError: {\n        code: \"network_error\",\n        desc: \"Network request failed. Please check network trace to determine root cause.\"\n    },\n    unableToGetOpenidConfigError: {\n        code: \"openid_config_error\",\n        desc: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\"\n    },\n    hashNotDeserialized: {\n        code: \"hash_not_deserialized\",\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\n    },\n    blankGuidGenerated: {\n        code: \"blank_guid_generated\",\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\n    },\n    invalidStateError: {\n        code: \"invalid_state\",\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\n    },\n    stateMismatchError: {\n        code: \"state_mismatch\",\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\n    },\n    stateNotFoundError: {\n        code: \"state_not_found\",\n        desc: \"State not found\"\n    },\n    nonceMismatchError: {\n        code: \"nonce_mismatch\",\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\n    },\n    nonceNotFoundError: {\n        code: \"nonce_not_found\",\n        desc: \"nonce not found\"\n    },\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\n    },\n    multipleMatchingTokens: {\n        code: \"multiple_matching_tokens\",\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\n    },\n    multipleMatchingAccounts: {\n        code: \"multiple_matching_accounts\",\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\n    },\n    multipleMatchingAppMetadata: {\n        code: \"multiple_matching_appMetadata\",\n        desc: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\"\n    },\n    tokenRequestCannotBeMade: {\n        code: \"request_cannot_be_made\",\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\n    },\n    appendEmptyScopeError: {\n        code: \"cannot_append_empty_scope\",\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\n    },\n    removeEmptyScopeError: {\n        code: \"cannot_remove_empty_scope\",\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\n    },\n    appendScopeSetError: {\n        code: \"cannot_append_scopeset\",\n        desc: \"Cannot append ScopeSet due to error.\"\n    },\n    emptyInputScopeSetError: {\n        code: \"empty_input_scopeset\",\n        desc: \"Empty input ScopeSet cannot be processed.\"\n    },\n    DeviceCodePollingCancelled: {\n        code: \"device_code_polling_cancelled\",\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\n    },\n    DeviceCodeExpired: {\n        code: \"device_code_expired\",\n        desc: \"Device code is expired.\"\n    },\n    DeviceCodeUnknownError: {\n        code: \"device_code_unknown_error\",\n        desc: \"Device code stopped polling for unknown reasons.\"\n    },\n    NoAccountInSilentRequest: {\n        code: \"no_account_in_silent_request\",\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\n    },\n    invalidCacheRecord: {\n        code: \"invalid_cache_record\",\n        desc: \"Cache record object was null or undefined.\"\n    },\n    invalidCacheEnvironment: {\n        code: \"invalid_cache_environment\",\n        desc: \"Invalid environment when attempting to create cache entry\"\n    },\n    noAccountFound: {\n        code: \"no_account_found\",\n        desc: \"No account found in cache for given key.\"\n    },\n    CachePluginError: {\n        code: \"no cache plugin set on CacheManager\",\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\n    },\n    noCryptoObj: {\n        code: \"no_crypto_object\",\n        desc: \"No crypto object detected. This is required for the following operation: \"\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\"\n    },\n    unexpectedAccountType: {\n        code: \"unexpected_account_type\",\n        desc: \"Unexpected account type.\"\n    },\n    unexpectedCredentialType: {\n        code: \"unexpected_credential_type\",\n        desc: \"Unexpected credential type.\"\n    },\n    invalidAssertion: {\n        code: \"invalid_assertion\",\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\"\n    },\n    invalidClientCredential: {\n        code: \"invalid_client_credential\",\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\"\n    },\n    tokenRefreshRequired: {\n        code: \"token_refresh_required\",\n        desc: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\"\n    },\n    userTimeoutReached: {\n        code: \"user_timeout_reached\",\n        desc: \"User defined timeout for device code polling reached\",\n    },\n    tokenClaimsRequired: {\n        code: \"token_claims_cnf_required_for_signedjwt\",\n        desc: \"Cannot generate a POP jwt if the token_claims are not populated\"\n    },\n    noAuthorizationCodeFromServer: {\n        code: \"authorization_code_missing_from_server_response\",\n        desc: \"Server response does not contain an authorization code to proceed\"\n    },\n    noAzureRegionDetected: {\n        code: \"no_azure_region_detected\",\n        desc: \"No azure region was detected and no fallback was made available\"\n    },\n    accessTokenEntityNullError: {\n        code: \"access_token_entity_null\",\n        desc: \"Access token entity is null, please check logs and cache to ensure a valid access token is present.\"\n    },\n    bindingKeyNotRemovedError: {\n        code: \"binding_key_not_removed\",\n        desc: \"Could not remove the credential's binding key from storage.\"\n    },\n    logoutNotSupported: {\n        code: \"end_session_endpoint_not_supported\",\n        desc: \"Provided authority does not support logout.\"\n    }\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when client info object doesn't decode correctly.\n     * @param caughtError\n     */\n    static createClientInfoDecodingError(caughtError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code,\n            `${ClientAuthErrorMessage.clientInfoDecodingError.desc} Failed with error: ${caughtError}`);\n    }\n\n    /**\n     * Creates an error thrown if the client info is empty.\n     * @param rawClientInfo\n     */\n    static createClientInfoEmptyError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code,\n            `${ClientAuthErrorMessage.clientInfoEmptyError.desc}`);\n    }\n\n    /**\n     * Creates an error thrown when the id token extraction errors out.\n     * @param err\n     */\n    static createTokenParsingError(caughtExtractionError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenParsingError.code,\n            `${ClientAuthErrorMessage.tokenParsingError.desc} Failed with error: ${caughtExtractionError}`);\n    }\n\n    /**\n     * Creates an error thrown when the id token string is null or empty.\n     * @param invalidRawTokenString\n     */\n    static createTokenNullOrEmptyError(invalidRawTokenString: string) : ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyToken.code,\n            `${ClientAuthErrorMessage.nullOrEmptyToken.desc} Raw Token Value: ${invalidRawTokenString}`);\n    }\n\n    /**\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\n     */\n    static createEndpointDiscoveryIncompleteError(errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code,\n            `${ClientAuthErrorMessage.endpointResolutionError.desc} Detail: ${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the fetch client throws\n     */\n    static createNetworkError(endpoint: string, errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.networkError.code,\n            `${ClientAuthErrorMessage.networkError.desc} | Fetch client threw: ${errDetail} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Creates an error thrown when the openid-configuration endpoint cannot be reached or does not contain the required data\n     */\n    static createUnableToGetOpenidConfigError(errDetail: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unableToGetOpenidConfigError.code,\n            `${ClientAuthErrorMessage.unableToGetOpenidConfigError.desc} Attempted to retrieve endpoints from: ${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the hash cannot be deserialized.\n     * @param hashParamObj\n     */\n    static createHashNotDeserializedError(hashParamObj: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code,\n            `${ClientAuthErrorMessage.hashNotDeserialized.desc} Given Object: ${hashParamObj}`);\n    }\n\n    /**\n     * Creates an error thrown when the state cannot be parsed.\n     * @param invalidState\n     */\n    static createInvalidStateError(invalidState: string, errorString?: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code,\n            `${ClientAuthErrorMessage.invalidStateError.desc} Invalid State: ${invalidState}, Root Err: ${errorString}`);\n    }\n\n    /**\n     * Creates an error thrown when two states do not match.\n     */\n    static createStateMismatchError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code,\n            ClientAuthErrorMessage.stateMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the state is not present\n     * @param missingState\n     */\n    static createStateNotFoundError(missingState: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.stateNotFoundError.code,\n            `${ClientAuthErrorMessage.stateNotFoundError.desc}:  ${missingState}`);\n    }\n\n    /**\n     * Creates an error thrown when the nonce does not match.\n     */\n    static createNonceMismatchError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code,\n            ClientAuthErrorMessage.nonceMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the mnonce is not present\n     * @param missingNonce\n     */\n    static createNonceNotFoundError(missingNonce: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.nonceNotFoundError.code,\n            `${ClientAuthErrorMessage.nonceNotFoundError.desc}:  ${missingNonce}`);\n    }\n\n    /**\n     * Throws error when multiple tokens are in cache.\n     */\n    static createMultipleMatchingTokensInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code,\n            `${ClientAuthErrorMessage.multipleMatchingTokens.desc}.`);\n    }\n\n    /**\n     * Throws error when multiple accounts are in cache for the given params\n     */\n    static createMultipleMatchingAccountsInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code,\n            ClientAuthErrorMessage.multipleMatchingAccounts.desc);\n    }\n\n    /**\n     * Throws error when multiple appMetada are in cache for the given clientId.\n     */\n    static createMultipleMatchingAppMetadataInCacheError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAppMetadata.code,\n            ClientAuthErrorMessage.multipleMatchingAppMetadata.desc);\n    }\n\n    /**\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\n     */\n    static createTokenRequestCannotBeMadeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\n    }\n\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createAppendEmptyScopeToSetError(givenScope: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, `${ClientAuthErrorMessage.appendEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n\n    /**\n     * Throws error when attempting to append a null, undefined or empty scope to a set\n     * @param givenScope\n     */\n    static createRemoveEmptyScopeFromSetError(givenScope: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, `${ClientAuthErrorMessage.removeEmptyScopeError.desc} Given Scope: ${givenScope}`);\n    }\n\n    /**\n     * Throws error when attempting to append null or empty ScopeSet.\n     * @param appendError\n     */\n    static createAppendScopeSetError(appendError: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, `${ClientAuthErrorMessage.appendScopeSetError.desc} Detail Error: ${appendError}`);\n    }\n\n    /**\n     * Throws error if ScopeSet is null or undefined.\n     * @param givenScopeSet\n     */\n    static createEmptyInputScopeSetError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, `${ClientAuthErrorMessage.emptyInputScopeSetError.desc}`);\n    }\n\n    /**\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\n     */\n    static createDeviceCodeCancelledError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, `${ClientAuthErrorMessage.DeviceCodePollingCancelled.desc}`);\n    }\n\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeExpiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, `${ClientAuthErrorMessage.DeviceCodeExpired.desc}`);\n    }\n\n    /**\n     * Throws error if device code is expired\n     */\n    static createDeviceCodeUnknownError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeUnknownError.code, `${ClientAuthErrorMessage.DeviceCodeUnknownError.desc}`);\n    }\n\n    /**\n     * Throws error when silent requests are made without an account object\n     */\n    static createNoAccountInSilentRequestError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, `${ClientAuthErrorMessage.NoAccountInSilentRequest.desc}`);\n    }\n\n    /**\n     * Throws error when cache record is null or undefined.\n     */\n    static createNullOrUndefinedCacheRecord(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\n    }\n\n    /**\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\n     */\n    static createInvalidCacheEnvironmentError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\n    }\n\n    /**\n     * Throws error when account is not found in cache.\n     */\n    static createNoAccountFoundError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\n    }\n\n    /**\n     * Throws error if ICachePlugin not set on CacheManager.\n     */\n    static createCachePluginError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, `${ClientAuthErrorMessage.CachePluginError.desc}`);\n    }\n\n    /**\n     * Throws error if crypto object not found.\n     * @param operationName\n     */\n    static createNoCryptoObjectError(operationName: string): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, `${ClientAuthErrorMessage.noCryptoObj.desc}${operationName}`);\n    }\n\n    /**\n     * Throws error if cache type is invalid.\n     */\n    static createInvalidCacheTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, `${ClientAuthErrorMessage.invalidCacheType.desc}`);\n    }\n\n    /**\n     * Throws error if unexpected account type.\n     */\n    static createUnexpectedAccountTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, `${ClientAuthErrorMessage.unexpectedAccountType.desc}`);\n    }\n\n    /**\n     * Throws error if unexpected credential type.\n     */\n    static createUnexpectedCredentialTypeError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, `${ClientAuthErrorMessage.unexpectedCredentialType.desc}`);\n    }\n\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidAssertionError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, `${ClientAuthErrorMessage.invalidAssertion.desc}`);\n    }\n\n    /**\n     * Throws error if client assertion is not valid.\n     */\n    static createInvalidCredentialError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, `${ClientAuthErrorMessage.invalidClientCredential.desc}`);\n    }\n\n    /**\n     * Throws error if token cannot be retrieved from cache due to refresh being required.\n     */\n    static createRefreshRequiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRefreshRequired.code, ClientAuthErrorMessage.tokenRefreshRequired.desc);\n    }\n\n    /**\n     * Throws error if the user defined timeout is reached.\n     */\n    static createUserTimeoutReachedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.userTimeoutReached.code, ClientAuthErrorMessage.userTimeoutReached.desc);\n    }\n\n    /*\n     * Throws error if token claims are not populated for a signed jwt generation\n     */\n    static createTokenClaimsRequiredError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.tokenClaimsRequired.code, ClientAuthErrorMessage.tokenClaimsRequired.desc);\n    }\n\n    /**\n     * Throws error when the authorization code is missing from the server response\n     */\n    static createNoAuthCodeInServerResponseError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.noAuthorizationCodeFromServer.code, ClientAuthErrorMessage.noAuthorizationCodeFromServer.desc);\n    }\n\n    static createBindingKeyNotRemovedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.bindingKeyNotRemovedError.code, ClientAuthErrorMessage.bindingKeyNotRemovedError.desc);\n    }\n\n    /**\n     * Thrown when logout is attempted for an authority that doesnt have an end_session_endpoint\n     */\n    static createLogoutNotSupportedError(): ClientAuthError {\n        return new ClientAuthError(ClientAuthErrorMessage.logoutNotSupported.code, ClientAuthErrorMessage.logoutNotSupported.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DecodedAuthToken } from \"../account/DecodedAuthToken\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * @hidden\n */\nexport class StringUtils {\n\n    /**\n     * decode a JWT\n     *\n     * @param authToken\n     */\n    static decodeAuthToken(authToken: string): DecodedAuthToken {\n        if (StringUtils.isEmpty(authToken)) {\n            throw ClientAuthError.createTokenNullOrEmptyError(authToken);\n        }\n        const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n        const matches = tokenPartsRegex.exec(authToken);\n        if (!matches || matches.length < 4) {\n            throw ClientAuthError.createTokenParsingError(`Given token is malformed: ${JSON.stringify(authToken)}`);\n        }\n        const crackedToken: DecodedAuthToken = {\n            header: matches[1],\n            JWSPayload: matches[2],\n            JWSSig: matches[3]\n        };\n        return crackedToken;\n    }\n\n    /**\n     * Check if a string is empty.\n     *\n     * @param str\n     */\n    static isEmpty(str?: string): boolean {\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\n    }\n\n    /**\n     * Check if stringified object is empty\n     * @param strObj \n     */\n    static isEmptyObj(strObj?: string): boolean {\n        if (strObj && !StringUtils.isEmpty(strObj)) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            } catch (e) {}\n        }\n        return true;\n    }\n\n    static startsWith(str: string, search: string): boolean {\n        return str.indexOf(search) === 0;\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\n    }\n\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject<T>(query: string): T {\n        const obj: {} = {};\n        const params = query.split(\"&\");\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj as T;\n    }\n\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr: Array<string>): Array<string> {\n        return arr.map(entry => entry.trim());\n    }\n\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\n        return arr.filter(entry => {\n            return !StringUtils.isEmpty(entry);\n        });\n    }\n\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper<T>(str: string): T | null {\n        try {\n            return JSON.parse(str) as T;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern: string, input: string): boolean {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        const regex: RegExp = new RegExp(pattern.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\*/g, \"[^ ]*\").replace(/\\?/g, \"\\\\\\?\")); // eslint-disable-line security/detect-non-literal-regexp\n\n        return regex.test(input);\n    }\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport enum AudioFormatTag {\r\n    PCM = 1,\r\n    MuLaw,\r\n    Siren,\r\n    MP3,\r\n    SILKSkype,\r\n    OGG_OPUS,\r\n    WEBM_OPUS,\r\n    ALaw,\r\n    FLAC,\r\n}\r\n\r\n/**\r\n * Represents audio stream format used for custom audio input configurations.\r\n * @class AudioStreamFormat\r\n */\r\nexport abstract class AudioStreamFormat {\r\n    /**\r\n     * Creates an audio stream format object representing the default audio stream\r\n     * format (16KHz 16bit mono PCM).\r\n     * @member AudioStreamFormat.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormat {\r\n        return AudioStreamFormatImpl.getDefaultInputFormat();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\r\n     * @member AudioStreamFormat.getWaveFormatPCM\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     *        uses one channel and stereo data uses two channels.\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormatPCM(samplesPerSecond: number, bitsPerSample: number, channels: number): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioStreamFormat.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class AudioStreamFormatImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AudioStreamFormatImpl extends AudioStreamFormat {\r\n    protected privHeader: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {number} channels - Number of channels.\r\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\r\n     */\r\n    public constructor(samplesPerSec: number = 16000, bitsPerSample: number = 16, channels: number = 1, format: AudioFormatTag = AudioFormatTag.PCM) {\r\n        super();\r\n        /* 1 for PCM; 6 for alaw; 7 for mulaw */\r\n        switch (format) {\r\n            case AudioFormatTag.PCM:\r\n                this.formatTag = 1;\r\n                break;\r\n            case AudioFormatTag.ALaw:\r\n                this.formatTag = 6;\r\n                break;\r\n            case AudioFormatTag.MuLaw:\r\n                this.formatTag = 7;\r\n                break;\r\n            default:\r\n        }\r\n        this.bitsPerSample = bitsPerSample;\r\n        this.samplesPerSec = samplesPerSec;\r\n        this.channels = channels;\r\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\r\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\r\n\r\n        this.privHeader = new ArrayBuffer(44);\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\r\n        const view = new DataView(this.privHeader);\r\n\r\n        /* RIFF identifier */\r\n        this.setString(view, 0, \"RIFF\");\r\n        /* file length */\r\n        view.setUint32(4, 0, true);\r\n        /* RIFF type & Format */\r\n        this.setString(view, 8, \"WAVEfmt \");\r\n        /* format chunk length */\r\n        view.setUint32(16, 16, true);\r\n        /* audio format */\r\n        view.setUint16(20, this.formatTag, true);\r\n        /* channel count */\r\n        view.setUint16(22, this.channels, true);\r\n        /* sample rate */\r\n        view.setUint32(24, this.samplesPerSec, true);\r\n        /* byte rate (sample rate * block align) */\r\n        view.setUint32(28, this.avgBytesPerSec, true);\r\n        /* block align (channel count * bytes per sample) */\r\n        view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\r\n        /* bits per sample */\r\n        view.setUint16(34, this.bitsPerSample, true);\r\n        /* data chunk identifier */\r\n        this.setString(view, 36, \"data\");\r\n        /* data chunk length */\r\n        view.setUint32(40, 0, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the default input format.\r\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormatImpl} The default input format.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormatImpl {\r\n        return new AudioStreamFormatImpl();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio context appropriate to current browser\r\n     * @member AudioStreamFormatImpl.getAudioContext\r\n     * @function\r\n     * @public\r\n     * @returns {AudioContext} An audio context instance\r\n     */\r\n    public static getAudioContext(sampleRate?: number): AudioContext {\r\n        // Workaround for Speech SDK bug in Safari.\r\n        const AudioContext = (window as any).AudioContext // our preferred impl\r\n            || (window as any).webkitAudioContext // fallback, mostly when on Safari\r\n            || false; // could not find.\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n        if (!!AudioContext) {\r\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\r\n                return new AudioContext({ sampleRate });\r\n            } else {\r\n                return new AudioContext();\r\n            }\r\n        } else {\r\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the configuration object.\r\n     * @member AudioStreamFormatImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void { return; }\r\n\r\n    /**\r\n     * The format of the audio, valid values: 1 (PCM)\r\n     * @member AudioStreamFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: number;\r\n\r\n    /**\r\n     * The number of channels, valid values: 1 (Mono).\r\n     * @member AudioStreamFormatImpl.prototype.channels\r\n     * @function\r\n     * @public\r\n     */\r\n    public channels: number;\r\n\r\n    /**\r\n     * The sample rate, valid values: 16000.\r\n     * @member AudioStreamFormatImpl.prototype.samplesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public samplesPerSec: number;\r\n\r\n    /**\r\n     * The bits per sample, valid values: 16\r\n     * @member AudioStreamFormatImpl.prototype.b\r\n     * @function\r\n     * @public\r\n     */\r\n    public bitsPerSample: number;\r\n\r\n    /**\r\n     * Average bytes per second, usually calculated as nSamplesPerSec * nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.avgBytesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public avgBytesPerSec: number;\r\n\r\n    /**\r\n     * The size of a single frame, valid values: nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.blockAlign\r\n     * @function\r\n     * @public\r\n     */\r\n    public blockAlign: number;\r\n\r\n    public get header(): ArrayBuffer {\r\n        return this.privHeader;\r\n    }\r\n\r\n    protected setString = (view: DataView, offset: number, str: string): void => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport enum EventType {\n    ACCOUNT_ADDED = \"msal:accountAdded\",\n    ACCOUNT_REMOVED = \"msal:accountRemoved\",\n    LOGIN_START = \"msal:loginStart\",\n    LOGIN_SUCCESS = \"msal:loginSuccess\",\n    LOGIN_FAILURE = \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START = \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS = \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE = \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START = \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START = \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS = \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE = \"msal:ssoSilentFailure\",\n    HANDLE_REDIRECT_START = \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END = \"msal:handleRedirectEnd\",\n    POPUP_OPENED = \"msal:popupOpened\",\n    LOGOUT_START = \"msal:logoutStart\",\n    LOGOUT_SUCCESS = \"msal:logoutSuccess\",\n    LOGOUT_FAILURE = \"msal:logoutFailure\",\n    LOGOUT_END = \"msal:logoutEnd\"\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: \"unexpected_error\",\n        desc: \"Unexpected error in authentication.\"\n    }\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || \"\";\n        this.subError = suberror || \"\";\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Creates an error that is thrown when something unexpected happens in the library.\n     * @param errDesc\n     */\n    static createUnexpectedError(errDesc: string): AuthError {\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n    }\n}\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\n/**\r\n * The error that is thrown when an argument passed in is null.\r\n *\r\n * @export\r\n * @class ArgumentNullError\r\n * @extends {Error}\r\n */\r\nexport class ArgumentNullError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ArgumentNullError.\r\n     *\r\n     * @param {string} argumentName - Name of the argument that is null\r\n     *\r\n     * @memberOf ArgumentNullError\r\n     */\r\n    public constructor(argumentName: string) {\r\n        super(argumentName);\r\n        this.name = \"ArgumentNull\";\r\n        this.message = argumentName;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an invalid operation is performed in the code.\r\n *\r\n * @export\r\n * @class InvalidOperationError\r\n * @extends {Error}\r\n */\r\nexport class InvalidOperationError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of InvalidOperationError.\r\n     *\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf InvalidOperationError\r\n     */\r\n    public constructor(error: string) {\r\n        super(error);\r\n        this.name = \"InvalidOperation\";\r\n        this.message = error;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an object is disposed.\r\n *\r\n * @export\r\n * @class ObjectDisposedError\r\n * @extends {Error}\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ObjectDisposedError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ObjectDisposedError.\r\n     *\r\n     * @param {string} objectName - The object that is disposed\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf ObjectDisposedError\r\n     */\r\n    public constructor(objectName: string, error?: string) {\r\n        super(error);\r\n        this.name = objectName + \"ObjectDisposed\";\r\n        this.message = error;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum EventType {\r\n    Debug,\r\n    Info,\r\n    Warning,\r\n    Error,\r\n}\r\n\r\nexport class PlatformEvent {\r\n    private privName: string;\r\n    private privEventId: string;\r\n    private privEventTime: string;\r\n    private privEventType: EventType;\r\n    private privMetadata: IStringDictionary<string>;\r\n\r\n    constructor(eventName: string, eventType: EventType) {\r\n        this.privName = eventName;\r\n        this.privEventId = createNoDashGuid();\r\n        this.privEventTime = new Date().toISOString();\r\n        this.privEventType = eventType;\r\n        this.privMetadata = { };\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.privName;\r\n    }\r\n\r\n    public get eventId(): string {\r\n        return this.privEventId;\r\n    }\r\n\r\n    public get eventTime(): string {\r\n        return this.privEventTime;\r\n    }\r\n\r\n    public get eventType(): EventType {\r\n        return this.privEventType;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define speech synthesis audio output formats.\r\n * @enum SpeechSynthesisOutputFormat\r\n * Updated in version 1.17.0\r\n */\r\nexport enum SpeechSynthesisOutputFormat {\r\n    /**\r\n     * raw-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\r\n     */\r\n    Raw8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * riff-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\r\n     */\r\n    Riff16Khz16KbpsMonoSiren ,\r\n\r\n    /**\r\n     * audio-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\r\n     */\r\n    Audio16Khz16KbpsMonoSiren,\r\n\r\n    /**\r\n     * audio-16khz-32kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\r\n     */\r\n    Audio16Khz32KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-128kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\r\n     */\r\n    Audio16Khz128KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-64kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\r\n     */\r\n    Audio16Khz64KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-48kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\r\n     */\r\n    Audio24Khz48KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\r\n     */\r\n    Audio24Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-160kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\r\n     */\r\n    Audio24Khz160KBitRateMonoMp3,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-truesilk\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\r\n     */\r\n    Raw16Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * riff-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\r\n     */\r\n    Riff16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\r\n     */\r\n    Riff8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\r\n     */\r\n    Riff24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\r\n     */\r\n    Riff8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\r\n     */\r\n    Raw16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\r\n     */\r\n    Raw24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\r\n     */\r\n    Raw8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * ogg-16khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\r\n     */\r\n    Ogg16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * ogg-24khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\r\n     */\r\n    Ogg24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\r\n     */\r\n    Raw48Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\r\n     */\r\n\r\n    Riff48Khz16BitMonoPcm,\r\n    /**\r\n     * audio-48khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\r\n     */\r\n    Audio48Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-48khz-192kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\r\n     */\r\n    Audio48Khz192KBitRateMonoMp3,\r\n\r\n    /**\r\n     * ogg-48khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\r\n     */\r\n    Ogg48Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-16khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\r\n     */\r\n    Webm16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-24khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\r\n     */\r\n    Webm24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-truesilk\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk\r\n     */\r\n     Raw24Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * raw-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw\r\n     */\r\n     Raw8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw\r\n     */\r\n     Riff8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * webm-24khz-16bit-24kbps-mono-opus\r\n     * Audio compressed by OPUS codec in a webm container, with bitrate of 24kbps, optimized for IoT scenario.\r\n     * Added in version 1.19.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus\r\n     */\r\n    Webm24Khz16Bit24KbpsMonoOpus,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class RiffPcmEncoder {\r\n\r\n    private privActualSampleRate: number;\r\n    private privDesiredSampleRate: number;\r\n\r\n    public constructor(actualSampleRate: number, desiredSampleRate: number) {\r\n        this.privActualSampleRate = actualSampleRate;\r\n        this.privDesiredSampleRate = desiredSampleRate;\r\n    }\r\n\r\n    public encode = (\r\n        actualAudioFrame: Float32Array): ArrayBuffer => {\r\n\r\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\r\n\r\n        if (!audioFrame) {\r\n            return null;\r\n        }\r\n\r\n        const audioLength = audioFrame.length * 2;\r\n\r\n        const buffer = new ArrayBuffer(audioLength);\r\n        const view = new DataView(buffer);\r\n        this.floatTo16BitPCM(view, 0, audioFrame);\r\n\r\n        return buffer;\r\n    }\r\n\r\n    private setString = (view: DataView, offset: number, str: string): void => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n\r\n    private floatTo16BitPCM = (view: DataView, offset: number, input: Float32Array): void => {\r\n        for (let i = 0; i < input.length; i++ , offset += 2) {\r\n            const s = Math.max(-1, Math.min(1, input[i]));\r\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n        }\r\n    }\r\n\r\n    private downSampleAudioFrame = (\r\n        srcFrame: Float32Array,\r\n        srcRate: number,\r\n        dstRate: number): Float32Array => {\r\n\r\n        if (!srcFrame) {\r\n            return null;\r\n        }\r\n\r\n        if (dstRate === srcRate || dstRate > srcRate) {\r\n            return srcFrame;\r\n        }\r\n\r\n        const ratio = srcRate / dstRate;\r\n        const dstLength = Math.round(srcFrame.length / ratio);\r\n        const dstFrame = new Float32Array(dstLength);\r\n        let srcOffset = 0;\r\n        let dstOffset = 0;\r\n        while (dstOffset < dstLength) {\r\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\r\n            let accum = 0;\r\n            let count = 0;\r\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\r\n                accum += srcFrame[srcOffset++];\r\n                count++;\r\n            }\r\n            dstFrame[dstOffset++] = accum / count;\r\n        }\r\n\r\n        return dstFrame;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RiffPcmEncoder, Stream } from \"../common/Exports\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\nexport class PcmRecorder implements IRecorder {\r\n    private privMediaResources: IMediaResources;\r\n    private privSpeechProcessorScript: string; // speech-processor.js Url\r\n    private privStopInputOnRelease: boolean;\r\n\r\n    public constructor(stopInputOnRelease: boolean) {\r\n        this.privStopInputOnRelease = stopInputOnRelease;\r\n    }\r\n\r\n    public record = (context: AudioContext, mediaStream: MediaStream, outputStream: Stream<ArrayBuffer>): void => {\r\n        const desiredSampleRate = 16000;\r\n\r\n        const waveStreamEncoder = new RiffPcmEncoder(context.sampleRate, desiredSampleRate);\r\n        let needHeader: boolean = true;\r\n\r\n        const micInput = context.createMediaStreamSource(mediaStream);\r\n        if (!this.privSpeechProcessorScript) {\r\n            const workletScript = `class SP extends AudioWorkletProcessor {\r\n                constructor(options) {\r\n                  super(options);\r\n                }\r\n                process(inputs, outputs) {\r\n                  const input = inputs[0];\r\n                  const output = [];\r\n                  for (let channel = 0; channel < input.length; channel += 1) {\r\n                    output[channel] = input[channel];\r\n                  }\r\n                  this.port.postMessage(output[0]);\r\n                  return true;\r\n                }\r\n              }\r\n              registerProcessor('speech-processor', SP);`; // tslint:disable-line:max-line-length\r\n            const blob = new Blob([workletScript], { type: \"application/javascript; charset=utf-8\" });\r\n            this.privSpeechProcessorScript = URL.createObjectURL(blob);\r\n        }\r\n\r\n        // https://webaudio.github.io/web-audio-api/#audioworklet\r\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\r\n\r\n        if (!!this.privSpeechProcessorScript && !!context.audioWorklet) {\r\n            context.audioWorklet\r\n                .addModule(this.privSpeechProcessorScript)\r\n                .then(() => {\r\n                    const workletNode = new AudioWorkletNode(context, \"speech-processor\");\r\n                    workletNode.port.onmessage = (ev: MessageEvent) => {\r\n                        const inputFrame: Float32Array = ev.data as Float32Array;\r\n\r\n                        if (outputStream && !outputStream.isClosed) {\r\n                            const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                            if (!!waveFrame) {\r\n                                outputStream.writeStreamChunk({\r\n                                    buffer: waveFrame,\r\n                                    isEnd: false,\r\n                                    timeReceived: Date.now(),\r\n                                });\r\n                                needHeader = false;\r\n                            }\r\n                        }\r\n                    };\r\n                    micInput.connect(workletNode);\r\n                    workletNode.connect(context.destination);\r\n                    this.privMediaResources = {\r\n                        scriptProcessorNode: workletNode,\r\n                        source: micInput,\r\n                        stream: mediaStream,\r\n                    };\r\n                })\r\n                .catch(() => {\r\n                    const scriptNode = (() => {\r\n                        let bufferSize = 0;\r\n                        try {\r\n                            return context.createScriptProcessor(bufferSize, 1, 1);\r\n                        } catch (error) {\r\n                            // Webkit (<= version 31) requires a valid bufferSize.\r\n                            bufferSize = 2048;\r\n                            let audioSampleRate = context.sampleRate;\r\n                            while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\r\n                                bufferSize <<= 1;\r\n                                audioSampleRate >>= 1;\r\n                            }\r\n                            return context.createScriptProcessor(bufferSize, 1, 1);\r\n                        }\r\n                    })();\r\n                    scriptNode.onaudioprocess = (event: AudioProcessingEvent) => {\r\n                        const inputFrame = event.inputBuffer.getChannelData(0);\r\n\r\n                        if (outputStream && !outputStream.isClosed) {\r\n                            const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                            if (!!waveFrame) {\r\n                                outputStream.writeStreamChunk({\r\n                                    buffer: waveFrame,\r\n                                    isEnd: false,\r\n                                    timeReceived: Date.now(),\r\n                                });\r\n                                needHeader = false;\r\n                            }\r\n                        }\r\n                    };\r\n                    micInput.connect(scriptNode);\r\n                    scriptNode.connect(context.destination);\r\n                    this.privMediaResources = {\r\n                        scriptProcessorNode: scriptNode,\r\n                        source: micInput,\r\n                        stream: mediaStream,\r\n                    };\r\n                });\r\n        } else {\r\n            throw new Error(\"Unable to start audio worklet node for PCMRecorder\");\r\n        }\r\n    }\r\n\r\n    public releaseMediaResources = (context: AudioContext): void => {\r\n        if (this.privMediaResources) {\r\n            if (this.privMediaResources.scriptProcessorNode) {\r\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\r\n                this.privMediaResources.scriptProcessorNode = null;\r\n            }\r\n            if (this.privMediaResources.source) {\r\n                this.privMediaResources.source.disconnect();\r\n                if (this.privStopInputOnRelease) {\r\n                    this.privMediaResources.stream.getTracks().forEach((track: any) => track.stop());\r\n                }\r\n                this.privMediaResources.source = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setWorkletUrl(url: string): void {\r\n        this.privSpeechProcessorScript = url;\r\n    }\r\n}\r\n\r\ninterface IMediaResources {\r\n    source: MediaStreamAudioSourceNode;\r\n    scriptProcessorNode: ScriptProcessorNode | AudioWorkletNode;\r\n    stream: MediaStream;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport {\r\n    AudioStreamFormat,\r\n    AudioStreamFormatImpl,\r\n} from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\n// Extending the default definition with browser specific definitions for backward compatibility\r\ninterface INavigator extends Navigator {\r\n    webkitGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    mozGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    msGetUserMedia?: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n}\r\n\r\nexport const AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\r\n\r\nexport class MicAudioSource implements IAudioSource {\r\n\r\n    private static readonly AUDIOFORMAT: AudioStreamFormatImpl = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privInitializeDeferral: Deferred<void>;\r\n\r\n    private privMediaStream: MediaStream;\r\n\r\n    private privContext: AudioContext;\r\n\r\n    private privMicrophoneLabel: string;\r\n\r\n    private privOutputChunkSize: number;\r\n\r\n    private privIsClosing: boolean;\r\n\r\n    public constructor(\r\n        private readonly privRecorder: IRecorder,\r\n        private readonly deviceId?: string,\r\n        audioSourceId?: string,\r\n        mediaStream?: MediaStream\r\n        ) {\r\n\r\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privMediaStream = mediaStream || null;\r\n        this.privIsClosing = false;\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\r\n    }\r\n\r\n    public get blob(): Promise<Blob> {\r\n        return Promise.reject(\"Not implemented for Mic input\");\r\n    }\r\n\r\n    public turnOn = (): Promise<void> => {\r\n        if (this.privInitializeDeferral) {\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        this.privInitializeDeferral = new Deferred<void>();\r\n\r\n        try {\r\n            this.createAudioContext();\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error as Error;\r\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\r\n            } else {\r\n                this.privInitializeDeferral.reject(error);\r\n            }\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        const nav = window.navigator as INavigator;\r\n\r\n        let getUserMedia = (\r\n            nav.getUserMedia ||\r\n            nav.webkitGetUserMedia ||\r\n            nav.mozGetUserMedia ||\r\n            nav.msGetUserMedia\r\n        );\r\n\r\n        if (!!nav.mediaDevices) {\r\n            getUserMedia = (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void => {\r\n                nav.mediaDevices\r\n                    .getUserMedia(constraints)\r\n                    .then(successCallback)\r\n                    .catch(errorCallback);\r\n            };\r\n        }\r\n\r\n        if (!getUserMedia) {\r\n            const errorMsg = \"Browser does not support getUserMedia.\";\r\n            this.privInitializeDeferral.reject(errorMsg);\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\r\n        } else {\r\n            const next = () => {\r\n                this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n                if (this.privMediaStream && this.privMediaStream.active) {\r\n                    this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                    this.privInitializeDeferral.resolve();\r\n                } else {\r\n                    getUserMedia(\r\n                        { audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false },\r\n                        (mediaStream: MediaStream) => {\r\n                            this.privMediaStream = mediaStream;\r\n                            this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                            this.privInitializeDeferral.resolve();\r\n                        }, (error: MediaStreamError) => {\r\n                            const errorMsg = `Error occurred during microphone initialization: ${error}`;\r\n                            this.privInitializeDeferral.reject(errorMsg);\r\n                            this.onEvent(new AudioSourceErrorEvent(this.privId, errorMsg));\r\n                        });\r\n                }\r\n            };\r\n\r\n            if (this.privContext.state === \"suspended\") {\r\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\r\n                // https://github.com/WebAudio/web-audio-api/issues/790\r\n                this.privContext.resume()\r\n                    .then(next)\r\n                    .catch((reason: any) => {\r\n                        this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason}`);\r\n                    });\r\n            } else {\r\n                next();\r\n            }\r\n        }\r\n\r\n        return this.privInitializeDeferral.promise;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach = (audioNodeId: string): Promise<IAudioStreamNode> => {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        return this.listen(audioNodeId).then<IAudioStreamNode>(\r\n            (stream: Stream<ArrayBuffer>) => {\r\n                this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n                return {\r\n                    detach: async () => {\r\n                        stream.readEnded();\r\n                        delete this.privStreams[audioNodeId];\r\n                        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                        return this.turnOff();\r\n                    },\r\n                    id: () => {\r\n                        return audioNodeId;\r\n                    },\r\n                    read: () => {\r\n                        return stream.read();\r\n                    },\r\n                };\r\n            });\r\n    }\r\n\r\n    public detach = (audioNodeId: string): void => {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public async turnOff(): Promise<void> {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        if (this.privInitializeDeferral) {\r\n            // Correctly handle when browser forces mic off before turnOn() completes\r\n            await this.privInitializeDeferral;\r\n            this.privInitializeDeferral = null;\r\n        }\r\n\r\n        await this.destroyAudioContext();\r\n\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.getMicrophoneLabel().then((label: string) => {\r\n            return {\r\n                bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\r\n                channelcount: MicAudioSource.AUDIOFORMAT.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: label,\r\n                samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\r\n                type: type.Microphones,\r\n            };\r\n        });\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        if (name === AudioWorkletSourceURLPropertyName) {\r\n            this.privRecorder.setWorkletUrl(value);\r\n        } else {\r\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\r\n        }\r\n    }\r\n\r\n    private getMicrophoneLabel(): Promise<string> {\r\n        const defaultMicrophoneName: string = \"microphone\";\r\n\r\n        // If we did this already, return the value.\r\n        if (this.privMicrophoneLabel !== undefined) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        // If the stream isn't currently running, we can't query devices because security.\r\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\r\n            return Promise.resolve(defaultMicrophoneName);\r\n        }\r\n\r\n        // Setup a default\r\n        this.privMicrophoneLabel = defaultMicrophoneName;\r\n\r\n        // Get the id of the device running the audio track.\r\n        const microphoneDeviceId: string = this.privMediaStream.getTracks()[0].getSettings().deviceId;\r\n\r\n        // If the browser doesn't support getting the device ID, set a default and return.\r\n        if (undefined === microphoneDeviceId) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        const deferred: Deferred<string> = new Deferred<string>();\r\n\r\n        // Enumerate the media devices.\r\n        navigator.mediaDevices.enumerateDevices().then((devices: MediaDeviceInfo[]) => {\r\n            for (const device of devices) {\r\n                if (device.deviceId === microphoneDeviceId) {\r\n                    // Found the device\r\n                    this.privMicrophoneLabel = device.label;\r\n                    break;\r\n                }\r\n            }\r\n            deferred.resolve(this.privMicrophoneLabel);\r\n        }, () => deferred.resolve(this.privMicrophoneLabel));\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private listen = async (audioNodeId: string): Promise<Stream<ArrayBuffer>> => {\r\n        await this.turnOn();\r\n        const stream = new ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\r\n        this.privStreams[audioNodeId] = stream;\r\n        try {\r\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\r\n        } catch (error) {\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, error));\r\n            throw error;\r\n        }\r\n        const result: Stream<ArrayBuffer> = stream;\r\n        return result;\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private createAudioContext = (): void => {\r\n        if (!!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privContext = AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\r\n    }\r\n\r\n    private async destroyAudioContext(): Promise<void> {\r\n        if (!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privRecorder.releaseMediaResources(this.privContext);\r\n\r\n        // This pattern brought to you by a bug in the TypeScript compiler where it\r\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\r\n        // https://github.com/Microsoft/TypeScript/issues/11498\r\n        let hasClose: boolean = false;\r\n        if (\"close\" in this.privContext) {\r\n            hasClose = true;\r\n        }\r\n\r\n        if (hasClose) {\r\n            if (!this.privIsClosing) {\r\n                // The audio context close may take enough time that the close is called twice\r\n                this.privIsClosing = true;\r\n                await this.privContext.close();\r\n                this.privContext = null;\r\n                this.privIsClosing = false;\r\n            }\r\n        } else if (null !== this.privContext && this.privContext.state === \"running\") {\r\n            // Suspend actually takes a callback, but analogous to the\r\n            // resume method, it'll be only fired if suspend is called\r\n            // in a direct response to a user action. The later is not always\r\n            // the case, as TurnOff is also called, when we receive an\r\n            // end-of-speech message from the service. So, doing a best effort\r\n            // fire-and-forget here.\r\n            await this.privContext.suspend();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might not be recognized.\r\n * @class NoMatchReason\r\n */\r\nexport enum NoMatchReason {\r\n\r\n    /**\r\n     * Indicates that speech was detected, but not recognized.\r\n     * @member NoMatchReason.NotRecognized\r\n     */\r\n    NotRecognized,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only silence,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialSilenceTimeout\r\n     */\r\n    InitialSilenceTimeout,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only noise,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialBabbleTimeout\r\n     */\r\n    InitialBabbleTimeout,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormat, AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\n\r\nexport class FileAudioSource implements IAudioSource {\r\n\r\n    private privAudioFormatPromise: Promise<AudioStreamFormatImpl>;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privSource: Blob | Buffer;\r\n\r\n    private privFilename: string;\r\n\r\n    private privHeaderEnd: number = 44;\r\n\r\n    public constructor(file: File | Buffer, filename?: string, audioSourceId?: string) {\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privSource = file;\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\r\n            this.privFilename = (file as File).name;\r\n        } else {\r\n            this.privFilename = filename || \"unknown.wav\";\r\n        }\r\n\r\n        // Read the header.\r\n        this.privAudioFormatPromise = this.readHeader();\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privAudioFormatPromise;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return Promise.resolve(this.privSource);\r\n    }\r\n\r\n    public turnOn = (): Promise<void> => {\r\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\r\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\"));\r\n            return Promise.reject(errorMsg);\r\n        }\r\n\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach = async (audioNodeId: string): Promise<IAudioStreamNode> => {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        const stream: Stream<ArrayBuffer> = await this.upload(audioNodeId);\r\n\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return Promise.resolve({\r\n            detach: async (): Promise<void> => {\r\n                stream.readEnded();\r\n                delete this.privStreams[audioNodeId];\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                await this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                return stream.read();\r\n            },\r\n        });\r\n    }\r\n\r\n    public detach = (audioNodeId: string): void => {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public turnOff = (): Promise<void> => {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream && !stream.isClosed) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privAudioFormatPromise.then<ISpeechConfigAudioDevice>((result: AudioStreamFormatImpl) => {\r\n            return Promise.resolve({\r\n                bitspersample: result.bitsPerSample,\r\n                channelcount: result.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: \"File\",\r\n                samplerate: result.samplesPerSec,\r\n                type: type.File,\r\n            });\r\n        });\r\n    }\r\n\r\n    private readHeader(): Promise<AudioStreamFormatImpl> {\r\n        // Read the wave header.\r\n        const maxHeaderSize: number = 512;\r\n        const header: Blob | Buffer = this.privSource.slice(0, maxHeaderSize);\r\n\r\n        const headerResult: Deferred<AudioStreamFormatImpl> = new Deferred<AudioStreamFormatImpl>();\r\n\r\n        const processHeader = (header: ArrayBuffer): void => {\r\n            const view: DataView = new DataView(header);\r\n\r\n            const getWord = (index: number): string => {\r\n                return String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\r\n            };\r\n\r\n            // RIFF 4 bytes.\r\n            if (\"RIFF\" !== getWord(0)) {\r\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\r\n                return;\r\n            }\r\n\r\n            // length, 4 bytes\r\n            // RIFF Type & fmt 8 bytes\r\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\r\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\r\n                return;\r\n            }\r\n\r\n            const formatSize: number = view.getInt32(16, true);\r\n            const channelCount: number = view.getUint16(22, true);\r\n            const sampleRate: number = view.getUint32(24, true);\r\n            const bitsPerSample: number = view.getUint16(34, true);\r\n            // Confirm if header is 44 bytes long.\r\n            let pos: number = 36 + Math.max(formatSize - 16, 0);\r\n            for (; getWord(pos) !== \"data\"; pos += 2) {\r\n                if (pos > maxHeaderSize - 8) {\r\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\r\n                    return;\r\n                }\r\n            }\r\n            this.privHeaderEnd = pos + 8;\r\n            headerResult.resolve(AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount) as AudioStreamFormatImpl);\r\n        };\r\n\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\r\n            const reader: FileReader = new FileReader();\r\n\r\n            reader.onload = (event: Event) => {\r\n                const header: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                processHeader(header);\r\n            };\r\n\r\n            reader.readAsArrayBuffer(header);\r\n        } else {\r\n            const h: Buffer = header as Buffer;\r\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\r\n        }\r\n        return headerResult.promise;\r\n    }\r\n\r\n    private async upload(audioNodeId: string): Promise<Stream<ArrayBuffer>> {\r\n        const onerror = (error: string) => {\r\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\r\n            throw new Error(errorMsg);\r\n        };\r\n\r\n        try {\r\n            await this.turnOn();\r\n\r\n            const format: AudioStreamFormatImpl = await this.privAudioFormatPromise;\r\n            const stream = new ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\r\n\r\n            this.privStreams[audioNodeId] = stream;\r\n            const chunk: Blob | Buffer = this.privSource.slice(this.privHeaderEnd);\r\n\r\n            const processFile = (buff: ArrayBuffer): void => {\r\n                if (stream.isClosed) {\r\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\r\n                }\r\n\r\n                stream.writeStreamChunk({\r\n                    buffer: buff,\r\n                    isEnd: false,\r\n                    timeReceived: Date.now(),\r\n                });\r\n                stream.close();\r\n            };\r\n\r\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\r\n                const reader: FileReader = new FileReader();\r\n                reader.onerror = (ev: ProgressEvent<FileReader>) => { onerror(ev.toString()); };\r\n\r\n                reader.onload = (event: Event) => {\r\n                    const fileBuffer: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                    processFile(fileBuffer);\r\n                };\r\n\r\n                reader.readAsArrayBuffer(chunk);\r\n            } else {\r\n                const c: Buffer = chunk as Buffer;\r\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\r\n            }\r\n\r\n            return stream;\r\n        } catch (e) {\r\n            onerror(e);\r\n        }\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n /**\r\n  * An abstract base class that defines callback methods (read() and close()) for\r\n  * custom audio input streams).\r\n  * @class PullAudioInputStreamCallback\r\n  */\r\nexport abstract class PullAudioInputStreamCallback {\r\n\r\n    /**\r\n     * Reads data from audio input stream into the data buffer. The maximal number of bytes\r\n     * to be read is determined by the size of dataBuffer.\r\n     * @member PullAudioInputStreamCallback.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array to store the read data.\r\n     * @returns {number} the number of bytes have been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): number;\r\n\r\n    /**\r\n     * Closes the audio input stream.\r\n     * @member PullAudioInputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisAdapterBase } from \"../../common.speech/Exports\";\r\nimport {\r\n    BackgroundEvent,\r\n    createNoDashGuid,\r\n    Events,\r\n    IAudioDestination,\r\n    INumberDictionary\r\n} from \"../../common/Exports\";\r\nimport { AudioStreamFormat, IPlayer } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\nimport { AudioFormatTag } from \"./AudioStreamFormat\";\r\n\r\nconst MediaDurationPlaceholderSeconds = 60 * 30;\r\n\r\nconst AudioFormatToMimeType: INumberDictionary<string> = {\r\n    [AudioFormatTag.PCM]: \"audio/wav\",\r\n    [AudioFormatTag.MuLaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.MP3]: \"audio/mpeg\",\r\n    [AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\r\n    [AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\",\r\n    [AudioFormatTag.ALaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.FLAC]: \"audio/flac\",\r\n};\r\n\r\n/**\r\n * Represents the speaker playback audio destination, which only works in browser.\r\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\r\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\r\n * @class SpeakerAudioDestination\r\n * Updated in version 1.17.0\r\n */\r\nexport class SpeakerAudioDestination implements IAudioDestination, IPlayer {\r\n    private readonly privId: string;\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privAudio: HTMLAudioElement;\r\n    private privMediaSource: MediaSource;\r\n    private privSourceBuffer: SourceBuffer;\r\n    private privPlaybackStarted: boolean = false;\r\n    private privAudioBuffer: ArrayBuffer[];\r\n    private privAppendingToBuffer: boolean = false;\r\n    private privMediaSourceOpened: boolean = false;\r\n    private privIsClosed: boolean;\r\n    private privIsPaused: boolean;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privBytesReceived: number = 0;\r\n\r\n    public constructor(audioDestinationId?: string) {\r\n        this.privId = audioDestinationId ? audioDestinationId : createNoDashGuid();\r\n        this.privIsPaused = false;\r\n        this.privIsClosed = false;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privAudioBuffer !== undefined) {\r\n            this.privAudioBuffer.push(buffer);\r\n            this.updateSourceBuffer().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            this.privAudioOutputStream.write(buffer);\r\n            this.privBytesReceived += buffer.byteLength;\r\n        }\r\n    }\r\n\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privIsClosed = true;\r\n        if (this.privSourceBuffer !== undefined) {\r\n            this.handleSourceBufferUpdateEnd().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            if ((this.privFormat.formatTag === AudioFormatTag.PCM || this.privFormat.formatTag === AudioFormatTag.MuLaw\r\n                || this.privFormat.formatTag === AudioFormatTag.ALaw) && this.privFormat.hasHeader === false) {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(`Play back is not supported for raw PCM, mulaw or alaw format without header.`);\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            } else {\r\n                let receivedAudio = new ArrayBuffer(this.privBytesReceived);\r\n                this.privAudioOutputStream.read(receivedAudio).then((_: number): void => {\r\n                    receivedAudio = SynthesisAdapterBase.addHeader(receivedAudio, this.privFormat);\r\n                    const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\r\n                    this.privAudio.src = window.URL.createObjectURL(audioBlob);\r\n                    this.notifyPlayback().then(() => {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    }, (error: string): void => {\r\n                        if (!!err) {\r\n                            err(error);\r\n                        }\r\n                    });\r\n                }, (error: string): void => {\r\n                    if (!!err) {\r\n                        err(error);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            // unsupported format, call onAudioEnd directly.\r\n            if (!!this.onAudioEnd) {\r\n                this.onAudioEnd(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    set format(format: AudioStreamFormat) {\r\n        if (typeof (AudioContext) !== \"undefined\" || typeof ((window as any).webkitAudioContext) !== \"undefined\") {\r\n            this.privFormat = format as AudioOutputFormatImpl;\r\n            const mimeType: string = AudioFormatToMimeType[this.privFormat.formatTag];\r\n            if (mimeType === undefined) {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(\r\n                    `Unknown mimeType for format ${AudioFormatTag[this.privFormat.formatTag]}; playback is not supported.`);\r\n\r\n            } else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\r\n                this.privAudio = new Audio();\r\n                this.privAudioBuffer = [];\r\n                this.privMediaSource = new MediaSource();\r\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\r\n                this.privAudio.load();\r\n                this.privMediaSource.onsourceopen = (event: Event): void => {\r\n                    this.privMediaSourceOpened = true;\r\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\r\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\r\n                    this.privSourceBuffer.onupdate = (_: Event) => {\r\n                        this.updateSourceBuffer().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdateend = (_: Event) => {\r\n                        this.handleSourceBufferUpdateEnd().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdatestart = (_: Event) => {\r\n                        this.privAppendingToBuffer = false;\r\n                    };\r\n                };\r\n                this.updateSourceBuffer().catch((reason: string): void => {\r\n                    Events.instance.onEvent(new BackgroundEvent(reason));\r\n                });\r\n\r\n            } else {\r\n                // tslint:disable-next-line:no-console\r\n                console.warn(\r\n                    `Format ${AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\r\n                this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n                this.privAudioOutputStream.format = this.privFormat;\r\n                this.privAudio = new Audio();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsClosed;\r\n    }\r\n\r\n    public get currentTime(): number {\r\n        if (this.privAudio !== undefined) {\r\n            return this.privAudio.currentTime;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.pause();\r\n            this.privIsPaused = true;\r\n        }\r\n    }\r\n\r\n    public resume(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.play().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.privIsPaused = false;\r\n        }\r\n    }\r\n\r\n    public onAudioStart: (sender: IPlayer) => void;\r\n\r\n    public onAudioEnd: (sender: IPlayer) => void;\r\n\r\n    public get internalAudio(): HTMLAudioElement {\r\n        return this.privAudio;\r\n    }\r\n\r\n    private async updateSourceBuffer(): Promise<void> {\r\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\r\n            this.privAppendingToBuffer = true;\r\n            const binary = this.privAudioBuffer.shift();\r\n            try {\r\n                this.privSourceBuffer.appendBuffer(binary);\r\n            } catch (error) {\r\n                this.privAudioBuffer.unshift(binary);\r\n                // tslint:disable-next-line:no-console\r\n                console.log(\r\n                    \"buffer filled, pausing addition of binaries until space is made\");\r\n                return;\r\n            }\r\n            await this.notifyPlayback();\r\n        } else if (this.canEndStream()) {\r\n            await this.handleSourceBufferUpdateEnd();\r\n        }\r\n    }\r\n\r\n    private async handleSourceBufferUpdateEnd(): Promise<void> {\r\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\r\n            this.privMediaSource.endOfStream();\r\n            await this.notifyPlayback();\r\n        }\r\n    }\r\n\r\n    private async notifyPlayback(): Promise<void> {\r\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\r\n            this.privPlaybackStarted = true;\r\n            if (!!this.onAudioStart) {\r\n                this.onAudioStart(this);\r\n            }\r\n            this.privAudio.onended = (): void => {\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            };\r\n            if (!this.privIsPaused) {\r\n                await this.privAudio.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    private canEndStream(): boolean {\r\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\r\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\r\n    }\r\n\r\n    private sourceBufferAvailable(): boolean {\r\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/**\r\n * An abstract base class that defines callback methods (write() and close()) for\r\n * custom audio output streams).\r\n * @class PushAudioOutputStreamCallback\r\n */\r\nexport abstract class PushAudioOutputStreamCallback {\r\n\r\n    /**\r\n     * Writes audio data into the data buffer.\r\n     * @member PushAudioOutputStreamCallback.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array that stores the audio data to write.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the audio output stream.\r\n     * @member PushAudioOutputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { IAudioDestination } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport { AudioStreamFormat } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\nexport class AudioFileWriter implements IAudioDestination {\r\n    private privAudioFormat: AudioOutputFormatImpl;\r\n    private privFd: number;\r\n    private privId: string;\r\n    private privWriteStream: fs.WriteStream;\r\n\r\n    public constructor(filename: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\r\n        this.privFd = fs.openSync(filename, \"w\");\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\r\n        this.privAudioFormat = format as AudioOutputFormatImpl;\r\n        let headerOffset: number = 0;\r\n        if (this.privAudioFormat.hasHeader) {\r\n            headerOffset = this.privAudioFormat.header.byteLength;\r\n        }\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream = fs.createWriteStream(\"\", {fd: this.privFd, start: headerOffset, autoClose: false});\r\n        }\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\r\n        if (this.privWriteStream !== undefined) {\r\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream.on(\"finish\", () => {\r\n                if (this.privAudioFormat.hasHeader) {\r\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\r\n                    fs.writeSync(this.privFd,\r\n                        new Int8Array(this.privAudioFormat.header),\r\n                        0,\r\n                        this.privAudioFormat.header.byteLength,\r\n                        0);\r\n                }\r\n                fs.closeSync(this.privFd);\r\n                this.privFd = undefined;\r\n            });\r\n            this.privWriteStream.end();\r\n        }\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { PathLike } from \"fs\";\r\nimport {\r\n    FileAudioSource,\r\n    MicAudioSource,\r\n    PcmRecorder,\r\n} from \"../../common.browser/Exports\";\r\nimport { ISpeechConfigAudioDevice } from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    Deferred,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IAudioSource,\r\n    IAudioStreamNode\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioInputStream,\r\n    AudioOutputStream,\r\n    AudioStreamFormat,\r\n    IPlayer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    PullAudioInputStreamCallback,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeakerAudioDestination\r\n} from \"../Exports\";\r\nimport { AudioFileWriter } from \"./AudioFileWriter\";\r\nimport { PullAudioInputStreamImpl, PushAudioInputStreamImpl } from \"./AudioInputStream\";\r\nimport { PullAudioOutputStreamImpl, PushAudioOutputStreamImpl } from \"./AudioOutputStream\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\r\n * @class AudioConfig\r\n * Updated in version 1.11.0\r\n */\r\nexport abstract class AudioConfig {\r\n    /**\r\n     * Creates an AudioConfig object representing the default microphone on the system.\r\n     * @member AudioConfig.fromDefaultMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromDefaultMicrophoneInput(): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\r\n     * @member AudioConfig.fromMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\r\n     *        Default microphone is used the value is omitted.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromMicrophoneInput(deviceId?: string): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder, deviceId));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified file.\r\n     * @member AudioConfig.fromWavFileInput\r\n     * @function\r\n     * @public\r\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromWavFileInput(file: File | Buffer, name: string = \"unnamedBuffer.wav\"): AudioConfig {\r\n        return new AudioConfigImpl(new FileAudioSource(file, name));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified stream.\r\n     * @member AudioConfig.fromStreamInput\r\n     * @function\r\n     * @public\r\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\r\n     *        stream. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromStreamInput(audioStream: AudioInputStream | PullAudioInputStreamCallback\r\n        | MediaStream): AudioConfig {\r\n        if (audioStream instanceof PullAudioInputStreamCallback) {\r\n            return new AudioConfigImpl(new PullAudioInputStreamImpl(audioStream as PullAudioInputStreamCallback));\r\n        }\r\n\r\n        if (audioStream instanceof AudioInputStream) {\r\n            return new AudioConfigImpl(audioStream as PushAudioInputStreamImpl);\r\n        }\r\n        if (typeof MediaStream !== \"undefined\" && audioStream instanceof MediaStream) {\r\n            const pcmRecorder = new PcmRecorder(false);\r\n            return new AudioConfigImpl(new MicAudioSource(pcmRecorder, null, null, audioStream));\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the default speaker.\r\n     * @member AudioConfig.fromDefaultSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromDefaultSpeakerOutput(): AudioConfig {\r\n        return new AudioOutputConfigImpl(new SpeakerAudioDestination());\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the custom IPlayer object.\r\n     * You can use the IPlayer object to control pause, resume, etc.\r\n     * @member AudioConfig.fromSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @param {IPlayer} player - the IPlayer object for playback.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.12.0\r\n     */\r\n    public static fromSpeakerOutput(player?: IPlayer): AudioConfig {\r\n        if (player === undefined) {\r\n            return AudioConfig.fromDefaultSpeakerOutput();\r\n        }\r\n        if (player instanceof SpeakerAudioDestination) {\r\n            return new AudioOutputConfigImpl(player as SpeakerAudioDestination);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified output audio file\r\n     * @member AudioConfig.fromAudioFileOutput\r\n     * @function\r\n     * @public\r\n     * @param {PathLike} filename - the filename of the output audio file\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromAudioFileOutput(filename: PathLike): AudioConfig {\r\n        return new AudioOutputConfigImpl(new AudioFileWriter(filename));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified audio output stream\r\n     * @member AudioConfig.fromStreamOutput\r\n     * @function\r\n     * @public\r\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\r\n     *        stream.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromStreamOutput(audioStream: AudioOutputStream | PushAudioOutputStreamCallback): AudioConfig {\r\n        if (audioStream instanceof PushAudioOutputStreamCallback) {\r\n            return new AudioOutputConfigImpl(new PushAudioOutputStreamImpl(audioStream as PushAudioOutputStreamCallback));\r\n        }\r\n\r\n        if (audioStream instanceof PushAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PushAudioOutputStreamImpl);\r\n        }\r\n\r\n        if (audioStream instanceof PullAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PullAudioOutputStreamImpl);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class AudioConfigImpl\r\n */\r\nexport class AudioConfigImpl extends AudioConfig implements IAudioSource {\r\n    private privSource: IAudioSource;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioSource} source - An audio source.\r\n     */\r\n    public constructor(source: IAudioSource) {\r\n        super();\r\n        this.privSource = source;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privSource.format;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privSource.turnOff().then(() => {\r\n            if (!!cb) {\r\n                cb();\r\n            }\r\n        }, (error: string) => {\r\n            if (!!err) {\r\n                err(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.id\r\n     * @function\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privSource.id();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.blob\r\n     * @function\r\n     * @public\r\n     */\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return this.privSource.blob;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOn\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOn(): Promise<void> {\r\n        return this.privSource.turnOn();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.attach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     * @returns {Promise<IAudioStreamNode>} A promise.\r\n     */\r\n    public attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        return this.privSource.attach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.detach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     */\r\n    public detach(audioNodeId: string): void {\r\n        return this.privSource.detach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOff\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOff(): Promise<void> {\r\n        return this.privSource.turnOff();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.events\r\n     * @function\r\n     * @public\r\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\r\n     */\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privSource.events;\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        if (undefined !== this.privSource.setProperty) {\r\n            this.privSource.setProperty(name, value);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n        }\r\n\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        if (undefined !== this.privSource.getProperty) {\r\n            return this.privSource.getProperty(name, def);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privSource.deviceInfo;\r\n    }\r\n}\r\n\r\nexport class AudioOutputConfigImpl extends AudioConfig implements IAudioDestination {\r\n    private privDestination: IAudioDestination;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioDestination} destination - An audio destination.\r\n     */\r\n    public constructor(destination: IAudioDestination) {\r\n        super();\r\n        this.privDestination = destination;\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        this.privDestination.format = format;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        this.privDestination.write(buffer);\r\n    }\r\n\r\n    public close(): void {\r\n        this.privDestination.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privDestination.id();\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\r\nexport class KeywordRecognitionModel {\r\n    private privDisposed: boolean = false;\r\n\r\n    /**\r\n     * Create and initializes a new instance.\r\n     * @constructor\r\n     */\r\n    private constructor() {\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromFile\r\n     * @function\r\n     * @public\r\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model\r\n     *        will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromFile(fileName: string): KeywordRecognitionModel {\r\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromStream\r\n     * @function\r\n     * @public\r\n     * @param {string} file - A File that represents file for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromStream(file: File): KeywordRecognitionModel {\r\n        Contracts.throwIfNull(file, \"file\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member KeywordRecognitionModel.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Language understanding model\r\n * @class LanguageUnderstandingModel\r\n */\r\nexport class LanguageUnderstandingModel {\r\n    /**\r\n     * Creates and initializes a new instance\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the specified endpoint.\r\n     * @member LanguageUnderstandingModel.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromEndpoint(uri: URL): LanguageUnderstandingModel {\r\n        Contracts.throwIfNull(uri, \"uri\");\r\n        Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        // Need to extract the app ID from the URL.\r\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\r\n\r\n        // Start tearing the string apart.\r\n\r\n        // region can be extracted from the host name.\r\n        const firstDot: number = uri.host.indexOf(\".\");\r\n        if (-1 === firstDot) {\r\n            throw new Error(\"Could not determine region from endpoint\");\r\n        }\r\n        langModelImp.region = uri.host.substr(0, firstDot);\r\n\r\n        // Now the app ID.\r\n\r\n        const lastSegment: number = uri.pathname.lastIndexOf(\"/\") + 1;\r\n        if (-1 === lastSegment) {\r\n            throw new Error(\"Could not determine appId from endpoint\");\r\n        }\r\n\r\n        langModelImp.appId = uri.pathname.substr(lastSegment);\r\n\r\n        // And finally the key.\r\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\r\n        if (undefined === langModelImp.subscriptionKey) {\r\n            throw new Error(\"Could not determine subscription key from endpoint\");\r\n        }\r\n\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the application id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromAppId\r\n     * @function\r\n     * @public\r\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromAppId(appId: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates a language understanding model using hostname, subscription key and application\r\n     * id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - A String that represents the subscription key of\r\n     *        Language Understanding service.\r\n     * @param {string} appId - A String that represents the application id of Language\r\n     *        Understanding service.\r\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\r\n     *        of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, appId: string, region: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        langModelImp.region = region;\r\n        langModelImp.subscriptionKey = subscriptionKey;\r\n        return langModelImp;\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @class LanguageUnderstandingModelImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\r\n    public appId: string;\r\n    public region: string;\r\n    public subscriptionKey: string;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports\";\r\nimport { IStringDictionary } from \"../common/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SpeechConfig, SpeechSynthesisOutputFormat,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Speech translation configuration.\r\n * @class SpeechTranslationConfig\r\n */\r\nexport abstract class SpeechTranslationConfig extends SpeechConfig {\r\n\r\n    /**\r\n     * Creates an instance of recognizer config.\r\n     */\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\r\n     * @member SpeechTranslationConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     *       expires, the caller needs to refresh it by setting the property authorizationToken with a new\r\n     *       valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\r\n     *       will encounter errors during recognition.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\r\n     * to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechTranslationConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\r\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are\r\n     *       set by any other APIs. For example, if language is defined in the uri as query parameter\r\n     *       \"language=de-DE\", and also set by the speechRecognitionLanguage property, the language\r\n     *       setting in uri takes precedence, and the effective language is \"de-DE\".\r\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     *       use the authorization token.\r\n     * @member SpeechTranslationConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @returns {SpeechTranslationConfig} A speech config instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n        Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechTranslationConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Gets/Sets the speech recognition language.\r\n     * @member SpeechTranslationConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract addTargetLanguage(value: string): void;\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract get targetLanguages(): string[];\r\n\r\n    /**\r\n     * Gets the selected voice name.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} The voice name.\r\n     */\r\n    public abstract get voiceName(): string;\r\n\r\n    /**\r\n     * Gets/Sets voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public abstract set voiceName(value: string);\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member SpeechTranslationConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} value - The value.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class SpeechTranslationConfigImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechTranslationConfigImpl extends SpeechTranslationConfig {\r\n\r\n    private privSpeechProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechProperties = new PropertyCollection();\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * If this is set, subscription key is ignored.\r\n     * User needs to make sure the provided authorization token is valid and not expired.\r\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @return {string} The speechRecognitionLanguage.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     */\r\n    public get subscriptionKey(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        return (OutputFormat as any)[this.privSpeechProperties.getProperty(OutputFormatPropertyName, undefined)];\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    /**\r\n     * Gets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public get endpointId(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public set endpointId(value: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public addTargetLanguage(value: string): void {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        const languages: string[] = this.targetLanguages;\r\n        languages.push(value);\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n    }\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public get targetLanguages(): string[] {\r\n\r\n        if (this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n        } else {\r\n            return [];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets the voice name.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     */\r\n    public get voiceName(): string {\r\n        return this.getProperty(PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public set voiceName(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationVoice, value);\r\n    }\r\n\r\n    /**\r\n     * Provides the region.\r\n     * @member SpeechTranslationConfigImpl.prototype.region\r\n     * @function\r\n     * @public\r\n     * @returns {string} The region.\r\n     */\r\n    public get region(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\r\n    }\r\n\r\n    /**\r\n     * Gets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} def - The default value of the property in case it is not set.\r\n     * @returns {string} The value of the property.\r\n     */\r\n    public getProperty(name: string, def?: string): string {\r\n        return this.privSpeechProperties.getProperty(name, def);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} value - The value of the property.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechProperties.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member SpeechTranslationConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechProperties;\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privSpeechProperties.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privSpeechProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privSpeechProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        return (SpeechSynthesisOutputFormat as any)[this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OS,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports\";\r\nimport {\r\n    Contracts\r\n} from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    Connection,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines the base class Recognizer which mainly contains common event handlers.\r\n * @class Recognizer\r\n */\r\nexport abstract class Recognizer {\r\n    private privDisposed: boolean;\r\n    protected audioConfig: AudioConfig;\r\n    protected privReco: ServiceRecognizerBase;\r\n    protected privProperties: PropertyCollection;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    /**\r\n     * Creates and initializes an instance of a Recognizer\r\n     * @constructor\r\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\r\n     */\r\n    protected constructor(audioConfig: AudioConfig, properties: PropertyCollection, connectionFactory: IConnectionFactory) {\r\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : AudioConfig.fromDefaultMicrophoneInput();\r\n        this.privDisposed = false;\r\n        this.privProperties = properties.clone();\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.implCommonRecognizerSetup();\r\n    }\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member Recognizer.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member Recognizer.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech started events.\r\n     * @member Recognizer.prototype.speechStartDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechStartDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech stopped events.\r\n     * @member Recognizer.prototype.speechEndDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechEndDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member Recognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privReco;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member Recognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n\r\n        if (disposing) {\r\n            if (this.privReco) {\r\n                await this.privReco.audioSource.turnOff();\r\n                await this.privReco.dispose();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method returns the current state of the telemetry setting.\r\n     * @member Recognizer.prototype.telemetryEnabled\r\n     * @function\r\n     * @public\r\n     * @returns true if the telemetry is enabled, false otherwise.\r\n     */\r\n    public static get telemetryEnabled(): boolean {\r\n        return ServiceRecognizerBase.telemetryDataEnabled;\r\n    }\r\n\r\n    /**\r\n     * This method globally enables or disables telemetry.\r\n     * @member Recognizer.prototype.enableTelemetry\r\n     * @function\r\n     * @public\r\n     * @param enabled - Global setting for telemetry collection.\r\n     * If set to true, telemetry information like microphone errors,\r\n     * recognition errors are collected and sent to Microsoft.\r\n     * If set to false, no telemetry is sent to Microsoft.\r\n     */\r\n    /* tslint:disable:member-ordering */\r\n    public static enableTelemetry(enabled: boolean): void {\r\n        ServiceRecognizerBase.telemetryDataEnabled = enabled;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected abstract createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig;\r\n\r\n    // Creates the correct service recognizer for the type\r\n    protected abstract createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase;\r\n\r\n    // Does the generic recognizer setup that is common across all recognizer types.\r\n    protected implCommonRecognizerSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig = this.createRecognizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        this.privReco = this.createServiceRecognizer(\r\n            Recognizer.getAuthFromProperties(this.privProperties),\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            recognizerConfig);\r\n    }\r\n\r\n    protected async recognizeOnceAsyncImpl(recognitionMode: RecognitionMode): Promise<SpeechRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\r\n        const result: SpeechRecognitionResult = await ret.promise;\r\n        await this.implRecognizerStop();\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    protected async startContinuousRecognitionAsyncImpl(recognitionMode: RecognitionMode): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\r\n    }\r\n\r\n    protected async stopContinuousRecognitionAsyncImpl(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        await this.implRecognizerStop();\r\n    }\r\n\r\n    protected async implRecognizerStop(): Promise<void> {\r\n        if (this.privReco) {\r\n            await this.privReco.stopRecognizing();\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected static getAuthFromProperties(properties: PropertyCollection): IAuthentication {\r\n        const subscriptionKey = properties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        return authentication;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechConnectionFactory,\r\n    SpeechServiceConfig,\r\n    SpeechServiceRecognizer,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    KeywordRecognitionModel,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\r\n * @class SpeechRecognizer\r\n */\r\nexport class SpeechRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechConfigImpl.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechConfigImpl.properties, new SpeechConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechRecognizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\r\n        return recognizer;\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member SpeechRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: Recognizer, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\r\n     * @member SpeechRecognizer.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\r\n     */\r\n    public get endpointId(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format of recognition.\r\n     * @member SpeechRecognizer.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} The output format of recognition.\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        if (this.properties.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) === OutputFormat[OutputFormat.Simple]) {\r\n            return OutputFormat.Simple;\r\n        } else {\r\n            return OutputFormat.Detailed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechRecognizer.\r\n     * @member SpeechRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     *       so it is suitable only for single shot recognition\r\n     *       like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the SpeechRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until\r\n     * stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the\r\n     *      Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\r\n     *        specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the\r\n     *       Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (!!cb) {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member SpeechRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member SpeechRecognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AddedLmIntent,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    IntentConnectionFactory,\r\n    IntentServiceRecognizer,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    KeywordRecognitionModel,\r\n    LanguageUnderstandingModel,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechConfig,\r\n} from \"./Exports\";\r\nimport { LanguageUnderstandingModelImpl } from \"./LanguageUnderstandingModel\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Intent recognizer.\r\n * @class\r\n */\r\nexport class IntentRecognizer extends Recognizer {\r\n    private privDisposedIntentRecognizer: boolean;\r\n    private privAddedIntents: string[][];\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent; };\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n\r\n    /**\r\n     * Initializes an instance of the IntentRecognizer.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\r\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const configImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new IntentConnectionFactory());\r\n        this.privAddedIntents = [];\r\n        this.privAddedLmIntents = {};\r\n\r\n        this.privDisposedIntentRecognizer = false;\r\n        this.privProperties = configImpl.properties;\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage), PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member IntentRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: IntentRecognizer, event: IntentRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} the spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this IntentRecognizer.\r\n     * @member IntentRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their\r\n     *          values defined for this IntentRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts intent recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text and intent as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     *       so it is suitable only for single shot recognition like command or query.\r\n     *       For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: IntentRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous intent recognition.\r\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     *       This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     *       This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (!!cb) {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a phrase that should be recognized as intent.\r\n     * @member IntentRecognizer.prototype.addIntent\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\r\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\r\n     */\r\n    public addIntent(simplePhrase: string, intentId?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\r\n\r\n        this.privAddedIntents.push([intentId, simplePhrase]);\r\n    }\r\n\r\n    /**\r\n     * Adds an intent from Language Understanding service for recognition.\r\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent\r\n     *        to be recognized. Ignored if intentName is empty.\r\n     * @param {string} model - The intent model from Language Understanding service.\r\n     * @param {string} intentName - The intent name defined in the intent model. If it\r\n     *        is empty, all intent names defined in the model will be added.\r\n     */\r\n    public addIntentWithLanguageModel(intentId: string, model: LanguageUnderstandingModel, intentName?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privAddedLmIntents[intentId] = new AddedLmIntent(modelImpl, intentName);\r\n    }\r\n\r\n    /**\r\n     * @summary Adds all intents from the specified Language Understanding Model.\r\n     * @member IntentRecognizer.prototype.addAllIntents\r\n     * @function\r\n     * @public\r\n     * @function\r\n     * @public\r\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\r\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\r\n     */\r\n    public addAllIntents(model: LanguageUnderstandingModel, intentId?: string): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privUmbrellaIntent = new AddedLmIntent(modelImpl, intentId);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member IntentRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedIntentRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedIntentRecognizer = true;\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    private buildSpeechContext(): IIntentContext {\r\n        let appId: string;\r\n        let region: string;\r\n        let subscriptionKey: string;\r\n        const refGrammers: string[] = [];\r\n\r\n        if (undefined !== this.privUmbrellaIntent) {\r\n            appId = this.privUmbrellaIntent.modelImpl.appId;\r\n            region = this.privUmbrellaIntent.modelImpl.region;\r\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\r\n        }\r\n\r\n        // Build the reference grammer array.\r\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\r\n            const addedLmIntent: AddedLmIntent = this.privAddedLmIntents[intentId];\r\n\r\n            // validate all the same model, region, and key...\r\n            if (appId === undefined) {\r\n                appId = addedLmIntent.modelImpl.appId;\r\n            } else {\r\n                if (appId !== addedLmIntent.modelImpl.appId) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model\");\r\n                }\r\n            }\r\n\r\n            if (region === undefined) {\r\n                region = addedLmIntent.modelImpl.region;\r\n            } else {\r\n                if (region !== addedLmIntent.modelImpl.region) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\r\n                }\r\n            }\r\n\r\n            if (subscriptionKey === undefined) {\r\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\r\n            } else {\r\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\r\n                    throw new Error(\"Intents must all use the same subscription key\");\r\n                }\r\n            }\r\n\r\n            const grammer: string = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\r\n            refGrammers.push(grammer);\r\n        }\r\n\r\n        return {\r\n            Intent: {\r\n                id: appId,\r\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\r\n                provider: \"LUIS\",\r\n            },\r\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\r\n        };\r\n    }\r\n}\r\n\r\ninterface IIntentContext {\r\n    Intent: {\r\n        id: string,\r\n        key: string,\r\n        provider: string,\r\n    };\r\n    ReferenceGrammars: string[];\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { HeaderNames } from \"../common.speech/HeaderNames\";\r\nimport {\r\n    ConnectionMessage as IntConnectionMessage,\r\n    MessageType\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyCollection\r\n} from \"./PropertyCollection\";\r\nimport { PropertyId } from \"./PropertyId\";\r\n\r\n/**\r\n * ConnectionMessage represents implementation specific messages sent to and received from\r\n * the speech service. These messages are provided for debugging purposes and should not\r\n * be used for production use cases with the Azure Cognitive Services Speech Service.\r\n * Messages sent to and received from the Speech Service are subject to change without\r\n * notice. This includes message contents, headers, payloads, ordering, etc.\r\n * Added in version 1.11.0.\r\n */\r\nexport abstract class ConnectionMessage {\r\n    /**\r\n     * The message path.\r\n     */\r\n    public abstract get path(): string;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public abstract get isTextMessage(): boolean;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public abstract get isBinaryMessage(): boolean;\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public abstract get TextMessage(): string;\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public abstract get binaryMessage(): ArrayBuffer;\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public abstract get properties(): PropertyCollection;\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public abstract toString(): string;\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConnectionMessageImpl {\r\n\r\n    private privConnectionMessage: IntConnectionMessage;\r\n    private privProperties: PropertyCollection;\r\n\r\n    constructor(message: IntConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n        this.privProperties = new PropertyCollection();\r\n        if (!!this.privConnectionMessage.headers[HeaderNames.ConnectionId]) {\r\n            this.privProperties.setProperty(PropertyId.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames.ConnectionId]);\r\n        }\r\n\r\n        Object.keys(this.privConnectionMessage.headers).forEach((header: string, index: number, array: string[]): void => {\r\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The message path.\r\n     */\r\n    public get path(): string {\r\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key: string) => key.toLowerCase() === \"path\".toLowerCase())];\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public get isTextMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Text;\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public get isBinaryMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Binary;\r\n    }\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public get TextMessage(): string {\r\n        return this.privConnectionMessage.textBody;\r\n    }\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public get binaryMessage(): ArrayBuffer {\r\n        return this.privConnectionMessage.binaryBody;\r\n    }\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public toString(): string {\r\n        return \"\";\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for connection events like Connected/Disconnected.\r\n * Added in version 1.2.0\r\n */\r\nexport class ConnectionEventArgs extends SessionEventArgs {\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    SessionEventArgs\r\n} from \"./Exports\";\r\n\r\nexport class ConnectionMessageEventArgs {\r\n\r\n    private privConnectionMessage: ConnectionMessage;\r\n\r\n    constructor(message: ConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\r\n     */\r\n    public get message(): ConnectionMessage {\r\n        return this.privConnectionMessage;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message event.\r\n     */\r\n    public toString(): string {\r\n        return \"Message: \" + this.privConnectionMessage.toString();\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for any Service message event\r\n * Added in version 1.9.0\r\n */\r\n\r\nexport class ServiceEventArgs extends SessionEventArgs {\r\n    private privJsonResult: string;\r\n    private privEventName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} json - json payload of the USP message.\r\n     */\r\n    public constructor(json: string,  name: string, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privJsonResult = json;\r\n        this.privEventName = name;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n\r\n    public get eventName(): string {\r\n        return this.privEventName;\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ServiceRecognizerBase,\r\n    SynthesisAdapterBase,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    ConnectionEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    IDetachable,\r\n    marshalPromiseToCallbacks,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport {\r\n    ConnectionMessageImpl\r\n} from \"./ConnectionMessage\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConnectionMessageEventArgs,\r\n    Recognizer,\r\n    ServiceEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\r\n * By default, a Recognizer autonomously manages connection to service when needed.\r\n * The Connection class provides additional methods for users to explicitly open or close a connection and\r\n * to subscribe to connection status changes.\r\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\r\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\r\n * in advance before starting recognition on the Recognizer associated with this Connection.\r\n * If the Recognizer needs to connect or disconnect to service, it will\r\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\r\n * status via Connected/Disconnected events.\r\n * Added in version 1.2.1.\r\n */\r\nexport class Connection {\r\n    private privInternalData: ServiceRecognizerBase | SynthesisAdapterBase;\r\n    private privEventListener: IDetachable;\r\n    private privServiceEventListener: IDetachable;\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified recognizer.\r\n     * @param recognizer The recognizer associated with the connection.\r\n     * @return The Connection instance of the recognizer.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): Connection {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = recoBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified synthesizer.\r\n     * @param synthesizer The synthesizer associated with the connection.\r\n     * @return The Connection instance of the synthesizer.\r\n     */\r\n    public static fromSynthesizer(synthesizer: SpeechSynthesizer): Connection {\r\n        const synthBase: SynthesisAdapterBase = synthesizer.internalData as SynthesisAdapterBase;\r\n\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = synthBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Starts to set up connection to the service.\r\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\r\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     */\r\n    public openConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\r\n     *\r\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public closeConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\r\n        } else {\r\n            marshalPromiseToCallbacks((this.privInternalData as ServiceRecognizerBase).disconnect(), cb, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends a parameter in a message to service.\r\n     * Added in version 1.12.1.\r\n     * @param path The path of the network message.\r\n     * @param propertyName Name of the property\r\n     * @param propertyValue Value of the property. This is a json string.\r\n     */\r\n    public setMessageProperty(path: string, propertyName: string, propertyValue: string | object): void {\r\n        Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\r\n\r\n        if (this.privInternalData instanceof ServiceRecognizerBase) {\r\n            if (path.toLowerCase() !== \"speech.context\") {\r\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\r\n            } else {\r\n                (this.privInternalData as ServiceRecognizerBase).speechContext.setSection(propertyName, propertyValue);\r\n            }\r\n        } else if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            if (path.toLowerCase() !== \"synthesis.context\") {\r\n                throw new Error(\"Only synthesis.context message property sets are currently supported for synthesizer\");\r\n            } else {\r\n                (this.privInternalData as SynthesisAdapterBase).synthesisContext.setSection(propertyName, propertyValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a message to the speech service.\r\n     * Added in version 1.13.0.\r\n     * @param path The WebSocket path of the message\r\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\r\n     * @param success A callback to indicate success.\r\n     * @param error A callback to indicate an error.\r\n     */\r\n    public sendMessageAsync(path: string, payload: string | ArrayBuffer, success?: () => void, error?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.sendNetworkMessage(path, payload), success, error);\r\n    }\r\n\r\n    /**\r\n     * Any message from service that is not being processed by any other top level recognizers.\r\n     *\r\n     * Will be removed in 2.0.\r\n     */\r\n    public receivedServiceMessage: (args: ServiceEventArgs) => void;\r\n\r\n    /**\r\n     * Any message received from the Speech Service.\r\n     */\r\n    public messageReceived: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * Any message sent to the Speech Service.\r\n     */\r\n    public messageSent: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * The Connected event to indicate that the recognizer is connected to service.\r\n     */\r\n    public connected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * The Disconnected event to indicate that the recognizer is disconnected from service.\r\n     */\r\n    public disconnected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     */\r\n    public close(): void {\r\n        /* tslint:disable:no-empty */\r\n    }\r\n\r\n    private setupEvents(): void {\r\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                if (!!this.connected) {\r\n                    this.connected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                if (!!this.disconnected) {\r\n                    this.disconnected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\r\n                if (!!this.messageSent) {\r\n                    this.messageSent(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageSentEvent).message)));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\r\n                if (!!this.messageReceived) {\r\n                    this.messageReceived(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageReceivedEvent).message)));\r\n                }\r\n            }\r\n        });\r\n\r\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e: ServiceEvent): void => {\r\n            if (!!this.receivedServiceMessage) {\r\n                this.receivedServiceMessage(new ServiceEventArgs(e.jsonString, e.name));\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranslationConnectionFactory,\r\n    TranslationServiceRecognizer,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Connection } from \"./Connection\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationSynthesisEventArgs,\r\n} from \"./Exports\";\r\nimport { SpeechTranslationConfig, SpeechTranslationConfigImpl } from \"./SpeechTranslationConfig\";\r\n\r\n/**\r\n * Translation recognizer\r\n * @class TranslationRecognizer\r\n */\r\nexport class TranslationRecognizer extends Recognizer {\r\n    private privDisposedTranslationRecognizer: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the TranslationRecognizer.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new TranslationConnectionFactory());\r\n\r\n        this.privDisposedTranslationRecognizer = false;\r\n\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\r\n            Contracts.throwIfNullOrWhitespace(\r\n                this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice),\r\n                PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n        }\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages),\r\n            PropertyId[PropertyId.SpeechServiceConnection_TranslationToLanguages]);\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(\r\n            PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member TranslationRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: TranslationRecognizer, event: TranslationRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event synthesizing signals that a translation synthesis result is received.\r\n     * @member TranslationRecognizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: TranslationRecognizer, event: TranslationSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the language name that was set when the recognizer was created.\r\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Gets the language name that was set when the recognizer was created.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets target languages for translation that were set when the recognizer was created.\r\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\r\n     * @member TranslationRecognizer.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\r\n     */\r\n    public get targetLanguages(): string[] {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n    }\r\n\r\n    /**\r\n     * Gets the name of output voice.\r\n     * @member TranslationRecognizer.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} the name of output voice.\r\n     */\r\n    public get voiceName(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this TranslationRecognizer.\r\n     * @member TranslationRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, and stops after the first utterance is recognized.\r\n     * The task returns the translation text as result.\r\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitableonly\r\n     *       for single shot recognition like command or query. For long-running recognition,\r\n     *       use startContinuousRecognitionAsync() instead.\r\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the translation has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: TranslationRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive translation results.\r\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous recognition and translation.\r\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * dynamically remove a language from list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.removeTargetLanguage\r\n     * @function\r\n     * @param lang - language to be removed\r\n     * @public\r\n     */\r\n    public removeTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be removed\");\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            const languages: string[] = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            const index: number = languages.indexOf(lang);\r\n            if (index > -1) {\r\n                languages.splice(index, 1);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n                this.updateLanguages(languages);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * dynamically add a language to list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.addTargetLanguage\r\n     * @function\r\n     * @param lang - language to be added\r\n     * @public\r\n     */\r\n    public addTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be added\");\r\n        let languages: string[] = [];\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            languages = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            if (!languages.includes(lang)) {\r\n                languages.push(lang);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n            }\r\n        } else {\r\n            this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, lang);\r\n            languages = [lang];\r\n        }\r\n        this.updateLanguages(languages);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member TranslationRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * handles ConnectionEstablishedEvent for conversation translation scenarios.\r\n     * @member TranslationRecognizer.prototype.onConnection\r\n     * @function\r\n     * @public\r\n     */\r\n    /* tslint:disable:no-empty */\r\n    public onConnection(): void { }\r\n\r\n    /**\r\n     * handles disconnection events for conversation translation scenarios.\r\n     * @member TranslationRecognizer.prototype.onDisconnection\r\n     * @function\r\n     * @public\r\n     */\r\n    /* tslint:disable:no-empty */\r\n    public async onDisconnection(): Promise<void> { }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedTranslationRecognizer) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposedTranslationRecognizer = true;\r\n\r\n        if (disposing) {\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n\r\n    private updateLanguages(languages: string[]): void {\r\n        const conn: Connection = Connection.fromRecognizer(this);\r\n        if (!!conn) {\r\n            conn.setMessageProperty(\"speech.context\", \"translationcontext\", {to: languages});\r\n            conn.sendMessageAsync(\"event\", JSON.stringify({\r\n                id: \"translation\",\r\n                name: \"updateLanguage\",\r\n                to: languages\r\n                }));\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\r\nimport { IntentRecognitionResult, NoMatchReason, SpeechRecognitionResult, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information for NoMatch recognition results.\r\n * @class NoMatchDetails\r\n */\r\nexport class NoMatchDetails {\r\n    private privReason: NoMatchReason;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {NoMatchReason} reason - The no-match reason.\r\n     */\r\n    private constructor(reason: NoMatchReason) {\r\n        this.privReason = reason;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\r\n     * @member NoMatchDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\r\n     *        result - The recognition result that was not recognized.\r\n     * @returns {NoMatchDetails} The no match details object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult): NoMatchDetails {\r\n        const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n\r\n        let reason: NoMatchReason = NoMatchReason.NotRecognized;\r\n\r\n        switch (simpleSpeech.RecognitionStatus) {\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = NoMatchReason.InitialBabbleTimeout;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n                reason = NoMatchReason.InitialSilenceTimeout;\r\n                break;\r\n            default:\r\n                reason = NoMatchReason.NotRecognized;\r\n                break;\r\n        }\r\n\r\n        return new NoMatchDetails(reason);\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member NoMatchDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {NoMatchReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): NoMatchReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetailsBase\r\n */\r\nexport class CancellationDetailsBase {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - The error details, if provided.\r\n     */\r\n    protected constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationDetailsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member CancellationDetailsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get ErrorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName, EnumTranslation, SimpleSpeechPhrase } from \"../common.speech/Exports\";\r\nimport { CancellationDetailsBase } from \"./CancellationDetailsBase\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    RecognitionResult,\r\n    SpeechSynthesisResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetails\r\n */\r\nexport class CancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\r\n     * @member CancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\r\n     * @returns {CancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: RecognitionResult | SpeechSynthesisResult): CancellationDetails {\r\n        let reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (result instanceof RecognitionResult && !!result.json) {\r\n            const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n            reason = EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\r\n        }\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new CancellationDetails(reason, result.errorDetails || EnumTranslation.implTranslateErrorDetails(errorCode), errorCode);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports\";\r\nimport { Recognizer } from \"./Exports\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): PhraseListGrammar {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\r\n * @class BotFrameworkConfig\r\n */\r\nexport class BotFrameworkConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of BotFrameworkConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance with the provided subscription information.\r\n     * @member BotFrameworkConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     *        resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromSubscription(subscription: string, region: string, botId?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance for the specified authorization token and region.\r\n     * Note: The caller must ensure that an authorization token is valid. Before an authorization token expires, the\r\n     *       caller must refresh it by setting the authorizationToken property on the corresponding\r\n     *       DialogServiceConnector instance created with this config. The contents of configuration objects are copied\r\n     *       when connectors are created, so setting authorizationToken on a DialogServiceConnector will not update the\r\n     *       original configuration's authorization token. Create a new configuration instance or set the\r\n     *       SpeechServiceAuthorization_Token property to update an existing instance if it will be used to create\r\n     *       further DialogServiceConnectors.\r\n     * @member BotFrameworkConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param authorizationToken The authorization token associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     *        resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromAuthorizationToken(\r\n        authorizationToken: string, region: string, botId?: string\r\n    ): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-default service host. The standard resource path will be\r\n     * assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL) and then set the AuthorizationToken\r\n     *       property on the created BotFrameworkConfig instance.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL | string} host - If a URL is provided, the fully-qualified host with protocol (e.g.\r\n     *        wss://your.host.com:1234) will be used. If a string is provided, it will be embedded in\r\n     *        wss://{host}.convai.speech.azure.us.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     *        token must be set.\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     *        resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromHost(\r\n        host: URL | string,\r\n        subscriptionKey?: string,\r\n        botId?: string): BotFrameworkConfig {\r\n\r\n        Contracts.throwIfNullOrUndefined(host, \"host\");\r\n        const resolvedHost: URL = host instanceof URL ? host : new URL(`wss://${host}.convai.speech.azure.us`);\r\n        Contracts.throwIfNullOrUndefined(resolvedHost, \"resolvedHost\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Host, resolvedHost.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created BotFrameworkConfig instance to\r\n     *       use the authorization token.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     *        token must be set.\r\n     * @returns {BotFrameworkConfig} - A new bot framework configuration instance using the provided endpoint.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\r\n * @class CustomCommandsConfig\r\n */\r\nexport class CustomCommandsConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of CustomCommandsConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified subscription and region.\r\n     * @member CustomCommandsConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new bot framework config.\r\n     */\r\n    public static fromSubscription(applicationId: string, subscription: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member CustomCommandsConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param authorizationToken The authorization token associated with the application.\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new speech commands config.\r\n     */\r\n    public static fromAuthorizationToken(applicationId: string, authorizationToken: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    public set applicationId(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.setProperty(PropertyId.Conversation_ApplicationId, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to get.\r\n     */\r\n    public get applicationId(): string {\r\n        return this.getProperty(PropertyId.Conversation_ApplicationId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport { OutputFormatPropertyName } from \"../common.speech/Exports\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports\";\r\nimport { DialogServiceConfig, OutputFormat, PropertyId } from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport { AuthInfo, RecognizerConfig, WebsocketMessageFormatter } from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport class DialogConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private static Constants: any = class {\r\n        private static ApiKey: string = \"api\";\r\n        private static BaseUrl: string = \"convai.speech\";\r\n    };\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        const applicationId: string = config.parameters.getProperty(PropertyId.Conversation_ApplicationId, \"\");\r\n        const dialogType: string = config.parameters.getProperty(PropertyId.Conversation_DialogType);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\r\n        const requestTurnStatus: string = config.parameters.getProperty(PropertyId.Conversation_Request_Bot_Status_Messages, \"true\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[HeaderNames.ConnectionId] = connectionId;\r\n        queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        queryParams[QueryParameterNames.Language] = language;\r\n        queryParams[QueryParameterNames.RequestBotStatusMessages] = requestTurnStatus;\r\n        if (applicationId) {\r\n            queryParams[QueryParameterNames.BotId] = applicationId;\r\n            if (dialogType === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                queryParams[HeaderNames.CustomCommandsAppId] = applicationId;\r\n            }\r\n        }\r\n\r\n        const resourceInfix: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"commands/\"\r\n            : \"\";\r\n        const version: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"v1\"\r\n            : dialogType === DialogServiceConfig.DialogTypes.BotFramework ? \"v3\"\r\n            : \"v0\";\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (authInfo.token != null && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n\r\n        // The URL used for connection is chosen in a priority order of specification:\r\n        //  1. If a custom endpoint is provided, that URL is used verbatim.\r\n        //  2. If a custom host is provided (e.g. \"wss://my.custom.endpoint.com:1123\"), a URL is constructed from it.\r\n        //  3. If no custom connection details are provided, a URL is constructed from default values.\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, \"\");\r\n        if (!endpoint) {\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(\r\n                PropertyId.SpeechServiceConnection_Host,\r\n                `wss://${region}.${DialogConnectionFactory.Constants.BaseUrl}${hostSuffix}`);\r\n            const standardizedHost: string = host.endsWith(\"/\") ? host : host + \"/\";\r\n            endpoint = `${standardizedHost}${resourceInfix}${DialogConnectionFactory.Constants.ApiKey}/${version}`;\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines channels used to pass property settings to service.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ServicePropertyChannel {\r\n    /**\r\n     * Uses URI query parameter to pass property settings to service.\r\n     */\r\n    UriQueryParameter = 0.\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { DialogConnectionFactory } from \"../common.speech/DialogConnectorFactory\";\r\nimport {\r\n    DialogServiceAdapter,\r\n    IAgentConfig,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports\";\r\nimport { ActivityReceivedEventArgs } from \"./ActivityReceivedEventArgs\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult\r\n} from \"./Exports\";\r\nimport { PropertyId } from \"./PropertyId\";\r\nimport { TurnStatusReceivedEventArgs } from \"./TurnStatusReceivedEventArgs\";\r\n\r\n/**\r\n * Dialog Service Connector\r\n * @class DialogServiceConnector\r\n */\r\nexport class DialogServiceConnector extends Recognizer {\r\n    private privIsDisposed: boolean;\r\n    private isTurnComplete: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the DialogServiceConnector.\r\n     * @constructor\r\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     */\r\n    public constructor(dialogConfig: DialogServiceConfig, audioConfig?: AudioConfig) {\r\n        const dialogServiceConfigImpl = dialogConfig as DialogServiceConfigImpl;\r\n        Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\r\n\r\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectionFactory());\r\n\r\n        this.isTurnComplete = true;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\r\n\r\n        const agentConfig = this.buildAgentConfig();\r\n        this.privReco.agentConfig.set(agentConfig);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member DialogServiceConnector.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member DialogServiceConfig.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member DialogServiceConnector.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: DialogServiceConnector, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event activityReceived signals that an activity has been received.\r\n     * @member DialogServiceConnector.prototype.activityReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public activityReceived: (sender: DialogServiceConnector, event: ActivityReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * The event turnStatusReceived signals that a turn status message has been received. These messages are\r\n     * associated with both an interaction and a conversation. They are used to notify the client in the event\r\n     * of an interaction failure with the dialog backend, e.g. in the event of a network issue, timeout, crash,\r\n     * or other problem.\r\n     * @member DialogServiceConnector.prototype.turnStatusReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public turnStatusReceived: (sender: DialogServiceConnector, event: TurnStatusReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * Starts a connection to the service.\r\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     * @member DialogServiceConnector.prototype.connect\r\n     * @function\r\n     * @public\r\n     */\r\n    public connect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\r\n     *\r\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public disconnect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.disconnect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Sets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this DialogServiceConnector.\r\n     * @member DialogServiceConnector.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /** Gets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be empty\r\n     */\r\n    public get speechActivityTemplate(): string {\r\n        return this.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n    }\r\n\r\n    /** Sets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be null or empty.\r\n     * Note: it has to be a valid Json object.\r\n     */\r\n    public set speechActivityTemplate(speechActivityTemplate: string) {\r\n        this.properties.setProperty(PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and stops after the first utterance is recognized.\r\n     * @member DialogServiceConnector.prototype.listenOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the reco has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public listenOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        if (this.isTurnComplete) {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            const callbackHolder = async (): Promise<SpeechRecognitionResult> => {\r\n                await this.privReco.connect();\r\n                await this.implRecognizerStop();\r\n                this.isTurnComplete = false;\r\n\r\n                const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n                await this.privReco.recognize(RecognitionMode.Conversation, ret.resolve, ret.reject);\r\n\r\n                const e: SpeechRecognitionResult = await ret.promise;\r\n                await this.implRecognizerStop();\r\n\r\n                return e;\r\n            };\r\n\r\n            const retPromise: Promise<SpeechRecognitionResult> = callbackHolder();\r\n\r\n            retPromise.catch(() => {\r\n                // Destroy the recognizer.\r\n                /* tslint:disable:no-empty */ // We've done all we can here.\r\n                this.dispose(true).catch(() => { });\r\n            });\r\n\r\n            marshalPromiseToCallbacks(retPromise.finally((): void => {\r\n                this.isTurnComplete = true;\r\n            }), cb, err);\r\n        }\r\n    }\r\n\r\n    public sendActivityAsync(activity: string, cb?: () => void, errCb?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((this.privReco as DialogServiceAdapter).sendMessage(activity), cb, errCb);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member DialogServiceConnector.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privIsDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privIsDisposed = true;\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private buildAgentConfig(): IAgentConfig {\r\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\r\n\r\n        return {\r\n            botInfo: {\r\n                commType: communicationType,\r\n                commandsCulture: undefined,\r\n                connectionId: this.properties.getProperty(PropertyId.Conversation_Agent_Connection_Id),\r\n                conversationId: this.properties.getProperty(PropertyId.Conversation_Conversation_Id, undefined),\r\n                fromId: this.properties.getProperty(PropertyId.Conversation_From_Id, undefined),\r\n                ttsAudioFormat: this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)\r\n            },\r\n            version: 0.2\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\nexport enum SpeakerRecognitionResultType {\r\n    Verify,\r\n    Identify\r\n}\r\n/**\r\n * Output format\r\n * @class SpeakerRecognitionResult\r\n */\r\nexport class SpeakerRecognitionResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privProfileId: string;\r\n    private privScore: number;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(resultType: SpeakerRecognitionResultType, data: string, profileId: string, resultReason: ResultReason = ResultReason.RecognizedSpeaker) {\r\n        this.privProperties = new PropertyCollection();\r\n        this.privReason = resultReason;\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (resultType === SpeakerRecognitionResultType.Identify) {\r\n                const json: { identifiedProfile: { profileId: string, score: number } } = JSON.parse(data);\r\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n                this.privProfileId = json.identifiedProfile.profileId;\r\n                this.privScore = json.identifiedProfile.score;\r\n            } else {\r\n                const json: { recognitionResult: string, score: number } = JSON.parse(data);\r\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n                this.privScore = json.score;\r\n                if (json.recognitionResult.toLowerCase() !== \"accept\") {\r\n                    this.privReason = ResultReason.NoMatch;\r\n                }\r\n                if (profileId !== undefined && profileId !== \"\") {\r\n                    this.privProfileId = profileId;\r\n                }\r\n            }\r\n        } else {\r\n            const json: { statusText: string } = JSON.parse(data);\r\n            Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n            this.privErrorDetails = json.statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, data);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get profileId(): string {\r\n        return this.privProfileId;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    public get score(): number {\r\n        return this.privScore;\r\n    }\r\n}\r\n\r\n/**\r\n * @class SpeakerRecognitionCancellationDetails\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\r\n     * @member SpeakerRecognitionCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\r\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: SpeakerRecognitionResult): SpeakerRecognitionCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../../common/Error\";\r\nimport { marshalPromiseToCallbacks } from \"../../common/Promise\";\r\nimport { AudioStreamFormat, PullAudioInputStreamCallback } from \"../Exports\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\ntype AudioDataTypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array;\r\n/**\r\n * Base audio player class\r\n * TODO: Plays only PCM for now.\r\n * @class\r\n */\r\nexport class BaseAudioPlayer {\r\n\r\n    private audioContext: AudioContext = null;\r\n    private gainNode: GainNode = null;\r\n    private audioFormat: AudioStreamFormatImpl;\r\n    private autoUpdateBufferTimer: any = 0;\r\n    private samples: Float32Array;\r\n    private startTime: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\r\n     */\r\n    public constructor(audioFormat?: AudioStreamFormat) {\r\n        if (audioFormat === undefined) {\r\n            audioFormat = AudioStreamFormat.getDefaultInputFormat();\r\n        }\r\n        this.init(audioFormat);\r\n    }\r\n\r\n    /**\r\n     * play Audio sample\r\n     * @param newAudioData audio data to be played.\r\n     */\r\n    public playAudioSample(newAudioData: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n                this.ensureInitializedContext();\r\n                const audioData = this.formatAudioData(newAudioData);\r\n                const newSamplesData = new Float32Array(this.samples.length + audioData.length);\r\n                newSamplesData.set(this.samples, 0);\r\n                newSamplesData.set(audioData, this.samples.length);\r\n                this.samples = newSamplesData;\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * stops audio and clears the buffers\r\n     */\r\n    public stopAudio(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.audioContext !== null) {\r\n            this.samples = new Float32Array();\r\n            clearInterval(this.autoUpdateBufferTimer);\r\n            this.audioContext.close().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string) => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.audioContext = null;\r\n        }\r\n    }\r\n\r\n    private init(audioFormat: AudioStreamFormat): void {\r\n        this.audioFormat = audioFormat as AudioStreamFormatImpl;\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private ensureInitializedContext(): void {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n            const timerPeriod = 200;\r\n            this.autoUpdateBufferTimer = setInterval(() => {\r\n                this.updateAudioBuffer();\r\n            }, timerPeriod);\r\n        }\r\n    }\r\n\r\n    private createAudioContext(): void {\r\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\r\n        this.audioContext = AudioStreamFormatImpl.getAudioContext();\r\n\r\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\r\n        // to control the volume, not likely\r\n        this.gainNode = this.audioContext.createGain();\r\n        this.gainNode.gain.value = 1;\r\n        this.gainNode.connect(this.audioContext.destination);\r\n        this.startTime = this.audioContext.currentTime;\r\n    }\r\n\r\n    private formatAudioData(audioData: ArrayBuffer): Float32Array {\r\n        switch (this.audioFormat.bitsPerSample) {\r\n            case 8:\r\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\r\n            case 16:\r\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\r\n            case 32:\r\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\r\n            default:\r\n                throw new InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\r\n        }\r\n    }\r\n\r\n    private formatArrayBuffer(audioData: AudioDataTypedArray, maxValue: number): Float32Array {\r\n        const float32Data = new Float32Array(audioData.length);\r\n        for (let i = 0; i < audioData.length; i++) {\r\n            float32Data[i] = audioData[i] / maxValue;\r\n        }\r\n        return float32Data;\r\n    }\r\n\r\n    private updateAudioBuffer(): void {\r\n        if (this.samples.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const channelCount = this.audioFormat.channels;\r\n        const bufferSource = this.audioContext.createBufferSource();\r\n        const frameCount = this.samples.length / channelCount;\r\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\r\n\r\n        // TODO: Should we do the conversion in the pushAudioSample instead?\r\n        for (let channel = 0; channel < channelCount; channel++) {\r\n            // Fill in individual channel data\r\n            let channelOffset = channel;\r\n            const audioData = audioBuffer.getChannelData(channel);\r\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\r\n                audioData[i] = this.samples[channelOffset];\r\n            }\r\n        }\r\n\r\n        if (this.startTime < this.audioContext.currentTime) {\r\n            this.startTime = this.audioContext.currentTime;\r\n        }\r\n\r\n        bufferSource.buffer = audioBuffer;\r\n        bufferSource.connect(this.gainNode);\r\n        bufferSource.start(this.startTime);\r\n\r\n        // Make sure we play the next sample after the current one.\r\n        this.startTime += audioBuffer.duration;\r\n\r\n        // Clear the samples for the next pushed data.\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private async playAudio(audioData: ArrayBuffer): Promise<void> {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n        }\r\n        const source: AudioBufferSourceNode = this.audioContext.createBufferSource();\r\n        const destination: AudioDestinationNode = this.audioContext.destination;\r\n        await this.audioContext.decodeAudioData(audioData, (newBuffer: AudioBuffer): void => {\r\n            source.buffer = newBuffer;\r\n            source.connect(destination);\r\n            source.start(0);\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { VoiceProfileType } from \"./Exports\";\r\n\r\n/**\r\n * Defines Voice Profile class for Speaker Recognition\r\n * @class VoiceProfile\r\n */\r\nexport class VoiceProfile {\r\n    private privId: string;\r\n    private privProfileType: VoiceProfileType;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} profileId - profileId of this Voice Profile.\r\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\r\n     */\r\n    constructor(profileId: string, profileType: VoiceProfileType) {\r\n        this.privId = profileId;\r\n        this.privProfileType = profileType;\r\n    }\r\n\r\n    /**\r\n     * profileId of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileId\r\n     * @function\r\n     * @public\r\n     * @returns {string} profileId of this Voice Profile instance.\r\n     */\r\n    public get profileId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * profileType of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileType\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\r\n     */\r\n    public get profileType(): VoiceProfileType {\r\n        return this.privProfileType;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\nexport interface EnrollmentResultDetails {\r\n    profileId: string;\r\n    enrollmentsCount: number;\r\n    enrollmentsLengthInSec: number;\r\n    enrollmentsSpeechLengthInSec: number;\r\n    remainingEnrollmentsCount: number;\r\n    remainingEnrollmentsSpeechLengthInSec: number;\r\n    audioLengthInSec: number;\r\n    audioSpeechLengthInSec: number;\r\n    enrollmentStatus: string;\r\n}\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileEnrollmentResult\r\n */\r\nexport class VoiceProfileEnrollmentResult {\r\n    private privReason: ResultReason;\r\n    private privDetails: EnrollmentResultDetails;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, json: string, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (!!json) {\r\n                this.privDetails = JSON.parse(json);\r\n                if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\r\n                    this.privReason = ResultReason.EnrollingVoiceProfile;\r\n                }\r\n            }\r\n        } else {\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public static FromIdentificationProfileList(json: { value: any[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getIdentificationDetails(item);\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    public static FromVerificationProfileList(json: { value: any[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getVerificationDetails(item);\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get enrollmentsCount(): number {\r\n        return this.privDetails.enrollmentsCount;\r\n    }\r\n\r\n    public get enrollmentsLengthInSec(): number {\r\n        return this.privDetails.enrollmentsLengthInSec;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get enrollmentResultDetails(): EnrollmentResultDetails {\r\n        return this.privDetails;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    private static getIdentificationDetails(json: any): any {\r\n        return {\r\n            audioLengthInSec: json.audioLengthInSec ? parseFloat(json.audioLengthInSec) : 0,\r\n            audioSpeechLengthInSec: json.audioSpeechLengthInSec ? parseFloat(json.audioSpeechLengthInSec) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount || 0,\r\n            enrollmentsLengthInSec: json.enrollmentsLengthInSec ? parseFloat(json.enrollmentsLengthInSec) : 0,\r\n            enrollmentsSpeechLengthInSec: json.enrollmentsSpeechLengthInSec ? parseFloat(json.enrollmentsSpeechLengthInSec) : 0,\r\n            profileId: json.profileId || json.identificationProfileId,\r\n            remainingEnrollmentsSpeechLengthInSec: json.remainingEnrollmentsSpeechLengthInSec ? parseFloat(json.remainingEnrollmentsSpeechLengthInSec) : 0\r\n        };\r\n    }\r\n\r\n    private static getVerificationDetails(json: any): any {\r\n        return {\r\n            audioLengthInSec: json.audioLengthInSec ? parseFloat(json.audioLengthInSec) : 0,\r\n            audioSpeechLengthInSec: json.audioSpeechLengthInSec ? parseFloat(json.audioSpeechLengthInSec) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount,\r\n            enrollmentsLengthInSec: json.enrollmentsLengthInSec ? parseFloat(json.enrollmentsLengthInSec) : 0,\r\n            enrollmentsSpeechLengthInSec: json.enrollmentsSpeechLengthInSec ? parseFloat(json.enrollmentsSpeechLengthInSec) : 0,\r\n            profileId: json.profileId || json.verificationProfileId,\r\n            remainingEnrollmentsCount: json.remainingEnrollments || json.remainingEnrollmentsCount,\r\n            remainingEnrollmentsSpeechLengthInSec: json.remainingEnrollmentsSpeechLengthInSec ? parseFloat(json.remainingEnrollmentsSpeechLengthInSec) : 0\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileEnrollmentCancellationDetails\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class VoiceProfileEnrollmentCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\r\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileEnrollmentResult): VoiceProfileEnrollmentCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileResult\r\n */\r\nexport class VoiceProfileResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (reason === ResultReason.Canceled) {\r\n            Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileCancellationDetails\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class VoiceProfileCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\r\n     * @member VoiceProfileCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileResult): VoiceProfileCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ResultReason,\r\n    VoiceProfileResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfilePhraseResult\r\n */\r\nexport class VoiceProfilePhraseResult extends VoiceProfileResult {\r\n    private privPhrases: string[] = [];\r\n\r\n    public constructor(reason: ResultReason, statusText: string, json: any) {\r\n        super(reason, statusText);\r\n        Contracts.throwIfNullOrUndefined(json, \"phrase result JSON\");\r\n        if (!!json.value && !!json.value[0]) {\r\n            for (const item of json.value) {\r\n                this.privPhrases.push(item.passPhrase || item.activationPhrase);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get phrases(): string[] {\r\n        return this.privPhrases;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRestResponse,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    Context,\r\n    OS,\r\n    SpeakerIdMessageAdapter,\r\n    SpeakerRecognitionConfig,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    VoiceProfile,\r\n    VoiceProfileEnrollmentResult,\r\n    VoiceProfilePhraseResult,\r\n    VoiceProfileResult,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines VoiceProfileClient class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class VoiceProfileClient\r\n */\r\nexport class VoiceProfileClient {\r\n    protected privProperties: PropertyCollection;\r\n    private privAdapter: SpeakerIdMessageAdapter;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this VoiceProfileClient.\r\n     * @member VoiceProfileClient.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * VoiceProfileClient constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\r\n     */\r\n    public constructor(speechConfig: SpeechConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.implClientSetup();\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.createProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\r\n     *        specifies the keyword to be recognized.\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     * @return {Promise<VoiceProfile>} - Promise of a VoiceProfile.\r\n     */\r\n    public async createProfileAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfile> {\r\n        const result: IRestResponse = await this.privAdapter.createProfile(profileType, lang);\r\n        if (!result.ok) {\r\n            throw new Error(`createProfileAsync failed with code: ${result.status}, message: ${result.statusText}`);\r\n        }\r\n        const response: { profileId: string } = result.json;\r\n        const profile = new VoiceProfile(response.profileId, profileType);\r\n        return profile;\r\n    }\r\n    /**\r\n     * Get current information of a voice profile\r\n     * @member VoiceProfileClient.prototype.retrieveEnrollmentResultAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to retrieve info for\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async retrieveEnrollmentResultAsync(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        const result: IRestResponse = await this.privAdapter.getProfileStatus(profile);\r\n        return new VoiceProfileEnrollmentResult(\r\n            result.ok ? ResultReason.EnrolledVoiceProfile : ResultReason.Canceled,\r\n            result.data,\r\n            result.statusText,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get all voice profiles on account with given voice profile type\r\n     * @member VoiceProfileClient.prototype.getAllProfilesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType profile type (identification/verification) for which to list profiles\r\n     * @return {Promise<VoiceProfileEnrollmentResult[]>} - Promise of an array of VoiceProfileEnrollmentResults.\r\n     */\r\n    public async getAllProfilesAsync(profileType: VoiceProfileType): Promise<VoiceProfileEnrollmentResult[]> {\r\n        const result: IRestResponse = await this.privAdapter.getProfiles(profileType);\r\n        if (profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            return VoiceProfileEnrollmentResult.FromIdentificationProfileList(result.json);\r\n        }\r\n        return VoiceProfileEnrollmentResult.FromVerificationProfileList(result.json);\r\n    }\r\n\r\n    /**\r\n     * Get valid authorization phrases for voice profile enrollment\r\n     * @member VoiceProfileClient.prototype.getAuthorizationPhrasesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Profile Type to get activation phrases for\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     */\r\n    public async getActivationPhrasesAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfilePhraseResult> {\r\n        const result: IRestResponse = await this.privAdapter.getPhrases(profileType, lang);\r\n        return new VoiceProfilePhraseResult(\r\n            result.ok ? ResultReason.EnrollingVoiceProfile : ResultReason.Canceled,\r\n            result.statusText,\r\n            result.json\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\r\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async enrollProfileAsync(profile: VoiceProfile, audioConfig: AudioConfig): Promise<VoiceProfileEnrollmentResult> {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\r\n\r\n        const result: IRestResponse = await this.privAdapter.createEnrollment(profile, configImpl);\r\n        return new VoiceProfileEnrollmentResult(\r\n            result.ok ? ResultReason.EnrolledVoiceProfile : ResultReason.Canceled,\r\n            result.data,\r\n            result.statusText,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Delete a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be deleted\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async deleteProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        const result: IRestResponse = await this.privAdapter.deleteProfile(profile);\r\n        return this.getResult(result, ResultReason.DeletedVoiceProfile);\r\n    }\r\n\r\n    /**\r\n     * Remove all enrollments for a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.resetProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be reset\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async resetProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        const result: IRestResponse = await this.privAdapter.resetProfile(profile);\r\n        return this.getResult(result, ResultReason.ResetVoiceProfile);\r\n    }\r\n\r\n    /**\r\n     * Included for compatibility\r\n     * @member VoiceProfileClient.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    // Does class setup, swiped from Recognizer.\r\n    protected implClientSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig =\r\n            new SpeakerRecognitionConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion)),\r\n                this.privProperties);\r\n\r\n        this.privAdapter = new SpeakerIdMessageAdapter(recognizerConfig);\r\n    }\r\n\r\n    private getResult(result: IRestResponse, successReason: ResultReason, cb?: (response: VoiceProfileResult) => void): VoiceProfileResult {\r\n        const response: VoiceProfileResult =\r\n            new VoiceProfileResult(\r\n                result.ok ? successReason : ResultReason.Canceled,\r\n                result.statusText\r\n            );\r\n        return (response);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        profiles.forEach((profile: VoiceProfile) => {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n        });\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privVoiceProfiles.map((profile: VoiceProfile) => profile.profileId).join(\",\");\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerVerificationModel class for Speaker Recognition\r\n * Model contains a profile against which to verify a speaker\r\n * @class SpeakerVerificationModel\r\n */\r\nexport class SpeakerVerificationModel {\r\n    private privVoiceProfile: VoiceProfile;\r\n\r\n    private constructor(profile: VoiceProfile) {\r\n        Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\r\n        if (profile.profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            throw new Error(\"Verification model cannot be created from Identification profile\");\r\n        }\r\n        this.privVoiceProfile = profile;\r\n    }\r\n\r\n    public static fromProfile(profile: VoiceProfile): SpeakerVerificationModel {\r\n        return new SpeakerVerificationModel(profile);\r\n    }\r\n\r\n    public get voiceProfile(): VoiceProfile {\r\n        return this.privVoiceProfile;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRestResponse,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    Context,\r\n    OS,\r\n    SpeakerIdMessageAdapter,\r\n    SpeakerRecognitionConfig,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeakerIdentificationModel,\r\n    SpeakerRecognitionResult,\r\n    SpeakerRecognitionResultType,\r\n    SpeakerVerificationModel,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines SpeakerRecognizer class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class SpeakerRecognizer\r\n */\r\nexport class SpeakerRecognizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privAdapter: SpeakerIdMessageAdapter;\r\n    private privAudioConfigImpl: AudioConfigImpl;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeakerRecognizer.\r\n     * @member SpeakerRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * SpeakerRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this recognizer (authentication key, region, &c)\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        this.privAudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.implSRSetup();\r\n    }\r\n\r\n    /**\r\n     * Get recognition result for model using given audio\r\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {SpeakerIdentificationModel} model Model containing Voice Profiles to be identified\r\n     * @param cb - Callback invoked once result is returned.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public async recognizeOnceAsync(model: SpeakerIdentificationModel | SpeakerVerificationModel): Promise<SpeakerRecognitionResult> {\r\n\r\n        if (model instanceof SpeakerIdentificationModel) {\r\n            const responsePromise: Promise<IRestResponse> = this.privAdapter.identifySpeaker(model, this.privAudioConfigImpl);\r\n            return this.getResult(responsePromise, SpeakerRecognitionResultType.Identify, undefined);\r\n        } else if (model instanceof SpeakerVerificationModel) {\r\n            const responsePromise: Promise<IRestResponse> = this.privAdapter.verifySpeaker(model, this.privAudioConfigImpl);\r\n            return this.getResult(responsePromise, SpeakerRecognitionResultType.Verify, model.voiceProfile.profileId);\r\n        } else {\r\n            throw new Error(\"SpeakerRecognizer.recognizeOnce: Unexpected model type\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Included for compatibility\r\n     * @member SpeakerRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    // Does class setup, swiped from Recognizer.\r\n    private implSRSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig =\r\n            new SpeakerRecognitionConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion)),\r\n                this.privProperties);\r\n\r\n        this.privAdapter = new SpeakerIdMessageAdapter(recognizerConfig);\r\n    }\r\n\r\n    private async getResult(responsePromise: Promise<IRestResponse>, resultType: SpeakerRecognitionResultType, profileId?: string): Promise<SpeakerRecognitionResult> {\r\n        const response: IRestResponse = await responsePromise;\r\n        return new SpeakerRecognitionResult(\r\n            resultType,\r\n            response.data,\r\n            profileId,\r\n            response.ok ? ResultReason.RecognizedSpeaker : ResultReason.Canceled,\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AutoDetectSourceLanguagesOpenRangeOptionName } from \"../common.speech/Exports\";\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SourceLanguageConfig,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Language auto detect configuration.\r\n * @class AutoDetectSourceLanguageConfig\r\n * Added in version 1.13.0.\r\n */\r\nexport class AutoDetectSourceLanguageConfig {\r\n    private privProperties: PropertyCollection;\r\n\r\n    private constructor() {\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\r\n     * @function\r\n     * @public\r\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\r\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\r\n     */\r\n    public static fromOpenRange(): AutoDetectSourceLanguageConfig {\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, AutoDetectSourceLanguagesOpenRangeOptionName);\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\r\n     */\r\n    public static fromLanguages(languages: string[]): AutoDetectSourceLanguageConfig {\r\n        Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\r\n     * @function\r\n     * @public\r\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\r\n     */\r\n    public static fromSourceLanguageConfigs(configs: SourceLanguageConfig[]): AutoDetectSourceLanguageConfig {\r\n        if (configs.length < 1) {\r\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\r\n        }\r\n        const autoConfig = new AutoDetectSourceLanguageConfig();\r\n        const langs: string[] = [];\r\n        configs.forEach((config: SourceLanguageConfig) => {\r\n            langs.push(config.language);\r\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\r\n                const customProperty = config.language + PropertyId.SpeechServiceConnection_EndpointId.toString();\r\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\r\n            }\r\n        });\r\n        autoConfig.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\r\n\r\n        return autoConfig;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets an auto detected language config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class AutoDetectSourceLanguageResult\r\n */\r\nexport class AutoDetectSourceLanguageResult {\r\n\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n\r\n    private constructor(language: string, languageDetectionConfidence: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult} result - The recognition result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult): AutoDetectSourceLanguageResult {\r\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Source Language configuration.\r\n * @class SourceLanguageConfig\r\n */\r\nexport class SourceLanguageConfig {\r\n    private privLanguage: string;\r\n    private privEndpointId: string;\r\n\r\n    private constructor(language: string, endpointId?: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        this.privLanguage = language;\r\n        this.privEndpointId = endpointId;\r\n    }\r\n\r\n    /**\r\n     * @member SourceLanguageConfig.fromLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} language language (eg. \"en-US\") value of config.\r\n     * @param {string?} endpointId endpointId of model bound to given language of config.\r\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\r\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\r\n     * Added in version 1.13.0.\r\n     */\r\n    public static fromLanguage(language: string, endpointId?: string): SourceLanguageConfig {\r\n        return new SourceLanguageConfig(language, endpointId);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privEndpointId;\r\n    }\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    RestConfigBase\r\n} from \"../../common.browser/RestConfigBase\";\r\n\r\nexport class ConversationConnectionConfig extends RestConfigBase {\r\n\r\n    private static readonly privHost: string = \"dev.microsofttranslator.com\";\r\n    private static readonly privRestPath: string = \"/capito/room\";\r\n    private static readonly privApiVersion: string = \"2.0\";\r\n    private static readonly privDefaultLanguageCode: string = \"en-US\";\r\n    private static readonly privClientAppId: string = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\r\n    private static readonly privWebSocketPath: string = \"/capito/translate\";\r\n    private static readonly privSpeechHost: string = \"{region}.s2s.speech.microsoft.com\";\r\n    private static readonly privSpeechPath: string = \"/speech/translation/cognitiveservices/v1\";\r\n    private static readonly privTranscriptionEventKeys: string[] = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\r\n\r\n    public static get host(): string {\r\n        return ConversationConnectionConfig.privHost;\r\n    }\r\n\r\n    public static get apiVersion(): string {\r\n        return ConversationConnectionConfig.privApiVersion;\r\n    }\r\n\r\n    public static get clientAppId(): string {\r\n        return ConversationConnectionConfig.privClientAppId;\r\n    }\r\n\r\n    public static get defaultLanguageCode(): string {\r\n        return ConversationConnectionConfig.privDefaultLanguageCode;\r\n    }\r\n\r\n    public static get restPath(): string {\r\n        return ConversationConnectionConfig.privRestPath;\r\n    }\r\n\r\n    public static get webSocketPath(): string {\r\n        return ConversationConnectionConfig.privWebSocketPath;\r\n    }\r\n\r\n    public static get speechHost(): string {\r\n        return ConversationConnectionConfig.privSpeechHost;\r\n    }\r\n\r\n    public static get speechPath(): string {\r\n        return ConversationConnectionConfig.privSpeechPath;\r\n    }\r\n\r\n    public static get transcriptionEventKeys(): string[] {\r\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    SessionEventArgs,\r\n    VoiceSignature,\r\n    } from \"../../sdk/Exports\";\r\n// import { ConversationClient } from \"./ConversationConnection\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs } from \"./ConversationTranslatorEventArgs\";\r\n\r\n/**\r\n * Internal conversation data\r\n */\r\nexport interface IInternalConversation {\r\n    // the token to use for connecting to the Speech Service\r\n    cognitiveSpeechAuthToken: string;\r\n    // the region to use for connecting to the Speech Service\r\n    cognitiveSpeechRegion: string;\r\n    // the unique id of the user who started or joined the Conversation\r\n    participantId: string;\r\n    // a descriptive name for the Conversation\r\n    name: string;\r\n    // a descriptive name for the Conversation\r\n    description: string;\r\n    // the speech model ID for custom speech\r\n    speechModel: string;\r\n    // represents the level of speech supported in the Conversation (0: everyone can speak, 2: only host can speak, 3: no-one can speak)\r\n    modalities: number;\r\n    // ?\r\n    isApproved: boolean;\r\n    // the mute flag has been set at conversation level and only the host can speak\r\n    isMuted: boolean;\r\n    // the 5 character conversation Id\r\n    roomId: string;\r\n    // the hex color string to represent a user. If there are many users this hex color may be reused (?).\r\n    avatar: string;\r\n    // the token to use when calling the websocket\r\n    token: string;\r\n    // used for tracking the session and help with troubleshooting problems in the logs\r\n    correlationId: string;\r\n    // extracted from the headers\r\n    requestId: string;\r\n}\r\n\r\n/**\r\n * The user who is participating in the conversation.\r\n */\r\nexport interface IInternalParticipant {\r\n    avatar?: string;\r\n    displayName?: string;\r\n    id?: string;\r\n    isHost?: boolean;\r\n    isMuted?: boolean;\r\n    isUsingTts?: boolean;\r\n    preferredLanguage?: string;\r\n    voice?: string;\r\n}\r\n\r\n/** Users participating in the conversation */\r\nexport class InternalParticipants {\r\n\r\n    constructor(public participants: IInternalParticipant[] = [], public meId?: string) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Add or update a participant\r\n     * @param value\r\n     */\r\n    public addOrUpdateParticipant(value: IInternalParticipant): IInternalParticipant {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n\r\n        const exists: number = this.getParticipantIndex(value.id);\r\n        if (exists > -1) {\r\n            this.participants.splice(exists, 1, value);\r\n        } else {\r\n            this.participants.push(value);\r\n        }\r\n\r\n        // ensure it was added ok\r\n        return this.getParticipant(value.id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant's position in the participants list.\r\n     * @param id\r\n     */\r\n    public getParticipantIndex(id: string): number {\r\n        return this.participants.findIndex((p: IInternalParticipant) => p.id === id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant by id.\r\n     * @param id\r\n     */\r\n    public getParticipant(id: string): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant) => p.id === id);\r\n    }\r\n\r\n    /***\r\n     * Remove a participant from the participants list.\r\n     */\r\n    public deleteParticipant(id: string): void {\r\n        this.participants = this.participants.filter((p: IInternalParticipant) => p.id !== id);\r\n    }\r\n\r\n    /***\r\n     * Helper to return the conversation host.\r\n     */\r\n    public get host(): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant) => p.isHost === true );\r\n    }\r\n\r\n    /**\r\n     * Helper to return the current user.\r\n     */\r\n    public get me(): IInternalParticipant {\r\n        return this.getParticipant(this.meId);\r\n    }\r\n}\r\n\r\n/**\r\n * Recognizer for handling Conversation Translator websocket messages\r\n */\r\nexport interface ConversationRecognizer {\r\n    isDisposed(): boolean;\r\n    sendRequest: (command: string, cb?: () => void, err?: (e: string) => void) => void;\r\n    cancelSpeech?: () => Promise<void>;\r\n    close?: () => Promise<void>;\r\n    conversationExpiration?: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    connected?: (e: ConnectionEventArgs) => void;\r\n    disconnected?: (e: ConnectionEventArgs) => void;\r\n    canceled?: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    connectionOpened?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    connectionClosed?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    participantsListReceived?: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    translationReceived?: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    lockRoomCommandReceived?: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    muteAllCommandReceived?: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    participantJoinCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantLeaveCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantUpdateCommandReceived?: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    connect?: (token: string, cb?: () => void, err?: (e: string) => void) => void;\r\n}\r\n\r\n/**\r\n * Error message returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseErrorMessage {\r\n    code: string;\r\n    message: string;\r\n}\r\n\r\n/**\r\n * Error returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseError {\r\n    error: IConversationResponseErrorMessage;\r\n}\r\n\r\n/**\r\n * Base message command\r\n */\r\nexport interface IClientMessage {\r\n    type: any;\r\n}\r\n\r\n/**\r\n * Command message\r\n */\r\nexport interface ICommandMessage extends IClientMessage {\r\n    command?: string;\r\n}\r\n\r\n/**\r\n * Text message command\r\n */\r\nexport interface IInstantMessageCommand extends ICommandMessage {\r\n    roomId: string;\r\n    nickname?: string;\r\n    participantId: string;\r\n    text: string;\r\n}\r\n\r\n/**\r\n * Lock command\r\n */\r\nexport interface ILockConversationCommand extends ICommandMessage {\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId: string; // host - incoming ws\r\n    roomid: string;\r\n    value: boolean;\r\n}\r\n\r\n/**\r\n * Mute all command\r\n */\r\nexport interface IMuteAllCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;  // incoming ws\r\n    participantId: string; // host\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Mute participant command\r\n */\r\nexport interface IMuteCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;\r\n    participantId: string; // participant\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Remove participant command\r\n */\r\nexport interface IEjectParticipantCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string; // participant\r\n}\r\n\r\n/**\r\n * Change nickname command\r\n */\r\nexport interface IChangeNicknameCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string;\r\n    nickname: string;\r\n    value: string;\r\n}\r\n\r\n/**\r\n * List of command message types\r\n */\r\nexport const ConversationTranslatorMessageTypes = {\r\n    command: \"command\",\r\n    final: \"final\",\r\n    info: \"info\",\r\n    instantMessage: \"instant_message\",\r\n    keepAlive: \"keep_alive\",\r\n    partial: \"partial\",\r\n    participantCommand: \"participant_command\",\r\n    translatedMessage: \"translated_message\"\r\n};\r\n\r\n/**\r\n * List of command types\r\n */\r\nexport const ConversationTranslatorCommandTypes = {\r\n    changeNickname: \"ChangeNickname\",\r\n    disconnectSession: \"DisconnectSession\",\r\n    ejectParticipant: \"EjectParticipant\",\r\n    instant_message: \"instant_message\",\r\n    joinSession: \"JoinSession\",\r\n    leaveSession: \"LeaveSession\",\r\n    participantList: \"ParticipantList\",\r\n    roomExpirationWarning: \"RoomExpirationWarning\",\r\n    setLockState: \"SetLockState\",\r\n    setMute: \"SetMute\",\r\n    setMuteAll: \"SetMuteAll\",\r\n    setProfanityFiltering: \"SetProfanityFiltering\",\r\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\r\n    setUseTTS: \"SetUseTTS\"\r\n};\r\n\r\n/**\r\n * HTTP response helper\r\n */\r\nexport interface IResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: <T>() => T;\r\n    headers: string;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nexport enum ParticipantChangedReason {\r\n    /** Participant has joined the conversation. */\r\n    JoinedConversation,\r\n\r\n    /** Participant has left the conversation. This could be voluntary, or involuntary\r\n     *  (e.g. they are experiencing networking issues).\r\n     */\r\n    LeftConversation,\r\n\r\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\r\n    Updated\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRequestOptions,\r\n    IRestParams,\r\n    IRestResponse,\r\n    RestMessageAdapter,\r\n    RestRequestType\r\n} from \"../../common.browser/Exports\";\r\nimport { IErrorMessages, IStringDictionary } from \"../../common/Exports\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { PropertyCollection, PropertyId } from \"../../sdk/Exports\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\r\nimport { IConversationResponseError, IInternalConversation, IResponse } from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class ConversationManager {\r\n\r\n    private privRequestParams: IRestParams;\r\n    private privErrors: IErrorMessages;\r\n    private privHost: string;\r\n    private privApiVersion: string;\r\n    private privRestPath: string;\r\n    private privRestAdapter: RestMessageAdapter;\r\n\r\n    public constructor() {\r\n        //\r\n        this.privRequestParams = ConversationConnectionConfig.configParams;\r\n        this.privErrors = ConversationConnectionConfig.restErrors;\r\n        this.privHost = ConversationConnectionConfig.host;\r\n        this.privApiVersion = ConversationConnectionConfig.apiVersion;\r\n        this.privRestPath = ConversationConnectionConfig.restPath;\r\n        this.privRestAdapter = new RestMessageAdapter({});\r\n    }\r\n\r\n    /**\r\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\r\n     * @param args\r\n     * @param conversationCode\r\n     * @param callback\r\n     * @param errorCallback\r\n     */\r\n    public createOrJoin(args: PropertyCollection, conversationCode: string, cb?: any, err?: any): void {\r\n\r\n        try {\r\n\r\n            Contracts.throwIfNullOrUndefined(args, \"args\");\r\n\r\n            const languageCode: string = args.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig.defaultLanguageCode);\r\n            const nickname: string = args.getProperty(PropertyId.ConversationTranslator_Name, \"conversation_host\");\r\n            const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n            const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n            const subscriptionKey: string = args.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n            const subscriptionRegion: string = args.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n            const authToken: string = args.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n\r\n            Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\r\n            Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n            Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\r\n\r\n            const queryParams: IStringDictionary<string> = {};\r\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n            queryParams[this.privRequestParams.languageCode] = languageCode;\r\n            queryParams[this.privRequestParams.nickname] = nickname;\r\n\r\n            const headers: IStringDictionary<string> = {};\r\n            if (correlationId) {\r\n                headers[this.privRequestParams.correlationId] = correlationId;\r\n            }\r\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig.clientAppId;\r\n\r\n            if (conversationCode !== undefined) {\r\n                queryParams[this.privRequestParams.roomId] = conversationCode;\r\n            } else {\r\n                Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\r\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\r\n                if (subscriptionKey) {\r\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\r\n                } else if (authToken) {\r\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\r\n                } else {\r\n                    Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\r\n                }\r\n            }\r\n\r\n            const config: IRequestOptions = {};\r\n            config.headers = headers;\r\n            this.privRestAdapter.options = config;\r\n\r\n            const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n            // TODO: support a proxy and certificate validation\r\n            this.privRestAdapter.request(RestRequestType.Post, endpoint, queryParams, null).then((response: IRestResponse) => {\r\n\r\n                const requestId: string = RestMessageAdapter.extractHeaderValue(this.privRequestParams.requestId, response.headers);\r\n\r\n                if (!response.ok) {\r\n                    if (!!err) {\r\n                        // get the error\r\n                        let errorMessage: string = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\r\n                        let errMessageRaw: IConversationResponseError;\r\n                        try {\r\n                            errMessageRaw = JSON.parse(response.data) as IConversationResponseError;\r\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\r\n                        } catch (e) {\r\n                            errorMessage += ` [${response.data}]`;\r\n                        }\r\n                        if (requestId) {\r\n                            errorMessage += ` ${requestId}`;\r\n                        }\r\n\r\n                        err(errorMessage);\r\n                    }\r\n                    return;\r\n                }\r\n                const conversation: IInternalConversation = JSON.parse(response.data) as IInternalConversation;\r\n                if (conversation) {\r\n                    conversation.requestId = requestId;\r\n                }\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(conversation);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e);\r\n                        }\r\n                    }\r\n                    cb = undefined;\r\n                }\r\n            /* tslint:disable:no-empty */\r\n            }).catch( (e: any) => {});\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\r\n     * @param args\r\n     * @param sessionToken\r\n     * @param callback\r\n     */\r\n    public leave(args: PropertyCollection, sessionToken: string): Promise<void> {\r\n        return new Promise<void>((resolve: () => void, reject: (reason: string) => void): void => {\r\n            try {\r\n\r\n                Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n                Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\r\n\r\n                const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n                const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n\r\n                const queryParams: IStringDictionary<string> = {};\r\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\r\n\r\n                const headers: IStringDictionary<string> = {};\r\n                if (correlationId) {\r\n                    headers[this.privRequestParams.correlationId] = correlationId;\r\n                }\r\n\r\n                const config: IRequestOptions = {};\r\n                config.headers = headers;\r\n                this.privRestAdapter.options = config;\r\n\r\n                const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n                // TODO: support a proxy and certificate validation\r\n                this.privRestAdapter.request(RestRequestType.Delete, endpoint, queryParams, null).then((response: IRestResponse) => {\r\n\r\n                    if (!response.ok) {\r\n                        // ignore errors on delete\r\n                    }\r\n\r\n                    resolve();\r\n                /* tslint:disable:no-empty */\r\n                }).catch( (e: any) => {});\r\n\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    reject(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    reject(error);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionMessage, IStringDictionary, MessageType } from \"../../common/Exports\";\r\n\r\nexport class ConversationConnectionMessage extends ConnectionMessage {\r\n    private privConversationMessageType: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n            super(messageType, body, headers, id);\r\n            const json = JSON.parse(this.textBody);\r\n            if (json.type !== undefined) {\r\n                this.privConversationMessageType = json.type;\r\n            }\r\n    }\r\n\r\n    public get conversationMessageType(): string {\r\n        return this.privConversationMessageType;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../../common/Exports\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\r\n\r\n/**\r\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\r\n */\r\nexport class ConversationWebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    /**\r\n     * Format incoming messages: text (speech partial/final, IM) or binary (tts)\r\n     */\r\n    public toConnectionMessage = (message: RawWebsocketMessage): Promise<ConversationConnectionMessage> => {\r\n        const deferral = new Deferred<ConversationConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const incomingMessage: ConversationConnectionMessage = new ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\r\n                deferral.resolve(incomingMessage);\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                deferral.resolve(new ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    /**\r\n     * Format outgoing messages: text (commands or IM)\r\n     */\r\n    public fromConnectionMessage = (message: ConnectionMessage): Promise<RawWebsocketMessage> => {\r\n\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${message.textBody ? message.textBody : \"\"}`;\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ProxyInfo, WebsocketConnection } from \"../../common.browser/Exports\";\r\nimport { createGuid, IConnection, IStringDictionary } from \"../../common/Exports\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { PropertyId } from \"../../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"../ConnectionFactoryBase\";\r\nimport { AuthInfo, RecognizerConfig } from \"../Exports\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\r\nimport { ConversationWebsocketMessageFormatter } from \"./ConversationWebsocketMessageFormatter\";\r\n\r\n/**\r\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\r\n * The conversation must already have been started or joined.\r\n */\r\nexport class ConversationConnectionFactory extends ConnectionFactoryBase  {\r\n\r\n    public create(config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n\r\n        const endpointHost: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Host, ConversationConnectionConfig.host);\r\n        const correlationId: string = config.parameters.getProperty(PropertyId.ConversationTranslator_CorrelationId, createGuid());\r\n\r\n        const endpoint: string = `wss://${endpointHost}${ConversationConnectionConfig.webSocketPath}`;\r\n        const token: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Token, undefined);\r\n        Contracts.throwIfNullOrUndefined(token, \"token\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig.apiVersion;\r\n        queryParams[ConversationConnectionConfig.configParams.token] = token;\r\n        queryParams[ConversationConnectionConfig.configParams.correlationId] = correlationId;\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { CancellationEventArgsBase } from \"../CancellationEventArgsBase\";\r\n\r\nexport class ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports\";\r\n\r\nexport class ConversationExpirationEventArgs extends SessionEventArgs {\r\n    private privExpirationTime: number;\r\n\r\n    constructor(expirationTime: number, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privExpirationTime = expirationTime;\r\n    }\r\n\r\n    /** How much longer until the conversation expires (in minutes). */\r\n    get expirationTime(): number {\r\n        return this.privExpirationTime;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { PropertyCollection } from \"../PropertyCollection\";\r\nimport { ResultReason } from \"../ResultReason\";\r\nimport { TranslationRecognitionResult } from \"../TranslationRecognitionResult\";\r\nimport { Translations } from \"../Translations\";\r\n\r\nexport class ConversationTranslationResult extends TranslationRecognitionResult {\r\n    private privId: string;\r\n    private privOrigLang: string;\r\n\r\n    public constructor(participantId: string,\r\n                       translations: Translations,\r\n                       originalLanguage?: string,\r\n                       resultId?: string,\r\n                       reason?: ResultReason,\r\n                       text?: string,\r\n                       duration?: number,\r\n                       offset?: number,\r\n                       errorDetails?: string,\r\n                       json?: string,\r\n                       properties?: PropertyCollection) {\r\n        super(translations, resultId, reason, text, duration, offset, errorDetails, json, properties);\r\n        this.privId = participantId;\r\n        this.privOrigLang = originalLanguage;\r\n    }\r\n\r\n    /**\r\n     * The unique identifier for the participant this result is for.\r\n     */\r\n    public get participantId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * The original language this result was in.\r\n     */\r\n    public get originalLang(): string {\r\n        return this.privOrigLang;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IDetachable,\r\n} from \"../../common/Exports\";\r\n\r\n/**\r\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\r\n * TODO: define what telemetry is required.\r\n */\r\nexport class ConversationRequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privRequestCompletionDeferral: Deferred<void>;\r\n    private privSessionId: string;\r\n\r\n    constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privRequestCompletionDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get completionPromise(): Promise<void> {\r\n        return this.privRequestCompletionDeferral.promise;\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privSessionId = connectionId;\r\n    }\r\n\r\n    public onAuthCompleted = (isError: boolean, error?: string): void => {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted = (statusCode: number, reason?: string): void => {\r\n        if (statusCode === 200) {\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceTurnEndResponse = (continuousRecognition: boolean): void => {\r\n        if (!continuousRecognition) {\r\n            this.onComplete();\r\n        } else {\r\n            this.privRequestId = createNoDashGuid();\r\n        }\r\n    }\r\n\r\n    public async dispose(error?: string): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete = (): void => {\r\n        //\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\nimport { SessionEventArgs } from \"../../sdk/Exports\";\r\nimport { IInternalParticipant } from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class MuteAllEventArgs extends SessionEventArgs {\r\n    private privIsMuted: boolean;\r\n\r\n    public constructor(isMuted: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsMuted = isMuted;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class LockRoomEventArgs extends SessionEventArgs {\r\n    private privIsLocked: boolean;\r\n\r\n    public constructor(isLocked: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsLocked = isLocked;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsLocked;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantEventArgs extends SessionEventArgs {\r\n    private privParticipant: IInternalParticipant;\r\n\r\n    public constructor(participant: IInternalParticipant, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privParticipant = participant;\r\n    }\r\n\r\n    public get participant(): IInternalParticipant {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantAttributeEventArgs extends SessionEventArgs {\r\n    private privValue: boolean | number | string | string[];\r\n    private privKey: string;\r\n    private privParticipantId: string;\r\n\r\n    public constructor(participantId: string, key: string, value: boolean | number | string |  string[], sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privKey = key;\r\n        this.privValue = value;\r\n        this.privParticipantId = participantId;\r\n    }\r\n\r\n    public get value(): boolean | number | string |  string[] {\r\n        return this.privValue;\r\n    }\r\n\r\n    public get key(): string {\r\n        return this.privKey;\r\n    }\r\n    public get id(): string {\r\n        return this.privParticipantId;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantsListEventArgs extends SessionEventArgs {\r\n\r\n    private privRoomId: string;\r\n    private privSessionToken: string;\r\n    private privTranslateTo: string[];\r\n    private privProfanityFilter: string;\r\n    private privRoomProfanityFilter: string;\r\n    private privIsRoomLocked: boolean;\r\n    private privIsMuteAll: boolean;\r\n    private privParticipants: IInternalParticipant[];\r\n\r\n    public constructor(conversationId: string, token: string, translateTo: string[], profanityFilter: string,\r\n                       roomProfanityFilter: string, isRoomLocked: boolean, isMuteAll: boolean, participants: IInternalParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privRoomId = conversationId;\r\n        this.privSessionToken = token;\r\n        this.privTranslateTo = translateTo;\r\n        this.privProfanityFilter = profanityFilter;\r\n        this.privRoomProfanityFilter = roomProfanityFilter;\r\n        this.privIsRoomLocked = isRoomLocked;\r\n        this.privIsRoomLocked = isMuteAll;\r\n        this.privParticipants = participants;\r\n    }\r\n    public get sessionToken(): string {\r\n        return this.privSessionToken;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privRoomId;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privTranslateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privProfanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privRoomProfanityFilter;\r\n    }\r\n\r\n    public get isRoomLocked(): boolean {\r\n        return this.privIsRoomLocked;\r\n    }\r\n\r\n    public get isMuteAll(): boolean {\r\n        return this.privIsMuteAll;\r\n    }\r\n\r\n    public get participants(): IInternalParticipant[] {\r\n        return this.privParticipants;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ConversationReceivedTranslationEventArgs {\r\n    private privPayload: any;\r\n    private privCommand: string;\r\n    private privSessionId: string;\r\n\r\n    public constructor(command: string, payload: any,  sessionId?: string) {\r\n        this.privPayload = payload;\r\n        this.privCommand = command;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get payload(): any {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privCommand;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming websocket commands\r\n */\r\nexport interface ICommandResponsePayload {\r\n    type: string;\r\n    command?: string;\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId?: string;\r\n    roomid?: string;\r\n    value: boolean | number | string;\r\n    token?: string;\r\n}\r\n\r\nexport class CommandResponsePayload implements ICommandResponsePayload {\r\n    private privCommandResponse: ICommandResponsePayload;\r\n\r\n    public constructor(json: string) {\r\n        this.privCommandResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): CommandResponsePayload {\r\n        return new CommandResponsePayload(json);\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privCommandResponse.type;\r\n    }\r\n    public get command(): string {\r\n        return this.privCommandResponse.command;\r\n    }\r\n    public get id(): string {\r\n        return this.privCommandResponse.id;\r\n    }\r\n    public get nickname(): string {\r\n        return this.privCommandResponse.nickname;\r\n    }\r\n    public get participantId(): string {\r\n        return this.privCommandResponse.participantId;\r\n    }\r\n    public get roomid(): string {\r\n        return this.privCommandResponse.roomid;\r\n    }\r\n    public get value(): boolean | number | string {\r\n        return this.privCommandResponse.value;\r\n    }\r\n    public get token(): string {\r\n        return this.privCommandResponse.token;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming list of participants\r\n */\r\nexport interface IParticipantsListPayloadResponse {\r\n    roomid: string;\r\n    id: string;\r\n    command: string;\r\n    participants: IParticipantPayloadResponse[];\r\n    token: string;\r\n    translateTo: string[];\r\n    profanityFilter: string;\r\n    roomProfanityFilter: string;\r\n    roomLocked: boolean;\r\n    muteAll: boolean;\r\n    type: string;\r\n}\r\n\r\n/**\r\n * Defines the payload for incoming participant\r\n */\r\nexport interface IParticipantPayloadResponse {\r\n    nickname: string;\r\n    locale: string;\r\n    usetts: boolean;\r\n    ismuted: boolean;\r\n    ishost: boolean;\r\n    participantId: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\r\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantsPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\r\n        return new ParticipantsListPayloadResponse(json);\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privParticipantsPayloadResponse.roomid;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privParticipantsPayloadResponse.id;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privParticipantsPayloadResponse.command;\r\n    }\r\n\r\n    public get participants(): IParticipantPayloadResponse[] {\r\n        return this.privParticipantsPayloadResponse.participants;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privParticipantsPayloadResponse.token;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privParticipantsPayloadResponse.translateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.profanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\r\n    }\r\n\r\n    public get roomLocked(): boolean {\r\n        return this.privParticipantsPayloadResponse.roomLocked;\r\n    }\r\n\r\n    public get muteAll(): boolean {\r\n        return this.privParticipantsPayloadResponse.muteAll;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privParticipantsPayloadResponse.type;\r\n    }\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\r\n\r\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantPayloadResponse {\r\n        return new ParticipantPayloadResponse(json);\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privParticipantPayloadResponse.nickname;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privParticipantPayloadResponse.locale;\r\n    }\r\n\r\n    public get usetts(): boolean {\r\n        return this.privParticipantPayloadResponse.usetts;\r\n    }\r\n\r\n    public get ismuted(): boolean {\r\n        return this.privParticipantPayloadResponse.ismuted;\r\n    }\r\n\r\n    public get ishost(): boolean {\r\n        return this.privParticipantPayloadResponse.ishost;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privParticipantPayloadResponse.participantId;\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privParticipantPayloadResponse.avatar;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming translation messages\r\n */\r\nexport interface ITranslationResponsePayload {\r\n    lang: string;\r\n    translation: string;\r\n}\r\n\r\nexport interface ITranslationCommandMessage {\r\n    translations: ITranslationResponsePayload[];\r\n    id: string;\r\n    language: string;\r\n    nickname: string;\r\n    participantId: string;\r\n    roomid: string;\r\n    timestamp: string;\r\n    type: string;\r\n}\r\n\r\nexport interface ISpeechResponsePayload extends ITranslationCommandMessage {\r\n    recognition: string;\r\n    isFinal: boolean;\r\n}\r\n\r\nexport interface ITextResponsePayload extends ITranslationCommandMessage {\r\n    originalText: string;\r\n}\r\n\r\nexport class SpeechResponsePayload implements ISpeechResponsePayload {\r\n\r\n    private privSpeechResponse: ISpeechResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechResponsePayload {\r\n        return new SpeechResponsePayload(json);\r\n    }\r\n\r\n    public get recognition(): string {\r\n        return this.privSpeechResponse.recognition;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privSpeechResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privSpeechResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privSpeechResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privSpeechResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privSpeechResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privSpeechResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privSpeechResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privSpeechResponse.type;\r\n    }\r\n\r\n    public get isFinal(): boolean {\r\n        return this.privSpeechResponse.type === \"final\";\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class TextResponsePayload implements ITextResponsePayload {\r\n\r\n    private privTextResponse: ITextResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privTextResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): TextResponsePayload {\r\n        return new TextResponsePayload(json);\r\n    }\r\n\r\n    public get originalText(): string {\r\n        return this.privTextResponse.originalText;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privTextResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privTextResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privTextResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privTextResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privTextResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privTextResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privTextResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privTextResponse.type;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationResult,\r\n    Translations\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    CognitiveTokenAuthentication,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase\r\n} from \"../Exports\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\r\nimport { ConversationRequestSession } from \"./ConversationRequestSession\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs\";\r\nimport {\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalParticipant\r\n} from \"./ConversationTranslatorInterfaces\";\r\nimport { ConversationTranslatorRecognizer } from \"./ConversationTranslatorRecognizer\";\r\nimport {\r\n    CommandResponsePayload,\r\n    IParticipantPayloadResponse,\r\n    IParticipantsListPayloadResponse,\r\n    ITranslationResponsePayload,\r\n    ParticipantPayloadResponse,\r\n    ParticipantsListPayloadResponse,\r\n    SpeechResponsePayload,\r\n    TextResponsePayload\r\n} from \"./ServiceMessages/Exports\";\r\n\r\n/***\r\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\r\n */\r\nexport class ConversationServiceAdapter extends ServiceRecognizerBase {\r\n    private privConversationServiceConnector: ConversationTranslatorRecognizer;\r\n    private privConversationConnectionFactory: IConnectionFactory;\r\n    private privConversationAuthFetchEventId: string;\r\n    private privConversationAuthentication: IAuthentication;\r\n    private privConversationRequestSession: ConversationRequestSession;\r\n    private privConnectionConfigPromise: Promise<IConnection>;\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private privLastPartialUtteranceId: string = \"\";\r\n    private privConversationIsDisposed: boolean;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        conversationServiceConnector: ConversationTranslatorRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\r\n\r\n        this.privConversationServiceConnector = conversationServiceConnector;\r\n        this.privConversationAuthentication = authentication;\r\n        this.receiveMessageOverride = this.receiveConversationMessageOverride;\r\n        this.recognizeOverride = this.noOp;\r\n        this.postConnectImplOverride = this.conversationConnectImpl;\r\n        this.configConnectionOverride = this.configConnection;\r\n        this.disconnectOverride = this.privDisconnect;\r\n        this.privConversationRequestSession = new ConversationRequestSession(createNoDashGuid());\r\n        this.privConversationConnectionFactory = connectionFactory;\r\n        this.privConversationIsDisposed = false;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return super.isDisposed() || this.privConversationIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privConversationIsDisposed = true;\r\n        if (this.privConnectionConfigPromise) {\r\n            const connection: IConnection = await this.privConnectionConfigPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n        await super.dispose(reason);\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new ConversationConnectionMessage(\r\n            MessageType.Text,\r\n            message));\r\n    }\r\n\r\n    public async sendMessageAsync(message: string): Promise<void> {\r\n        const sink: Deferred<void> = new Deferred<void>();\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n\r\n        await connection.send(new ConversationConnectionMessage(MessageType.Text, message));\r\n    }\r\n\r\n    protected privDisconnect(): Promise<void> {\r\n        if (this.terminateMessageLoop) {\r\n            return;\r\n        }\r\n        this.cancelRecognition(this.privConversationRequestSession.sessionId,\r\n            this.privConversationRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(\r\n        connectionMessage: ConnectionMessage,\r\n        successCallback?: (e: any) => void,\r\n        errorCallBack?: (e: string) => void): Promise<boolean> {\r\n        return true;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n            cancellationReason,\r\n            error,\r\n            errorCode,\r\n            undefined,\r\n            sessionId);\r\n\r\n        try {\r\n            if (!!this.privConversationServiceConnector.canceled) {\r\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\r\n            }\r\n        } catch {\r\n            // continue on error\r\n        }\r\n    }\r\n\r\n    protected noOp = (): any => {\r\n        // operation not supported\r\n    }\r\n\r\n    /**\r\n     * Establishes a websocket connection to the end point.\r\n     */\r\n    protected async conversationConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    /**\r\n     * Process incoming websocket messages\r\n     */\r\n    private async receiveConversationMessageOverride(): Promise<void> {\r\n        if (this.isDisposed() || this.terminateMessageLoop) {\r\n            return Promise.resolve();\r\n        }\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConversationConnectionMessage = await connection.read() as ConversationConnectionMessage;\r\n            if (this.isDisposed() || this.terminateMessageLoop) {\r\n                // We're done.\r\n                communicationCustodian.resolve();\r\n                return Promise.resolve();\r\n            }\r\n\r\n            if (!message) {\r\n                return this.receiveConversationMessageOverride();\r\n            }\r\n\r\n            const sessionId: string = this.privConversationRequestSession.sessionId;\r\n            let sendFinal: boolean = false;\r\n\r\n            try {\r\n                switch (message.conversationMessageType.toLowerCase()) {\r\n                    case \"info\":\r\n                    case \"participant_command\":\r\n                    case \"command\":\r\n                        const commandPayload: CommandResponsePayload = CommandResponsePayload.fromJSON(message.textBody);\r\n                        switch (commandPayload.command.toLowerCase()) {\r\n\r\n                            /**\r\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\r\n                             * The consuming client must wait for this message to arrive\r\n                             * before starting to send their own data.\r\n                             */\r\n                            case \"participantlist\":\r\n\r\n                                const participantsPayload: IParticipantsListPayloadResponse = ParticipantsListPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const participantsResult: IInternalParticipant[] = participantsPayload.participants.map((p: IParticipantPayloadResponse) => {\r\n                                    const participant: IInternalParticipant = {\r\n                                        avatar: p.avatar,\r\n                                        displayName: p.nickname,\r\n                                        id: p.participantId,\r\n                                        isHost: p.ishost,\r\n                                        isMuted: p.ismuted,\r\n                                        isUsingTts: p.usetts,\r\n                                        preferredLanguage: p.locale\r\n                                    };\r\n                                    return participant;\r\n                                });\r\n\r\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\r\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token,\r\n                                            participantsPayload.translateTo, participantsPayload.profanityFilter,\r\n                                            participantsPayload.roomProfanityFilter, participantsPayload.roomLocked,\r\n                                            participantsPayload.muteAll, participantsResult, sessionId));\r\n                                }\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\r\n                             * This is sent at the start of the Conversation\r\n                             */\r\n                            case \"settranslatetolanguages\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setTranslateToLanguages,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\r\n                             * If sent by the participant the setting will effect only their own profanity level.\r\n                             * If sent by the host, the setting will effect all participants including the host.\r\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\r\n                             */\r\n                            case \"setprofanityfiltering\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setProfanityFiltering,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMute' is sent if the participant has been muted by the host.\r\n                             * Check the 'participantId' to determine if the current user has been muted.\r\n                             */\r\n                            case \"setmute\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setMute,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\r\n                             */\r\n                            case \"setmuteall\":\r\n\r\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\r\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector,\r\n                                        new MuteAllEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\r\n                             */\r\n                            case \"roomexpirationwarning\":\r\n\r\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\r\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector,\r\n                                        new ConversationExpirationEventArgs(commandPayload.value as number, this.privConversationRequestSession.sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\r\n                             */\r\n                            case \"setusetts\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setUseTTS,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\r\n                             */\r\n                            case \"setlockstate\":\r\n\r\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\r\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector,\r\n                                        new LockRoomEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'ChangeNickname' is received if a user changes their display name.\r\n                             * Any cached particpiants list should be updated to reflect the display name.\r\n                             */\r\n                            case \"changenickname\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.changeNickname,\r\n                                            commandPayload.nickname, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'JoinSession' is sent when a user joins the Conversation.\r\n                             */\r\n                            case \"joinsession\":\r\n\r\n                                const joinParticipantPayload: ParticipantPayloadResponse = ParticipantPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const joiningParticipant: IInternalParticipant = {\r\n                                    avatar: joinParticipantPayload.avatar,\r\n                                    displayName: joinParticipantPayload.nickname,\r\n                                    id: joinParticipantPayload.participantId,\r\n                                    isHost: joinParticipantPayload.ishost,\r\n                                    isMuted: joinParticipantPayload.ismuted,\r\n                                    isUsingTts: joinParticipantPayload.usetts,\r\n                                    preferredLanguage: joinParticipantPayload.locale,\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(\r\n                                            joiningParticipant,\r\n                                            sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\r\n                             */\r\n                            case \"leavesession\":\r\n\r\n                                const leavingParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(leavingParticipant, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\r\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\r\n                             */\r\n                            case \"disconnectsession\":\r\n\r\n                                const disconnectParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                break;\r\n\r\n                            case \"token\":\r\n                                const token = new CognitiveTokenAuthentication(\r\n                                    (authFetchEventId: string): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    },\r\n                                    (authFetchEventId: string): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    });\r\n                                this.authentication = token;\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * Message not recognized.\r\n                             */\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n\r\n                    /**\r\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\r\n                     */\r\n                    case \"partial\":\r\n\r\n                    /**\r\n                     * 'final' (or 'phrase') represents a finalized speech message.\r\n                     */\r\n                    case \"final\":\r\n\r\n                        const speechPayload: SpeechResponsePayload = SpeechResponsePayload.fromJSON(message.textBody);\r\n\r\n                        const speechResult: ConversationTranslationResult = new ConversationTranslationResult(speechPayload.participantId,\r\n                            this.getTranslations(speechPayload.translations),\r\n                            speechPayload.language,\r\n                            undefined,\r\n                            undefined,\r\n                            speechPayload.recognition,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (speechPayload.isFinal) {\r\n                            // check the length, sometimes empty finals are returned\r\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\r\n                                sendFinal = true;\r\n                            } else if (speechPayload.id === this.privLastPartialUtteranceId) {\r\n                                // send final as normal. We had a non-empty partial for this same utterance\r\n                                // so sending the empty final is important\r\n                                sendFinal = true;\r\n                            } else {\r\n                                // suppress unneeded final\r\n                            }\r\n\r\n                            if (sendFinal) {\r\n                                if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                        new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.final, speechResult, sessionId));\r\n                                }\r\n                            }\r\n                        } else if (speechResult.text !== undefined) {\r\n                            this.privLastPartialUtteranceId = speechPayload.id;\r\n                            if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                    new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n\r\n                    /**\r\n                     * \"translated_message\" is a text message or instant message (IM).\r\n                     */\r\n                    case \"translated_message\":\r\n\r\n                        const textPayload: TextResponsePayload = TextResponsePayload.fromJSON(message.textBody);\r\n\r\n                        const textResult: ConversationTranslationResult = new ConversationTranslationResult(textPayload.participantId,\r\n                            this.getTranslations(textPayload.translations),\r\n                            textPayload.language,\r\n                            undefined,\r\n                            undefined,\r\n                            textPayload.originalText,\r\n                            undefined,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (!!this.privConversationServiceConnector.translationReceived) {\r\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        // ignore any unsupported message types\r\n                        break;\r\n                }\r\n            } catch (e) {\r\n                // continue\r\n            }\r\n            return this.receiveConversationMessageOverride();\r\n        } catch (e) {\r\n            this.terminateMessageLoop = true;\r\n        }\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve();\r\n        }\r\n        this.terminateMessageLoop = false;\r\n\r\n        const messageRetrievalPromise = this.receiveConversationMessageOverride();\r\n\r\n        try {\r\n            const r = await messageRetrievalPromise;\r\n            return r;\r\n        } catch (error) {\r\n            this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint\r\n    private configConnection(): Promise<IConnection> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n        if (this.privConnectionConfigPromise) {\r\n            return this.privConnectionConfigPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigPromise = null;\r\n                    return this.configConnection();\r\n                }\r\n                return this.privConnectionConfigPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigPromise = null;\r\n                return this.configConnection();\r\n            });\r\n        }\r\n        if (this.terminateMessageLoop) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n\r\n        this.privConnectionConfigPromise = this.connectImpl().then((connection: IConnection): any => {\r\n            return connection;\r\n        });\r\n\r\n        return this.privConnectionConfigPromise;\r\n    }\r\n\r\n    private getTranslations(serviceResultTranslations: ITranslationResponsePayload[]): Translations {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResultTranslations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResultTranslations) {\r\n                translations.set(translation.lang, translation.translation);\r\n            }\r\n        }\r\n\r\n        return translations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    BackgroundEvent,\r\n    Events,\r\n    Timeout\r\n} from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    Connection,\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    PropertyCollection,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig\r\n} from \"../../sdk/Exports\";\r\nimport { SpeechTranslationConfigImpl } from \"../../sdk/SpeechTranslationConfig\";\r\nimport { ConversationImpl } from \"../../sdk/Transcription/Conversation\";\r\nimport { Callback, IConversation } from \"../../sdk/Transcription/IConversation\";\r\nimport { ConversationConnectionFactory } from \"./ConversationConnectionFactory\";\r\nimport { ConversationServiceAdapter } from \"./ConversationServiceAdapter\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs\";\r\nimport {\r\n    ConversationRecognizer,\r\n    ConversationTranslatorMessageTypes\r\n} from \"./ConversationTranslatorInterfaces\";\r\n\r\nexport class ConversationRecognizerFactory {\r\n    public static fromConfig(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig): ConversationRecognizer {\r\n        return new ConversationTranslatorRecognizer(conversation, speechConfig, audioConfig);\r\n    }\r\n}\r\n\r\n/**\r\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\r\n * Based off the recognizers in the SDK folder.\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationTranslatorRecognizer extends Recognizer implements ConversationRecognizer {\r\n\r\n    private privIsDisposed: boolean;\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privConnection: Connection;\r\n    private privConversation: ConversationImpl;\r\n    private privTimeoutToken: any;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number;\r\n    private privClearTimeout: (id: number) => void;\r\n\r\n    public constructor(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const serviceConfigImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\r\n        const conversationImpl = conversation as ConversationImpl;\r\n        Contracts.throwIfNull(conversationImpl, \"conversationImpl\");\r\n\r\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory());\r\n\r\n        this.privConversation = conversationImpl;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = serviceConfigImpl.properties.clone();\r\n        this.privConnection = Connection.fromRecognizer(this);\r\n        this.privSetTimeout = (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") ? Timeout.setTimeout : setTimeout;\r\n        this.privClearTimeout = (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") ? Timeout.clearTimeout : clearTimeout;\r\n    }\r\n\r\n    public canceled: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    public lockRoomCommandReceived: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    public muteAllCommandReceived: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    public participantJoinCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantLeaveCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantUpdateCommandReceived: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    public connectionOpened: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public connectionClosed: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public translationReceived: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    public participantsListReceived: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    public participantsChanged: (sender: ConversationRecognizer, event: ConversationParticipantsChangedEventArgs) => void;\r\n\r\n    public set connected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.connected = cb;\r\n    }\r\n\r\n    public set disconnected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.disconnected = cb;\r\n    }\r\n\r\n    /**\r\n     * Return the speech language used by the recognizer\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Return the properties for the recognizer\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    /**\r\n     * Connect to the recognizer\r\n     * @param token\r\n     */\r\n    public connect(token: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n            this.privReco.conversationTranslatorToken = token;\r\n            this.resetConversationTimeout();\r\n            this.privReco.connectAsync(cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect from the recognizer\r\n     */\r\n    public disconnect(cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (this.privTimeoutToken !== undefined) {\r\n               this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privReco.disconnect().then(() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string) => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send the mute all participants command to the websocket\r\n     * @param conversationId\r\n     * @param participantId\r\n     * @param isMuted\r\n     */\r\n    public sendRequest(command: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            this.sendMessage(command, cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close and dispose the recognizer\r\n     */\r\n    public async close(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            this.privConnection?.closeConnection();\r\n            this.privConnection?.close();\r\n            this.privConnection = undefined;\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose the recognizer\r\n     * @param disposing\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n        if (disposing) {\r\n            if (this.privTimeoutToken !== undefined) {\r\n                this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privIsDisposed = true;\r\n            if (!!this.privConnection) {\r\n                this.privConnection.closeConnection();\r\n                this.privConnection.close();\r\n                this.privConnection = undefined;\r\n            }\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the config for the recognizer\r\n     * @param speechConfig\r\n     */\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    /**\r\n     * Create the service recognizer.\r\n     * The audio source is redundnant here but is required by the implementation.\r\n     * @param authentication\r\n     * @param connectionFactory\r\n     * @param audioConfig\r\n     * @param recognizerConfig\r\n     */\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private sendMessage(msg: string, cb?: Callback, err?: Callback): void {\r\n        const withAsync = this.privReco as ConversationServiceAdapter;\r\n        function PromiseToEmptyCallback<T>(promise: Promise<T>, cb?: Callback, err?: Callback): void {\r\n            if (!!promise) {\r\n                promise.then((result: T): void => {\r\n                    try {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(`'Unhandled error on promise callback: ${e}'`);\r\n                        }\r\n                    }\r\n                }, (reason: any) => {\r\n                    try {\r\n                        if (!!err) {\r\n                            err(reason);\r\n                        }\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                    }\r\n                });\r\n            } else {\r\n                if (!!err) {\r\n                    err(\"Null promise\");\r\n                }\r\n            }\r\n        }\r\n\r\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\r\n        this.resetConversationTimeout();\r\n    }\r\n\r\n    private resetConversationTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            this.privClearTimeout(this.privTimeoutToken);\r\n        }\r\n\r\n        this.privTimeoutToken = this.privSetTimeout((): void => {\r\n            this.sendRequest(this.privConversation.getKeepAlive());\r\n        }, 60000);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports\";\r\nimport { ParticipantChangedReason } from \"./Exports\";\r\nimport { IParticipant } from \"./IParticipant\";\r\n\r\nexport class ConversationParticipantsChangedEventArgs extends SessionEventArgs {\r\n    private privReason: ParticipantChangedReason;\r\n    private privParticipant: IParticipant[];\r\n\r\n    public constructor(reason: ParticipantChangedReason, participants: IParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privReason = reason;\r\n        this.privParticipant = participants;\r\n    }\r\n\r\n    public get reason(): ParticipantChangedReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get participants(): IParticipant[] {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { RecognitionEventArgs } from \"../Exports\";\r\nimport { ConversationTranslationResult } from \"./Exports\";\r\n\r\nexport class ConversationTranslationEventArgs extends RecognitionEventArgs {\r\n    private privResult: ConversationTranslationResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ConversationTranslationResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: ConversationTranslationResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @returns {ConversationTranslationResult} the recognition result.\r\n     */\r\n    public get result(): ConversationTranslationResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { ConversationConnectionConfig } from \"../../common.speech/Exports\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognizer\r\n} from \"../Exports\";\r\nimport { ConversationImpl } from \"./Conversation\";\r\nimport {\r\n    ConversationCommon,\r\n    ConversationExpirationEventArgs,\r\n    ConversationHandler,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    IConversationTranslator,\r\n    Participant,\r\n} from \"./Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport enum SpeechState {\r\n    Inactive, Connecting, Connected\r\n}\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\n// child class of TranslationRecognizer meant only for use with ConversationTranslator\r\nclass ConversationTranslationRecognizer extends TranslationRecognizer {\r\n    private privTranslator: ConversationTranslator;\r\n    private privSpeechState: SpeechState;\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig, translator?: ConversationTranslator) {\r\n        super(speechConfig, audioConfig);\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        if (!!translator) {\r\n            this.privTranslator = translator;\r\n            this.sessionStarted = () => {\r\n                this.privSpeechState = SpeechState.Connected;\r\n            };\r\n\r\n            this.sessionStopped = () => {\r\n                this.privSpeechState = SpeechState.Inactive;\r\n            };\r\n\r\n            this.recognized = async (tr: TranslationRecognizer, e: TranslationRecognitionEventArgs) => {\r\n                // TODO: add support for getting recognitions from here if own speech\r\n\r\n                // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\r\n                if (e.result?.errorDetails) {\r\n                    await this.cancelSpeech();\r\n                    // TODO: format the error message contained in 'errorDetails'\r\n                    this.fireCancelEvent(e.result.errorDetails);\r\n                }\r\n            };\r\n\r\n            this.canceled = async (r: TranslationRecognizer, e: TranslationRecognitionCanceledEventArgs) => {\r\n                if (this.privSpeechState !== SpeechState.Inactive) {\r\n                    try {\r\n                        await this.cancelSpeech();\r\n                    } catch (error) {\r\n                        this.privSpeechState = SpeechState.Inactive;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n    public get state(): SpeechState {\r\n        return this.privSpeechState;\r\n    }\r\n\r\n    public set state(newState: SpeechState) {\r\n        this.privSpeechState = newState;\r\n    }\r\n\r\n    public onConnection(): void {\r\n        this.privSpeechState = SpeechState.Connected;\r\n    }\r\n\r\n    public async onDisconnection(): Promise<void> {\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        await this.cancelSpeech();\r\n    }\r\n\r\n    /**\r\n     * Fire a cancel event\r\n     * @param error\r\n     */\r\n    private fireCancelEvent(error: any): void {\r\n        try {\r\n            if (!!this.privTranslator.canceled) {\r\n                const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n                    error?.reason ?? CancellationReason.Error,\r\n                    error?.errorDetails ?? error,\r\n                    error?.errorCode ?? CancellationErrorCode.RuntimeError,\r\n                    undefined,\r\n                    error?.sessionId);\r\n\r\n                this.privTranslator.canceled(this.privTranslator, cancelEvent);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.stopContinuousRecognitionAsync();\r\n            await this.privReco?.disconnect();\r\n            this.privSpeechState = SpeechState.Inactive;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/***\r\n * Join, leave or connect to a conversation.\r\n */\r\nexport class ConversationTranslator extends ConversationCommon implements IConversationTranslator, IDisposable {\r\n\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privProperties: PropertyCollection;\r\n    private privIsDisposed: boolean = false;\r\n    private privCTRecognizer: ConversationTranslationRecognizer;\r\n    private privIsSpeaking: boolean = false;\r\n    private privConversation: ConversationImpl;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privPlaceholderKey: string = \"abcdefghijklmnopqrstuvwxyz012345\";\r\n    private privPlaceholderRegion: string = \"westus\";\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        super(audioConfig);\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.privConversation?.participants;\r\n    }\r\n\r\n    public canceled: (sender: ConversationHandler, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: IConversationTranslator, event: ConversationExpirationEventArgs) => void;\r\n    public participantsChanged: (sender: IConversationTranslator, event: ConversationParticipantsChangedEventArgs) => void;\r\n    public sessionStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public sessionStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public textMessageReceived: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n    public transcribed: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n    public transcribing: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n\r\n    /**\r\n     * Join a conversation. If this is the host, pass in the previously created Conversation object.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversation: IConversation, nickname: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversation: any, nickname: string, param1?: string | Callback, param2?: Callback, param3?: Callback): void {\r\n\r\n        try {\r\n\r\n            if (typeof conversation === \"string\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                if (!!this.privConversation) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\r\n                }\r\n\r\n                let lang: string = param1 as string;\r\n                if (lang === undefined || lang === null || lang === \"\") { lang = ConversationConnectionConfig.defaultLanguageCode; }\r\n\r\n                // create a placeholder config\r\n                this.privSpeechTranslationConfig = SpeechTranslationConfig.fromSubscription(\r\n                    this.privPlaceholderKey,\r\n                    this.privPlaceholderRegion);\r\n                this.privSpeechTranslationConfig.setProfanity(ProfanityOption.Masked);\r\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], nickname);\r\n\r\n                const endpoint: string = this.privProperties.getProperty(PropertyId.ConversationTranslator_Host);\r\n                if (endpoint) {\r\n                    this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Host], endpoint);\r\n                }\r\n                const speechEndpointHost: string = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Host);\r\n                if (speechEndpointHost) {\r\n                    this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Host], speechEndpointHost);\r\n                }\r\n\r\n                // join the conversation\r\n                this.privConversation = new ConversationImpl(this.privSpeechTranslationConfig);\r\n                this.privConversation.conversationTranslator = this;\r\n\r\n                this.privConversation.joinConversationAsync(\r\n                    conversation,\r\n                    nickname,\r\n                    lang,\r\n                    ((result: string) => {\r\n\r\n                        if (!result) {\r\n                            this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\r\n                        }\r\n\r\n                        this.privSpeechTranslationConfig.authorizationToken = result;\r\n\r\n                        // connect to the ws\r\n                        this.privConversation.startConversationAsync(\r\n                            (() => {\r\n                                this.handleCallback(param2, param3);\r\n                            }),\r\n                            ((error: any) => {\r\n                                this.handleError(error, param3);\r\n                            }));\r\n\r\n                    }),\r\n                    ((error: any) => {\r\n                        this.handleError(error, param3);\r\n                    }));\r\n\r\n            } else if (typeof conversation === \"object\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                // save the nickname\r\n                this.privProperties.setProperty(PropertyId.ConversationTranslator_Name, nickname);\r\n                // ref the conversation object\r\n                this.privConversation = conversation as ConversationImpl;\r\n                // ref the conversation translator object\r\n                this.privConversation.conversationTranslator = this;\r\n\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                this.privSpeechTranslationConfig = conversation.config;\r\n\r\n                this.handleCallback(param1 as Callback, param2);\r\n            } else {\r\n                this.handleError(\r\n                    new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")),\r\n                    param2);\r\n            }\r\n\r\n        } catch (error) {\r\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Leave the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public leaveConversationAsync(cb?: Callback, err?: Callback): void {\r\n\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n\r\n            // stop the speech websocket\r\n            await this.cancelSpeech();\r\n            // stop the websocket\r\n            await this.privConversation.endConversationImplAsync();\r\n            // https delete request\r\n            await this.privConversation.deleteConversationImplAsync();\r\n            this.dispose();\r\n\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n\r\n        try {\r\n            Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\r\n\r\n            this.privConversation?.sendTextMessageAsync(message, cb, err);\r\n        } catch (error) {\r\n\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                if (this.privCTRecognizer === undefined) {\r\n                    await this.connectTranslatorRecognizer();\r\n                }\r\n                Contracts.throwIfNullOrUndefined(this.privCTRecognizer, this.privErrors.permissionDeniedSend);\r\n\r\n                if (!this.canSpeak) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n                }\r\n\r\n                await this.startContinuousRecognition();\r\n\r\n                this.privIsSpeaking = true;\r\n            } catch (error) {\r\n                this.privIsSpeaking = false;\r\n                await this.cancelSpeech();\r\n                throw error;\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stop speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                if (!this.privIsSpeaking) {\r\n                    // stop speech\r\n                    await this.cancelSpeech();\r\n                    return;\r\n                }\r\n\r\n                // stop the recognition but leave the websocket open\r\n                this.privIsSpeaking = false;\r\n                await new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n                    this.privCTRecognizer?.stopContinuousRecognitionAsync(resolve, reject);\r\n                });\r\n\r\n            } catch (error) {\r\n                await this.cancelSpeech();\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(reason?: string, success?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            if (this.isDisposed && !this.privIsSpeaking) {\r\n                return;\r\n            }\r\n            await this.cancelSpeech();\r\n            this.privIsDisposed = true;\r\n            this.privSpeechTranslationConfig?.close();\r\n            this.privSpeechRecognitionLanguage = undefined;\r\n            this.privProperties = undefined;\r\n            this.privAudioConfig = undefined;\r\n            this.privSpeechTranslationConfig = undefined;\r\n            this.privConversation?.dispose();\r\n            this.privConversation = undefined;\r\n        })(), success, err);\r\n    }\r\n\r\n    /**\r\n     * Cancel the speech websocket\r\n     */\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.privIsSpeaking = false;\r\n            await this.privCTRecognizer?.onDisconnection();\r\n            this.privCTRecognizer = undefined;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Connect to the speech translation recognizer.\r\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\r\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\r\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\r\n     */\r\n    private async connectTranslatorRecognizer(): Promise<void> {\r\n        try {\r\n\r\n            if (this.privAudioConfig === undefined) {\r\n                this.privAudioConfig = AudioConfig.fromDefaultMicrophoneInput();\r\n            }\r\n\r\n            // clear the temp subscription key if it's a participant joining\r\n            if (this.privSpeechTranslationConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key])\r\n                === this.privPlaceholderKey) {\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Key], \"\");\r\n            }\r\n\r\n            // TODO\r\n            const token: string = encodeURIComponent(this.privConversation.room.token);\r\n\r\n            let endpointHost: string = this.privSpeechTranslationConfig.getProperty(\r\n                PropertyId[PropertyId.SpeechServiceConnection_Host], ConversationConnectionConfig.speechHost);\r\n            endpointHost = endpointHost.replace(\"{region}\", this.privConversation.room.cognitiveSpeechRegion);\r\n\r\n            const url: string = `wss://${endpointHost}${ConversationConnectionConfig.speechPath}?${ConversationConnectionConfig.configParams.token}=${token}`;\r\n\r\n            this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Endpoint], url);\r\n\r\n            this.privCTRecognizer = new ConversationTranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig, this);\r\n        } catch (error) {\r\n            await this.cancelSpeech();\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the start speaking request\r\n     */\r\n    private startContinuousRecognition(): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n            this.privCTRecognizer.startContinuousRecognitionAsync(resolve, reject);\r\n        });\r\n    }\r\n\r\n    private get canSpeak(): boolean {\r\n\r\n        // is there a Conversation websocket available and has the Recognizer been set up\r\n        if (!this.privConversation.isConnected || !this.privCTRecognizer) {\r\n            return false;\r\n        }\r\n\r\n        // is the user already speaking\r\n        if (this.privIsSpeaking || this.privCTRecognizer.state === SpeechState.Connected || this.privCTRecognizer.state === SpeechState.Connecting) {\r\n            return false;\r\n        }\r\n\r\n        // is the user muted\r\n        if (this.privConversation.isMutedByHost) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { PropertyCollection } from \"../Exports\";\r\n\r\n/**\r\n * Represents a user in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IUser {\r\n    /** Gets the user's ID */\r\n    readonly userId: string;\r\n}\r\n\r\nexport class User implements IUser {\r\n    private privUserId: string;\r\n\r\n    constructor(userId: string) {\r\n        this.privUserId = userId;\r\n    }\r\n\r\n    public get userId(): string {\r\n        return this.privUserId;\r\n    }\r\n}\r\n\r\nexport interface VoiceSignature {\r\n    Version: number;\r\n    Tag: string;\r\n    Data: string;\r\n}\r\n\r\nexport interface TranscriptionParticipant {\r\n    /** The unique identifier for the participant. */\r\n    readonly id: string;\r\n    /** The participant's preferred spoken language. */\r\n    readonly preferredLanguage: string;\r\n    /** The participant's voice signature */\r\n    readonly voice: string;\r\n}\r\n\r\n/**\r\n * Represents a participant in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IParticipant extends TranscriptionParticipant {\r\n    /** Gets the colour of the user's avatar as an HTML hex string (e.g. FF0000 for red). */\r\n    readonly avatar: string;\r\n    /**\r\n     * The participant's display name. Please note that there may be more than one participant\r\n     * with the same name. You can use <see cref=\"Id\"/> property to tell them apart.\r\n     */\r\n    readonly displayName: string;\r\n    /** Gets whether or not this participant is the host. */\r\n    readonly isHost: boolean;\r\n    /** Gets whether or not this participant is muted. */\r\n    readonly isMuted: boolean;\r\n    /** Gets whether or not the participant is using Text To Speech (TTS). */\r\n    readonly isUsingTts: boolean;\r\n    /** Contains properties of the participant. */\r\n    readonly properties: PropertyCollection;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Participant implements IParticipant {\r\n    private privAvatar: string;\r\n    private privDisplayName: string;\r\n    private privId: string;\r\n    private privIsHost: boolean;\r\n    private privIsMuted: boolean;\r\n    private privIsUsingTts: boolean;\r\n    private privPreferredLanguage: string;\r\n    private privVoice: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    constructor(id: string, avatar: string, displayName: string, isHost: boolean, isMuted: boolean, isUsingTts: boolean, preferredLanguage: string, voice?: string) {\r\n        this.privId = id;\r\n        this.privAvatar = avatar;\r\n        this.privDisplayName = displayName;\r\n        this.privIsHost = isHost;\r\n        this.privIsMuted = isMuted;\r\n        this.privIsUsingTts = isUsingTts;\r\n        this.privPreferredLanguage = preferredLanguage;\r\n        this.privVoice = voice;\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public static From(id: string, language: string, voice: string): IParticipant {\r\n        return new Participant(id, \"\", id, false, false, false, language, voice);\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privAvatar;\r\n    }\r\n\r\n    public get displayName(): string {\r\n        return this.privDisplayName;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get preferredLanguage(): string {\r\n        return this.privPreferredLanguage;\r\n    }\r\n\r\n    public get isHost(): boolean {\r\n        return this.privIsHost;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n\r\n    public get isUsingTts(): boolean {\r\n        return this.privIsUsingTts;\r\n    }\r\n\r\n    public get voice(): string {\r\n        return this.privVoice;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport {\r\n    ConversationConnectionConfig,\r\n    ConversationManager,\r\n    ConversationReceivedTranslationEventArgs,\r\n    ConversationRecognizer,\r\n    ConversationRecognizerFactory,\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalConversation,\r\n    IInternalParticipant,\r\n    InternalParticipants,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs,\r\n    TranscriberRecognizer\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    Connection,\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    ConversationTranslator,\r\n    Participant,\r\n    ParticipantChangedReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SpeechTranslationConfig,\r\n} from \"../Exports\";\r\nimport { SpeechTranslationConfigImpl } from \"../SpeechTranslationConfig\";\r\nimport { Callback, ConversationInfo, IConversation } from \"./IConversation\";\r\nimport { IParticipant, IUser, TranscriptionParticipant } from \"./IParticipant\";\r\n\r\nexport abstract class Conversation implements IConversation {\r\n\r\n    public abstract get authorizationToken(): string;\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    public abstract get config(): SpeechTranslationConfig;\r\n\r\n    public abstract get conversationId(): string;\r\n    public abstract get conversationInfo(): ConversationInfo;\r\n    public abstract get properties(): PropertyCollection;\r\n    public abstract get speechRecognitionLanguage(): string;\r\n    public abstract get participants(): Participant[];\r\n    public abstract get isConnected(): boolean;\r\n\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Create a conversation\r\n     * @param speechConfig\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public static createConversationAsync(speechConfig: SpeechTranslationConfig, arg2?: string | Callback, arg3?: Callback, arg4?: Callback): Conversation {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n        Contracts.throwIfNullOrUndefined(speechConfig.region, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\r\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceAuthorization_Token])) {\r\n            Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\r\n        }\r\n        let conversationImpl: ConversationImpl;\r\n        let cb: Callback;\r\n        let err: Callback;\r\n        if (typeof arg2 === \"string\") {\r\n            conversationImpl = new ConversationImpl(speechConfig, arg2);\r\n            cb = arg3;\r\n            err = arg4;\r\n        } else {\r\n            conversationImpl = new ConversationImpl(speechConfig);\r\n            cb = arg2;\r\n            err = arg3;\r\n        }\r\n        conversationImpl.createConversationAsync(\r\n            (() => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }),\r\n            (error: any) => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        return conversationImpl;\r\n\r\n    }\r\n\r\n    /** Start a conversation. */\r\n    public abstract startConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Delete a conversation. After this no one will be able to join the conversation. */\r\n    public abstract deleteConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** End a conversation. */\r\n    public abstract endConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Lock a conversation. This will prevent new participants from joining. */\r\n    public abstract lockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Add Participant to Conversation. */\r\n    public abstract addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute all other participants in the conversation. After this no other participants will\r\n     * have their speech recognitions broadcast, nor be able to send text messages.\r\n     */\r\n    public abstract muteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Remove a participant from a conversation using the user id, Participant or User object\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unlocks a conversation. */\r\n    public abstract unlockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unmute all other participants in the conversation. */\r\n    public abstract unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Unmute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationImpl extends Conversation implements IDisposable {\r\n\r\n    private privConfig: SpeechTranslationConfig;\r\n    private privProperties: PropertyCollection;\r\n    private privLanguage: string;\r\n    private privToken: string;\r\n    private privIsDisposed: boolean = false;\r\n    private privRoom: IInternalConversation;\r\n    private privManager: ConversationManager;\r\n    private privConversationRecognizer: ConversationRecognizer;\r\n    private privIsConnected: boolean = false;\r\n    private privParticipants: InternalParticipants;\r\n    private privIsReady: boolean;\r\n    private privConversationTranslator: ConversationTranslator;\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privConversationId: string = \"\";\r\n    private readonly privTextMessageMaxLength: number;\r\n\r\n    public set conversationTranslator(conversationTranslator: ConversationTranslator) {\r\n        this.privConversationTranslator = conversationTranslator;\r\n    }\r\n\r\n    // get the internal data about a conversation\r\n    public get room(): IInternalConversation {\r\n        return this.privRoom;\r\n    }\r\n\r\n    // get the wrapper for connecting to the websockets\r\n    public get connection(): ConversationRecognizer {\r\n        return this.privConversationRecognizer; // this.privConnection;\r\n    }\r\n\r\n    // get / set the speech auth token\r\n    public get authorizationToken(): string {\r\n        return this.privToken;\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\r\n        this.privToken = value;\r\n    }\r\n\r\n    // get the config\r\n    public get config(): SpeechTranslationConfig {\r\n        return this.privConfig;\r\n    }\r\n\r\n    // get the conversation Id\r\n    public get conversationId(): string {\r\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\r\n    }\r\n\r\n    // get the properties\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    // get the speech language\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get isMutedByHost(): boolean {\r\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    public get isConnected(): boolean {\r\n        return this.privIsConnected && this.privIsReady;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.toParticipants(true);\r\n    }\r\n\r\n    public get me(): Participant {\r\n        return this.toParticipant(this.privParticipants.me);\r\n    }\r\n\r\n    public get host(): Participant {\r\n        return this.toParticipant(this.privParticipants.host);\r\n    }\r\n\r\n    /**\r\n     * Create a conversation impl\r\n     * @param speechConfig\r\n     * @param {string} id - optional conversationId\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, id?: string) {\r\n        super();\r\n        this.privProperties = new PropertyCollection();\r\n        this.privManager = new ConversationManager();\r\n\r\n        // check the speech language\r\n        const language: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n        if (!language) {\r\n            speechConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], ConversationConnectionConfig.defaultLanguageCode);\r\n        }\r\n        this.privLanguage = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        if (!id) {\r\n            // check the target language(s)\r\n            if (speechConfig.targetLanguages.length === 0) {\r\n                speechConfig.addTargetLanguage(this.privLanguage);\r\n            }\r\n\r\n            // check the profanity setting: speech and conversationTranslator should be in sync\r\n            const profanity: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceResponse_ProfanityOption]);\r\n            if (!profanity) {\r\n                speechConfig.setProfanity(ProfanityOption.Masked);\r\n            }\r\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\r\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\r\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\r\n            let hostNickname: string = speechConfig.getProperty(PropertyId[PropertyId.ConversationTranslator_Name]);\r\n            if (hostNickname === undefined || hostNickname === null || hostNickname.length <= 1 || hostNickname.length > 50) {\r\n                hostNickname = \"Host\";\r\n            }\r\n            speechConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], hostNickname);\r\n\r\n        } else {\r\n            this.privConversationId = id;\r\n        }\r\n\r\n        // save the speech config for future usage\r\n        this.privConfig = speechConfig;\r\n\r\n        // save the config properties\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n        this.privProperties = configImpl.properties.clone();\r\n        this.privIsConnected = false;\r\n        this.privParticipants = new InternalParticipants();\r\n        this.privIsReady = false;\r\n        this.privTextMessageMaxLength = 1000;\r\n    }\r\n\r\n    /**\r\n     * Create a new conversation as Host\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public createConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            this.privManager.createOrJoin(this.privProperties, undefined,\r\n                ((room: IInternalConversation) => {\r\n                    if (!room) {\r\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\r\n                    }\r\n                    this.privRoom = room;\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new conversation as host.\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // check if there is already a recognizer\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            // check if there is conversation data available\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\r\n            // connect to the conversation websocket\r\n            this.privParticipants.meId = this.privRoom.participantId;\r\n            this.privConversationRecognizer = ConversationRecognizerFactory.fromConfig(this, this.privConfig);\r\n\r\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\r\n            // has to forward serviceRecognizer connection events that usually get passed automatically\r\n            this.privConversationRecognizer.connected = this.onConnected;\r\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\r\n            this.privConversationRecognizer.canceled = this.onCanceled;\r\n\r\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\r\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\r\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\r\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\r\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\r\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\r\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\r\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\r\n\r\n            this.privConversationRecognizer.connect(this.privRoom.token,\r\n                (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param { IParticipant } participant - participant to add\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void {\r\n        Contracts.throwIfNullOrUndefined(participant, \"Participant\");\r\n        marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // TODO\r\n            // if (!!this.privConversationRecognizer) {\r\n            //     throw new Error(this.privErrors.permissionDeniedStart);\r\n            // }\r\n            Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\r\n            // join the conversation\r\n            this.privManager.createOrJoin(this.privProperties, conversationId,\r\n                ((room: IInternalConversation) => {\r\n                    Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\r\n                    this.privRoom = room;\r\n                    this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\r\n                    // join callback\r\n                    if (!!cb) {\r\n                        cb(room.cognitiveSpeechAuthToken);\r\n                    }\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public deleteConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.deleteConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public async deleteConversationImplAsync(): Promise<void> {\r\n            Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\r\n            Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\r\n            await this.privManager.leave(this.privProperties, this.privRoom.token);\r\n\r\n            this.dispose();\r\n    }\r\n\r\n    /**\r\n     * Issues a request to close the client websockets\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public endConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.endConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public endConversationImplAsync(): Promise<void> {\r\n        return this.close(true);\r\n    }\r\n\r\n    /**\r\n     * Issues a request to lock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public lockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getLockCommand(true),\r\n                (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the user's permissions\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteAllCommand(true),\r\n                (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteCommand(userId, true), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to remove a participant from the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\r\n                // Assume this is a transcription participant\r\n                marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId as IParticipant), cb, err);\r\n            } else {\r\n                Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n                Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n                if (!this.canSendAsHost) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\r\n                }\r\n                let participantId: string = \"\";\r\n                if (typeof userId === \"string\") {\r\n                    participantId = userId as string;\r\n                } else if (userId.hasOwnProperty(\"id\")) {\r\n                    const participant: IParticipant = userId as IParticipant;\r\n                    participantId = participant.id;\r\n                } else if (userId.hasOwnProperty(\"userId\")) {\r\n                    const user: IUser = userId as IUser;\r\n                    participantId = user.userId;\r\n                }\r\n                Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n                // check the participant exists\r\n                const index: number = this.participants.findIndex((p: Participant) => p.id === participantId);\r\n                if (index === -1) {\r\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n                }\r\n                this.privConversationRecognizer?.sendRequest(this.getEjectCommand(participantId), (() => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any) => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unlock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unlockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getLockCommand(false), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute all participants in the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteAllCommand(false), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMuteCommand(userId, false), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // TODO: is a max length check required?\r\n            if (message.length > this.privTextMessageMaxLength) {\r\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getMessageCommand(message), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change nickname\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public changeNicknameAsync(nickname: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            this.privConversationRecognizer?.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\r\n                this.handleCallback(cb, err);\r\n            }),\r\n                ((error: any) => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(reason?: string): void {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        this.privIsDisposed = true;\r\n        this.config?.close();\r\n        this.privConfig = undefined;\r\n        this.privLanguage = undefined;\r\n        this.privProperties = undefined;\r\n        this.privRoom = undefined;\r\n        this.privToken = undefined;\r\n        this.privManager = undefined;\r\n        this.privIsConnected = false;\r\n        this.privIsReady = false;\r\n        this.privParticipants = undefined;\r\n    }\r\n\r\n    public get transcriberRecognizer(): TranscriberRecognizer {\r\n        return this.privTranscriberRecognizer;\r\n    }\r\n\r\n    public async connectTranscriberRecognizer(recognizer: TranscriberRecognizer): Promise<void> {\r\n        if (!!this.privTranscriberRecognizer) {\r\n            await this.privTranscriberRecognizer.close();\r\n        }\r\n        this.privTranscriberRecognizer = recognizer;\r\n        this.privTranscriberRecognizer.conversation = this;\r\n    }\r\n\r\n    public get conversationInfo(): ConversationInfo {\r\n        const convId: string = this.conversationId;\r\n        const p: TranscriptionParticipant[] = this.participants.map((part: Participant) => {\r\n            return {\r\n                id: part.id,\r\n                preferredLanguage: part.preferredLanguage,\r\n                voice: part.voice\r\n            };\r\n        });\r\n        const props: { [id: string]: string } = {};\r\n        for (const key of ConversationConnectionConfig.transcriptionEventKeys) {\r\n            const val: string = this.properties.getProperty(key, \"\");\r\n            if (val !== \"\") {\r\n                props[key] = val;\r\n            }\r\n        }\r\n        const info: ConversationInfo = { id: convId, participants: p, conversationProperties: props };\r\n        return info;\r\n    }\r\n\r\n    public getKeepAlive(): string {\r\n        const nickname: string = (!!this.me) ? this.me.displayName : \"default_nickname\";\r\n        return JSON.stringify({\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            id: \"0\",\r\n            nickname,\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.keepAlive\r\n        });\r\n    }\r\n\r\n    /** websocket callbacks */\r\n    private onConnected = (e: ConnectionEventArgs): void => {\r\n        this.privIsConnected = true;\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStarted) {\r\n                this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\r\n            }\r\n            if (!!this.privTranscriberRecognizer?.conversationStarted) {\r\n                this.privTranscriberRecognizer.conversationStarted(this.privTranscriberRecognizer, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onDisconnected = async (e: ConnectionEventArgs): Promise<void> => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStopped) {\r\n                this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\r\n            }\r\n            if (!!this.privTranscriberRecognizer?.conversationStopped) {\r\n                this.privTranscriberRecognizer.conversationStopped(this.privTranscriberRecognizer, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        } finally {\r\n            await this.close(false);\r\n        }\r\n    }\r\n\r\n    private onCanceled = async (r: ConversationRecognizer, e: ConversationTranslationCanceledEventArgs): Promise<void> => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.canceled) {\r\n                this.privConversationTranslator.canceled(this.privConversationTranslator, e);\r\n            }\r\n            if (!!this.privTranscriberRecognizer?.conversationCanceled) {\r\n                this.privTranscriberRecognizer.conversationCanceled(this.privTranscriberRecognizer, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantUpdateCommandReceived = (r: ConversationRecognizer, e: ParticipantAttributeEventArgs): void => {\r\n        try {\r\n            const updatedParticipant: any = this.privParticipants.getParticipant(e.id);\r\n            if (updatedParticipant !== undefined) {\r\n\r\n                switch (e.key) {\r\n                    case ConversationTranslatorCommandTypes.changeNickname:\r\n                        updatedParticipant.displayName = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setUseTTS:\r\n                        updatedParticipant.useTts = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setProfanityFiltering:\r\n                        updatedParticipant.profanity = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setMute:\r\n                        updatedParticipant.isMuted = e.value;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setTranslateToLanguages:\r\n                        updatedParticipant.translateToLanguages = e.value;\r\n                        break;\r\n                }\r\n                this.privParticipants.addOrUpdateParticipant(updatedParticipant);\r\n\r\n                if (!!this.privConversationTranslator?.participantsChanged) {\r\n                    this.privConversationTranslator?.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                            [this.toParticipant(updatedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onLockRoomCommandReceived = (r: ConversationRecognizer, e: LockRoomEventArgs): void => {\r\n        // TODO\r\n    }\r\n\r\n    private onMuteAllCommandReceived = (r: ConversationRecognizer, e: MuteAllEventArgs): void => {\r\n        try {\r\n            this.privParticipants.participants.forEach((p: IInternalParticipant) => p.isMuted = (p.isHost ? false : e.isMuted));\r\n            if (!!this.privConversationTranslator?.participantsChanged) {\r\n                this.privConversationTranslator?.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                        this.toParticipants(false), e.sessionId));\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantJoinCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\r\n            if (newParticipant !== undefined) {\r\n                if (!!this.privConversationTranslator?.participantsChanged) {\r\n                    this.privConversationTranslator?.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation,\r\n                            [this.toParticipant(newParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantLeaveCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const ejectedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.participant.id);\r\n            if (ejectedParticipant !== undefined) {\r\n                // remove the participant from the internal participants list\r\n                this.privParticipants.deleteParticipant(e.participant.id);\r\n                if (!!this.privConversationTranslator?.participantsChanged) {\r\n                    // notify subscribers that the participant has left the conversation\r\n                    this.privConversationTranslator?.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.LeftConversation,\r\n                            [this.toParticipant(ejectedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onTranslationReceived = (r: ConversationRecognizer, e: ConversationReceivedTranslationEventArgs): void => {\r\n        try {\r\n            switch (e.command) {\r\n                case ConversationTranslatorMessageTypes.final:\r\n                    if (!!this.privConversationTranslator?.transcribed) {\r\n                        this.privConversationTranslator?.transcribed(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.partial:\r\n                    if (!!this.privConversationTranslator?.transcribing) {\r\n                        this.privConversationTranslator?.transcribing(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.instantMessage:\r\n                    if (!!this.privConversationTranslator?.textMessageReceived) {\r\n                        this.privConversationTranslator?.textMessageReceived(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onParticipantsListReceived = (r: ConversationRecognizer, e: ParticipantsListEventArgs): void => {\r\n        try {\r\n            // check if the session token needs to be updated\r\n            if (e.sessionToken !== undefined && e.sessionToken !== null) {\r\n                this.privRoom.token = e.sessionToken;\r\n            }\r\n            // save the participants\r\n            this.privParticipants.participants = [...e.participants];\r\n            // enable the conversation\r\n            if (this.privParticipants.me !== undefined) {\r\n                this.privIsReady = true;\r\n            }\r\n            if (!!this.privConversationTranslator?.participantsChanged) {\r\n                this.privConversationTranslator?.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\r\n            }\r\n            // if this is the host, update the nickname if needed\r\n            if (this.me.isHost) {\r\n                const nickname: string = this.privConversationTranslator?.properties.getProperty(PropertyId.ConversationTranslator_Name);\r\n                if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\r\n                    // issue a change nickname request\r\n                    this.changeNicknameAsync(nickname);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private onConversationExpiration = (r: ConversationRecognizer, e: ConversationExpirationEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.conversationExpiration) {\r\n                this.privConversationTranslator?.conversationExpiration(\r\n                    this.privConversationTranslator,\r\n                    e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private addParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(participant);\r\n        if (newParticipant !== undefined) {\r\n            if (!!this.privTranscriberRecognizer) {\r\n                const conversationInfo = this.conversationInfo;\r\n                conversationInfo.participants = [participant];\r\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        this.privParticipants.deleteParticipant(participant.id);\r\n        const conversationInfo = this.conversationInfo;\r\n        conversationInfo.participants = [participant];\r\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\r\n    }\r\n\r\n    private async close(dispose: boolean): Promise<void> {\r\n        try {\r\n            this.privIsConnected = false;\r\n            await this.privConversationRecognizer?.close();\r\n            this.privConversationRecognizer = undefined;\r\n            this.privConversationTranslator?.dispose();\r\n        } catch (e) {\r\n            // ignore error\r\n            throw e;\r\n        }\r\n        if (dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n\r\n    /** Helpers */\r\n    private get canSend(): boolean {\r\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    private get canSendAsHost(): boolean {\r\n        return this.privIsConnected && this.privParticipants.me?.isHost;\r\n    }\r\n\r\n    private handleCallback(cb: any, err: any): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    private handleError(error: any, err: any): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error as Error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Participant Helpers */\r\n    private toParticipants(includeHost: boolean): Participant[] {\r\n\r\n        const participants: Participant[] = this.privParticipants.participants.map((p: IInternalParticipant) => {\r\n            return this.toParticipant(p);\r\n        });\r\n        if (!includeHost) {\r\n            return participants.filter((p: Participant) => p.isHost === false);\r\n        } else {\r\n            return participants;\r\n        }\r\n    }\r\n\r\n    private toParticipant(p: IInternalParticipant): Participant {\r\n        return new Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\r\n    }\r\n\r\n    private getMuteAllCommand(isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMuteAll,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getMuteCommand(participantId: string, isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMute,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getLockCommand(isLocked: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setLockState,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isLocked\r\n        });\r\n    }\r\n\r\n    private getEjectCommand(participantId: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.ejectParticipant,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n        });\r\n    }\r\n\r\n    private getChangeNicknameCommand(nickname: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.changeNickname,\r\n            nickname,\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: nickname\r\n        });\r\n    }\r\n\r\n    private getMessageCommand(message: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n        Contracts.throwIfNullOrWhitespace(message, \"message\");\r\n\r\n        return JSON.stringify({\r\n            // tslint:disable-next-line: object-literal-shorthand\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            text: message,\r\n            type: ConversationTranslatorMessageTypes.instantMessage\r\n        });\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AudioConfig,\r\n    SpeechTranslationConfig,\r\n} from \"../Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport class ConversationCommon {\r\n\r\n    protected privAudioConfig: AudioConfig;\r\n    protected privSpeechTranslationConfig: SpeechTranslationConfig;\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n    }\r\n\r\n    protected handleCallback(cb: Callback, err: Callback): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    protected handleError(error: any, err: Callback): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error as Error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the point system for pronunciation score calibration; default value is FivePoint.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGradingSystem\r\n */\r\nexport enum PronunciationAssessmentGradingSystem {\r\n    /**\r\n     * Five point calibration\r\n     * @member PronunciationAssessmentGradingSystem.FivePoint\r\n     */\r\n    FivePoint = 1,\r\n\r\n    /**\r\n     * Hundred mark\r\n     * @member PronunciationAssessmentGradingSystem.HundredMark\r\n     */\r\n    HundredMark,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the pronunciation evaluation granularity; default value is Phoneme.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGranularity\r\n */\r\nexport enum PronunciationAssessmentGranularity {\r\n    /**\r\n     * Shows the score on the full text, word and phoneme level\r\n     * @member PronunciationAssessmentGranularity.Phoneme\r\n     */\r\n    Phoneme = 1,\r\n\r\n    /**\r\n     * Shows the score on the full text and word level\r\n     * @member PronunciationAssessmentGranularity.Word\r\n     */\r\n    Word,\r\n\r\n    /**\r\n     * Shows the score on the full text level only\r\n     * @member PronunciationAssessmentGranularity.FullText\r\n     */\r\n    FullText,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Conversation,\r\n    ConversationInfo,\r\n    ConversationTranscriber,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechTranslationConfig,\r\n    SpeechTranslationConfigImpl,\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranscriberConnectionFactory,\r\n    TranscriptionServiceRecognizer,\r\n} from \"../Exports\";\r\n\r\nexport class TranscriberRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n    private privConversation: Conversation;\r\n\r\n    /**\r\n     * TranscriberRecognizer constructor.\r\n     * @constructor\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechTranslationConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechTranslationConfigImpl.speechRecognitionLanguage,\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechTranslationConfigImpl.properties, new TranscriberConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public canceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    public conversationCanceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    public conversationStarted: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    public conversationStopped: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    public getConversationInfo(): ConversationInfo {\r\n        Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\r\n        return this.privConversation.conversationInfo;\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    public set conversation(c: Conversation) {\r\n        Contracts.throwIfNullOrUndefined(c, \"Conversation\");\r\n        this.privConversation = c;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        if (!this.privDisposedRecognizer) {\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    // Push async join/leave conversation message via serviceRecognizer\r\n    public async pushConversationEvent(conversationInfo: ConversationInfo, command: string): Promise<void> {\r\n        const reco = (this.privReco) as TranscriptionServiceRecognizer;\r\n        Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\r\n        await reco.sendSpeechEventAsync(conversationInfo, command);\r\n    }\r\n\r\n    public connectCallbacks(transcriber: ConversationTranscriber): void {\r\n        this.canceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.canceled) {\r\n                transcriber.canceled(transcriber, e);\r\n            }\r\n        };\r\n        this.conversationCanceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.conversationCanceled) {\r\n                transcriber.conversationCanceled(transcriber, e);\r\n            }\r\n        };\r\n        this.recognizing = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribing) {\r\n                transcriber.transcribing(transcriber, e);\r\n            }\r\n        };\r\n        this.recognized = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribed) {\r\n                transcriber.transcribed(transcriber, e);\r\n            }\r\n        };\r\n        this.conversationStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.conversationStarted) {\r\n                transcriber.conversationStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.conversationStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.conversationStopped) {\r\n                transcriber.conversationStopped(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStarted) {\r\n                transcriber.sessionStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStopped) {\r\n                transcriber.sessionStopped(transcriber, e);\r\n            }\r\n        };\r\n    }\r\n\r\n    public disconnectCallbacks(): void {\r\n        this.canceled = undefined;\r\n        this.recognizing = undefined;\r\n        this.recognized = undefined;\r\n        this.sessionStarted = undefined;\r\n        this.sessionStopped = undefined;\r\n        this.conversationCanceled = undefined;\r\n        this.conversationStarted = undefined;\r\n        this.conversationStopped = undefined;\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { TranscriberRecognizer } from \"../../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    ConversationTranscriptionEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SessionEventArgs,\r\n} from \"../Exports\";\r\nimport {\r\n    ConversationHandler,\r\n    ConversationImpl,\r\n    ConversationTranscriptionHandler,\r\n} from \"./Exports\";\r\nimport { Callback, IConversation } from \"./IConversation\";\r\n\r\nexport class ConversationTranscriber implements ConversationTranscriptionHandler {\r\n    private privDisposedRecognizer: boolean;\r\n    private privRecognizer: TranscriberRecognizer;\r\n    private privProperties: PropertyCollection;\r\n    protected privAudioConfig: AudioConfig;\r\n\r\n    /**\r\n     * ConversationTranscriber constructor.\r\n     * @constructor\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n        this.privProperties = new PropertyCollection();\r\n        this.privRecognizer = undefined;\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during the conversation.\r\n     * @member ConversationTranscriber.prototype.conversationCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationCanceled: (sender: ConversationHandler, event: CancellationEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during transcription.\r\n     * @member ConversationTranscriber.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: ConversationHandler, event: CancellationEventArgs) => void;\r\n\r\n    /**\r\n     * @param {Conversation} converation - conversation to be recognized\r\n     */\r\n    public joinConversationAsync(conversation: IConversation, cb?: Callback, err?: Callback): void {\r\n        const conversationImpl = conversation as ConversationImpl;\r\n        Contracts.throwIfNullOrUndefined(conversationImpl, \"Conversation\");\r\n\r\n        // ref the conversation object\r\n        // create recognizer and subscribe to recognizer events\r\n        this.privRecognizer = new TranscriberRecognizer(conversation.config, this.privAudioConfig);\r\n        Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\r\n        this.privRecognizer.connectCallbacks(this);\r\n\r\n        marshalPromiseToCallbacks(conversationImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\r\n    }\r\n\r\n     /**\r\n      * The event recognized signals that a final conversation transcription result is received.\r\n      * @member ConversationTranscriber.prototype.transcribed\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribed: (sender: ConversationTranscriptionHandler, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n     /**\r\n      * The event recognizing signals that an intermediate conversation transcription result is received.\r\n      * @member ConversationTranscriber.prototype.transcribing\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribing: (sender: ConversationTranscriptionHandler, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member ConversationTranscriber.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member ConversationTranscriber.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for conversation started events.\r\n     * @member ConversationTranscriber.prototype.conversationStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for conversation stopped events.\r\n     * @member ConversationTranscriber.prototype.conversationStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public conversationStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this ConversationTranscriber.\r\n     * @member ConversationTranscriber.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this ConversationTranscriber.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Leave the current conversation. After this is called, you will no longer receive any events.\r\n     */\r\n    public leaveConversationAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.disconnectCallbacks();\r\n        marshalPromiseToCallbacks((async (): Promise<void> => { return; })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member ConversationTranscriber.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n        if (!!this.privRecognizer) {\r\n            await this.privRecognizer.close();\r\n            this.privRecognizer = undefined;\r\n        }\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PathLike } from \"fs\";\r\nimport {\r\n    AutoDetectSourceLanguagesOpenRangeOptionName,\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    OS,\r\n    SpeechServiceConfig,\r\n    SpeechSynthesisConnectionFactory,\r\n    SynthesisAdapterBase,\r\n    SynthesizerConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    IAudioDestination,\r\n    IStringDictionary,\r\n    marshalPromiseToCallbacks,\r\n    Queue\r\n} from \"../common/Exports\";\r\nimport { AudioOutputConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { AudioFileWriter } from \"./Audio/AudioFileWriter\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\r\nimport {\r\n    PullAudioOutputStreamImpl,\r\n    PushAudioOutputStreamImpl\r\n} from \"./Audio/AudioOutputStream\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AudioOutputStream,\r\n    AutoDetectSourceLanguageConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeechConfig,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisOutputFormat,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n} from \"./Exports\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines the class SpeechSynthesizer for text to speech.\r\n * Updated in version 1.16.0\r\n * @class SpeechSynthesizer\r\n */\r\nexport class SpeechSynthesizer {\r\n    protected audioConfig: AudioConfig;\r\n    protected privAdapter: SynthesisAdapterBase;\r\n    protected privProperties: PropertyCollection;\r\n    protected synthesisRequestQueue: Queue<SynthesisRequest>;\r\n\r\n    /**\r\n     * Defines event handler for synthesis start events.\r\n     * @member SpeechSynthesizer.prototype.synthesisStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisStarted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesizing events.\r\n     * @member SpeechSynthesizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis completed events.\r\n     * @member SpeechSynthesizer.prototype.synthesisCompleted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisCompleted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis cancelled events.\r\n     * @member SpeechSynthesizer.prototype.SynthesisCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public SynthesisCanceled: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for word boundary events\r\n     * @member SpeechSynthesizer.prototype.wordBoundary\r\n     * @function\r\n     * @public\r\n     */\r\n    public wordBoundary: (sender: SpeechSynthesizer, event: SpeechSynthesisWordBoundaryEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for bookmark reached events\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.bookmarkReached\r\n     * @function\r\n     * @public\r\n     */\r\n    public bookmarkReached: (sender: SpeechSynthesizer, event: SpeechSynthesisBookmarkEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for viseme received event\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.visemeReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public visemeReceived: (sender: SpeechSynthesizer, event: SpeechSynthesisVisemeEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechSynthesizer.\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Indicates if auto detect source language is enabled\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {boolean} if auto detect source language is enabled\r\n     */\r\n    public get autoDetectSourceLanguage(): boolean {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\r\n    }\r\n\r\n    private privDisposed: boolean;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n    private privSynthesizing: boolean;\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        if (audioConfig !== null) {\r\n            if (audioConfig === undefined) {\r\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : AudioConfig.fromDefaultSpeakerOutput();\r\n            } else {\r\n                this.audioConfig = audioConfig;\r\n            }\r\n        }\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privDisposed = false;\r\n        this.privSynthesizing = false;\r\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\r\n        this.synthesisRequestQueue = new Queue<SynthesisRequest>();\r\n        this.implCommonSynthesizeSetup();\r\n    }\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechSynthesizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        return new SpeechSynthesizer(speechConfig, audioConfig);\r\n    }\r\n\r\n    public buildSsml(text: string): string {\r\n        const languageToDefaultVoice: IStringDictionary<string>  = {\r\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\r\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\r\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\r\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\r\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\r\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\r\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\r\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\r\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\r\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\r\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\r\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\r\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\r\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\r\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\r\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\r\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\r\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\r\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\r\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\r\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\r\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\r\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\r\n            [\"de-CH\"]: \"de-CH-JanNeural\",\r\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\r\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\r\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\r\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\r\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\r\n            [\"en-HK\"]: \"en-HK-SamNeural\",\r\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\r\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\r\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\r\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\r\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\r\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\r\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\r\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\r\n            [\"en-US\"]: \"en-US-JennyNeural\",\r\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\r\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\r\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\r\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\r\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\r\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\r\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\r\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\r\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\r\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\r\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\r\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\r\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\r\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\r\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\r\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\r\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\r\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\r\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\r\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\r\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\r\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\r\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\r\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\r\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\r\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\r\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\r\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\r\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\r\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\r\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\r\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\r\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\r\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\r\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\r\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\r\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\r\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\r\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\r\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\r\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\r\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\r\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\r\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\r\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\r\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\r\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\r\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\r\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\r\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\r\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\r\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\r\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\r\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\r\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\r\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\r\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\r\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\r\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\r\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\r\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\r\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\r\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\r\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\r\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\r\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\r\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\r\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\r\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\r\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\r\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\r\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\r\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\r\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\r\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\r\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\r\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\r\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\r\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\r\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\r\n        };\r\n\r\n        let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\r\n        let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\r\n        let ssml: string = SpeechSynthesizer.XMLEncode(text);\r\n        if (this.autoDetectSourceLanguage) {\r\n            language = \"en-US\";\r\n        } else {\r\n            voice = voice || languageToDefaultVoice[language];\r\n        }\r\n        if (voice) {\r\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\r\n        }\r\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\r\n        return ssml;\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on plain text.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakTextAsync\r\n     * @function\r\n     * @public\r\n     * @param text - Text to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakTextAsync(text: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(text, false, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on SSML.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\r\n     * @function\r\n     * @public\r\n     * @param ssml - SSML to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakSsmlAsync(ssml: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(ssml, true, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechSynthesizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privAdapter;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member SpeechSynthesizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            if (this.privAdapter) {\r\n                await this.privAdapter.dispose();\r\n            }\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected createSynthesizerConfig(speechConfig: SpeechServiceConfig): SynthesizerConfig {\r\n        return new SynthesizerConfig(\r\n            speechConfig,\r\n            this.privProperties);\r\n    }\r\n\r\n    // Creates the synthesis adapter\r\n    protected createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase {\r\n        return new SynthesisAdapterBase(authentication, connectionFactory,\r\n            synthesizerConfig, this, this.audioConfig as AudioOutputConfigImpl);\r\n    }\r\n\r\n    protected implCommonSynthesizeSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const synthesizerConfig = this.createSynthesizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        this.privAdapter = this.createSynthesisAdapter(\r\n            authentication,\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            synthesizerConfig);\r\n\r\n        this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(\r\n            (SpeechSynthesisOutputFormat as any)[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]\r\n        );\r\n    }\r\n\r\n    protected speakImpl(text: string, IsSsml: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privDisposed);\r\n            const requestId = createNoDashGuid();\r\n            let audioDestination;\r\n            if (dataStream instanceof PushAudioOutputStreamCallback) {\r\n                audioDestination = new PushAudioOutputStreamImpl(dataStream);\r\n            } else if (dataStream instanceof PullAudioOutputStream) {\r\n                audioDestination = dataStream as PullAudioOutputStreamImpl;\r\n            } else if (dataStream !== undefined) {\r\n                audioDestination = new AudioFileWriter(dataStream as PathLike);\r\n            } else {\r\n                audioDestination = undefined;\r\n            }\r\n            this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, IsSsml, (e: SpeechSynthesisResult): void => {\r\n                this.privSynthesizing = false;\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(e);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e);\r\n                        }\r\n                    }\r\n                }\r\n                cb = undefined;\r\n                /* tslint:disable:no-empty */\r\n                this.adapterSpeak().catch(() => { });\r\n\r\n            }, (e: string): void => {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }, audioDestination));\r\n\r\n            /* tslint:disable:no-empty */\r\n            this.adapterSpeak().catch(() => { });\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n\r\n            // Destroy the synthesizer.\r\n            /* tslint:disable:no-empty */\r\n            this.dispose(true).catch(() => { });\r\n        }\r\n    }\r\n\r\n    protected async adapterSpeak(): Promise<void> {\r\n        if (!this.privDisposed && !this.privSynthesizing) {\r\n            this.privSynthesizing = true;\r\n            const request: SynthesisRequest = await this.synthesisRequestQueue.dequeue();\r\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\r\n        }\r\n    }\r\n\r\n    private static XMLEncode(text: string): string {\r\n        return text.replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&apos;\");\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SynthesisRequest {\r\n    public requestId: string;\r\n    public text: string;\r\n    public isSSML: boolean;\r\n    public cb: (e: SpeechSynthesisResult) => void;\r\n    public err: (e: string) => void;\r\n    public dataStream: IAudioDestination;\r\n\r\n    constructor(requestId: string, text: string, isSSML: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: IAudioDestination) {\r\n        this.requestId = requestId;\r\n        this.text = text;\r\n        this.isSSML = isSSML;\r\n        this.cb = cb;\r\n        this.err = err;\r\n        this.dataStream = dataStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson = JSON.parse(jsonString);\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString === \"true\") {\r\n            paramsJson.enableMiscue = true;\r\n        } else if (enableMiscueString === \"false\") {\r\n            paramsJson.enableMiscue = false;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    PropertyId,\r\n    RecognitionResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment results.\r\n * @class PronunciationAssessmentResult\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentResult {\r\n    private privPronJson: any;\r\n\r\n    private constructor(jsonString: string) {\r\n        const j = JSON.parse(jsonString);\r\n        Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\r\n        this.privPronJson = j.NBest[0];\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult} result The recognition result.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\r\n     */\r\n    public static fromResult(result: RecognitionResult): PronunciationAssessmentResult {\r\n        Contracts.throwIfNullOrUndefined(result, \"result\");\r\n        const json: string = result.properties.getProperty(PropertyId.SpeechServiceResponse_JsonResult);\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        return new PronunciationAssessmentResult(json);\r\n    }\r\n\r\n    /**\r\n     * Gets the detail result of pronunciation assessment.\r\n     * @member PronunciationAssessmentConfig.prototype.detailResult\r\n     * @function\r\n     * @public\r\n     * @returns {any} detail result.\r\n     */\r\n    public get detailResult(): any {\r\n        return this.privPronJson;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\r\n     * how closely the phonemes match a native speaker's pronunciation.\r\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Accuracy score.\r\n     */\r\n    public get accuracyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.AccuracyScore;\r\n    }\r\n\r\n    /**\r\n     * The overall score indicating the pronunciation quality of the given speech.\r\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\r\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Pronunciation score.\r\n     */\r\n    public get pronunciationScore(): number {\r\n        return this.detailResult.PronunciationAssessment.PronScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\r\n     * @member PronunciationAssessmentResult.prototype.completenessScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Completeness score.\r\n     */\r\n    public get completenessScore(): number {\r\n        return this.detailResult.PronunciationAssessment.CompletenessScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the fluency of the given speech.\r\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Fluency score.\r\n     */\r\n    public get fluencyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.FluencyScore;\r\n    }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useContext, useMemo } from 'react';\nvar ThemeContext = /*#__PURE__*/React.createContext({});\nvar Consumer = ThemeContext.Consumer,\n    Provider = ThemeContext.Provider;\n\nfunction ThemeProvider(_ref) {\n  var prefixes = _ref.prefixes,\n      children = _ref.children;\n  var copiedPrefixes = useMemo(function () {\n    return _extends({}, prefixes);\n  }, [prefixes]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: copiedPrefixes\n  }, children);\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var prefixes = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  var Wrapped = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var props = _extends({}, _ref2);\n\n    props[forwardRefAs] = ref;\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      bsPrefix: bsPrefix\n    }));\n  });\n  Wrapped.displayName = \"Bootstrap(\" + (Component.displayName || Component.name) + \")\";\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class SynthesisStatus\r\n * @private\r\n */\r\nexport enum SynthesisStatus {\r\n    /**\r\n     * The response contains valid audio data.\r\n     * @member SynthesisStatus.Success\r\n     */\r\n    Success,\r\n\r\n    /**\r\n     * Indicates the end of audio data. No valid audio data is included in the message.\r\n     * @member SynthesisStatus.SynthesisEnd\r\n     */\r\n    SynthesisEnd,\r\n\r\n    /**\r\n     * Indicates an error occurred during synthesis data processing.\r\n     * @member SynthesisStatus.Error\r\n     */\r\n    Error,\r\n}\r\n\r\nexport enum RecognitionStatus {\r\n    Success,\r\n    NoMatch,\r\n    InitialSilenceTimeout,\r\n    BabbleTimeout,\r\n    Error,\r\n    EndOfDictation,\r\n    TooManyRequests,\r\n    BadRequest,\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class HeaderNames {\r\n    public static AuthKey: string = \"Ocp-Apim-Subscription-Key\";\r\n    public static ConnectionId: string = \"X-ConnectionId\";\r\n    public static ContentType: string = \"Content-Type\";\r\n    public static CustomCommandsAppId: string = \"X-CommandsAppId\";\r\n    public static Path: string = \"Path\";\r\n    public static RequestId: string = \"X-RequestId\";\r\n    public static RequestStreamId: string = \"X-StreamId\";\r\n    public static RequestTimestamp: string = \"X-Timestamp\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be generated.\r\n * @class ResultReason\r\n */\r\nexport enum ResultReason {\r\n    /**\r\n     * Indicates speech could not be recognized. More details\r\n     * can be found in the NoMatchDetails object.\r\n     * @member ResultReason.NoMatch\r\n     */\r\n    NoMatch,\r\n\r\n    /**\r\n     * Indicates that the recognition was canceled. More details\r\n     * can be found using the CancellationDetails object.\r\n     * @member ResultReason.Canceled\r\n     */\r\n    Canceled,\r\n\r\n    /**\r\n     * Indicates the speech result contains hypothesis text.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizingSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains final text that has been recognized.\r\n     * Speech Recognition is now complete for this phrase.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizedSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains a finalized acceptance of a provided keyword.\r\n     * Speech recognition will continue unless otherwise configured.\r\n     * @member ResultReason.RecognizedKeyword\r\n     */\r\n    RecognizedKeyword,\r\n\r\n    /**\r\n     * Indicates the intent result contains hypothesis text and intent.\r\n     * @member ResultReason.RecognizingIntent\r\n     */\r\n    RecognizingIntent,\r\n\r\n    /**\r\n     * Indicates the intent result contains final text and intent.\r\n     * Speech Recognition and Intent determination are now complete for this phrase.\r\n     * @member ResultReason.RecognizedIntent\r\n     */\r\n    RecognizedIntent,\r\n\r\n    /**\r\n     * Indicates the translation result contains hypothesis text and its translation(s).\r\n     * @member ResultReason.TranslatingSpeech\r\n     */\r\n    TranslatingSpeech,\r\n\r\n    /**\r\n     * Indicates the translation result contains final text and corresponding translation(s).\r\n     * Speech Recognition and Translation are now complete for this phrase.\r\n     * @member ResultReason.TranslatedSpeech\r\n     */\r\n    TranslatedSpeech,\r\n\r\n    /**\r\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\r\n     * @member ResultReason.SynthesizingAudio\r\n     */\r\n    SynthesizingAudio,\r\n\r\n    /**\r\n     * Indicates the synthesized audio is now complete for this phrase.\r\n     * @member ResultReason.SynthesizingAudioCompleted\r\n     */\r\n    SynthesizingAudioCompleted,\r\n\r\n    /**\r\n     * Indicates the speech synthesis is now started\r\n     * @member ResultReason.SynthesizingAudioStarted\r\n     */\r\n    SynthesizingAudioStarted,\r\n\r\n    /**\r\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\r\n     * @member ResultReason.EnrollingVoiceProfile\r\n     */\r\n    EnrollingVoiceProfile,\r\n\r\n    /**\r\n     * Indicates the voice profile has been enrolled.\r\n     * @member ResultReason.EnrolledVoiceProfile\r\n     */\r\n    EnrolledVoiceProfile,\r\n\r\n    /**\r\n     * Indicates successful identification of some speakers.\r\n     * @member ResultReason.RecognizedSpeakers\r\n     */\r\n    RecognizedSpeakers,\r\n\r\n    /**\r\n     * Indicates successfully verified one speaker.\r\n     * @member ResultReason.RecognizedSpeaker\r\n     */\r\n    RecognizedSpeaker,\r\n\r\n    /**\r\n     * Indicates a voice profile has been reset successfully.\r\n     * @member ResultReason.ResetVoiceProfile\r\n     */\r\n    ResetVoiceProfile,\r\n\r\n    /**\r\n     * Indicates a voice profile has been deleted successfully.\r\n     * @member ResultReason.DeletedVoiceProfile\r\n     */\r\n    DeletedVoiceProfile,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum MessageType {\r\n    Text,\r\n    Binary,\r\n}\r\n\r\nexport class ConnectionMessage {\r\n\r\n    private privMessageType: MessageType;\r\n    private privHeaders: IStringDictionary<string>;\r\n    private privBody: any = null;\r\n    private privSize: number;\r\n\r\n    private privId: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privBody = body;\r\n        this.privHeaders = headers ? headers : {};\r\n        this.privId = id ? id : createNoDashGuid();\r\n        switch (this.messageType) {\r\n            case MessageType.Binary:\r\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\r\n                break;\r\n            case MessageType.Text:\r\n                this.privSize = this.textBody.length;\r\n        }\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n\r\n    public get body(): any {\r\n        return this.privBody;\r\n    }\r\n\r\n    public get textBody(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privBody as string;\r\n    }\r\n\r\n    public get binaryBody(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privBody;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class QueryParameterNames {\r\n    public static BotId: string = \"botid\";\r\n    public static CustomSpeechDeploymentId: string = \"cid\";\r\n    public static CustomVoiceDeploymentId: string = \"deploymentId\";\r\n    public static EnableAudioLogging: string = \"storeAudio\";\r\n    public static EnableLanguageId: string = \"lidEnabled\";\r\n    public static EnableWordLevelTimestamps: string = \"wordLevelTimestamps\";\r\n    public static EndSilenceTimeoutMs: string = \"endSilenceTimeoutMs\";\r\n    public static Format: string = \"format\";\r\n    public static InitialSilenceTimeoutMs: string = \"initialSilenceTimeoutMs\";\r\n    public static Language: string = \"language\";\r\n    public static Profanity: string = \"profanity\";\r\n    public static RequestBotStatusMessages: string = \"enableBotMessageStatus\";\r\n    public static StableIntermediateThreshold: string = \"stableIntermediateThreshold\";\r\n    public static StableTranslation: string = \"stableTranslation\";\r\n    public static TestHooks: string = \"testhooks\";\r\n}\r\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n *  Defines error code in case that CancellationReason is Error.\r\n *  Added in version 1.1.0.\r\n */\r\nexport enum CancellationErrorCode {\r\n    /**\r\n     * Indicates that no error occurred during speech recognition.\r\n     */\r\n    NoError,\r\n\r\n    /**\r\n     * Indicates an authentication error.\r\n     */\r\n    AuthenticationFailure,\r\n\r\n    /**\r\n     * Indicates that one or more recognition parameters are invalid.\r\n     */\r\n    BadRequestParameters,\r\n\r\n    /**\r\n     * Indicates that the number of parallel requests exceeded the number of allowed\r\n     * concurrent transcriptions for the subscription.\r\n     */\r\n    TooManyRequests,\r\n\r\n    /**\r\n     * Indicates a connection error.\r\n     */\r\n    ConnectionFailure,\r\n\r\n    /**\r\n     * Indicates a time-out error when waiting for response from service.\r\n     */\r\n    ServiceTimeout,\r\n\r\n    /**\r\n     * Indicates that an error is returned by the service.\r\n     */\r\n    ServiceError,\r\n\r\n    /**\r\n     * Indicates an unexpected runtime error.\r\n     */\r\n    RuntimeError,\r\n\r\n    /**\r\n     * Indicates an quota overrun on existing key.\r\n     */\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError, ConnectionMessage, IStringDictionary, MessageType } from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class SpeechConnectionMessage extends ConnectionMessage {\r\n\r\n    private privPath: string;\r\n    private privRequestId: string;\r\n    private privContentType: string;\r\n    private privStreamId: string;\r\n    private privAdditionalHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        path: string,\r\n        requestId: string,\r\n        contentType: string,\r\n        body: any,\r\n        streamId?: string,\r\n        additionalHeaders?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (!path) {\r\n            throw new ArgumentNullError(\"path\");\r\n        }\r\n\r\n        if (!requestId) {\r\n            throw new ArgumentNullError(\"requestId\");\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        headers[HeaderNames.Path] = path;\r\n        headers[HeaderNames.RequestId] = requestId;\r\n        headers[HeaderNames.RequestTimestamp] = new Date().toISOString();\r\n        if (contentType) {\r\n            headers[HeaderNames.ContentType] = contentType;\r\n        }\r\n\r\n        if (streamId) {\r\n            headers[HeaderNames.RequestStreamId] = streamId;\r\n        }\r\n\r\n        if (additionalHeaders) {\r\n            for (const headerName in additionalHeaders) {\r\n                if (headerName) {\r\n                    headers[headerName] = additionalHeaders[headerName];\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            super(messageType, body, headers, id);\r\n        } else {\r\n            super(messageType, body, headers);\r\n        }\r\n\r\n        this.privPath = path;\r\n        this.privRequestId = requestId;\r\n        this.privContentType = contentType;\r\n        this.privStreamId = streamId;\r\n        this.privAdditionalHeaders = additionalHeaders;\r\n    }\r\n\r\n    public get path(): string {\r\n        return this.privPath;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get contentType(): string {\r\n        return this.privContentType;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public get additionalHeaders(): IStringDictionary<string> {\r\n        return this.privAdditionalHeaders;\r\n    }\r\n\r\n    public static fromConnectionMessage = (message: ConnectionMessage): SpeechConnectionMessage => {\r\n        let path = null;\r\n        let requestId = null;\r\n        let contentType = null;\r\n        let requestTimestamp = null;\r\n        let streamId = null;\r\n        const additionalHeaders: IStringDictionary<string> = {};\r\n\r\n        if (message.headers) {\r\n            for (const headerName in message.headers) {\r\n                if (headerName) {\r\n                    if (headerName.toLowerCase() === HeaderNames.Path.toLowerCase()) {\r\n                        path = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestId.toLowerCase()) {\r\n                        requestId = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\r\n                        requestTimestamp = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.ContentType.toLowerCase()) {\r\n                        contentType = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestStreamId.toLowerCase()) {\r\n                        streamId = message.headers[headerName];\r\n                    } else {\r\n                        additionalHeaders[headerName] = message.headers[headerName];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new SpeechConnectionMessage(\r\n            message.messageType,\r\n            path,\r\n            requestId,\r\n            contentType,\r\n            message.body,\r\n            streamId,\r\n            additionalHeaders,\r\n            message.id);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ServicePropertiesPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports\";\r\nimport { OutputFormat, PropertyId } from \"../sdk/Exports\";\r\nimport { AuthInfo, IConnectionFactory, RecognitionMode, RecognizerConfig, WebsocketMessageFormatter } from \"./Exports\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport abstract class ConnectionFactoryBase implements IConnectionFactory {\r\n\r\n    public static getHostSuffix(region: string): string {\r\n        if (!!region) {\r\n            if (region.toLowerCase().startsWith(\"china\")) {\r\n                return \".azure.cn\";\r\n            }\r\n            if (region.toLowerCase().startsWith(\"usgov\")) {\r\n                return \".azure.us\";\r\n            }\r\n        }\r\n        return \".microsoft.com\";\r\n    }\r\n\r\n    public abstract create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection;\r\n\r\n    protected setCommonUrlParams(\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EnableAudioLogging,\r\n            QueryParameterNames.EnableAudioLogging,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps,\r\n            QueryParameterNames.EnableWordLevelTimestamps,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_ProfanityOption,\r\n            QueryParameterNames.Profanity,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n            QueryParameterNames.InitialSilenceTimeoutMs,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs,\r\n            QueryParameterNames.EndSilenceTimeoutMs,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_StablePartialResultThreshold,\r\n            QueryParameterNames.StableIntermediateThreshold,\r\n            config,\r\n            queryParams,\r\n            endpoint);\r\n\r\n        const serviceProperties: IStringDictionary<string> = JSON.parse(config.parameters.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        Object.keys(serviceProperties).forEach((value: string, num: number, array: string[]) => {\r\n            queryParams[value] = serviceProperties[value];\r\n        });\r\n    }\r\n\r\n    protected setUrlParameter(\r\n        propId: PropertyId,\r\n        parameterName: string,\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const value: string = config.parameters.getProperty(propId, undefined);\r\n\r\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\r\n            queryParams[parameterName] = value.toLocaleLowerCase();\r\n        }\r\n    }\r\n\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst createGuid: () => string = (): string => {\r\n    return uuid();\r\n};\r\n\r\nconst createNoDashGuid: () => string = (): string => {\r\n    return createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\r\n};\r\n\r\nexport { createGuid, createNoDashGuid };\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation \n     */\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code,\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n    }\n\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError(): BrowserConfigurationAuthError {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n    }\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport { PropertyCollection, PropertyId, ServicePropertyChannel, SpeechConfigImpl } from \"./Exports\";\r\nimport { OutputFormat } from \"./OutputFormat\";\r\n\r\n/**\r\n * Class that defines base configurations for dialog service connector\r\n * @class DialogServiceConfig\r\n */\r\nexport abstract class DialogServiceConfig {\r\n\r\n    /**\r\n     * Creates an instance of DialogService config.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string | PropertyId, def?: string): string;\r\n\r\n    /**\r\n     * @member DialogServiceConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     * @summary Sets a property value that will be passed to service using the specified channel.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param porxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to use for recognition.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    // tslint:disable-next-line: no-empty\r\n    public set applicationId(value: string) { }\r\n\r\n    public static DialogTypes: any = class {\r\n        public static BotFramework: string = \"bot_framework\";\r\n        public static CustomCommands: string = \"custom_commands\";\r\n    };\r\n}\r\n\r\n/**\r\n * Dialog Service configuration.\r\n * @class DialogServiceConfigImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class DialogServiceConfigImpl extends DialogServiceConfig {\r\n\r\n    private privSpeechConfig: SpeechConfigImpl;\r\n\r\n    /**\r\n     * Creates an instance of dialogService config.\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechConfig = new SpeechConfigImpl();\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member DialogServiceConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechConfig.properties;\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechConfig.speechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to set.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechConfig.speechRecognitionLanguage = value;\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return this.privSpeechConfig.outputFormat;\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechConfig.outputFormat = value;\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to set.\r\n     * @param {string} value - The value.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechConfig.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to get.\r\n     * @param {string} def - The default value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n        return this.privSpeechConfig.getProperty(name);\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName?: string, proxyPassword?: string): void {\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\r\n        if (proxyUserName) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\r\n        }\r\n        if (proxyPassword) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\r\n        }\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        this.privSpeechConfig.setServiceProperty(name, value, channel);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member DialogServiceConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n}\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class OCSPEvent extends PlatformEvent {\r\n    private privSignature: string;\r\n\r\n    constructor(eventName: string, eventType: EventType, signature: string) {\r\n        super(eventName, eventType);\r\n\r\n        this.privSignature = signature;\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheHitEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheMissEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheMissEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheHitEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPDiskCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateNeededEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheUpdateNeededEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheStoreEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheStoreEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPDiskCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdatehCompleteEvent extends OCSPEvent {\r\n    constructor(signature: string) {\r\n        super(\"OCSPCacheUpdatehCompleteEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPStapleReceivedEvent extends OCSPEvent {\r\n    constructor() {\r\n        super(\"OCSPStapleReceivedEvent\", EventType.Debug, \"\");\r\n    }\r\n}\r\n\r\nexport class OCSPWSUpgradeStartedEvent extends OCSPEvent {\r\n    constructor(serialNumber: string) {\r\n        super(\"OCSPWSUpgradeStartedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryExpiredEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n\r\n    constructor(serialNumber: string, expireTime: number) {\r\n        super(\"OCSPCacheEntryExpiredEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n\r\n    constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privStartTime = startTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheHitEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n    private privExpireTimeString: string;\r\n    private privStartTimeString: string;\r\n\r\n    constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheHitEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\r\n        this.privStartTime = startTime;\r\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\r\n    }\r\n}\r\n\r\nexport class OCSPVerificationFailedEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPVerificationFailedEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheFetchErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheFetchErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPResponseRetrievedEvent extends OCSPEvent {\r\n    constructor(serialNumber: string) {\r\n        super(\"OCSPResponseRetrievedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheUpdateErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, AccountInfo, Logger } from \"@azure/msal-common\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\n\nexport interface IPublicClientApplication {\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\n    acquireTokenSilent(silentRequest: SilentRequest): Promise<AuthenticationResult>;\n    addEventCallback(callback: Function): string | null;\n    removeEventCallback(callbackId: string): void;\n    enableAccountStorageEvents(): void;\n    disableAccountStorageEvents(): void;\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\n    getAccountByLocalId(localId: string): AccountInfo | null;\n    getAccountByUsername(userName: string): AccountInfo | null;\n    getAllAccounts(): AccountInfo[];\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\n    loginRedirect(request?: RedirectRequest): Promise<void>;\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\n    getTokenCache(): ITokenCache;\n    getLogger(): Logger;\n    setLogger(logger: Logger): void;\n    setActiveAccount(account: AccountInfo | null): void;\n    getActiveAccount(): AccountInfo | null;\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\n    setNavigationClient(navigationClient: INavigationClient): void;\n    getConfiguration(): BrowserConfiguration;\n}\n\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\n    acquireTokenPopup: () => {\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\n    },\n    acquireTokenRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    acquireTokenSilent: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    getAllAccounts: () => {\n        return [];\t\n    },\t\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\t\n        return null;\t\n    },\t\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    loginPopup: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    loginRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    logout: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\t\n    logoutRedirect: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    logoutPopup: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    ssoSilent: () => {\t\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    getLogger: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, AuthError, AccountInfo } from \"@azure/msal-common\";\nimport { EventType } from \"./EventType\";\nimport { InteractionStatus, InteractionType } from \"../utils/BrowserConstants\";\nimport { PopupRequest, RedirectRequest, SilentRequest, SsoSilentRequest, EndSessionRequest } from \"..\";\n\nexport type EventMessage = {\n    eventType: EventType;\n    interactionType: InteractionType | null;\n    payload: EventPayload;\n    error: EventError;\n    timestamp: number;\n};\n\nexport type PopupEvent = {\n    popupWindow: Window;\n};\n\nexport type EventPayload = AccountInfo | PopupRequest | RedirectRequest | SilentRequest | SsoSilentRequest | EndSessionRequest | AuthenticationResult | PopupEvent | null;\n\nexport type EventError = AuthError | Error | null;\n\nexport type EventCallbackFunction = (message: EventMessage) => void;\n\nexport class EventMessageUtils {\n\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(message: EventMessage, currentStatus?: InteractionStatus): InteractionStatus|null {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (currentStatus && currentStatus !== InteractionStatus.Logout) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n                    if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n            default:\n                break;\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as React from \"react\";\nimport { IPublicClientApplication, stubbedPublicClientApplication, Logger, InteractionStatus, AccountInfo } from \"@azure/msal-browser\";\n\nexport interface IMsalContext {\n    instance: IPublicClientApplication;\n    inProgress: InteractionStatus;\n    accounts: AccountInfo[];\n    logger: Logger;\n}\n\n/*\n * Stubbed context implementation\n * Only used when there is no provider, which is an unsupported scenario\n */\nconst defaultMsalContext: IMsalContext = {\n    instance: stubbedPublicClientApplication,\n    inProgress: InteractionStatus.None,\n    accounts: [],\n    logger: new Logger({})\n};\n\nexport const MsalContext = React.createContext<IMsalContext>(\n    defaultMsalContext\n);\nexport const MsalConsumer = MsalContext.Consumer;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\n\ntype FaaCFunction = <T>(args: T) => React.ReactNode;\n\nexport function getChildrenOrFunction<T>(\n    children: React.ReactNode | FaaCFunction,\n    args: T\n): React.ReactNode {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n\n/*\n * Utility types\n * Reference: https://github.com/piotrwitek/utility-types\n */\ntype SetDifference<A, B> = A extends B ? never : A;\ntype SetComplement<A, A1 extends A> = SetDifference<A, A1>;\nexport type Subtract<T extends T1, T1 extends object> = Pick<T,SetComplement<keyof T, keyof T1>>;\n\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA \n * @param arrayB \n */\nexport function accountArraysAreEqual(arrayA: Array<AccountIdentifiers>, arrayB: Array<AccountIdentifiers>): boolean {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    const comparisonArray = [...arrayB];\n\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n\n        return (elementA.homeAccountId === elementB.homeAccountId) && \n               (elementA.localAccountId === elementB.localAccountId) &&\n               (elementA.username === elementB.username);\n    });\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-browser\";\nexport const version = \"2.19.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { useState, useEffect, useRef, PropsWithChildren, useMemo } from \"react\";\nimport {\n    IPublicClientApplication,\n    EventType,\n    EventMessage,\n    EventMessageUtils,\n    InteractionStatus,\n    Logger,\n    WrapperSKU,\n    AccountInfo\n} from \"@azure/msal-browser\";\nimport { MsalContext, IMsalContext } from \"./MsalContext\";\nimport { accountArraysAreEqual } from \"./utils/utilities\";\nimport { name as SKU, version } from \"./packageMetadata\";\n\nexport type MsalProviderProps = PropsWithChildren<{\n    instance: IPublicClientApplication;\n}>;\n\nexport function MsalProvider({instance, children}: MsalProviderProps): React.ReactElement {\n    useEffect(() => {\n        instance.initializeWrapperLibrary(WrapperSKU.React, version);\n    }, [instance]);\n    // Create a logger instance for msal-react with the same options as PublicClientApplication\n    const logger: Logger = useMemo(() => {\n        return instance.getLogger().clone(SKU, version);\n    }, [instance]);\n\n    // State hook to store accounts\n    const [accounts, setAccounts] = useState<AccountInfo[]>([]);\n    // State hook to store in progress value\n    const [inProgress, setInProgress] = useState<InteractionStatus>(InteractionStatus.Startup);\n    // Mutable object used in the event callback\n    const inProgressRef = useRef(inProgress);\n    \n    useEffect(() => {\n        const callbackId = instance.addEventCallback((message: EventMessage) => {\n            switch (message.eventType) {\n                case EventType.ACCOUNT_ADDED:\n                case EventType.ACCOUNT_REMOVED:\n                case EventType.LOGIN_SUCCESS:\n                case EventType.SSO_SILENT_SUCCESS:\n                case EventType.HANDLE_REDIRECT_END:\n                case EventType.LOGIN_FAILURE:\n                case EventType.SSO_SILENT_FAILURE:\n                case EventType.LOGOUT_END:\n                case EventType.ACQUIRE_TOKEN_SUCCESS:\n                case EventType.ACQUIRE_TOKEN_FAILURE:\n                    const currentAccounts = instance.getAllAccounts();\n                    if (!accountArraysAreEqual(currentAccounts, accounts)) {\n                        logger.info(\"MsalProvider - updating account state\");\n                        setAccounts(currentAccounts);\n                    } else {\n                        logger.info(\"MsalProvider - no account changes\");\n                    }\n                    break;\n            }\n        });\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\n\n        return () => {\n            // Remove callback when component unmounts or accounts change\n            if (callbackId) {\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, accounts, logger]);\n\n    useEffect(() => {\n        const callbackId = instance.addEventCallback((message: EventMessage) => {\n            const status = EventMessageUtils.getInteractionStatusFromEvent(message, inProgressRef.current);\n            if (status !== null) {\n                logger.info(`MsalProvider - ${message.eventType} results in setting inProgress from ${inProgressRef.current} to ${status}`);\n                inProgressRef.current = status;\n                setInProgress(status);\n            }\n        });\n        logger.verbose(`MsalProvider - Registered event callback with id: ${callbackId}`);\n\n        instance.handleRedirectPromise().catch(() => {\n            // Errors should be handled by listening to the LOGIN_FAILURE event\n            return;\n        });\n\n        return () => {\n            if (callbackId) {\n                logger.verbose(`MsalProvider - Removing event callback ${callbackId}`);\n                instance.removeEventCallback(callbackId);\n            }\n        };\n    }, [instance, logger]);\n\n    const contextValue: IMsalContext = {\n        instance,\n        inProgress,\n        accounts,\n        logger\n    };\n\n    return (\n        <MsalContext.Provider value={contextValue}>\n            {children}\n        </MsalContext.Provider>\n    );\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useContext } from \"react\";\nimport { IMsalContext, MsalContext } from \"../MsalContext\";\n\n/**\n * Returns Msal Context values\n */\nexport const useMsal = (): IMsalContext => useContext(MsalContext);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useState, useEffect } from \"react\";\nimport { AccountInfo, IPublicClientApplication, InteractionStatus, AccountEntity } from \"@azure/msal-browser\";\nimport { useMsal } from \"./useMsal\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\n\nfunction getAccount(instance: IPublicClientApplication, accountIdentifiers: AccountIdentifiers): AccountInfo | null {\n    const allAccounts = instance.getAllAccounts();\n    if (allAccounts.length > 0 && (accountIdentifiers.homeAccountId || accountIdentifiers.localAccountId || accountIdentifiers.username)) {\n        const matchedAccounts = allAccounts.filter(accountObj => {\n            if (accountIdentifiers.username && accountIdentifiers.username.toLowerCase() !== accountObj.username.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.homeAccountId && accountIdentifiers.homeAccountId.toLowerCase() !== accountObj.homeAccountId.toLowerCase()) {\n                return false;\n            }\n            if (accountIdentifiers.localAccountId && accountIdentifiers.localAccountId.toLowerCase() !== accountObj.localAccountId.toLowerCase()) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return matchedAccounts[0] || null;\n    } else {\n        return null;\n    }\n}\n\n/**\n * Given 1 or more accountIdentifiers, returns the Account object if the user is signed-in\n * @param accountIdentifiers \n */\nexport function useAccount(accountIdentifiers: AccountIdentifiers): AccountInfo | null {\n    const { instance, inProgress } = useMsal();\n\n    const initialStateValue = inProgress === InteractionStatus.Startup ? null : getAccount(instance, accountIdentifiers);\n    const [account, setAccount] = useState<AccountInfo|null>(initialStateValue);\n\n    useEffect(() => {\n        const currentAccount = getAccount(instance, accountIdentifiers);\n        if (!AccountEntity.accountInfoIsEqual(account, currentAccount, true)) {\n            setAccount(currentAccount);\n        }\n    }, [inProgress, accountIdentifiers, instance, account]);\n\n    return account;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { useState, useEffect } from \"react\";\nimport { useMsal } from \"./useMsal\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { useAccount } from \"./useAccount\";\nimport { AccountInfo, InteractionStatus } from \"@azure/msal-browser\";\n\nfunction isAuthenticated(allAccounts: AccountIdentifiers[], account: AccountInfo | null, matchAccount?: AccountIdentifiers): boolean {\n    if(matchAccount && (matchAccount.username || matchAccount.homeAccountId || matchAccount.localAccountId)) {\n        return !!account;\n    }   \n\n    return allAccounts.length > 0;\n}\n\n/**\n * Returns whether or not a user is currently signed-in. Optionally provide 1 or more accountIdentifiers to determine if a specific user is signed-in\n * @param matchAccount \n */\nexport function useIsAuthenticated(matchAccount?: AccountIdentifiers): boolean {\n    const { accounts: allAccounts, inProgress } = useMsal();\n    const account = useAccount(matchAccount || {});\n\n    const initialStateValue = inProgress === InteractionStatus.Startup ? false : isAuthenticated(allAccounts, account, matchAccount);\n    const [hasAuthenticated, setHasAuthenticated] = useState<boolean>(initialStateValue);\n\n    useEffect(() => {\n        setHasAuthenticated(isAuthenticated(allAccounts, account, matchAccount));\n    }, [allAccounts, account, matchAccount]);\n\n    return hasAuthenticated;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { PropsWithChildren, useMemo } from \"react\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { getChildrenOrFunction } from \"../utils/utilities\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { useIsAuthenticated } from \"../hooks/useIsAuthenticated\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nexport type AuthenticatedTemplateProps = PropsWithChildren<AccountIdentifiers>;\n\n/**\n * Renders child components if user is authenticated\n * @param props \n */\nexport function AuthenticatedTemplate({ username, homeAccountId, localAccountId, children }: AuthenticatedTemplateProps): React.ReactElement|null {\n    const context = useMsal();\n    const accountIdentifier: AccountIdentifiers = useMemo(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = useIsAuthenticated(accountIdentifier);\n\n    if (isAuthenticated && context.inProgress !== InteractionStatus.Startup) {\n        return (\n            <React.Fragment>\n                {getChildrenOrFunction(children, context)}\n            </React.Fragment>\n        );\n    }\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React, { PropsWithChildren, useMemo } from \"react\";\nimport { useMsal } from \"../hooks/useMsal\";\nimport { useIsAuthenticated } from \"../hooks/useIsAuthenticated\";\nimport { getChildrenOrFunction } from \"../utils/utilities\";\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nexport type UnauthenticatedTemplateProps = PropsWithChildren<AccountIdentifiers>;\n\n/**\n * Renders child components if user is unauthenticated\n * @param props \n */\nexport function UnauthenticatedTemplate({ username, homeAccountId, localAccountId, children }: UnauthenticatedTemplateProps): React.ReactElement|null {\n    const context = useMsal();\n    const accountIdentifier: AccountIdentifiers = useMemo(() => {\n        return {\n            username,\n            homeAccountId,\n            localAccountId\n        };\n    }, [username, homeAccountId, localAccountId]);\n    const isAuthenticated = useIsAuthenticated(accountIdentifier);\n\n    if (!isAuthenticated && context.inProgress !== InteractionStatus.Startup && context.inProgress !== InteractionStatus.HandleRedirect) {\n        return (\n            <React.Fragment>\n                {getChildrenOrFunction(children, context)}\n            </React.Fragment>\n        );\n    }\n    return null;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyId } from \"./Exports\";\r\n\r\n/**\r\n * Represents collection of properties and their values.\r\n * @class PropertyCollection\r\n */\r\nexport class PropertyCollection {\r\n    private privKeys: string[] = [] as string[];\r\n    private privValues: string[] = [] as string[];\r\n\r\n    /**\r\n     * Returns the property value in type String. The parameter must have the same type as String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member PropertyCollection.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} def - The default value which is returned if the parameter\r\n     *        is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public getProperty(key: PropertyId | string, def?: string): string {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                return this.privValues[n];\r\n            }\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member PropertyCollection.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public setProperty(key: string | PropertyId, value: string): void {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                this.privValues[n] = value;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.privKeys.push(keyToUse);\r\n        this.privValues.push(value);\r\n    }\r\n\r\n    /**\r\n     * Clones the collection.\r\n     * @member PropertyCollection.prototype.clone\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} A copy of the collection.\r\n     */\r\n    public clone(): PropertyCollection {\r\n        const clonedMap = new PropertyCollection();\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            clonedMap.privKeys.push(this.privKeys[n]);\r\n            clonedMap.privValues.push(this.privValues[n]);\r\n        }\r\n\r\n        return clonedMap;\r\n    }\r\n\r\n    /**\r\n     * Merges this set of properties into another, no overwrites.\r\n     * @member PropertyCollection.prototype.mergeTo\r\n     * @function\r\n     * @public\r\n     * @param {PropertyCollection} The collection to merge into.\r\n     */\r\n    public mergeTo(destinationCollection: PropertyCollection): void {\r\n        this.privKeys.forEach((key: string | PropertyId) => {\r\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\r\n                const value = this.getProperty(key);\r\n                destinationCollection.setProperty(key, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the keys in Property Collection.\r\n     * @member PropertyCollection.prototype.keys\r\n     * @function\r\n     * @public\r\n     * @returns {string []} Keys in the collection.\r\n     */\r\n    public get keys(): string[] {\r\n        return this.privKeys;\r\n    }\r\n}\r\n","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"bsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nvar pascalCase = function pascalCase(str) {\n  return str[0].toUpperCase() + camelize(str).slice(1);\n};\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName,\n      Component = _ref.Component,\n      defaultProps = _ref.defaultProps;\n\n  var BsComponent = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var className = _ref2.className,\n        bsPrefix = _ref2.bsPrefix,\n        _ref2$as = _ref2.as,\n        Tag = _ref2$as === void 0 ? Component || 'div' : _ref2$as,\n        props = _objectWithoutPropertiesLoose(_ref2, _excluded);\n\n    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, props));\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ResultReason\r\n} from \"../sdk/Exports\";\r\nimport { RecognitionStatus } from \"./Exports\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.EndOfDictation:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\r\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Error:\r\n                reason = CancellationErrorCode.ServiceError;\r\n                break;\r\n            case RecognitionStatus.TooManyRequests:\r\n                reason = CancellationErrorCode.TooManyRequests;\r\n                break;\r\n            case RecognitionStatus.BadRequest:\r\n                reason = CancellationErrorCode.BadRequestParameters;\r\n                break;\r\n            case RecognitionStatus.Forbidden:\r\n                reason = CancellationErrorCode.Forbidden;\r\n                break;\r\n            default:\r\n                reason = CancellationErrorCode.NoError;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n\r\n    }\r\n\r\n    public static implTranslateErrorDetails(cancellationErrorCode: CancellationErrorCode): string {\r\n        let errorDetails: string = \"The speech service encountered an internal error and could not continue.\";\r\n        switch (cancellationErrorCode) {\r\n            case CancellationErrorCode.Forbidden:\r\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\r\n                break;\r\n            case CancellationErrorCode.BadRequestParameters:\r\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\r\n                break;\r\n            case CancellationErrorCode.TooManyRequests:\r\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return errorDetails;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IAudioDestination,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport {\r\n    AudioStreamFormat,\r\n    PushAudioOutputStreamCallback\r\n} from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class AudioOutputStream\r\n */\r\nexport abstract class AudioOutputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Sets the format of the AudioOutputStream\r\n     * Note: the format is set by the synthesizer before writing. Do not set it before passing it to AudioConfig\r\n     * @member AudioOutputStream.prototype.format\r\n     */\r\n    public abstract set format(format: AudioStreamFormat);\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member AudioOutputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The audio output stream being created.\r\n     */\r\n    public static createPullStream(): PullAudioOutputStream {\r\n        return PullAudioOutputStream.create();\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @class PullAudioOutputStream\r\n */\r\nexport abstract class PullAudioOutputStream extends AudioOutputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member PullAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(): PullAudioOutputStream {\r\n        return new PullAudioOutputStreamImpl();\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStream.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} Audio buffer length has been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): Promise<number>;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PullAudioOutputStreamImpl\r\n */\r\nexport class PullAudioOutputStreamImpl extends PullAudioOutputStream implements IAudioDestination {\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privId: string;\r\n    private privStream: Stream<ArrayBuffer>;\r\n    private privLastChunkView: Int8Array;\r\n\r\n    /**\r\n     * Creates and initializes an instance with the given values.\r\n     * @constructor\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new Stream<ArrayBuffer>();\r\n    }\r\n\r\n    /**\r\n     * Sets the format information to the stream. For internal use only.\r\n     * @param {AudioStreamFormat} format - the format to be set.\r\n     */\r\n    public set format(format: AudioStreamFormat) {\r\n        if (format === undefined || format === null) {\r\n            this.privFormat = AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        this.privFormat = format as AudioOutputFormatImpl;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): AudioStreamFormat {\r\n        return this.privFormat;\r\n    }\r\n\r\n    /**\r\n     * Checks if the stream is closed\r\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\r\n     * @property\r\n     * @public\r\n     */\r\n    public get isClosed(): boolean {\r\n        return this.privStream.isClosed;\r\n    }\r\n\r\n    /**\r\n     * Gets the id of the stream\r\n     * @member PullAudioOutputStreamImpl.prototype.id\r\n     * @property\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStreamImpl.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} - Audio buffer length has been read.\r\n     */\r\n    public async read(dataBuffer: ArrayBuffer): Promise<number> {\r\n        const intView: Int8Array = new Int8Array(dataBuffer);\r\n        let totalBytes: number = 0;\r\n\r\n        if (this.privLastChunkView !== undefined) {\r\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\r\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\r\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\r\n                return Promise.resolve(dataBuffer.byteLength);\r\n            }\r\n            intView.set(this.privLastChunkView);\r\n            totalBytes = this.privLastChunkView.length;\r\n            this.privLastChunkView = undefined;\r\n        }\r\n\r\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\r\n            const chunk: IStreamChunk<ArrayBuffer> = await this.privStream.read();\r\n            if (chunk !== undefined && !chunk.isEnd) {\r\n                let tmpBuffer: ArrayBuffer;\r\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\r\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\r\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\r\n                } else {\r\n                    tmpBuffer = chunk.buffer;\r\n                }\r\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\r\n                totalBytes += tmpBuffer.byteLength;\r\n            } else {\r\n                await this.privStream.readEnded();\r\n            }\r\n        }\r\n        return totalBytes;\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PullAudioOutputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class PushAudioOutputStream\r\n */\r\nexport abstract class PushAudioOutputStream extends AudioOutputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { super(); }\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * write() and close() methods.\r\n     * @member PushAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     *        derived from PushAudioOutputStreamCallback\r\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(callback: PushAudioOutputStreamCallback): PushAudioOutputStream {\r\n        return new PushAudioOutputStreamImpl(callback);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PushAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PushAudioOutputStreamImpl\r\n */\r\nexport class PushAudioOutputStreamImpl extends PushAudioOutputStream implements IAudioDestination {\r\n    private readonly privId: string;\r\n    private privCallback: PushAudioOutputStreamCallback;\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * read() and close() methods.\r\n     * @constructor\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     *        derived from PushAudioOutputStreamCallback\r\n     */\r\n    public constructor(callback: PushAudioOutputStreamCallback) {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n    }\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    public set format(format: AudioStreamFormat) { }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        if (!!this.privCallback.write) {\r\n            this.privCallback.write(buffer);\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (!!this.privCallback.close) {\r\n            this.privCallback.close();\r\n        }\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Separators, Constants } from \"../utils/Constants\";\n\n/**\n * Client info object which consists of two IDs. Need to add more info here.\n */\nexport type ClientInfo = {\n    uid: string,\n    utid: string\n};\n\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nexport function buildClientInfo(rawClientInfo: string, crypto: ICrypto): ClientInfo {\n    if (StringUtils.isEmpty(rawClientInfo)) {\n        throw ClientAuthError.createClientInfoEmptyError();\n    }\n\n    try {\n        const decodedClientInfo: string = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo) as ClientInfo;\n    } catch (e) {\n        throw ClientAuthError.createClientInfoDecodingError(e);\n    }\n}\n\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId \n */\nexport function buildClientInfoFromHomeAccountId(homeAccountId: string): ClientInfo {\n    if (StringUtils.isEmpty(homeAccountId)) {\n        throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\n    }\n    const clientInfoParts: string[] = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]\n    };\n}\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be canceled.\r\n * @class CancellationReason\r\n */\r\nexport enum CancellationReason {\r\n    /**\r\n     * Indicates that an error occurred during speech recognition.\r\n     * @member CancellationReason.Error\r\n     */\r\n    Error,\r\n\r\n    /**\r\n     * Indicates that the end of the audio stream was reached.\r\n     * @member CancellationReason.EndOfStream\r\n     */\r\n    EndOfStream,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport enum RecognitionMode {\r\n    Interactive,\r\n    Conversation,\r\n    Dictation,\r\n}\r\n\r\nexport enum SpeechResultFormat {\r\n    Simple,\r\n    Detailed,\r\n}\r\n\r\nexport class RecognizerConfig {\r\n    private privRecognitionMode: RecognitionMode = RecognitionMode.Interactive;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privRecognitionActivityTimeout: number;\r\n    private privParameters: PropertyCollection;\r\n    private privMaxRetryCount: number;\r\n\r\n    constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognitionMode;\r\n    }\r\n\r\n    public set recognitionMode(value: RecognitionMode) {\r\n        this.privRecognitionMode = value;\r\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\r\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n\r\n    public get recognitionActivityTimeout(): number {\r\n        return this.privRecognitionActivityTimeout;\r\n    }\r\n\r\n    public get isContinuousRecognition(): boolean {\r\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\r\n    }\r\n\r\n    public get maxRetryCount(): number {\r\n        return this.privMaxRetryCount;\r\n    }\r\n}\r\n\r\n// The config is serialized and sent as the Speech.Config\r\nexport class SpeechServiceConfig {\r\n    private context: Context;\r\n    private recognition: string;\r\n\r\n    constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public serialize = (): string => {\r\n        return JSON.stringify(this, (key: any, value: any): any => {\r\n            if (value && typeof value === \"object\") {\r\n                const replacement: any = {};\r\n                for (const k in value) {\r\n                    if (Object.hasOwnProperty.call(value, k)) {\r\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\r\n                    }\r\n                }\r\n                return replacement;\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.context;\r\n    }\r\n\r\n    public get Recognition(): string {\r\n        return this.recognition;\r\n    }\r\n\r\n    public set Recognition(value: string) {\r\n        this.recognition = value.toLowerCase();\r\n    }\r\n}\r\n\r\nexport class Context {\r\n    public system: System;\r\n    public os: OS;\r\n    public audio: ISpeechConfigAudio;\r\n\r\n    constructor(os: OS) {\r\n        this.system = new System();\r\n        this.os = os;\r\n    }\r\n}\r\n\r\nexport class System {\r\n    public name: string;\r\n    public version: string;\r\n    public build: string;\r\n    public lang: string;\r\n\r\n    constructor() {\r\n        // Note: below will be patched for official builds.\r\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.19.0\";\r\n\r\n        this.name = \"SpeechSDK\";\r\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\r\n        this.build = \"JavaScript\";\r\n        this.lang = \"JavaScript\";\r\n    }\r\n}\r\n\r\nexport class OS {\r\n    public platform: string;\r\n    public name: string;\r\n    public version: string;\r\n\r\n    constructor(platform: string, name: string, version: string) {\r\n        this.platform = platform;\r\n        this.name = name;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport class Device {\r\n    public manufacturer: string;\r\n    public model: string;\r\n    public version: string;\r\n\r\n    constructor(manufacturer: string, model: string, version: string) {\r\n        this.manufacturer = manufacturer;\r\n        this.model = model;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport interface ISpeechConfigAudio {\r\n    source?: ISpeechConfigAudioDevice;\r\n    playback?: ISpeechConfigAudioDevice;\r\n}\r\n\r\nexport interface ISpeechConfigAudioDevice {\r\n    manufacturer: string;\r\n    model: string;\r\n    connectivity: connectivity;\r\n    type: type;\r\n    samplerate: number;\r\n    bitspersample: number;\r\n    channelcount: number;\r\n}\r\n\r\nexport enum connectivity {\r\n    Bluetooth = \"Bluetooth\",\r\n    Wired = \"Wired\",\r\n    WiFi = \"WiFi\",\r\n    Cellular = \"Cellular\",\r\n    InBuilt = \"InBuilt\",\r\n    Unknown = \"Unknown\",\r\n}\r\n\r\nexport enum type {\r\n    Phone = \"Phone\",\r\n    Speaker = \"Speaker\",\r\n    Car = \"Car\",\r\n    Headset = \"Headset\",\r\n    Thermostat = \"Thermostat\",\r\n    Microphones = \"Microphones\",\r\n    Deskphone = \"Deskphone\",\r\n    RemoteControl = \"RemoteControl\",\r\n    Unknown = \"Unknown\",\r\n    File = \"File\",\r\n    Stream = \"Stream\",\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class SpeechRecognitionResult\r\n */\r\nexport class SpeechRecognitionResult extends RecognitionResult {\r\n    private readonly privSpeakerId: string;\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @public\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\r\n                       duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\r\n        this.privSpeakerId = speakerId;\r\n    }\r\n\r\n    /**\r\n     * speaker id from conversation transcription/id scenarios\r\n     * @member SpeechRecognitionResult.prototype.speakerId\r\n     * @function\r\n     * @public\r\n     * @returns {string} id of speaker in given result\r\n     */\r\n    public get speakerId(): string {\r\n        return this.privSpeakerId;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class AudioSourceEvent extends PlatformEvent {\r\n    private privAudioSourceId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privAudioSourceId = audioSourceId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n}\r\n\r\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceReadyEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceOffEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceOffEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, error: string) {\r\n        super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, audioNodeId: string) {\r\n        super(eventName, audioSourceId);\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, audioNodeId: string, error: string) {\r\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define Speech Recognizer output formats.\r\n * @class OutputFormat\r\n */\r\nexport enum OutputFormat {\r\n    /**\r\n     * @member OutputFormat.Simple\r\n     */\r\n    Simple = 0,\r\n\r\n    /**\r\n     * @member OutputFormat.Detailed\r\n     */\r\n    Detailed,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechRecognitionEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n    private privSessionId: string;\r\n\r\n    constructor(eventName: string, requestId: string, sessionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n\r\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"ListeningStartedEvent\", requestId, sessionId);\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\r\n    private privAuthFetchEventid: string;\r\n\r\n    constructor(requestId: string, authFetchEventid: string, sessionId: string) {\r\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\r\n        this.privAuthFetchEventid = authFetchEventid;\r\n    }\r\n\r\n    public get authFetchEventid(): string {\r\n        return this.privAuthFetchEventid;\r\n    }\r\n}\r\n\r\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, sessionId: string) {\r\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport enum RecognitionCompletionStatus {\r\n    Success,\r\n    AudioSourceError,\r\n    AudioSourceTimeout,\r\n    AuthTokenFetchError,\r\n    AuthTokenFetchTimeout,\r\n    UnAuthorized,\r\n    ConnectTimeout,\r\n    ConnectError,\r\n    ClientRecognitionActivityTimeout,\r\n    UnknownError,\r\n}\r\n\r\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n    private privServiceTag: string;\r\n    private privStatus: RecognitionCompletionStatus;\r\n    private privError: string;\r\n\r\n    constructor(\r\n        requestId: string,\r\n        audioSourceId: string,\r\n        audioNodeId: string,\r\n        authFetchEventId: string,\r\n        sessionId: string,\r\n        serviceTag: string,\r\n        status: RecognitionCompletionStatus,\r\n        error: string) {\r\n\r\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privStatus = status;\r\n        this.privError = error;\r\n        this.privServiceTag = serviceTag;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n\r\n    public get serviceTag(): string {\r\n        return this.privServiceTag;\r\n    }\r\n\r\n    public get status(): RecognitionCompletionStatus {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    Deferred\r\n} from \"../common/Exports\";\r\nimport { IRequestOptions } from \"./Exports\";\r\n\r\nimport bent, { BentResponse } from \"bent\";\r\n\r\nexport enum RestRequestType {\r\n    Get = \"GET\",\r\n    Post = \"POST\",\r\n    Delete = \"DELETE\",\r\n    File = \"file\",\r\n}\r\n\r\nexport interface IRestResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: any;\r\n    headers: string;\r\n}\r\n\r\n// accept rest operations via request method and return abstracted objects from server response\r\nexport class RestMessageAdapter {\r\n\r\n    private privIgnoreCache: boolean;\r\n    private privHeaders: { [key: string]: string; };\r\n\r\n    public constructor(\r\n        configParams: IRequestOptions\r\n        ) {\r\n\r\n        if (!configParams) {\r\n            throw new ArgumentNullError(\"configParams\");\r\n        }\r\n\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public static extractHeaderValue(headerKey: string, headers: string): string {\r\n        let headerValue: string = \"\";\r\n\r\n        try {\r\n            const arr = headers.trim().split(/[\\r\\n]+/);\r\n            const headerMap: any = {};\r\n            arr.forEach((line: any) => {\r\n                const parts = line.split(\": \");\r\n                const header = parts.shift().toLowerCase();\r\n                const value = parts.join(\": \");\r\n                headerMap[header] = value;\r\n            });\r\n\r\n            headerValue = headerMap[headerKey.toLowerCase()];\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n\r\n        return headerValue;\r\n    }\r\n\r\n    public set options(configParams: IRequestOptions) {\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public setHeaders(key: string, value: string ): void {\r\n        this.privHeaders[key] = value;\r\n    }\r\n\r\n    public request(\r\n        method: RestRequestType,\r\n        uri: string,\r\n        queryParams: any = {},\r\n        body: any = null,\r\n        binaryBody: Blob | Buffer = null,\r\n        ): Promise<IRestResponse> {\r\n\r\n        const responseReceivedDeferral = new Deferred<IRestResponse>();\r\n\r\n        const requestCommand = method === RestRequestType.File ? \"POST\" : method;\r\n        const handleRestResponse = (data: BentResponse, j: any = {}): IRestResponse => {\r\n            const d: { statusText?: string, statusMessage?: string } = data;\r\n            return {\r\n                data: JSON.stringify(j),\r\n                headers: JSON.stringify(data.headers),\r\n                json: j,\r\n                ok: data.statusCode >= 200 && data.statusCode < 300,\r\n                status: data.statusCode,\r\n                statusText: j.error ? j.error.message : d.statusText ? d.statusText : d.statusMessage\r\n            };\r\n        };\r\n\r\n        const blobToArrayBuffer = (blob: Blob) => {\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(blob);\r\n            return new Promise((resolve: (value: unknown) => void) => {\r\n                reader.onloadend = () => {\r\n                resolve(reader.result);\r\n                };\r\n            });\r\n        };\r\n\r\n        const send = (postData: any): void => {\r\n            const sendRequest = bent(uri, requestCommand, this.privHeaders, 200, 201, 202, 204, 400, 401, 402, 403, 404);\r\n            const params = this.queryParams(queryParams) === \"\" ? \"\" : \"?\" + this.queryParams(queryParams);\r\n            sendRequest(params, postData).then( async (data: any) => {\r\n                if (method === RestRequestType.Delete || data.statusCode === 204) {\r\n                    // No JSON from Delete and reset (204) operations\r\n                    responseReceivedDeferral.resolve(handleRestResponse(data));\r\n                } else {\r\n                    const j: any = await data.json();\r\n                    responseReceivedDeferral.resolve(handleRestResponse(data, j));\r\n                }\r\n            }).catch((error: string) => {\r\n                responseReceivedDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        if (this.privIgnoreCache) {\r\n            this.privHeaders[\"Cache-Control\"] = \"no-cache\";\r\n        }\r\n\r\n        if (method === RestRequestType.File && binaryBody) {\r\n            const contentType = \"multipart/form-data\";\r\n            this.privHeaders[\"content-type\"] = contentType;\r\n            this.privHeaders[\"Content-Type\"] = contentType;\r\n            if (typeof (Blob) !== \"undefined\" && binaryBody instanceof Blob) {\r\n                blobToArrayBuffer(binaryBody as Blob).then( (res: any) => {\r\n                    send(res);\r\n                }).catch((error: any) => {\r\n                    responseReceivedDeferral.reject(error);\r\n                });\r\n            } else {\r\n                send(binaryBody as Buffer);\r\n            }\r\n        } else {\r\n            if (method === RestRequestType.Post && body) {\r\n                this.privHeaders[\"content-type\"] = \"application/json\";\r\n                this.privHeaders[\"Content-Type\"] = \"application/json\";\r\n            }\r\n            send(body);\r\n        }\r\n        return responseReceivedDeferral.promise;\r\n    }\r\n\r\n    private withQuery(url: string, params: any = {}): any {\r\n        const queryString = this.queryParams(params);\r\n        return queryString ? url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + queryString : url;\r\n    }\r\n\r\n    private queryParams(params: any = {}): any {\r\n        return Object.keys(params)\r\n            .map((k: any) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\r\n            .join(\"&\");\r\n    }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Authority types supported by MSAL.\n */\nexport enum AuthorityType {\n    Default,\n    Adfs\n}\n","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react'; // TODO: check\n\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { INumberDictionary } from \"../../common/Exports\";\r\nimport { SpeechSynthesisOutputFormat } from \"../SpeechSynthesisOutputFormat\";\r\nimport { AudioFormatTag, AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * @private\r\n * @class AudioOutputFormatImpl\r\n * Updated in version 1.17.0\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AudioOutputFormatImpl extends AudioStreamFormatImpl {\r\n    public static SpeechSynthesisOutputFormatToString: INumberDictionary<string> = {\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus]: \"webm-24khz-16bit-24kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk]: \"raw-24khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw]: \"raw-8khz-8bit-mono-alaw\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw]: \"riff-8khz-8bit-mono-alaw\",\r\n    };\r\n    private priAudioFormatString: string;\r\n    /**\r\n     * audio format string for synthesis request, which may differ from priAudioFormatString.\r\n     * e.g. for riff format, we will request raw format and add a header in SDK side.\r\n     */\r\n    private readonly priRequestAudioFormatString: string;\r\n    private readonly priHasHeader: boolean;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param formatTag\r\n     * @param {number} channels - Number of channels.\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} avgBytesPerSec - Average bytes per second.\r\n     * @param {number} blockAlign - Block alignment.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {string} audioFormatString - Audio format string\r\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\r\n     * @param {boolean} hasHeader - If the format has header or not.\r\n     */\r\n    public constructor(formatTag: AudioFormatTag,\r\n                       channels: number,\r\n                       samplesPerSec: number,\r\n                       avgBytesPerSec: number,\r\n                       blockAlign: number,\r\n                       bitsPerSample: number,\r\n                       audioFormatString: string,\r\n                       requestAudioFormatString: string,\r\n                       hasHeader: boolean) {\r\n        super(samplesPerSec, bitsPerSample, channels, formatTag);\r\n        this.formatTag = formatTag;\r\n        this.avgBytesPerSec = avgBytesPerSec;\r\n        this.blockAlign = blockAlign;\r\n        this.priAudioFormatString = audioFormatString;\r\n        this.priRequestAudioFormatString = requestAudioFormatString;\r\n        this.priHasHeader = hasHeader;\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat?: SpeechSynthesisOutputFormat): AudioOutputFormatImpl {\r\n        if (speechSynthesisOutputFormat === undefined) {\r\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString: string): AudioOutputFormatImpl {\r\n        switch (speechSynthesisOutputFormatString) {\r\n            case \"raw-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"audio-16khz-16kbps-mono-siren\",\r\n                    true);\r\n            case \"audio-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-32kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    32 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-128kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    128 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-64kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    64 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-48kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    48 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-160kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    160 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-16khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n\r\n            case \"riff-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-mulaw\",\r\n                    true);\r\n            case \"raw-16khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"ogg-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    16000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    24000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"riff-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"audio-48khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-192kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    192 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-48khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    48000,\r\n                    12000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    16000,\r\n                    8000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    8000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-24kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    3000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    24000,\r\n                    24000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    48000,\r\n                    30000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-alaw\",\r\n                    true);\r\n            case \"riff-16khz-16bit-mono-pcm\":\r\n            default:\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    \"riff-16khz-16bit-mono-pcm\",\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    true);\r\n        }\r\n    }\r\n\r\n    public static getDefaultOutputFormat(): AudioOutputFormatImpl {\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            (typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\r\n    }\r\n\r\n    /**\r\n     * The format tag of the audio\r\n     * @AudioFormatTag AudioOutputFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: AudioFormatTag;\r\n\r\n    /**\r\n     * Specifies if this audio output format has a header\r\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\r\n     * @function\r\n     * @public\r\n     */\r\n    public get hasHeader(): boolean {\r\n        return this.priHasHeader;\r\n    }\r\n\r\n    /**\r\n     * Specifies the header of this format\r\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\r\n     * @function\r\n     * @public\r\n     */\r\n    public get header(): ArrayBuffer {\r\n        if (this.hasHeader) {\r\n            return this.privHeader;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Updates the header based on the audio length\r\n     * @member AudioOutputFormatImpl.updateHeader\r\n     * @function\r\n     * @public\r\n     * @param {number} audioLength - the audio length\r\n     */\r\n    public updateHeader(audioLength: number): void {\r\n        if (this.priHasHeader) {\r\n            const view = new DataView(this.privHeader);\r\n            view.setUint32(40, audioLength, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio format string to be sent to the service\r\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\r\n     * @function\r\n     * @public\r\n     */\r\n    public get requestAudioFormatString(): string {\r\n        return this.priRequestAudioFormatString;\r\n    }\r\n\r\n}\r\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Separators,\n    CacheAccountType,\n    CacheType,\n    Constants,\n} from \"../../utils/Constants\";\nimport { Authority } from \"../../authority/Authority\";\nimport { AuthToken } from \"../../account/AuthToken\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { buildClientInfo } from \"../../account/ClientInfo\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { AccountInfo } from \"../../account/AccountInfo\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\nimport { AuthorityType } from \"../../authority/AuthorityType\";\nimport { Logger } from \"../../logger/Logger\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\n\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      clientInfo: Full base64 encoded client info received from ESTS\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      oboAssertion: access token passed in as part of OBO request\n *      idTokenClaims: Object containing claims parsed from ID token\n * }\n */\nexport class AccountEntity {\n    homeAccountId: string;\n    environment: string;\n    realm: string;\n    localAccountId: string;\n    username: string;\n    authorityType: string;\n    name?: string;\n    clientInfo?: string;\n    lastModificationTime?: string;\n    lastModificationApp?: string;\n    oboAssertion?: string;\n    cloudGraphHostName?: string;\n    msGraphHost?: string; \n    idTokenClaims?: TokenClaims;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey(): string {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId\n        });\n    }\n\n    /**\n     * returns the type of the cache (in this case account)\n     */\n    generateType(): number {\n        switch (this.authorityType) {\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\n                return CacheType.ADFS;\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\n                return CacheType.MSA;\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\n                return CacheType.MSSTS;\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\n                return CacheType.GENERIC;\n            default: {\n                throw ClientAuthError.createUnexpectedAccountTypeError();\n            }\n        }\n    }\n\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo(): AccountInfo {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            idTokenClaims: this.idTokenClaims\n        };\n    }\n\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || \"\",\n            accountInterface.tenantId || \"\",\n        ];\n\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param clientInfo\n     * @param authority\n     * @param idToken\n     * @param policy\n     */\n    static createAccount(\n        clientInfo: string,\n        homeAccountId: string,\n        idToken: AuthToken,\n        authority?: Authority,\n        oboAssertion?: string,\n        cloudGraphHostName?: string,\n        msGraphHost?: string,\n        environment?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        account.clientInfo = clientInfo;\n        account.homeAccountId = homeAccountId;\n\n        const env = environment || (authority && authority.getPreferredCache());\n\n        if (!env) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm = idToken?.claims?.tid || \"\";\n        account.oboAssertion = oboAssertion;\n        \n        if (idToken) {\n            account.idTokenClaims = idToken.claims;\n\n            // How do you account for MSA CID here?\n            account.localAccountId = idToken?.claims?.oid || idToken?.claims?.sub || \"\";\n\n            /*\n             * In B2C scenarios the emails claim is used instead of preferred_username and it is an array. In most cases it will contain a single email.\n             * This field should not be relied upon if a custom policy is configured to return more than 1 email.\n             */\n            account.username = idToken?.claims?.preferred_username || (idToken?.claims?.emails? idToken.claims.emails[0]: \"\");\n            account.name = idToken?.claims?.name;\n        }\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        return account;\n    }\n\n    /**\n     * Builds non-AAD/ADFS account.\n     * @param authority\n     * @param idToken\n     */\n    static createGenericAccount(\n        homeAccountId: string,\n        idToken: AuthToken,\n        authority?: Authority,\n        oboAssertion?: string,\n        cloudGraphHostName?: string,\n        msGraphHost?: string,\n        environment?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType = (authority && authority.authorityType === AuthorityType.Adfs) ? CacheAccountType.ADFS_ACCOUNT_TYPE : CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = homeAccountId;\n        // non AAD scenarios can have empty realm\n        account.realm = \"\";\n        account.oboAssertion = oboAssertion;\n\n        const env = environment || authority && authority.getPreferredCache();\n\n        if (!env) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        if (idToken) {\n            // How do you account for MSA CID here?\n            account.localAccountId = idToken?.claims?.oid || idToken?.claims?.sub || \"\";\n            // upn claim for most ADFS scenarios\n            account.username = idToken?.claims?.upn || \"\";\n            account.name = idToken?.claims?.name || \"\";\n            account.idTokenClaims = idToken?.claims;\n        }\n\n        account.environment = env;\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        /*\n         * add uniqueName to claims\n         * account.name = idToken.claims.uniqueName;\n         */\n\n        return account;\n    }\n\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(serverClientInfo: string, authType: AuthorityType, logger: Logger, cryptoObj: ICrypto, idToken?: AuthToken): string {\n\n        const accountId = idToken?.claims?.sub ? idToken.claims.sub : Constants.EMPTY_STRING;\n\n        // since ADFS does not have tid and does not set client_info\n        if (authType === AuthorityType.Adfs) {\n            return accountId;\n        }\n\n        // for cases where there is clientInfo\n        if (serverClientInfo) {\n            try {\n                const clientInfo = buildClientInfo(serverClientInfo, cryptoObj);\n                if (!StringUtils.isEmpty(clientInfo.uid) && !StringUtils.isEmpty(clientInfo.utid)) {\n                    return `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`;\n                }\n            } catch (e) {}\n        }\n\n        // default to \"sub\" claim\n        logger.verbose(\"No client info in response\");\n        return accountId;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\")\n        );\n    }\n\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA \n     * @param accountB \n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(accountA: AccountInfo | null, accountB: AccountInfo | null, compareClaims?: boolean): boolean {\n        if (!accountA || !accountB) {\n            return false;\n        }\n\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims || {}) as TokenClaims;\n            const accountBClaims = (accountB.idTokenClaims || {}) as TokenClaims;\n\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch = (accountAClaims.iat === accountBClaims.iat) &&\n            (accountAClaims.nonce === accountBClaims.nonce);\n        }\n\n        return (accountA.homeAccountId === accountB.homeAccountId) && \n            (accountA.localAccountId === accountB.localAccountId) &&\n            (accountA.username === accountB.username) &&\n            (accountA.tenantId === accountB.tenantId) &&\n            (accountA.environment === accountB.environment) &&\n            claimsMatch;\n    }\n}\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\n\r\nexport enum PromiseState {\r\n    None,\r\n    Resolved,\r\n    Rejected,\r\n}\r\n\r\nexport interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n\r\n    resolve(result: T): IDeferred<T>;\r\n\r\n    reject(error: string): IDeferred<T>;\r\n}\r\n\r\nexport class PromiseResult<T> {\r\n    protected privIsCompleted: boolean;\r\n    protected privIsError: boolean;\r\n    protected privError: string;\r\n    protected privResult: T;\r\n\r\n    public constructor(promiseResultEventSource: PromiseResultEventSource<T>) {\r\n        promiseResultEventSource.on((result: T) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = false;\r\n                this.privResult = result;\r\n            }\r\n        }, (error: string) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = true;\r\n                this.privError = error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public get isCompleted(): boolean {\r\n        return this.privIsCompleted;\r\n    }\r\n\r\n    public get isError(): boolean {\r\n        return this.privIsError;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n\r\n    public get result(): T {\r\n        return this.privResult;\r\n    }\r\n\r\n    public throwIfError = (): void => {\r\n        if (this.isError) {\r\n            throw this.error;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PromiseResultEventSource<T>  {\r\n\r\n    private privOnSetResult: (result: T) => void;\r\n    private privOnSetError: (error: string) => void;\r\n\r\n    public setResult = (result: T): void => {\r\n        this.privOnSetResult(result);\r\n    }\r\n\r\n    public setError = (error: string): void => {\r\n        this.privOnSetError(error);\r\n    }\r\n\r\n    public on = (onSetResult: (result: T) => void, onSetError: (error: string) => void): void => {\r\n        this.privOnSetResult = onSetResult;\r\n        this.privOnSetError = onSetError;\r\n    }\r\n}\r\n\r\nexport class Deferred<T> implements IDeferred<T> {\r\n    private privPromise: Promise<T>;\r\n    private privResolve: (value?: T | PromiseLike<T>) => void;\r\n    private privReject: (reason?: any) => void;\r\n\r\n    public constructor() {\r\n        this.privPromise = new Promise<T>((resolve: (value: T) => void, reject: (reason: any) => void) => {\r\n            this.privResolve = resolve;\r\n            this.privReject = reject;\r\n        });\r\n    }\r\n\r\n    public get promise(): Promise<T> {\r\n        return this.privPromise;\r\n    }\r\n\r\n    public resolve = (result: T | Promise<T>): Deferred<T> => {\r\n        this.privResolve(result);\r\n        return this;\r\n    }\r\n\r\n    public reject = (error: string): Deferred<T> => {\r\n        this.privReject(error);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Sink<T> {\r\n    private privState: PromiseState = PromiseState.None;\r\n    private privPromiseResult: PromiseResult<T> = null;\r\n    private privPromiseResultEvents: PromiseResultEventSource<T> = null;\r\n\r\n    private privSuccessHandlers: ((result: T) => void)[] = [];\r\n    private privErrorHandlers: ((e: string) => void)[] = [];\r\n\r\n    public constructor() {\r\n        this.privPromiseResultEvents = new PromiseResultEventSource();\r\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\r\n    }\r\n\r\n    public get state(): PromiseState {\r\n        return this.privState;\r\n    }\r\n\r\n    public get result(): PromiseResult<T> {\r\n        return this.privPromiseResult;\r\n    }\r\n\r\n    public resolve = (result: T): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot resolve a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Resolved;\r\n        this.privPromiseResultEvents.setResult(result);\r\n\r\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\r\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public reject = (error: string): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot reject a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Rejected;\r\n        this.privPromiseResultEvents.setError(error);\r\n\r\n        for (const errorHandler of this.privErrorHandlers) {\r\n            this.executeErrorCallback(error, errorHandler);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public on = (\r\n        successCallback: (result: T) => void,\r\n        errorCallback: (error: string) => void): void => {\r\n\r\n        if (successCallback == null) {\r\n            successCallback = (r: T) => { return; };\r\n        }\r\n\r\n        if (this.privState === PromiseState.None) {\r\n            this.privSuccessHandlers.push(successCallback);\r\n            this.privErrorHandlers.push(errorCallback);\r\n        } else {\r\n            if (this.privState === PromiseState.Resolved) {\r\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\r\n            } else if (this.privState === PromiseState.Rejected) {\r\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\r\n            }\r\n\r\n            this.detachHandlers();\r\n        }\r\n    }\r\n\r\n    private executeSuccessCallback = (result: T, successCallback: (result: T) => void, errorCallback: (error: string) => void): void => {\r\n        try {\r\n            successCallback(result);\r\n        } catch (e) {\r\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\r\n        }\r\n    }\r\n\r\n    private executeErrorCallback = (error: string, errorCallback: (error: string) => void): void => {\r\n        if (errorCallback) {\r\n            try {\r\n                errorCallback(error);\r\n            } catch (e) {\r\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\r\n            }\r\n        } else {\r\n            throw new Error(`'Unhandled error: ${error}'`);\r\n        }\r\n    }\r\n\r\n    private detachHandlers = (): void => {\r\n        this.privErrorHandlers = [];\r\n        this.privSuccessHandlers = [];\r\n    }\r\n}\r\n\r\nexport function marshalPromiseToCallbacks<T>(\r\n    promise: Promise<T>,\r\n    cb?: (value: T) => void,\r\n    err?: (error: string) => void): void {\r\n    promise.then((val: T): void => {\r\n        try {\r\n            if (!!cb) {\r\n                cb(val);\r\n            }\r\n        } catch (error) {\r\n            if (!!err) {\r\n                try {\r\n                    if (error instanceof Error) {\r\n                        const typedError: Error = error as Error;\r\n                        err(typedError.name + \": \" + typedError.message);\r\n                    } else {\r\n                        err(error);\r\n                    }\r\n                    /* tslint:disable:no-empty */\r\n                } catch (error) { }\r\n            }\r\n        }\r\n    }, (error: any): void => {\r\n        if (!!err) {\r\n            try {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) { }\r\n        }\r\n    });\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for session events like Speech Start/End Detected\r\n * @class\r\n */\r\nexport class RecognitionEventArgs extends SessionEventArgs {\r\n    private privOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(offset: number, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privOffset = offset;\r\n    }\r\n\r\n    /**\r\n     * Represents the message offset\r\n     * @member RecognitionEventArgs.prototype.offset\r\n     * @function\r\n     * @public\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IEventListener, IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class EventSource<TEvent extends PlatformEvent> implements IEventSource<TEvent> {\r\n    private privEventListeners: IStringDictionary<(event: TEvent) => void> = {};\r\n    private privMetadata: IStringDictionary<string>;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    constructor(metadata?: IStringDictionary<string>) {\r\n        this.privMetadata = metadata;\r\n    }\r\n\r\n    public onEvent = (event: TEvent): void => {\r\n        if (this.isDisposed()) {\r\n            throw (new ObjectDisposedError(\"EventSource\"));\r\n        }\r\n\r\n        if (this.metadata) {\r\n            for (const paramName in this.metadata) {\r\n                if (paramName) {\r\n                    if (event.metadata) {\r\n                        if (!event.metadata[paramName]) {\r\n                            event.metadata[paramName] = this.metadata[paramName];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const eventId in this.privEventListeners) {\r\n            if (eventId && this.privEventListeners[eventId]) {\r\n                this.privEventListeners[eventId](event);\r\n            }\r\n        }\r\n    }\r\n\r\n    public attach = (onEventCallback: (event: TEvent) => void): IDetachable => {\r\n        const id = createNoDashGuid();\r\n        this.privEventListeners[id] = onEventCallback;\r\n        return {\r\n            detach: () => {\r\n                delete this.privEventListeners[id];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public attachListener = (listener: IEventListener<TEvent>): IDetachable => {\r\n        return this.attach(listener.onEvent);\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose = (): void => {\r\n        this.privEventListeners = null;\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface IAuthentication {\r\n    fetch(authFetchEventId: string): Promise<AuthInfo>;\r\n    fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo>;\r\n}\r\n\r\nexport class AuthInfo {\r\n    private privHeaderName: string;\r\n    private privToken: string;\r\n\r\n    public constructor(headerName: string, token: string) {\r\n        this.privHeaderName = headerName;\r\n        this.privToken = token;\r\n    }\r\n\r\n    public get headerName(): string {\r\n        return this.privHeaderName;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privToken;\r\n    }\r\n}\r\n","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines contents of conversation transcribed/transcribing event.\r\n * @class ConversationTranscriptionEventArgs\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationTranscriptionEventArgs extends SpeechRecognitionEventArgs {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult, Translations } from \"./Exports\";\r\n\r\n/**\r\n * Translation text result.\r\n * @class TranslationRecognitionResult\r\n */\r\nexport class TranslationRecognitionResult extends SpeechRecognitionResult {\r\n    private privTranslations: Translations;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {Translations} translations - The translations.\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(translations: Translations, resultId?: string, reason?: ResultReason,\r\n                       text?: string, duration?: number, offset?: number, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, undefined, undefined, undefined, errorDetails, json, properties);\r\n\r\n        this.privTranslations = translations;\r\n    }\r\n\r\n    /**\r\n     * Presents the translation results. Each item in the dictionary represents\r\n     * a translation result in one of target languages, where the key is the name\r\n     * of the target language, in BCP-47 format, and the value is the translation\r\n     * text in the specified language.\r\n     * @member TranslationRecognitionResult.prototype.translations\r\n     * @function\r\n     * @public\r\n     * @returns {Translations} the current translation map that holds all translations requested.\r\n     */\r\n    public get translations(): Translations {\r\n        return this.privTranslations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IntentRecognitionResult, RecognitionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result event arguments.\r\n * @class\r\n */\r\nexport class IntentRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: IntentRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param result - The result of the intent recognition.\r\n     * @param offset - The offset.\r\n     * @param sessionId - The session id.\r\n     */\r\n    public constructor(result: IntentRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Represents the intent recognition result.\r\n     * @member IntentRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\r\n     */\r\n    public get result(): IntentRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result.\r\n * @class\r\n */\r\nexport class IntentRecognitionResult extends SpeechRecognitionResult {\r\n    private privIntentId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param intentId - The intent id.\r\n     * @param resultId - The result id.\r\n     * @param reason - The reason.\r\n     * @param text - The recognized text.\r\n     * @param duration - The duration.\r\n     * @param offset - The offset into the stream.\r\n     * @param language - Primary Language detected, if provided.\r\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param errorDetails - Error details, if provided.\r\n     * @param json - Additional Json, if provided.\r\n     * @param properties - Additional properties, if provided.\r\n     */\r\n    constructor(intentId?: string, resultId?: string, reason?: ResultReason, text?: string,\r\n                duration?: number, offset?: number, language?: string, languageDetectionConfidence?: string,\r\n                errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\r\n\r\n        this.privIntentId = intentId;\r\n    }\r\n\r\n    /**\r\n     * A String that represents the intent identifier being recognized.\r\n     * @member IntentRecognitionResult.prototype.intentId\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the intent identifier being recognized.\r\n     */\r\n    public get intentId(): string {\r\n        return this.privIntentId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\n\r\nconst CRLF: string = \"\\r\\n\";\r\n\r\nexport class WebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    public toConnectionMessage = (message: RawWebsocketMessage): Promise<ConnectionMessage> => {\r\n        const deferral = new Deferred<ConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const textMessage: string = message.textContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: string = null;\r\n\r\n                if (textMessage) {\r\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\r\n                    if (headerBodySplit && headerBodySplit.length > 0) {\r\n                        headers = this.parseHeaders(headerBodySplit[0]);\r\n                        if (headerBodySplit.length > 1) {\r\n                            body = headerBodySplit[1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const binaryMessage: ArrayBuffer = message.binaryContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: ArrayBuffer = null;\r\n\r\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\r\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\r\n                }\r\n\r\n                const dataView = new DataView(binaryMessage);\r\n                const headerLength = dataView.getInt16(0);\r\n\r\n                if (binaryMessage.byteLength < headerLength + 2) {\r\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\r\n                }\r\n\r\n                let headersString = \"\";\r\n                for (let i = 0; i < headerLength; i++) {\r\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\r\n                }\r\n\r\n                headers = this.parseHeaders(headersString);\r\n\r\n                if (binaryMessage.byteLength > headerLength + 2) {\r\n                    body = binaryMessage.slice(2 + headerLength);\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    public fromConnectionMessage = (message: ConnectionMessage): Promise<RawWebsocketMessage> => {\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const headersString = this.makeHeaders(message);\r\n                const content = message.binaryBody;\r\n\r\n                const headerBuffer = this.stringToArrayBuffer(headersString);\r\n                const headerInt8Array = new Int8Array(headerBuffer);\r\n                const headerLength = headerInt8Array.byteLength;\r\n\r\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\r\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\r\n                payloadInt8Array[1] = headerLength & 0xff;\r\n                payloadInt8Array.set(headerInt8Array, 2);\r\n\r\n                if (content) {\r\n                    const bodyInt8Array = new Int8Array(content);\r\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\r\n                }\r\n\r\n                const payload: ArrayBuffer = payloadInt8Array.buffer;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Binary, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    private makeHeaders = (message: ConnectionMessage): string => {\r\n        let headersString: string = \"\";\r\n\r\n        if (message.headers) {\r\n            for (const header in message.headers) {\r\n                if (header) {\r\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return headersString;\r\n    }\r\n\r\n    private parseHeaders = (headersString: string): IStringDictionary<string> => {\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (headersString) {\r\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\r\n            if (headers) {\r\n                for (const header of headerMatches) {\r\n                    if (header) {\r\n                        const separatorIndex = header.indexOf(\":\");\r\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\r\n                        const headerValue =\r\n                            separatorIndex > 0 && header.length > (separatorIndex + 1) ?\r\n                                header.substr(separatorIndex + 1).trim() :\r\n                                \"\";\r\n\r\n                        headers[headerName] = headerValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    private stringToArrayBuffer = (str: string): ArrayBuffer => {\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new DataView(buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(i, str.charCodeAt(i));\r\n        }\r\n        return buffer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../../common.speech/Exports\";\r\nimport {\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    ChunkedArrayBufferStream,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports\";\r\nimport { createNoDashGuid } from \"../../common/Guid\";\r\nimport { AudioStreamFormat, PullAudioInputStreamCallback } from \"../Exports\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class AudioInputStream\r\n */\r\nexport abstract class AudioInputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member AudioInputStream.createPushStream\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPushStream(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return PushAudioInputStream.create(format);\r\n    }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\r\n     * and close() methods.\r\n     * @member AudioInputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\r\n     *        PullAudioInputStreamCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\r\n     *        the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPullStream(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return PullAudioInputStream.create(callback, format);\r\n        // throw new Error(\"Oops\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @class PushAudioInputStream\r\n */\r\nexport abstract class PushAudioInputStream extends AudioInputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member PushAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\r\n     *        push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return new PushAudioInputStreamImpl(format);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStream.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PushAudioInputStreamImpl\r\n */\r\nexport class PushAudioInputStreamImpl extends PushAudioInputStream implements IAudioSource {\r\n\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privStream: Stream<ArrayBuffer>;\r\n\r\n    /**\r\n     * Creates and initalizes an instance with the given values.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} format - The audio stream format.\r\n     */\r\n    public constructor(format?: AudioStreamFormat) {\r\n        super();\r\n        if (format === undefined) {\r\n            this.privFormat = AudioStreamFormatImpl.getDefaultInputFormat();\r\n        } else {\r\n            this.privFormat = format as AudioStreamFormatImpl;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return this.attach(\"id\").then<Blob | Buffer>((audioNode: IAudioStreamNode) => {\r\n            const data: ArrayBuffer[] = [];\r\n            let bufferData = Buffer.from(\"\");\r\n            const readCycle = (): Promise<Blob | Buffer> => {\r\n                return audioNode.read().then<Blob | Buffer>((audioStreamChunk: IStreamChunk<ArrayBuffer>) => {\r\n                    if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                        if (typeof (XMLHttpRequest) !== \"undefined\" && typeof (Blob) !== \"undefined\") {\r\n                            return Promise.resolve(new Blob(data));\r\n                        } else {\r\n                            return Promise.resolve(Buffer.from(bufferData));\r\n                        }\r\n                    } else {\r\n                        if (typeof (Blob) !== \"undefined\") {\r\n                            data.push(audioStreamChunk.buffer);\r\n                        } else {\r\n                            bufferData = Buffer.concat([bufferData, this.toBuffer(audioStreamChunk.buffer)]);\r\n                        }\r\n                        return readCycle();\r\n                    }\r\n                });\r\n            };\r\n            return readCycle();\r\n        });\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        const stream = this.privStream;\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: async () => {\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: () => {\r\n                return stream.read();\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PushStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private toBuffer(arrayBuffer: ArrayBuffer): Buffer {\r\n        const buf: Buffer = Buffer.alloc(arrayBuffer.byteLength);\r\n        const view: Uint8Array = new Uint8Array(arrayBuffer);\r\n        for (let i = 0; i < buf.length; ++i) {\r\n            buf[i] = view[i];\r\n        }\r\n        return buf;\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class PullAudioInputStream\r\n */\r\nexport abstract class PullAudioInputStream extends AudioInputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { super(); }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @member PullAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     *        derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return new PullAudioInputStreamImpl(callback, format as AudioStreamFormatImpl);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PullAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PullAudioInputStreamImpl\r\n */\r\nexport class PullAudioInputStreamImpl extends PullAudioInputStream implements IAudioSource {\r\n\r\n    private privCallback: PullAudioInputStreamCallback;\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privIsClosed: boolean;\r\n    private privBufferSize: number;\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @constructor\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     *        derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     */\r\n    public constructor(callback: PullAudioInputStreamCallback, format?: AudioStreamFormatImpl) {\r\n        super();\r\n        if (undefined === format) {\r\n            this.privFormat = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n        } else {\r\n            this.privFormat = format;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n        this.privIsClosed = false;\r\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privIsClosed = true;\r\n        this.privCallback.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get blob(): Promise<Blob | Buffer> {\r\n        return Promise.reject(\"Not implemented\");\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: () => {\r\n                this.privCallback.close();\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: () => {\r\n                return audioNodeId;\r\n            },\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                let totalBytes: number = 0;\r\n                let transmitBuff: ArrayBuffer;\r\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n                while (totalBytes < this.privBufferSize) {\r\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\r\n                    // data back.\r\n                    const readBuff: ArrayBuffer = new ArrayBuffer(this.privBufferSize - totalBytes);\r\n                    const pulledBytes: number = this.privCallback.read(readBuff);\r\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\r\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\r\n                    // preferred size allocated.\r\n                    if (undefined === transmitBuff) {\r\n                        transmitBuff = readBuff;\r\n                    } else {\r\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\r\n                        const intView: Int8Array = new Int8Array(transmitBuff);\r\n                        intView.set(new Int8Array(readBuff), totalBytes);\r\n                    }\r\n                    // If there are no bytes to read, just break out and be done.\r\n                    if (0 === pulledBytes) {\r\n                        break;\r\n                    }\r\n                    totalBytes += pulledBytes;\r\n                }\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: transmitBuff.slice(0, totalBytes),\r\n                    isEnd: this.privIsClosed || totalBytes === 0,\r\n                    timeReceived: Date.now(),\r\n                });\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PullStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent = (event: AudioSourceEvent): void => {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationEventArgs,\r\n    CancellationReason,\r\n    RecognitionEventArgs\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines content of a CancellationEvent.\r\n * @class CancellationEventArgsBase\r\n */\r\nexport class CancellationEventArgsBase extends RecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(reason: CancellationReason, errorDetails: string,\r\n                       errorCode: CancellationErrorCode, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationEventArgsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful operation.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful operation, provides details of the occurred error.\r\n     * @member CancellationEventArgsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","var matchesImpl;\n/**\n * Checks if a given element matches a selector.\n * \n * @param node the element\n * @param selector the selector\n */\n\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (!menuRef.current && key === 'Tab') {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children);\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import React from 'react'; // TODO: check this\n\nvar NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n  }))));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech synthesis events.\r\n * @class SpeechSynthesisEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisEventArgs {\r\n    private readonly privResult: SpeechSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\r\n     */\r\n    public constructor(result: SpeechSynthesisResult) {\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the synthesis result.\r\n     * @member SpeechSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisResult} the synthesis result.\r\n     */\r\n    public get result(): SpeechSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SpeechSynthesisResult\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privAudioData: ArrayBuffer;\r\n    private privErrorDetails: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {number} audioData - The offset into the stream.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason,  audioData?: ArrayBuffer,\r\n                errorDetails?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privAudioData = audioData;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member SpeechSynthesisResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member SpeechSynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The synthesized audio data\r\n     * @member SpeechSynthesisResult.prototype.audioData\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} The synthesized audio data.\r\n     */\r\n    public get audioData(): ArrayBuffer {\r\n        return this.privAudioData;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\r\n     * @member SpeechSynthesisResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     *  The set of properties exposed in the result.\r\n     * @member SpeechSynthesisResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport enum MetadataType {\r\n    WordBoundary = \"WordBoundary\",\r\n    Bookmark = \"Bookmark\",\r\n    Viseme = \"Viseme\"\r\n}\r\n\r\nexport interface ISynthesisMetadata {\r\n    Type: MetadataType;\r\n    Data: {\r\n        Offset: number;\r\n        text: {\r\n            Text: string;\r\n            Length: number;\r\n        };\r\n        Bookmark: string;\r\n        VisemeId: number;\r\n        AnimationChunk: string;\r\n        IsLastAnimation: boolean;\r\n    };\r\n}\r\n\r\n// audio.metadata\r\nexport interface ISynthesisAudioMetadata {\r\n    Metadata: ISynthesisMetadata[];\r\n}\r\n\r\nexport class SynthesisAudioMetadata implements ISynthesisAudioMetadata {\r\n    private privSynthesisAudioMetadata: ISynthesisAudioMetadata;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisAudioMetadata = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SynthesisAudioMetadata {\r\n        return new SynthesisAudioMetadata(json);\r\n    }\r\n\r\n    public get Metadata(): ISynthesisMetadata[] {\r\n        return this.privSynthesisAudioMetadata.Metadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\r\n * @class SessionEventArgs\r\n */\r\nexport class SessionEventArgs {\r\n    private privSessionId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    /**\r\n     * Represents the session identifier.\r\n     * @member SessionEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Represents the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport { ConnectionOpenResponse } from \"../common/ConnectionOpenResponse\";\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    IDisposable,\r\n    IStreamChunk,\r\n    MessageType,\r\n    ServiceEvent,\r\n    Timeout\r\n} from \"../common/Exports\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport { Callback } from \"../sdk/Transcription/IConversation\";\r\nimport {\r\n    AgentConfig,\r\n    DynamicGrammarBuilder,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionMode,\r\n    RequestSession,\r\n    SpeechContext,\r\n    SpeechDetected,\r\n    type\r\n} from \"./Exports\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication,\r\n} from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport abstract class ServiceRecognizerBase implements IDisposable {\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection>;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privMustReportEndOfStream: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number = setTimeout;\r\n    private privAudioSource: IAudioSource;\r\n    private privIsLiveAudio: boolean = false;\r\n    protected privSpeechContext: SpeechContext;\r\n    protected privRequestSession: RequestSession;\r\n    protected privConnectionId: string;\r\n    protected privRecognizerConfig: RecognizerConfig;\r\n    protected privRecognizer: Recognizer;\r\n    protected privSuccessCallback: (e: SpeechRecognitionResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: Recognizer) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!audioSource) {\r\n            throw new ArgumentNullError(\"audioSource\");\r\n        }\r\n\r\n        if (!recognizerConfig) {\r\n            throw new ArgumentNullError(\"recognizerConfig\");\r\n        }\r\n\r\n        this.privMustReportEndOfStream = false;\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privAudioSource = audioSource;\r\n        this.privRecognizerConfig = recognizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privRecognizer = recognizer;\r\n        this.privRequestSession = new RequestSession(this.privAudioSource.id());\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privDynamicGrammar = new DynamicGrammarBuilder();\r\n        this.privSpeechContext = new SpeechContext(this.privDynamicGrammar);\r\n        this.privAgentConfig = new AgentConfig();\r\n        if (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\r\n            this.privSetTimeout = Timeout.setTimeout;\r\n        }\r\n\r\n        this.connectionEvents.attach(async (connectionEvent: ConnectionEvent): Promise<void> => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode === 1003 ||\r\n                    connectionClosedEvent.statusCode === 1007 ||\r\n                    connectionClosedEvent.statusCode === 1002 ||\r\n                    connectionClosedEvent.statusCode === 4000 ||\r\n                    this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount\r\n                ) {\r\n                    await this.cancelRecognitionLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        connectionClosedEvent.reason + \" websocket error code: \" + connectionClosedEvent.statusCode);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public get audioSource(): IAudioSource {\r\n        return this.privAudioSource;\r\n    }\r\n\r\n    public get speechContext(): SpeechContext {\r\n        return this.privSpeechContext;\r\n    }\r\n\r\n    public get dynamicGrammar(): DynamicGrammarBuilder {\r\n        return this.privDynamicGrammar;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public set conversationTranslatorToken(token: string) {\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.ConversationTranslator_Token, token);\r\n    }\r\n\r\n    public set authentication(auth: IAuthentication) {\r\n        this.privAuthentication = this.authentication;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privConnectionConfigurationPromise) {\r\n            try {\r\n                const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n                await connection.dispose(reason);\r\n            } catch (error) {\r\n                // The connection is in a bad state. But we're trying to kill it, so...\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognizerConfig.recognitionMode;\r\n    }\r\n\r\n    protected recognizeOverride: (recoMode: RecognitionMode, sc: (e: SpeechRecognitionResult) => void, ec: (e: string) => void) => any = undefined;\r\n\r\n    public async recognize(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n    ): Promise<void> {\r\n\r\n        if (this.recognizeOverride !== undefined) {\r\n            return this.recognizeOverride(recoMode, successCallback, errorCallBack);\r\n        }\r\n        // Clear the existing configuration promise to force a re-transmission of config and context.\r\n        this.privConnectionConfigurationPromise = null;\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        let audioNode: ReplayableAudioNode;\r\n\r\n        try {\r\n            const audioStreamNode: IAudioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\r\n            const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n            const deviceInfo: ISpeechConfigAudioDevice = await this.audioSource.deviceInfo;\r\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === type.Microphones;\r\n\r\n            audioNode = new ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\r\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        } catch (error) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n            throw error;\r\n        }\r\n\r\n        try {\r\n            await conPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error);\r\n            return;\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        const messageRetrievalPromise = this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        audioSendPromise.catch(async (error: string) => {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    public async stopRecognizing(): Promise<void> {\r\n        if (this.privRequestSession.isRecognizing) {\r\n            try {\r\n                await this.audioSource.turnOff();\r\n                await this.sendFinalAudio();\r\n                await this.privRequestSession.onStopRecognizing();\r\n                await this.privRequestSession.turnCompletionPromise;\r\n            } finally {\r\n                await this.privRequestSession.dispose();\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public connectAsync(cb?: Callback, err?: Callback): void {\r\n        this.connectImpl().then((connection: IConnection): void => {\r\n            try {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n        }, (reason: any): void => {\r\n            try {\r\n                if (!!err) {\r\n                    err(reason);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) {\r\n            }\r\n        });\r\n    }\r\n\r\n    protected disconnectOverride: () => Promise<void> = undefined;\r\n\r\n    public async disconnect(): Promise<void> {\r\n        await this.cancelRecognitionLocal(CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        if (this.disconnectOverride !== undefined) {\r\n            await this.disconnectOverride();\r\n        }\r\n\r\n        try {\r\n            await (await this.privConnectionPromise).dispose();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        this.privConnectionPromise = null;\r\n    }\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public sendMessage(message: string): void { }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\r\n    }\r\n\r\n    public set activityTemplate(messagePayload: string) { this.privActivityTemplate = messagePayload; }\r\n    public get activityTemplate(): string { return this.privActivityTemplate; }\r\n\r\n    protected abstract processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack?: (e: string) => void): Promise<boolean>;\r\n\r\n    protected async sendTelemetryData(): Promise<void> {\r\n        const telemetryData = this.privRequestSession.getTelemetry();\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\r\n            this.privIsDisposed ||\r\n            null === telemetryData) {\r\n            return;\r\n        }\r\n\r\n        if (!!ServiceRecognizerBase.telemetryData) {\r\n            try {\r\n                ServiceRecognizerBase.telemetryData(telemetryData);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"telemetry\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            telemetryData));\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected abstract cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void;\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognitionLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n\r\n            this.cancelRecognition(\r\n                this.privRequestSession.sessionId,\r\n                this.privRequestSession.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected receiveMessageOverride: () => Promise<void> = undefined;\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            let connection = await this.fetchConnection();\r\n            const message = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privRequestSession.isRecognizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privMustReportEndOfStream = true;\r\n                        this.privRequestSession.onServiceTurnStartResponse();\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n                        let json: string;\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json);\r\n                        // Only shrink the buffers for continuous recognition.\r\n                        // For single shot, the speech.phrase message will come after the speech.end and it should own buffer shrink.\r\n                        if (this.privRecognizerConfig.isContinuousRecognition) {\r\n                            this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\r\n                        }\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        await this.sendTelemetryData();\r\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\r\n                            this.privMustReportEndOfStream = false;\r\n                            await this.cancelRecognitionLocal(CancellationReason.EndOfStream, CancellationErrorCode.NoError, undefined);\r\n                        }\r\n                        const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\r\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                            if (!!this.privRecognizer.sessionStopped) {\r\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            connection = await this.fetchConnection();\r\n                            await this.sendPrePayloadJSON(connection);\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n            return this.receiveMessage();\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected sendSpeechContext = (connection: IConnection): Promise<void> => {\r\n        const speechContextJson = this.speechContext.toJSON();\r\n        this.privRequestSession.onSpeechContext();\r\n\r\n        if (speechContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.context\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected sendPrePayloadJSONOverride: (connection: IConnection) => Promise<void> = undefined;\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendPrePayloadJSON(connection: IConnection): Promise<void> {\r\n        if (this.sendPrePayloadJSONOverride !== undefined) {\r\n            return this.sendPrePayloadJSONOverride(connection);\r\n        }\r\n\r\n        await this.sendSpeechContext(connection);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected async sendWaveHeader(connection: IConnection): Promise<void> {\r\n        const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n        // this.writeBufferToConsole(format.header);\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Binary,\r\n            \"audio\",\r\n            this.privRequestSession.requestId,\r\n            \"audio/x-wav\",\r\n            format.header\r\n        ));\r\n    }\r\n\r\n    protected postConnectImplOverride: (connection: Promise<IConnection>) => Promise<IConnection> = undefined;\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    protected connectImpl(): Promise<IConnection> {\r\n        if (this.privConnectionPromise) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n\r\n        this.privConnectionPromise = this.retryableConnect();\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        this.privConnectionPromise.catch(() => { });\r\n\r\n        if (this.postConnectImplOverride !== undefined) {\r\n            return this.postConnectImplOverride(this.privConnectionPromise);\r\n        }\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => Promise<IConnection> = undefined;\r\n\r\n    protected sendSpeechServiceConfig = (connection: IConnection, requestSession: RequestSession, SpeechServiceConfigJson: string): Promise<void> => {\r\n        // filter out anything that is not required for the service to work.\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\r\n            const withTelemetry = JSON.parse(SpeechServiceConfigJson);\r\n\r\n            const replacement: any = {\r\n                context: {\r\n                    system: withTelemetry.context.system,\r\n                },\r\n            };\r\n\r\n            SpeechServiceConfigJson = JSON.stringify(replacement);\r\n        }\r\n\r\n        if (this.privRecognizerConfig.parameters.getProperty(\"TranscriptionService_SingleChannel\", \"false\").toLowerCase() === \"true\") {\r\n            const json: { context: any } = JSON.parse(SpeechServiceConfigJson);\r\n            json.context.DisableReferenceChannel = \"True\";\r\n            json.context.MicSpec = \"1_0_0\";\r\n            SpeechServiceConfigJson = JSON.stringify(json);\r\n        }\r\n\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                requestSession.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    protected async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    protected async sendAudio(audioStreamNode: IAudioStreamNode): Promise<void> {\r\n        const audioFormat: AudioStreamFormatImpl = await this.audioSource.format;\r\n\r\n        // The time we last sent data to the service.\r\n        let nextSendTime: number = Date.now();\r\n\r\n        // Max amount to send before we start to throttle\r\n        const fastLaneSizeMs: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\r\n        const maxSendUnthrottledBytes: number = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\r\n        const startRecogNumber: number = this.privRequestSession.recogNumber;\r\n\r\n        const readAndUploadCycle = async (): Promise<void> => {\r\n            // If speech is done, stop sending audio.\r\n            if (!this.privIsDisposed &&\r\n                !this.privRequestSession.isSpeechEnded &&\r\n                this.privRequestSession.isRecognizing &&\r\n                this.privRequestSession.recogNumber === startRecogNumber) {\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const audioStreamChunk: IStreamChunk<ArrayBuffer> = await audioStreamNode.read();\r\n                // we have a new audio chunk to upload.\r\n                if (this.privRequestSession.isSpeechEnded) {\r\n                    // If service already recognized audio end then don't send any more audio\r\n                    return;\r\n                }\r\n\r\n                let payload: ArrayBuffer;\r\n                let sendDelay: number;\r\n\r\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                    payload = null;\r\n                    sendDelay = 0;\r\n                } else {\r\n                    payload = audioStreamChunk.buffer;\r\n\r\n                    this.privRequestSession.onAudioSent(payload.byteLength);\r\n\r\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\r\n                        sendDelay = 0;\r\n                    } else {\r\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\r\n                    }\r\n                }\r\n\r\n                if (0 !== sendDelay) {\r\n                    await this.delay(sendDelay);\r\n                }\r\n\r\n                if (payload !== null) {\r\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\r\n                }\r\n\r\n                // Are we still alive?\r\n                if (!this.privIsDisposed &&\r\n                    !this.privRequestSession.isSpeechEnded &&\r\n                    this.privRequestSession.isRecognizing &&\r\n                    this.privRequestSession.recogNumber === startRecogNumber) {\r\n                    connection.send(\r\n                        new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)\r\n                    ).catch(() => {\r\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch(() => { });\r\n                    });\r\n\r\n                    if (!audioStreamChunk?.isEnd) {\r\n                        // this.writeBufferToConsole(payload);\r\n                        // Regardless of success or failure, schedule the next upload.\r\n                        // If the underlying connection was broken, the next cycle will\r\n                        // get a new connection and re-transmit missing audio automatically.\r\n                        return readAndUploadCycle();\r\n                    } else {\r\n                        // the audio stream has been closed, no need to schedule next\r\n                        // read-upload cycle.\r\n                        if (!this.privIsLiveAudio) {\r\n                            this.privRequestSession.onSpeechEnded();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        return readAndUploadCycle();\r\n    }\r\n\r\n    private async retryableConnect(): Promise<IConnection> {\r\n        let isUnAuthorized: boolean = false;\r\n\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        const sessionId: string = this.privRequestSession.sessionId;\r\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : createNoDashGuid();\r\n\r\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n        let lastStatusCode: number = 0;\r\n        let lastReason: string = \"\";\r\n\r\n        while (this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount) {\r\n\r\n            // Get the auth information for the connection. This is a bit of overkill for the current API surface, but leaving the plumbing in place to be able to raise a developer-customer\r\n            // facing event when a connection fails to let them try and provide new auth information.\r\n            const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n            const auth: AuthInfo = await authPromise;\r\n\r\n            await this.privRequestSession.onAuthCompleted(false);\r\n\r\n            // Create the connection\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privRecognizerConfig, auth, this.privConnectionId);\r\n            // Attach the telemetry handlers.\r\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent) => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n\r\n            const response: ConnectionOpenResponse = await connection.open();\r\n            // 200 == everything is fine.\r\n            if (response.statusCode === 200) {\r\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 1006) {\r\n                isUnAuthorized = true;\r\n            }\r\n\r\n            lastStatusCode = response.statusCode;\r\n            lastReason = response.reason;\r\n\r\n            this.privRequestSession.onRetryConnection();\r\n        }\r\n\r\n        await this.privRequestSession.onConnectionEstablishCompleted(lastStatusCode, lastReason);\r\n        return Promise.reject(`Unable to contact server. StatusCode: ${lastStatusCode}, ${this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${lastReason}`);\r\n    }\r\n\r\n    private delay(delayMs: number): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: (error: string) => void) => {\r\n            this.privSetTimeout(resolve, delayMs);\r\n        });\r\n    }\r\n\r\n    private writeBufferToConsole(buffer: ArrayBuffer): void {\r\n        let out: string = \"Buffer Size: \";\r\n        if (null === buffer) {\r\n            out += \"null\";\r\n        } else {\r\n            const readView: Uint8Array = new Uint8Array(buffer);\r\n            out += buffer.byteLength + \"\\r\\n\";\r\n            for (let i: number = 0; i < buffer.byteLength; i++) {\r\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\r\n            }\r\n        }\r\n        // tslint:disable-next-line:no-console\r\n        console.info(out);\r\n    }\r\n\r\n    private async sendFinalAudio(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\r\n        return;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendPrePayloadJSON(connection);\r\n        return connection;\r\n    }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage } from \"./SimpleSpeechPhrase\";\r\n\r\n// speech.hypothesis\r\nexport interface ISpeechHypothesis {\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport class SpeechHypothesis implements ISpeechHypothesis {\r\n    private privSpeechHypothesis: ISpeechHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechHypothesis = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechHypothesis {\r\n        return new SpeechHypothesis(json);\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechHypothesis.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechHypothesis.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechHypothesis.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSpeechHypothesis.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase\r\nexport interface ISimpleSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    DisplayText: string;\r\n    Offset?: number;\r\n    Duration?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPrimaryLanguage {\r\n    Language: string;\r\n    Confidence: string;\r\n}\r\n\r\nexport class SimpleSpeechPhrase implements ISimpleSpeechPhrase {\r\n    private privSimpleSpeechPhrase: ISimpleSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privSimpleSpeechPhrase = JSON.parse(json);\r\n        this.privSimpleSpeechPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privSimpleSpeechPhrase.RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): SimpleSpeechPhrase {\r\n        return new SimpleSpeechPhrase(json);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get DisplayText(): string {\r\n        return this.privSimpleSpeechPhrase.DisplayText;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSimpleSpeechPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSimpleSpeechPhrase.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSimpleSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileType\r\n */\r\nexport enum VoiceProfileType {\r\n\r\n    /**\r\n     * Text independent speaker identification\r\n     * @member VoiceProfileType.TextIndependentIdentification\r\n     */\r\n    TextIndependentIdentification,\r\n\r\n    /**\r\n     * Text dependent speaker verification\r\n     * @member VoiceProfileType.TextDependentVerification\r\n     */\r\n    TextDependentVerification,\r\n\r\n    /**\r\n     * Text independent speaker verification\r\n     * @member VoiceProfileType.TextIndependentVerification\r\n     */\r\n    TextIndependentVerification,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines translation status.\r\n * @class TranslationStatus\r\n */\r\nexport enum TranslationStatus {\r\n    /**\r\n     * @member TranslationStatus.Success\r\n     */\r\n    Success = 0,\r\n\r\n    /**\r\n     * @member TranslationStatus.Error\r\n     */\r\n    Error,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport { ITranslations, RecognitionStatus } from \"../Exports\";\r\nimport { TranslationStatus } from \"../TranslationStatus\";\r\n\r\n// translation.phrase\r\nexport interface ITranslationPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    Offset: number;\r\n    Duration: number;\r\n    Translation: ITranslations;\r\n    Text: string;\r\n    DisplayText?: string;\r\n}\r\n\r\nexport class TranslationPhrase implements ITranslationPhrase {\r\n    private privTranslationPhrase: ITranslationPhrase;\r\n\r\n    private constructor(phrase: ITranslationPhrase) {\r\n        this.privTranslationPhrase = phrase;\r\n        this.privTranslationPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privTranslationPhrase.RecognitionStatus];\r\n        if (this.privTranslationPhrase.Translation !== undefined) {\r\n            this.privTranslationPhrase.Translation.TranslationStatus = (TranslationStatus as any)[this.privTranslationPhrase.Translation.TranslationStatus];\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationPhrase {\r\n        return new TranslationPhrase(JSON.parse(json));\r\n    }\r\n\r\n    public static fromTranslationResponse(translationResponse: { SpeechPhrase: ITranslationPhrase }): TranslationPhrase {\r\n        Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\r\n        const phrase: ITranslationPhrase = translationResponse.SpeechPhrase;\r\n        translationResponse.SpeechPhrase = undefined;\r\n        phrase.Translation = (translationResponse as unknown as ITranslations);\r\n        phrase.Text = phrase.DisplayText;\r\n        return new TranslationPhrase(phrase);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privTranslationPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationPhrase.Duration;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationPhrase.Text;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationPhrase.Translation;\r\n    }\r\n}\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { useCallback, useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nfunction getMargins(element) {\n  var styles = window.getComputedStyle(element);\n  var top = parseFloat(styles.marginTop) || 0;\n  var right = parseFloat(styles.marginRight) || 0;\n  var bottom = parseFloat(styles.marginBottom) || 0;\n  var left = parseFloat(styles.marginLeft) || 0;\n  return {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n}\n\nexport default function usePopperMarginModifiers() {\n  var overlayRef = useRef(null);\n  var margins = useRef(null);\n  var arrowMargins = useRef(null);\n  var popoverClass = useBootstrapPrefix(undefined, 'popover');\n  var dropdownMenuClass = useBootstrapPrefix(undefined, 'dropdown-menu');\n  var callback = useCallback(function (overlay) {\n    if (!overlay || !(hasClass(overlay, popoverClass) || hasClass(overlay, dropdownMenuClass))) return;\n    margins.current = getMargins(overlay);\n    overlay.style.margin = '0';\n    overlayRef.current = overlay;\n  }, [popoverClass, dropdownMenuClass]);\n  var offset = useMemo(function () {\n    return {\n      name: 'offset',\n      options: {\n        offset: function offset(_ref) {\n          var placement = _ref.placement;\n          if (!margins.current) return [0, 0];\n          var _margins$current = margins.current,\n              top = _margins$current.top,\n              left = _margins$current.left,\n              bottom = _margins$current.bottom,\n              right = _margins$current.right;\n\n          switch (placement.split('-')[0]) {\n            case 'top':\n              return [0, bottom];\n\n            case 'left':\n              return [0, right];\n\n            case 'bottom':\n              return [0, top];\n\n            case 'right':\n              return [0, left];\n\n            default:\n              return [0, 0];\n          }\n        }\n      }\n    };\n  }, [margins]);\n  var arrow = useMemo(function () {\n    return {\n      name: 'arrow',\n      options: {\n        padding: function padding() {\n          // The options here are used for Popper 2.8.4 and up.\n          // For earlier version, padding is handled in popoverArrowMargins below.\n          if (!arrowMargins.current) {\n            return 0;\n          }\n\n          var _arrowMargins$current = arrowMargins.current,\n              top = _arrowMargins$current.top,\n              right = _arrowMargins$current.right;\n          var padding = top || right;\n          return {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding\n          };\n        }\n      }\n    };\n  }, [arrowMargins]); // Converts popover arrow margin to arrow modifier padding\n\n  var popoverArrowMargins = useMemo(function () {\n    return {\n      name: 'popoverArrowMargins',\n      enabled: true,\n      phase: 'main',\n      fn: function fn() {\n        return undefined;\n      },\n      requiresIfExists: ['arrow'],\n      effect: function effect(_ref2) {\n        var state = _ref2.state;\n\n        if (!overlayRef.current || !state.elements.arrow || !hasClass(overlayRef.current, popoverClass)) {\n          return undefined;\n        }\n\n        if (state.modifiersData['arrow#persistent']) {\n          // @popperjs/core <= 2.8.3 uses arrow#persistent to pass padding to arrow modifier.\n          var _getMargins = getMargins(state.elements.arrow),\n              top = _getMargins.top,\n              right = _getMargins.right;\n\n          var padding = top || right;\n          state.modifiersData['arrow#persistent'].padding = {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding\n          };\n        } else {\n          // @popperjs/core >= 2.8.4 gets the padding from the arrow modifier options,\n          // so we'll get the margins here, and let the arrow modifier above pass\n          // it to popper.\n          arrowMargins.current = getMargins(state.elements.arrow);\n        }\n\n        state.elements.arrow.style.margin = '0';\n        return function () {\n          if (state.elements.arrow) state.elements.arrow.style.margin = '';\n        };\n      }\n    };\n  }, [popoverClass]);\n  return [callback, [offset, arrow, popoverArrowMargins]];\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"];\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      menuProps = _useDropdownMenu[0],\n      _useDropdownMenu$ = _useDropdownMenu[1],\n      hasShown = _useDropdownMenu$.hasShown,\n      popper = _useDropdownMenu$.popper,\n      show = _useDropdownMenu$.show,\n      alignEnd = _useDropdownMenu$.alignEnd,\n      toggle = _useDropdownMenu$.toggle;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognizerConfig } from \"../common.speech/Exports\";\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports\";\r\n\r\nexport class ProxyInfo {\r\n    private privProxyHostName: string;\r\n    private privProxyPort: number;\r\n    private privProxyUserName: string;\r\n    private privProxyPassword: string;\r\n\r\n    private constructor(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string) {\r\n        this.privProxyHostName = proxyHostName;\r\n        this.privProxyPort = proxyPort;\r\n        this.privProxyUserName = proxyUserName;\r\n        this.privProxyPassword = proxyPassword;\r\n    }\r\n\r\n    public static fromParameters(parameters: PropertyCollection): ProxyInfo {\r\n        return new ProxyInfo(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyHostName),\r\n            parseInt(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPort), 10),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyUserName),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPassword));\r\n    }\r\n\r\n    public static fromRecognizerConfig(config: RecognizerConfig): ProxyInfo {\r\n        return this.fromParameters(config.parameters);\r\n    }\r\n\r\n    public get HostName(): string {\r\n        return this.privProxyHostName;\r\n    }\r\n\r\n    public get Port(): number {\r\n        return this.privProxyPort;\r\n    }\r\n\r\n    public get UserName(): string {\r\n        return this.privProxyUserName;\r\n    }\r\n\r\n    public get Password(): string {\r\n        return this.privProxyPassword;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class ConnectionOpenResponse {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    constructor(statusCode: number, reason: string) {\r\n        this.privStatusCode = statusCode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { HeaderNames } from \"../common.speech/HeaderNames\";\r\nimport {\r\n    ArgumentNullError,\r\n    BackgroundEvent,\r\n    ConnectionClosedEvent,\r\n    ConnectionErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    ConnectionOpenResponse,\r\n    ConnectionStartEvent,\r\n    ConnectionState,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    Queue,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\n\r\n// Node.JS specific web socket / browser support.\r\nimport ws from \"ws\";\r\nimport { CertCheckAgent } from \"./CertChecks\";\r\n\r\ninterface ISendItem {\r\n    Message: ConnectionMessage;\r\n    RawWebsocketMessage: RawWebsocketMessage;\r\n    sendStatusDeferral: Deferred<void>;\r\n}\r\n\r\nexport class WebsocketMessageAdapter {\r\n    private privConnectionState: ConnectionState;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privWebsocketClient: WebSocket | ws;\r\n\r\n    private privSendMessageQueue: Queue<ISendItem>;\r\n    private privReceivingMessageQueue: Queue<ConnectionMessage>;\r\n    private privConnectionEstablishDeferral: Deferred<ConnectionOpenResponse>;\r\n    private privCertificateValidatedDeferral: Deferred<void>;\r\n    private privDisconnectDeferral: Deferred<void>;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privConnectionId: string;\r\n    private privUri: string;\r\n    private proxyInfo: ProxyInfo;\r\n    private privHeaders: { [key: string]: string; };\r\n    private privLastErrorReceived: string;\r\n    private privEnableCompression: boolean;\r\n\r\n    public static forceNpmWebSocket: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        connectionId: string,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        headers: { [key: string]: string; },\r\n        enableCompression: boolean) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.proxyInfo = proxyInfo;\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privConnectionId = connectionId;\r\n        this.privMessageFormatter = messageFormatter;\r\n        this.privConnectionState = ConnectionState.None;\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n        this.privEnableCompression = enableCompression;\r\n\r\n        // Add the connection ID to the headers\r\n        this.privHeaders[HeaderNames.ConnectionId] = this.privConnectionId;\r\n\r\n        this.privLastErrorReceived = \"\";\r\n    }\r\n\r\n    public get state(): ConnectionState {\r\n        return this.privConnectionState;\r\n    }\r\n\r\n    public open = (): Promise<ConnectionOpenResponse> => {\r\n        if (this.privConnectionState === ConnectionState.Disconnected) {\r\n            return Promise.reject<ConnectionOpenResponse>(`Cannot open a connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        if (this.privConnectionEstablishDeferral) {\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.privConnectionEstablishDeferral = new Deferred<ConnectionOpenResponse>();\r\n        this.privCertificateValidatedDeferral = new Deferred<void>();\r\n\r\n        this.privConnectionState = ConnectionState.Connecting;\r\n\r\n        try {\r\n\r\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\r\n                // Browser handles cert checks.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n\r\n                this.privWebsocketClient = new WebSocket(this.privUri);\r\n            } else {\r\n                const options: ws.ClientOptions = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression };\r\n                // The ocsp library will handle validation for us and fail the connection if needed.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n                const checkAgent: CertCheckAgent = new CertCheckAgent(this.proxyInfo);\r\n\r\n                options.agent = checkAgent.GetAgent();\r\n                this.privWebsocketClient = new ws(this.privUri, options);\r\n            }\r\n\r\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\r\n            this.privReceivingMessageQueue = new Queue<ConnectionMessage>();\r\n            this.privDisconnectDeferral = new Deferred<void>();\r\n            this.privSendMessageQueue = new Queue<ISendItem>();\r\n            this.processSendQueue().catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        } catch (error) {\r\n            this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(500, error));\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.onEvent(new ConnectionStartEvent(this.privConnectionId, this.privUri));\r\n\r\n        this.privWebsocketClient.onopen = (e: { target: WebSocket | ws }) => {\r\n            this.privCertificateValidatedDeferral.promise.then((): void => {\r\n                this.privConnectionState = ConnectionState.Connected;\r\n                this.onEvent(new ConnectionEstablishedEvent(this.privConnectionId));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(200, \"\"));\r\n            }, (error: string): void => {\r\n                this.privConnectionEstablishDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onerror = (e: { error: any; message: string; type: string; target: WebSocket | ws }) => {\r\n            this.onEvent(new ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\r\n            this.privLastErrorReceived = e.message;\r\n        };\r\n\r\n        this.privWebsocketClient.onclose = (e: { wasClean: boolean; code: number; reason: string; target: WebSocket | ws }) => {\r\n            if (this.privConnectionState === ConnectionState.Connecting) {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\r\n            } else {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                this.privWebsocketClient = null;\r\n                this.onEvent(new ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\r\n            }\r\n\r\n            this.onClose(e.code, e.reason).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onmessage = (e: { data: ws.Data; type: string; target: WebSocket | ws }) => {\r\n            const networkReceivedTime = new Date().toISOString();\r\n            if (this.privConnectionState === ConnectionState.Connected) {\r\n                const deferred = new Deferred<ConnectionMessage>();\r\n                // let id = ++this.idCounter;\r\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\r\n                if (e.data instanceof ArrayBuffer) {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Binary, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage) => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string) => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid binary message format. Error: ${error}`);\r\n                        });\r\n                } else {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Text, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage) => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string) => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid text message format. Error: ${error}`);\r\n                        });\r\n                }\r\n            }\r\n        };\r\n\r\n        return this.privConnectionEstablishDeferral.promise;\r\n    }\r\n\r\n    public send = (message: ConnectionMessage): Promise<void> => {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(`Cannot send on connection that is in ${ConnectionState[this.privConnectionState]} state`);\r\n        }\r\n\r\n        const messageSendStatusDeferral = new Deferred<void>();\r\n        const messageSendDeferral = new Deferred<ISendItem>();\r\n\r\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\r\n\r\n        this.privMessageFormatter\r\n            .fromConnectionMessage(message)\r\n            .then((rawMessage: RawWebsocketMessage) => {\r\n                messageSendDeferral.resolve({\r\n                    Message: message,\r\n                    RawWebsocketMessage: rawMessage,\r\n                    sendStatusDeferral: messageSendStatusDeferral,\r\n                });\r\n            }, (error: string) => {\r\n                messageSendDeferral.reject(`Error formatting the message. ${error}`);\r\n            });\r\n\r\n        return messageSendStatusDeferral.promise;\r\n    }\r\n\r\n    public read = (): Promise<ConnectionMessage> => {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject<ConnectionMessage>(`Cannot read on connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        return this.privReceivingMessageQueue.dequeue();\r\n    }\r\n\r\n    public close = (reason?: string): Promise<void> => {\r\n        if (this.privWebsocketClient) {\r\n            if (this.privConnectionState !== ConnectionState.Disconnected) {\r\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\r\n            }\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.privDisconnectDeferral.promise;\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    private sendRawMessage = (sendItem: ISendItem): Promise<void> => {\r\n        try {\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            this.onEvent(new ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\r\n\r\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\r\n            if (this.isWebsocketOpen) {\r\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\r\n            } else {\r\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\r\n            }\r\n            return Promise.resolve();\r\n\r\n        } catch (e) {\r\n            return Promise.reject(`websocket send error: ${e}`);\r\n        }\r\n    }\r\n\r\n    private async onClose(code: number, reason: string): Promise<void> {\r\n        const closeReason = `Connection closed. ${code}: ${reason}`;\r\n        this.privConnectionState = ConnectionState.Disconnected;\r\n        this.privDisconnectDeferral.resolve();\r\n        await this.privReceivingMessageQueue.drainAndDispose((pendingReceiveItem: ConnectionMessage) => {\r\n            // TODO: Events for these ?\r\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\r\n        }, closeReason);\r\n\r\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem: ISendItem) => {\r\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\r\n        }, closeReason);\r\n    }\r\n\r\n    private async processSendQueue(): Promise<void> {\r\n        while (true) {\r\n            const itemToSend: Promise<ISendItem> = this.privSendMessageQueue.dequeue();\r\n            const sendItem: ISendItem = await itemToSend;\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.sendRawMessage(sendItem);\r\n                sendItem.sendStatusDeferral.resolve();\r\n            } catch (sendError) {\r\n                sendItem.sendStatusDeferral.reject(sendError);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onEvent = (event: ConnectionEvent): void => {\r\n        this.privConnectionEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private get isWebsocketOpen(): boolean {\r\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionOpenResponse,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IConnection,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n} from \"../common/Exports\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\nimport { WebsocketMessageAdapter } from \"./WebsocketMessageAdapter\";\r\n\r\nexport class WebsocketConnection implements IConnection {\r\n\r\n    private privUri: string;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privConnectionMessageAdapter: WebsocketMessageAdapter;\r\n    private privId: string;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        queryParameters: IStringDictionary<string>,\r\n        headers: IStringDictionary<string>,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        enableCompression: boolean = false,\r\n        connectionId?: string) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.privMessageFormatter = messageFormatter;\r\n\r\n        let queryParams = \"\";\r\n        let i = 0;\r\n\r\n        if (queryParameters) {\r\n            for (const paramName in queryParameters) {\r\n                if (paramName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(queryParameters[paramName]);\r\n                    queryParams += `${paramName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (headers) {\r\n            for (const headerName in headers) {\r\n                if (headerName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(headers[headerName]);\r\n                    queryParams += `${headerName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.privUri = uri + queryParams;\r\n        this.privId = connectionId ? connectionId : createNoDashGuid();\r\n\r\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter(\r\n            this.privUri,\r\n            this.id,\r\n            this.privMessageFormatter,\r\n            proxyInfo,\r\n            headers,\r\n            enableCompression);\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        this.privIsDisposed = true;\r\n\r\n        if (this.privConnectionMessageAdapter) {\r\n            await this.privConnectionMessageAdapter.close();\r\n        }\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public state = (): ConnectionState => {\r\n        return this.privConnectionMessageAdapter.state;\r\n    }\r\n\r\n    public open = (): Promise<ConnectionOpenResponse> => {\r\n        return this.privConnectionMessageAdapter.open();\r\n    }\r\n\r\n    public send = (message: ConnectionMessage): Promise<void> => {\r\n        return this.privConnectionMessageAdapter.send(message);\r\n    }\r\n\r\n    public read = (): Promise<ConnectionMessage> => {\r\n        return this.privConnectionMessageAdapter.read();\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionMessageAdapter.events;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IConnection,\r\n    IDisposable,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    AgentConfig,\r\n    CancellationErrorCodePropertyName,\r\n    ISynthesisConnectionFactory,\r\n    MetadataType,\r\n    SynthesisAudioMetadata,\r\n    SynthesisContext,\r\n    SynthesisTurn,\r\n    SynthesizerConfig\r\n} from \"./Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class SynthesisAdapterBase implements IDisposable {\r\n    protected privSynthesisTurn: SynthesisTurn;\r\n    protected privConnectionId: string;\r\n    protected privSynthesizerConfig: SynthesizerConfig;\r\n    protected privSpeechSynthesizer: SpeechSynthesizer;\r\n    protected privSuccessCallback: (e: SpeechSynthesisResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public get synthesisContext(): SynthesisContext {\r\n        return this.privSynthesisContext;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    protected speakOverride: (ssml: string, requestId: string, sc: (e: SpeechSynthesisResult) => void, ec: (e: string) => void) => any = undefined;\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public set activityTemplate(messagePayload: string) { this.privActivityTemplate = messagePayload; }\r\n    public get activityTemplate(): string { return this.privActivityTemplate; }\r\n\r\n    protected receiveMessageOverride: () => any = undefined;\r\n\r\n    protected connectImplOverride: (isUnAuthorized: boolean) => any = undefined;\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => any = undefined;\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n        this.privSynthesisTurn.audioOutputFormat = format;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.format = format;\r\n        }\r\n        if (this.synthesisContext !== undefined) {\r\n            this.synthesisContext.audioOutputFormat = format;\r\n        }\r\n    }\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection>;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privSynthesisContext: SynthesisContext;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privSessionAudioDestination: IAudioDestination;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        speechSynthesizer: SpeechSynthesizer,\r\n        audioDestination: IAudioDestination) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!synthesizerConfig) {\r\n            throw new ArgumentNullError(\"synthesizerConfig\");\r\n        }\r\n\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privSynthesizerConfig = synthesizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n        this.privSessionAudioDestination = audioDestination;\r\n        this.privSynthesisTurn = new SynthesisTurn();\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privSynthesisContext = new SynthesisContext(this.privSpeechSynthesizer);\r\n        this.privAgentConfig = new AgentConfig();\r\n\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode !== 1000) {\r\n                    this.cancelSynthesisLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        connectionClosedEvent.reason + \" websocket error code: \" + connectionClosedEvent.statusCode);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static addHeader(audio: ArrayBuffer, format: AudioOutputFormatImpl): ArrayBuffer {\r\n        if (!format.hasHeader) {\r\n            return audio;\r\n        }\r\n        format.updateHeader(audio.byteLength);\r\n        const tmp = new Uint8Array(audio.byteLength + format.header.byteLength);\r\n        tmp.set(new Uint8Array(format.header), 0);\r\n        tmp.set(new Uint8Array(audio), format.header.byteLength);\r\n        return tmp.buffer;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.close();\r\n        }\r\n        if (this.privConnectionConfigurationPromise) {\r\n            const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n    }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\r\n    }\r\n\r\n    public async Speak(\r\n        text: string,\r\n        isSSML: boolean,\r\n        requestId: string,\r\n        successCallback: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n        audioDestination: IAudioDestination,\r\n    ): Promise<void> {\r\n\r\n        let ssml: string;\r\n\r\n        if (isSSML) {\r\n            ssml = text;\r\n        } else {\r\n            ssml = this.privSpeechSynthesizer.buildSsml(text);\r\n        }\r\n\r\n        if (this.speakOverride !== undefined) {\r\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\r\n        }\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\r\n\r\n        try {\r\n            await this.connectImpl();\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSynthesisContext(connection);\r\n            await this.sendSsmlMessage(connection, ssml, requestId);\r\n            const synthesisStartEventArgs: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                new SpeechSynthesisResult(\r\n                    requestId,\r\n                    ResultReason.SynthesizingAudioStarted,\r\n                )\r\n            );\r\n\r\n            if (!!this.privSpeechSynthesizer.synthesisStarted) {\r\n                this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\r\n            }\r\n\r\n            const messageRetrievalPromise = this.receiveMessage();\r\n        } catch (e) {\r\n            this.cancelSynthesisLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesis(\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n        const result: SpeechSynthesisResult = new SpeechSynthesisResult(\r\n            requestId,\r\n            ResultReason.Canceled,\r\n            undefined,\r\n            error,\r\n            properties\r\n        );\r\n\r\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\r\n            const cancelEvent: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(result);\r\n            try {\r\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesisLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        if (!!this.privSynthesisTurn.isSynthesizing) {\r\n            this.privSynthesisTurn.onStopSynthesizing();\r\n\r\n            this.cancelSynthesis(\r\n                this.privSynthesisTurn.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack?: (e: string) => void): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConnectionMessage = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privSynthesisTurn.isSynthesizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privSynthesisTurn.onServiceTurnStartResponse();\r\n                        break;\r\n                    case \"response\":\r\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\r\n                        break;\r\n                    case \"audio\":\r\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\r\n                            && !!connectionMessage.binaryBody) {\r\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\r\n                            if (!!this.privSpeechSynthesizer.synthesizing) {\r\n                                try {\r\n                                    const audioWithHeader = SynthesisAdapterBase.addHeader(connectionMessage.binaryBody, this.privSynthesisTurn.audioOutputFormat);\r\n                                    const ev: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                                        new SpeechSynthesisResult(\r\n                                            this.privSynthesisTurn.requestId,\r\n                                            ResultReason.SynthesizingAudio,\r\n                                            audioWithHeader));\r\n                                    this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\r\n                                } catch (error) {\r\n                                    // Not going to let errors in the event handler\r\n                                    // trip things up.\r\n                                }\r\n                            }\r\n                            if (this.privSessionAudioDestination !== undefined) {\r\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"audio.metadata\":\r\n                        const metadataList = SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\r\n                        for (const metadata of metadataList) {\r\n                            switch (metadata.Type) {\r\n                                case MetadataType.WordBoundary:\r\n                                    this.privSynthesisTurn.onWordBoundaryEvent(metadata.Data.text.Text);\r\n\r\n                                    const wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs = new SpeechSynthesisWordBoundaryEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.text.Text,\r\n                                        metadata.Data.text.Length,\r\n                                        this.privSynthesisTurn.currentTextOffset);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.wordBoundary) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Bookmark:\r\n                                    const bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs = new SpeechSynthesisBookmarkEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.Bookmark);\r\n\r\n                                    if (!!this.privSpeechSynthesizer.bookmarkReached) {\r\n                                        try {\r\n                                            this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\r\n                                        } catch (error) {\r\n                                            // Not going to let errors in the event handler\r\n                                            // trip things up.\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.Viseme:\r\n\r\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\r\n\r\n                                    if (metadata.Data.IsLastAnimation) {\r\n                                        const visemeEventArgs: SpeechSynthesisVisemeEventArgs = new SpeechSynthesisVisemeEventArgs(\r\n                                            metadata.Data.Offset,\r\n                                            metadata.Data.VisemeId,\r\n                                            this.privSynthesisTurn.getAndClearVisemeAnimation());\r\n\r\n                                        if (!!this.privSpeechSynthesizer.visemeReceived) {\r\n                                            try {\r\n                                                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\r\n                                            } catch (error) {\r\n                                                // Not going to let errors in the event handler\r\n                                                // trip things up.\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"turn.end\":\r\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\r\n                        let result: SpeechSynthesisResult;\r\n                        try {\r\n                            const audioBuffer: ArrayBuffer = await this.privSynthesisTurn.getAllReceivedAudioWithHeader();\r\n                            result = new SpeechSynthesisResult(\r\n                                this.privSynthesisTurn.requestId,\r\n                                ResultReason.SynthesizingAudioCompleted,\r\n                                audioBuffer\r\n                            );\r\n                            if (!!this.privSuccessCallback) {\r\n                                this.privSuccessCallback(result);\r\n                            }\r\n                        } catch (error) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(error);\r\n                            }\r\n                        }\r\n                        if (this.privSpeechSynthesizer.synthesisCompleted) {\r\n                            try {\r\n                                this.privSpeechSynthesizer.synthesisCompleted(\r\n                                    this.privSpeechSynthesizer,\r\n                                    new SpeechSynthesisEventArgs(result)\r\n                                );\r\n                            } catch (e) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n\r\n                }\r\n            }\r\n\r\n            return this.receiveMessage();\r\n\r\n        } catch (e) {\r\n            // TODO: What goes here?\r\n        }\r\n    }\r\n\r\n    protected sendSynthesisContext = (connection: IConnection): Promise<void> => {\r\n        const synthesisContextJson = this.synthesisContext.toJSON();\r\n\r\n        if (synthesisContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"synthesis.context\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                synthesisContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected connectImpl(isUnAuthorized: boolean = false): Promise<IConnection> {\r\n        if (this.privConnectionPromise) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        this.privConnectionId = createNoDashGuid();\r\n\r\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n\r\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n\r\n        this.privConnectionPromise = authPromise.then(async (result: AuthInfo) => {\r\n            await this.privSynthesisTurn.onAuthCompleted(false);\r\n\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent) => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n            const response = await connection.open();\r\n            if (response.statusCode === 200) {\r\n                await this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 403 && !isUnAuthorized) {\r\n                return this.connectImpl(true);\r\n            } else {\r\n                await this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode, response.reason);\r\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode}, ${this.privSynthesizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${response.reason}`);\r\n            }\r\n        }, async (error: string): Promise<IConnection> => {\r\n            await this.privSynthesisTurn.onAuthCompleted(true, error);\r\n            throw new Error(error);\r\n        });\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        this.privConnectionPromise.catch(() => { });\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n    protected sendSpeechServiceConfig = (connection: IConnection, SpeechServiceConfigJson: string): Promise<void> => {\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n    }\r\n\r\n    protected sendSsmlMessage = (connection: IConnection, ssml: string, requestId: string): Promise<void> => {\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"ssml\",\r\n            requestId,\r\n            \"application/ssml+xml\",\r\n            ssml));\r\n    }\r\n\r\n    private async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = null;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (error: string): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = null;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\r\n        return connection;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports\";\r\nimport {IStringDictionary} from \"../common/Exports\";\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SpeechSynthesisOutputFormat,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Speech configuration.\r\n * @class SpeechConfig\r\n */\r\nexport abstract class SpeechConfig {\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() { }\r\n\r\n    /**\r\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * @member SpeechConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} The speech factory\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\r\n     *              SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\r\n     *              and the effective language is \"de-DE\". Only the parameters that are not specified in the\r\n     *              endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     *       use the authorization token.\r\n     * @member SpeechConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech factory with specified initial authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     *       expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\r\n     *       to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\r\n     *       the new token value will not apply to recognizers that have already been created. For recognizers\r\n     *       that have been created before, you need to set authorization token of the corresponding recognizer\r\n     *       to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The initial authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.authorizationToken = authorizationToken;\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Gets the authorization token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get authorizationToken(): string;\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n    /**\r\n     * Gets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * get synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} Returns the output format.\r\n     */\r\n    public abstract get outputFormat(): OutputFormat;\r\n\r\n    /**\r\n     * Gets/Sets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * set synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set outputFormat(format: OutputFormat);\r\n\r\n    /**\r\n     * Gets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @return {string} The endpoint ID\r\n     */\r\n    public abstract get endpointId(): string;\r\n\r\n    /**\r\n     * Gets/Sets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The endpoint ID\r\n     */\r\n    public abstract set endpointId(value: string);\r\n\r\n    /**\r\n     * Closes the configuration.\r\n     * @member SpeechConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    /* tslint:disable:no-empty */\r\n    public close(): void { }\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     * @return {string} The subscription key set on the config.\r\n     */\r\n    public abstract get subscriptionKey(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.region\r\n     * @function\r\n     * @public\r\n     * @return {region} The region set on the config.\r\n     */\r\n    public abstract get region(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     * @summary Sets a property value that will be passed to service using the specified channel.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.setProfanity\r\n     * @function\r\n     * @public\r\n     * @param {profanity} Profanity option to set.\r\n     * @summary Sets profanity option.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract setProfanity(profanity: ProfanityOption): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.enableAudioLogging\r\n     * @function\r\n     * @public\r\n     * @summary Enable audio logging in service.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract enableAudioLogging(): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.requestWordLevelTimestamps\r\n     * @function\r\n     * @public\r\n     * @summary Includes word-level timestamps.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract requestWordLevelTimestamps(): void;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.enableDictation\r\n     * @function\r\n     * @public\r\n     * @summary Enable dictation. Only supported in speech continuous recognition.\r\n     * Added in version 1.7.0.\r\n     */\r\n    public abstract enableDictation(): void;\r\n\r\n    /**\r\n     * Gets the language of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis language.\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisLanguage(): string;\r\n\r\n    /**\r\n     * Sets the language of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisLanguage(language: string);\r\n\r\n    /**\r\n     * Gets the voice of the speech synthesizer.\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis voice.\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisVoiceName(): string;\r\n\r\n    /**\r\n     * Sets the voice of the speech synthesizer. (see <a href=\"https://aka.ms/speech/tts-languages\">available voices</a>).\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisVoiceName(voice: string);\r\n\r\n    /**\r\n     * Gets the speech synthesis output format.\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisOutputFormat} Returns the speech synthesis output format\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat;\r\n\r\n    /**\r\n     * Sets the speech synthesis output format (e.g. Riff16Khz16BitMonoPcm).\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * The default format is Audio16Khz64KBitRateMonoMp3 for browser and Riff16Khz16BitMonoPcm for Node.JS\r\n     * Added in version 1.11.0.\r\n     */\r\n    public abstract set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat);\r\n}\r\n\r\n/**\r\n * @public\r\n * @class SpeechConfigImpl\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechConfigImpl extends SpeechConfig {\r\n\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privProperties = new PropertyCollection();\r\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get endPoint(): URL {\r\n        return new URL(this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Endpoint));\r\n    }\r\n\r\n    public get subscriptionKey(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n    }\r\n\r\n    public get region(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public set speechRecognitionLanguage(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\r\n    }\r\n\r\n    public set autoDetectSourceLanguages(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return (OutputFormat as any)[this.privProperties.getProperty(OutputFormatPropertyName, undefined)];\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    public set endpointId(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        this.privProperties.setProperty(name, value);\r\n    }\r\n\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n\r\n        return this.privProperties.getProperty(name, def);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\"));\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public clone(): SpeechConfigImpl {\r\n        const ret: SpeechConfigImpl = new SpeechConfigImpl();\r\n        ret.privProperties = this.privProperties.clone();\r\n        return ret;\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        return (SpeechSynthesisOutputFormat as any)[this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { LoggerOptions } from \"../config/ClientConfiguration\";\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * Options for logger messages.\n */\nexport type LoggerMessageOptions = {\n    logLevel: LogLevel,\n    containsPii?: boolean,\n    context?: string,\n    correlationId?: string\n};\n\n/**\n * Log message level.\n */\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose,\n    Trace\n}\n\n/**\n * Callback to send the messages to.\n */\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nexport class Logger {\n\n    // Correlation ID for request, usually set by user.\n    private correlationId: string;\n\n    // Current log level, defaults to info.\n    private level: LogLevel = LogLevel.Info;\n\n    // Boolean describing whether PII logging is allowed.\n    private piiLoggingEnabled: boolean;\n\n    // Callback to send messages to.\n    private localCallback: ILoggerCallback;\n\n    // Package name implementing this logger\n    private packageName: string;\n\n    // Package version implementing this logger\n    private packageVersion: string;\n\n    constructor(loggerOptions: LoggerOptions, packageName?: string, packageVersion?: string) {\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        this.localCallback = loggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled || false;\n        this.level = typeof(loggerOptions.logLevel) === \"number\" ? loggerOptions.logLevel : LogLevel.Info;\n        this.correlationId = loggerOptions.correlationId || \"\";\n\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Create new Logger with existing configurations.\n     */\n    public clone(packageName: string, packageVersion: string, correlationId?: string): Logger {\n        return new Logger({loggerCallback: this.localCallback, piiLoggingEnabled: this.piiLoggingEnabled, logLevel: this.level, correlationId: correlationId || this.correlationId}, packageName, packageVersion);\n    }\n\n    /**\n     * Log message with required options.\n     */\n    private logMessage(logMessage: string, options: LoggerMessageOptions): void {\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        let logHeader: string;\n        if (!StringUtils.isEmpty(options.correlationId)) {\n            logHeader = `[${timestamp}] : [${options.correlationId}]`;\n        } else if (!StringUtils.isEmpty(this.correlationId)) {\n            logHeader = `[${timestamp}] : [${this.correlationId}]`;\n        } else {\n            logHeader = `[${timestamp}]`;\n        }\n\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level: LogLevel, message: string, containsPii: boolean): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * Logs error messages.\n     */\n    error(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs warning messages.\n     */\n    warning(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs info messages.\n     */\n    info(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs trace messages.\n     */\n    trace(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || \"\"\n        });\n    }\n\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled || false;\n    }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"disabled\", \"onKeyDown\"];\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Represents the JSON used in the agent.config message sent to the speech service.\r\n */\r\nexport class AgentConfig {\r\n    private iPrivConfig: IAgentConfig;\r\n\r\n    public toJsonString(): string {\r\n        return JSON.stringify(this.iPrivConfig);\r\n    }\r\n\r\n    public get(): IAgentConfig {\r\n        return this.iPrivConfig;\r\n    }\r\n\r\n    /**\r\n     * Setter for the agent.config object.\r\n     * @param value a JSON serializable object.\r\n     */\r\n    public set(value: IAgentConfig): void {\r\n        this.iPrivConfig = value;\r\n    }\r\n}\r\n\r\nexport interface IAgentConfig {\r\n    botInfo: {\r\n        commType: string,\r\n        connectionId: string,\r\n        conversationId: string,\r\n        fromId: string\r\n        commandsCulture: string,\r\n        ttsAudioFormat: string\r\n    };\r\n    version: number;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Translation text result event arguments.\r\n * @class TranslationRecognitionEventArgs\r\n */\r\nexport class TranslationRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs, TranslationSynthesisResult } from \"./Exports\";\r\n\r\n/**\r\n * Translation Synthesis event arguments\r\n * @class TranslationSynthesisEventArgs\r\n */\r\nexport class TranslationSynthesisEventArgs extends SessionEventArgs {\r\n    private privResult: TranslationSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationSynthesisResult, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the translation synthesis result.\r\n     * @member TranslationSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\r\n     */\r\n    public get result(): TranslationSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ResultReason } from \"./ResultReason\";\r\n\r\n/**\r\n * Defines translation synthesis result, i.e. the voice output of the translated\r\n * text in the target language.\r\n * @class TranslationSynthesisResult\r\n */\r\nexport class TranslationSynthesisResult {\r\n    private privReason: ResultReason;\r\n    private privAudio: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ResultReason} reason - The synthesis reason.\r\n     * @param {ArrayBuffer} audio - The audio data.\r\n     */\r\n    constructor(reason: ResultReason, audio: ArrayBuffer) {\r\n        this.privReason = reason;\r\n        this.privAudio = audio;\r\n    }\r\n\r\n    /**\r\n     * Translated text in the target language.\r\n     * @member TranslationSynthesisResult.prototype.audio\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} Translated audio in the target language.\r\n     */\r\n    public get audio(): ArrayBuffer {\r\n        return this.privAudio;\r\n    }\r\n\r\n    /**\r\n     * The synthesis status.\r\n     * @member TranslationSynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} The synthesis status.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.endDetected\r\nexport interface ISpeechDetected {\r\n    Offset: number;\r\n}\r\n\r\nexport class SpeechDetected implements ISpeechDetected {\r\n    private privSpeechStartDetected: ISpeechDetected;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechStartDetected = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechDetected {\r\n        return new SpeechDetected(json);\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechStartDetected.Offset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage, RecognitionStatus } from \"../Exports\";\r\n\r\n// speech.phrase for detailed\r\nexport interface IDetailedSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    NBest: IPhrase[];\r\n    Duration?: number;\r\n    Offset?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    DisplayText?: string;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport interface IPhrase {\r\n    Confidence?: number;\r\n    Lexical: string;\r\n    ITN: string;\r\n    MaskedITN: string;\r\n    Display: string;\r\n    Words?: IWord[];\r\n}\r\n\r\nexport interface IWord {\r\n    Word: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class DetailedSpeechPhrase implements IDetailedSpeechPhrase {\r\n    private privDetailedSpeechPhrase: IDetailedSpeechPhrase;\r\n\r\n    private constructor(json: string) {\r\n        this.privDetailedSpeechPhrase = JSON.parse(json);\r\n        this.privDetailedSpeechPhrase.RecognitionStatus = (RecognitionStatus as any)[this.privDetailedSpeechPhrase.RecognitionStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): DetailedSpeechPhrase {\r\n        return new DetailedSpeechPhrase(json);\r\n    }\r\n\r\n    public getJsonWithCorrectedOffsets(baseOffset: number): string {\r\n        if (!!this.privDetailedSpeechPhrase.NBest && !!this.privDetailedSpeechPhrase.NBest[0].Words) {\r\n            const firstWordOffset: number = this.privDetailedSpeechPhrase.NBest[0].Words[0].Offset;\r\n            if (firstWordOffset && firstWordOffset < baseOffset) {\r\n                const offset: number = baseOffset - firstWordOffset;\r\n                for (const details of this.privDetailedSpeechPhrase.NBest) {\r\n                    if (!!details.Words) {\r\n                        for (const word of details.Words) {\r\n                            word.Offset += offset;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return JSON.stringify(this.privDetailedSpeechPhrase);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\r\n    }\r\n    public get NBest(): IPhrase[] {\r\n        return this.privDetailedSpeechPhrase.NBest;\r\n    }\r\n    public get Duration(): number {\r\n        return this.privDetailedSpeechPhrase.Duration;\r\n    }\r\n    public get Offset(): number {\r\n        return this.privDetailedSpeechPhrase.Offset;\r\n    }\r\n    public get Language(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n    public get Text(): string {\r\n        return !!this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0] ? this.privDetailedSpeechPhrase.NBest[0].Display : this.privDetailedSpeechPhrase.DisplayText;\r\n    }\r\n    public get SpeakerId(): string {\r\n        return this.privDetailedSpeechPhrase.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCode, CancellationReason, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Define payload of speech recognition canceled result events.\r\n * @class TranslationRecognitionCanceledEventArgs\r\n */\r\nexport class TranslationRecognitionCanceledEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n    private privSessionId: string;\r\n    private privCancelReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionid - The session id.\r\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {TranslationRecognitionResult} result - The result.\r\n     */\r\n    public constructor(\r\n        sessionid: string,\r\n        cancellationReason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result: TranslationRecognitionResult) {\r\n        this.privCancelReason = cancellationReason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privResult = result;\r\n        this.privSessionId = sessionid;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n\r\n    /**\r\n     * Specifies the session identifier.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privCancelReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import { useCallback } from 'react';\nimport useMounted from './useMounted';\n\nfunction useSafeState(state) {\n  var isMounted = useMounted();\n  return [state[0], useCallback(function (nextState) {\n    if (!isMounted()) return;\n    return state[1](nextState);\n  }, [isMounted, state[1]])];\n}\n\nexport default useSafeState;","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","// import { isHTMLElement } from './instanceOf';\nexport default function getBoundingClientRect(element, // eslint-disable-next-line unused-imports/no-unused-vars\nincludeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1; // FIXME:\n  // `offsetWidth` returns an integer while `getBoundingClientRect`\n  // returns a float. This results in `scaleX` or `scaleY` being\n  // non-1 when it should be for elements that aren't a full pixel in\n  // width or height.\n  // if (isHTMLElement(element) && includeScale) {\n  //   const offsetHeight = element.offsetHeight;\n  //   const offsetWidth = element.offsetWidth;\n  //   // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n  //   // Fallback to 1 in case both values are `0`\n  //   if (offsetWidth > 0) {\n  //     scaleX = rect.width / offsetWidth || 1;\n  //   }\n  //   if (offsetHeight > 0) {\n  //     scaleY = rect.height / offsetHeight || 1;\n  //   }\n  // }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport default function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport within from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(round(x * dpr) / dpr) || 0,\n    y: round(round(y * dpr) / dpr) || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets;\n\n  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,\n      _ref3$x = _ref3.x,\n      x = _ref3$x === void 0 ? 0 : _ref3$x,\n      _ref3$y = _ref3.y,\n      y = _ref3$y === void 0 ? 0 : _ref3$y;\n\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom; // $FlowFixMe[prop-missing]\n\n      y -= offsetParent[heightProp] - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right; // $FlowFixMe[prop-missing]\n\n      x -= offsetParent[widthProp] - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref4) {\n  var state = _ref4.state,\n      options = _ref4.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nexport default function getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\";\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport within from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { max as mathMax, min as mathMin } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis || checkAltAxis) {\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = popperOffsets[mainAxis] + overflow[mainSide];\n    var max = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n\n    if (checkMainAxis) {\n      var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n      popperOffsets[mainAxis] = preventedOffset;\n      data[mainAxis] = preventedOffset - offset;\n    }\n\n    if (checkAltAxis) {\n      var _mainSide = mainAxis === 'x' ? top : left;\n\n      var _altSide = mainAxis === 'x' ? bottom : right;\n\n      var _offset = popperOffsets[altAxis];\n\n      var _min = _offset + overflow[_mainSide];\n\n      var _max = _offset - overflow[_altSide];\n\n      var _preventedOffset = within(tether ? mathMin(_min, tetherMin) : _min, _offset, tether ? mathMax(_max, tetherMax) : _max);\n\n      popperOffsets[altAxis] = _preventedOffset;\n      data[altAxis] = _preventedOffset - _offset;\n    }\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = rect.width / element.offsetWidth || 1;\n  var scaleY = rect.height / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import arrow from '@popperjs/core/lib/modifiers/arrow';\nimport computeStyles from '@popperjs/core/lib/modifiers/computeStyles';\nimport eventListeners from '@popperjs/core/lib/modifiers/eventListeners';\nimport flip from '@popperjs/core/lib/modifiers/flip';\nimport hide from '@popperjs/core/lib/modifiers/hide';\nimport offset from '@popperjs/core/lib/modifiers/offset';\nimport popperOffsets from '@popperjs/core/lib/modifiers/popperOffsets';\nimport preventOverflow from '@popperjs/core/lib/modifiers/preventOverflow';\nimport { placements } from '@popperjs/core/lib/enums';\nimport { popperGenerator } from '@popperjs/core/lib/popper-base'; // For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\n\nexport var createPopper = popperGenerator({\n  defaultModifiers: [hide, popperOffsets, computeStyles, eventListeners, offset, flip, preventOverflow, arrow]\n});\nexport { placements };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport useSafeState from '@restart/hooks/useSafeState';\nimport { createPopper } from './popper';\n\nvar initialPopperStyles = function initialPopperStyles(position) {\n  return {\n    position: position,\n    top: '0',\n    left: '0',\n    opacity: '0',\n    pointerEvents: 'none'\n  };\n};\n\nvar disabledApplyStylesModifier = {\n  name: 'applyStyles',\n  enabled: false\n}; // until docjs supports type exports...\n\nvar ariaDescribedByModifier = {\n  name: 'ariaDescribedBy',\n  enabled: true,\n  phase: 'afterWrite',\n  effect: function effect(_ref) {\n    var state = _ref.state;\n    return function () {\n      var _state$elements = state.elements,\n          reference = _state$elements.reference,\n          popper = _state$elements.popper;\n\n      if ('removeAttribute' in reference) {\n        var ids = (reference.getAttribute('aria-describedby') || '').split(',').filter(function (id) {\n          return id.trim() !== popper.id;\n        });\n        if (!ids.length) reference.removeAttribute('aria-describedby');else reference.setAttribute('aria-describedby', ids.join(','));\n      }\n    };\n  },\n  fn: function fn(_ref2) {\n    var _popper$getAttribute;\n\n    var state = _ref2.state;\n    var _state$elements2 = state.elements,\n        popper = _state$elements2.popper,\n        reference = _state$elements2.reference;\n    var role = (_popper$getAttribute = popper.getAttribute('role')) == null ? void 0 : _popper$getAttribute.toLowerCase();\n\n    if (popper.id && role === 'tooltip' && 'setAttribute' in reference) {\n      var ids = reference.getAttribute('aria-describedby');\n\n      if (ids && ids.split(',').indexOf(popper.id) !== -1) {\n        return;\n      }\n\n      reference.setAttribute('aria-describedby', ids ? ids + \",\" + popper.id : popper.id);\n    }\n  }\n};\nvar EMPTY_MODIFIERS = [];\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {boolean=}    options.eventsEnabled have Popper listen on window resize events to reposition the element\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */\n\nfunction usePopper(referenceElement, popperElement, _temp) {\n  var _ref3 = _temp === void 0 ? {} : _temp,\n      _ref3$enabled = _ref3.enabled,\n      enabled = _ref3$enabled === void 0 ? true : _ref3$enabled,\n      _ref3$placement = _ref3.placement,\n      placement = _ref3$placement === void 0 ? 'bottom' : _ref3$placement,\n      _ref3$strategy = _ref3.strategy,\n      strategy = _ref3$strategy === void 0 ? 'absolute' : _ref3$strategy,\n      _ref3$modifiers = _ref3.modifiers,\n      modifiers = _ref3$modifiers === void 0 ? EMPTY_MODIFIERS : _ref3$modifiers,\n      config = _objectWithoutPropertiesLoose(_ref3, [\"enabled\", \"placement\", \"strategy\", \"modifiers\"]);\n\n  var popperInstanceRef = useRef();\n  var update = useCallback(function () {\n    var _popperInstanceRef$cu;\n\n    (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();\n  }, []);\n  var forceUpdate = useCallback(function () {\n    var _popperInstanceRef$cu2;\n\n    (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();\n  }, []);\n\n  var _useSafeState = useSafeState(useState({\n    placement: placement,\n    update: update,\n    forceUpdate: forceUpdate,\n    attributes: {},\n    styles: {\n      popper: initialPopperStyles(strategy),\n      arrow: {}\n    }\n  })),\n      popperState = _useSafeState[0],\n      setState = _useSafeState[1];\n\n  var updateModifier = useMemo(function () {\n    return {\n      name: 'updateStateModifier',\n      enabled: true,\n      phase: 'write',\n      requires: ['computeStyles'],\n      fn: function fn(_ref4) {\n        var state = _ref4.state;\n        var styles = {};\n        var attributes = {};\n        Object.keys(state.elements).forEach(function (element) {\n          styles[element] = state.styles[element];\n          attributes[element] = state.attributes[element];\n        });\n        setState({\n          state: state,\n          styles: styles,\n          attributes: attributes,\n          update: update,\n          forceUpdate: forceUpdate,\n          placement: state.placement\n        });\n      }\n    };\n  }, [update, forceUpdate, setState]);\n  useEffect(function () {\n    if (!popperInstanceRef.current || !enabled) return;\n    popperInstanceRef.current.setOptions({\n      placement: placement,\n      strategy: strategy,\n      modifiers: [].concat(modifiers, [updateModifier, disabledApplyStylesModifier])\n    }); // intentionally NOT re-running on new modifiers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [strategy, placement, updateModifier, enabled]);\n  useEffect(function () {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    popperInstanceRef.current = createPopper(referenceElement, popperElement, _extends({}, config, {\n      placement: placement,\n      strategy: strategy,\n      modifiers: [].concat(modifiers, [ariaDescribedByModifier, updateModifier])\n    }));\n    return function () {\n      if (popperInstanceRef.current != null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = undefined;\n        setState(function (s) {\n          return _extends({}, s, {\n            attributes: {},\n            styles: {\n              popper: initialPopperStyles(strategy)\n            }\n          });\n        });\n      }\n    }; // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, referenceElement, popperElement]);\n  return popperState;\n}\n\nexport default usePopper;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import ownerDocument from 'dom-helpers/ownerDocument';\nimport safeFindDOMNode from './safeFindDOMNode';\nexport default (function (componentOrElement) {\n  return ownerDocument(safeFindDOMNode(componentOrElement));\n});","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n\n  return componentOrElement != null ? componentOrElement : null;\n}","import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = window.event;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    var removeKeyupListener = listen(doc, 'keyup', function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function toModifierMap(modifiers) {\n  var result = {};\n\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  } // eslint-disable-next-line no-unused-expressions\n\n\n  modifiers == null ? void 0 : modifiers.forEach(function (m) {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray(map) {\n  if (map === void 0) {\n    map = {};\n  }\n\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(function (k) {\n    map[k].name = k;\n    return map[k];\n  });\n}\nexport default function mergeOptionsWithPopperConfig(_ref) {\n  var _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n\n  var enabled = _ref.enabled,\n      enableEvents = _ref.enableEvents,\n      placement = _ref.placement,\n      flip = _ref.flip,\n      offset = _ref.offset,\n      fixed = _ref.fixed,\n      containerPadding = _ref.containerPadding,\n      arrowElement = _ref.arrowElement,\n      _ref$popperConfig = _ref.popperConfig,\n      popperConfig = _ref$popperConfig === void 0 ? {} : _ref$popperConfig;\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  return _extends({}, popperConfig, {\n    placement: placement,\n    enabled: enabled,\n    strategy: fixed ? 'fixed' : popperConfig.strategy,\n    modifiers: toModifierArray(_extends({}, modifiers, {\n      eventListeners: {\n        enabled: enableEvents\n      },\n      preventOverflow: _extends({}, modifiers.preventOverflow, {\n        options: containerPadding ? _extends({\n          padding: containerPadding\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n      }),\n      offset: {\n        options: _extends({\n          offset: offset\n        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    }))\n  });\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","module.exports = require('./lib/axios');","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionEvent } from \"./ConnectionEvents\";\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { ConnectionOpenResponse } from \"./ConnectionOpenResponse\";\r\nimport { EventSource } from \"./EventSource\";\r\n\r\nexport enum ConnectionState {\r\n    None,\r\n    Connected,\r\n    Connecting,\r\n    Disconnected,\r\n}\r\n\r\nexport interface IConnection {\r\n    id: string;\r\n    state(): ConnectionState;\r\n    open(): Promise<ConnectionOpenResponse>;\r\n    send(message: ConnectionMessage): Promise<void>;\r\n    read(): Promise<ConnectionMessage>;\r\n    events: EventSource<ConnectionEvent>;\r\n    dispose(disposing?: string): Promise<void>;\r\n}\r\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { SpeechSynthesizer } from \"../sdk/Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the synthesis.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SynthesisContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privSpeechSynthesizer: SpeechSynthesizer;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n\r\n    constructor(speechSynthesizer: SpeechSynthesizer) {\r\n        this.privSpeechSynthesizer = speechSynthesizer;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the synthesis.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: any): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the audio output format for synthesis context generation.\r\n     * @param format {AudioOutputFormatImpl} the output format\r\n     */\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const synthesisSection: ISynthesisSection = this.buildSynthesisContext();\r\n        this.setSection(\"synthesis\", synthesisSection);\r\n\r\n        return JSON.stringify(this.privContext);\r\n    }\r\n\r\n    private buildSynthesisContext(): ISynthesisSection {\r\n        return {\r\n            audio: {\r\n                metadataOptions: {\r\n                    bookmarkEnabled: (!!this.privSpeechSynthesizer.bookmarkReached),\r\n                    sentenceBoundaryEnabled: false,\r\n                    visemeEnabled: (!!this.privSpeechSynthesizer.visemeReceived),\r\n                    wordBoundaryEnabled: (!!this.privSpeechSynthesizer.wordBoundary),\r\n                },\r\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\r\n            },\r\n            language: {\r\n                autoDetection: this.privSpeechSynthesizer.autoDetectSourceLanguage\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\ninterface ISynthesisSection {\r\n    audio: {\r\n        outputFormat: string,\r\n        metadataOptions: {\r\n            bookmarkEnabled: boolean,\r\n            wordBoundaryEnabled: boolean,\r\n            visemeEnabled: boolean,\r\n            sentenceBoundaryEnabled: boolean,\r\n        }\r\n    };\r\n    language: {\r\n        autoDetection: boolean\r\n    };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis word boundary event.\r\n * @class SpeechSynthesisWordBoundaryEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisWordBoundaryEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n    private privWordLength: number;\r\n    private privTextOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The text.\r\n     * @param {number} wordLength - The length of the word.\r\n     * @param {number} textOffset - The text offset.\r\n     */\r\n    public constructor(audioOffset: number, text: string, wordLength: number, textOffset: number) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n        this.privWordLength = wordLength;\r\n        this.privTextOffset = textOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text of the word boundary event.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Specifies the word length\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\r\n     * @function\r\n     * @public\r\n     * @returns {number} the word length\r\n     */\r\n    public get wordLength(): number {\r\n        return this.privWordLength;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the text offset.\r\n     */\r\n    public get textOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis bookmark event.\r\n * @class SpeechSynthesisBookmarkEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisBookmarkEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The bookmark text.\r\n     */\r\n    public constructor(audioOffset: number, text: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the bookmark.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the bookmark text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis viseme event.\r\n * @class SpeechSynthesisVisemeEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisVisemeEventArgs {\r\n    private privAudioOffset: number;\r\n    private privVisemeId: number;\r\n    private privAnimation: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {number} visemeId - The viseme ID.\r\n     * @param {string} animation - The animation, could be in svg or other format.\r\n     */\r\n    public constructor(audioOffset: number, visemeId: number, animation: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privVisemeId = visemeId;\r\n        this.privAnimation = animation;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the viseme ID.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\r\n     * @function\r\n     * @public\r\n     * @returns {number} the viseme ID.\r\n     */\r\n    public get visemeId(): number {\r\n        return this.privVisemeId;\r\n    }\r\n\r\n    /**\r\n     * Specifies the animation.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\r\n     * @function\r\n     * @public\r\n     * @returns {string} the animation, could be in svg or other format.\r\n     */\r\n    public get animation(): string {\r\n        return this.privAnimation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class RecognitionResult\r\n */\r\nexport class RecognitionResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privText: string;\r\n    private privDuration: number;\r\n    private privOffset: number;\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n    private privErrorDetails: string;\r\n    private privJson: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason, text?: string, duration?: number,\r\n                offset?: number, language?: string, languageDetectionConfidence?: string, errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privText = text;\r\n        this.privDuration = duration;\r\n        this.privOffset = offset;\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privJson = json;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member RecognitionResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member RecognitionResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * Presents the recognized text in the result.\r\n     * @member RecognitionResult.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} Presents the recognized text in the result.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Duration of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.duration\r\n     * @function\r\n     * @public\r\n     * @returns {number} Duration of recognized speech in 100 nano second increments.\r\n     */\r\n    public get duration(): number {\r\n        return this.privDuration;\r\n    }\r\n\r\n    /**\r\n     * Offset of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.offset\r\n     * @function\r\n     * @public\r\n     * @returns {number} Offset of recognized speech in 100 nano second increments.\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detected.\r\n     * @member RecognitionResult.prototype.language\r\n     * @function\r\n     * @public\r\n     * @returns {string} language detected.\r\n     */\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\r\n     * @member RecognitionResult.prototype.languageDetectionConfidence\r\n     * @function\r\n     * @public\r\n     * @returns {string} detection confidence strength.\r\n     */\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member RecognitionResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * A string containing Json serialized recognition result as it was received from the service.\r\n     * @member RecognitionResult.prototype.json\r\n     * @function\r\n     * @private\r\n     * @returns {string} Json serialized representation of the result.\r\n     */\r\n    public get json(): string {\r\n        return this.privJson;\r\n    }\r\n\r\n    /**\r\n     *  The set of properties exposed in the result.\r\n     * @member RecognitionResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase\";\r\n\r\nexport class SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Profanity option.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ProfanityOption {\r\n    Masked = 0,\r\n    Removed = 1,\r\n    Raw = 2\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IDynamicGrammar,\r\n    IDynamicGrammarGeneric,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\r\n * @class DynamicGrammarBuilder\r\n */\r\nexport class DynamicGrammarBuilder {\r\n\r\n    private privPhrases: string[];\r\n    private privGrammars: string[];\r\n\r\n    // Adds one more reference phrases to the dynamic grammar to send.\r\n    // All added phrases are generic phrases.\r\n    public addPhrase(phrase: string | string[]): void {\r\n        if (!this.privPhrases) {\r\n            this.privPhrases = [];\r\n        }\r\n\r\n        if (phrase instanceof Array) {\r\n            this.privPhrases = this.privPhrases.concat(phrase as string[]);\r\n        } else {\r\n            this.privPhrases.push(phrase as string);\r\n        }\r\n    }\r\n\r\n    // Clears all phrases stored in the current object.\r\n    public clearPhrases(): void {\r\n        this.privPhrases = undefined;\r\n    }\r\n\r\n    // Adds one or more reference grammars to the current grammar.\r\n    public addReferenceGrammar(grammar: string | string[]): void {\r\n        if (!this.privGrammars) {\r\n            this.privGrammars = [];\r\n        }\r\n\r\n        if (grammar instanceof Array) {\r\n            this.privGrammars = this.privGrammars.concat(grammar as string[]);\r\n        } else {\r\n            this.privGrammars.push(grammar as string);\r\n        }\r\n    }\r\n\r\n    // clears all grammars stored on the recognizer.\r\n    public clearGrammars(): void {\r\n        this.privGrammars = undefined;\r\n    }\r\n\r\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\r\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\r\n    // of a DynamicGrammarBuilder\r\n    public generateGrammarObject(): IDynamicGrammar {\r\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const retObj: IDynamicGrammar = {};\r\n        retObj.ReferenceGrammars = this.privGrammars;\r\n\r\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\r\n            const retPhrases: IDynamicGrammarGeneric[] = [];\r\n\r\n            this.privPhrases.forEach((value: string, index: number, array: string[]): void => {\r\n                retPhrases.push({\r\n                    Text: value,\r\n                });\r\n            });\r\n\r\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\r\n        }\r\n\r\n        return retObj;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    IDynamicGrammar,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the speech.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: any): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params);\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\r\n        }\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"SNR\");\r\n        }\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\r\n        this.setSection(\"dgi\", dgi);\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IIntentResponse {\r\n    query: string;\r\n    topScoringIntent: ISingleIntent;\r\n    entities: IIntentEntity[];\r\n}\r\n\r\nexport interface IIntentEntity {\r\n    entity: string;\r\n    type: string;\r\n    startIndex: number;\r\n    endIndex: number;\r\n    score: number;\r\n}\r\n\r\nexport interface ISingleIntent {\r\n    intent: string;\r\n    score: number;\r\n}\r\n\r\nexport class IntentResponse implements IIntentResponse {\r\n    private privIntentResponse: IIntentResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privIntentResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): IntentResponse {\r\n        return new IntentResponse(json);\r\n    }\r\n\r\n    public get query(): string {\r\n        return this.privIntentResponse.query;\r\n    }\r\n\r\n    public get topScoringIntent(): ISingleIntent {\r\n        return this.privIntentResponse.topScoringIntent;\r\n    }\r\n\r\n    public get entities(): IIntentEntity[] {\r\n        return this.privIntentResponse.entities;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationEventArgs } from \"./CancellationEventArgs\";\r\nimport { CancellationErrorCode, CancellationReason, IntentRecognitionEventArgs, IntentRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Define payload of intent recognition canceled result events.\r\n * @class IntentRecognitionCanceledEventArgs\r\n */\r\nexport class IntentRecognitionCanceledEventArgs extends IntentRecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} result - The result of the intent recognition.\r\n     * @param {string} offset - The offset.\r\n     * @param {IntentRecognitionResult} sessionId - The session id.\r\n     */\r\n    public constructor(\r\n        reason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result?: IntentRecognitionResult,\r\n        offset?: number,\r\n        sessionId?: string) {\r\n        super(result, offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ITranslations } from \"../Exports\";\r\nimport { TranslationStatus } from \"../TranslationStatus\";\r\n\r\n// translation.hypothesis\r\nexport interface ITranslationHypothesis {\r\n    Duration: number;\r\n    Offset: number;\r\n    Text: string;\r\n    Translation: ITranslations;\r\n}\r\n\r\nexport class TranslationHypothesis implements ITranslationHypothesis {\r\n    private privTranslationHypothesis: ITranslationHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privTranslationHypothesis = JSON.parse(json);\r\n        this.privTranslationHypothesis.Translation.TranslationStatus = (TranslationStatus as any)[this.privTranslationHypothesis.Translation.TranslationStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationHypothesis {\r\n        return new TranslationHypothesis(json);\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationHypothesis.Duration;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationHypothesis.Offset;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationHypothesis.Text;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationHypothesis.Translation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisStatus } from \"../Exports\";\r\n\r\n// translation.synthesis.end\r\nexport interface ITranslationSynthesisEnd {\r\n    SynthesisStatus: SynthesisStatus;\r\n    FailureReason: string;\r\n}\r\n\r\nexport class TranslationSynthesisEnd implements ITranslationSynthesisEnd {\r\n    private privSynthesisEnd: ITranslationSynthesisEnd;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisEnd = JSON.parse(json);\r\n        this.privSynthesisEnd.SynthesisStatus = (SynthesisStatus as any)[this.privSynthesisEnd.SynthesisStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationSynthesisEnd {\r\n        return new TranslationSynthesisEnd(json);\r\n    }\r\n\r\n    public get SynthesisStatus(): SynthesisStatus {\r\n        return this.privSynthesisEnd.SynthesisStatus;\r\n    }\r\n\r\n    public get FailureReason(): string {\r\n        return this.privSynthesisEnd.FailureReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"./Exports\";\r\n\r\n/**\r\n * Represents collection of parameters and their values.\r\n * @class Translations\r\n */\r\nexport class Translations {\r\n    // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\r\n    private privMap: PropertyCollection = new PropertyCollection();\r\n\r\n    /**\r\n     * Returns the parameter value in type String. The parameter must have the same type as String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member Translations.prototype.get\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public get(key: string, def?: string): string {\r\n        return this.privMap.getProperty(key, def);\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member Translations.prototype.set\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public set(key: string, value: string): void {\r\n        this.privMap.setProperty(key, value);\r\n    }\r\n\r\n    /**\r\n     * Get the languages in the object in a String array.\r\n     * @member Translations.prototype.languages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} languages in translations object.\r\n     */\r\n    public get languages(): string[] {\r\n        return this.privMap.keys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase\";\r\n\r\n/**\r\n * Defines content of a RecognitionErrorEvent.\r\n * @class ConversationTranscriptionCanceledEventArgs\r\n */\r\nexport class ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechSynthesisEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n\r\n    constructor(eventName: string, requestId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n}\r\n\r\nexport class SynthesisTriggeredEvent extends SpeechSynthesisEvent {\r\n    private privSessionAudioDestinationId: string;\r\n    private privTurnAudioDestinationId: string;\r\n\r\n    constructor(requestId: string, sessionAudioDestinationId: string, turnAudioDestinationId: string) {\r\n        super(\"SynthesisTriggeredEvent\", requestId);\r\n\r\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\r\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\r\n    }\r\n\r\n    public get audioSessionDestinationId(): string {\r\n        return this.privSessionAudioDestinationId;\r\n    }\r\n\r\n    public get audioTurnDestinationId(): string {\r\n        return this.privTurnAudioDestinationId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport class SynthesisStartedEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"SynthesisStartedEvent\", requestId);\r\n\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events, IAudioDestination\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { ISynthesisMetadata } from \"./ServiceMessages/SynthesisAudioMetadata\";\r\nimport { SynthesisAdapterBase } from \"./SynthesisAdapterBase\";\r\nimport {\r\n    ConnectingToSynthesisServiceEvent,\r\n    SpeechSynthesisEvent,\r\n    SynthesisStartedEvent,\r\n    SynthesisTriggeredEvent,\r\n} from \"./SynthesisEvents\";\r\n\r\nexport interface ISynthesisResponseContext {\r\n    serviceTag: string;\r\n}\r\n\r\nexport interface ISynthesisResponseAudio {\r\n    type: string;\r\n    streamId: string;\r\n}\r\n\r\nexport interface ISynthesisResponse {\r\n    context: ISynthesisResponseContext;\r\n    audio: ISynthesisResponseAudio;\r\n}\r\n\r\nexport class SynthesisTurn {\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public set streamId(value: string) {\r\n        this.privStreamId = value;\r\n    }\r\n\r\n    public get audioOutputFormat(): AudioOutputFormatImpl {\r\n        return this.privAudioOutputFormat;\r\n    }\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSynthesisEnded(): boolean {\r\n        return this.privIsSynthesisEnded;\r\n    }\r\n\r\n    public get isSynthesizing(): boolean {\r\n        return this.privIsSynthesizing;\r\n    }\r\n\r\n    public get currentTextOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n\r\n    // The number of bytes received for current turn\r\n    public get bytesReceived(): number {\r\n        return this.privBytesReceived;\r\n    }\r\n\r\n    private privIsDisposed: boolean = false;\r\n    private privAuthFetchEventId: string;\r\n    private privIsSynthesizing: boolean = false;\r\n    private privIsSynthesisEnded: boolean = false;\r\n    private privBytesReceived: number = 0;\r\n    private privRequestId: string;\r\n    private privStreamId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privReceivedAudio: ArrayBuffer;\r\n    private privReceivedAudioWithHeader: ArrayBuffer;\r\n    private privTextOffset: number = 0;\r\n    private privNextSearchTextIndex: number = 0;\r\n    private privPartialVisemeAnimation: string;\r\n    private privRawText: string;\r\n    private privIsSSML: boolean;\r\n    private privTurnAudioDestination: IAudioDestination;\r\n\r\n    constructor() {\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public async getAllReceivedAudio(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudio) {\r\n            return Promise.resolve(this.privReceivedAudio);\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        await this.readAllAudioFromStream();\r\n        return Promise.resolve(this.privReceivedAudio);\r\n    }\r\n\r\n    public async getAllReceivedAudioWithHeader(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudioWithHeader) {\r\n            return this.privReceivedAudioWithHeader;\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        if (this.audioOutputFormat.hasHeader) {\r\n            const audio: ArrayBuffer = await this.getAllReceivedAudio();\r\n            this.privReceivedAudioWithHeader = SynthesisAdapterBase.addHeader(audio, this.audioOutputFormat);\r\n            return this.privReceivedAudioWithHeader;\r\n        } else {\r\n            return this.getAllReceivedAudio();\r\n        }\r\n    }\r\n\r\n    public startNewSynthesis(requestId: string, rawText: string, isSSML: boolean, audioDestination?: IAudioDestination): void {\r\n        this.privIsSynthesisEnded = false;\r\n        this.privIsSynthesizing = true;\r\n        this.privRequestId = requestId;\r\n        this.privRawText = rawText;\r\n        this.privIsSSML = isSSML;\r\n        this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\r\n        this.privReceivedAudio = null;\r\n        this.privReceivedAudioWithHeader = null;\r\n        this.privBytesReceived = 0;\r\n        this.privTextOffset = 0;\r\n        this.privNextSearchTextIndex = 0;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        if (audioDestination !== undefined) {\r\n            this.privTurnAudioDestination = audioDestination;\r\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\r\n        }\r\n        this.onEvent(new SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.onEvent(new ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\r\n    }\r\n\r\n    public onAuthCompleted = (isError: boolean, error?: string): void => {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted = (statusCode: number, reason?: string): void => {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\r\n            this.privBytesReceived = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceResponseMessage = (responseJson: string): void => {\r\n        const response: ISynthesisResponse = JSON.parse(responseJson);\r\n        this.streamId = response.audio.streamId;\r\n    }\r\n\r\n    public onServiceTurnEndResponse = (): void => {\r\n        this.privInTurn = false;\r\n        this.privTurnDeferral.resolve();\r\n        this.onComplete();\r\n    }\r\n\r\n    public onServiceTurnStartResponse = (): void => {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            /* tslint:disable:no-empty */\r\n            this.privTurnDeferral.promise.then().catch(() => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onAudioChunkReceived(data: ArrayBuffer): void {\r\n        if (this.isSynthesizing) {\r\n            this.privAudioOutputStream.write(data);\r\n            this.privBytesReceived += data.byteLength;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.write(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onWordBoundaryEvent(text: string): void {\r\n        this.updateTextOffset(text);\r\n    }\r\n\r\n    public onVisemeMetadataReceived(metadata: ISynthesisMetadata): void {\r\n        if (metadata.Data.AnimationChunk !== undefined) {\r\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\r\n        }\r\n    }\r\n\r\n    public dispose = (error?: string): void => {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n        }\r\n    }\r\n\r\n    public onStopSynthesizing(): void {\r\n        this.onComplete();\r\n    }\r\n\r\n    /**\r\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\r\n     * partial animation.\r\n     */\r\n    public getAndClearVisemeAnimation(): string {\r\n        const animation: string = this.privPartialVisemeAnimation;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        return animation;\r\n    }\r\n\r\n    protected onEvent = (event: SpeechSynthesisEvent): void => {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private updateTextOffset(text: string): void {\r\n        if (this.privTextOffset >= 0) {\r\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\r\n            if (this.privTextOffset >= 0) {\r\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\r\n            }\r\n            if (this.privIsSSML) {\r\n                if (this.privRawText.indexOf(\"<\", this.privTextOffset + 1) > this.privRawText.indexOf(\">\", this.privTextOffset + 1)) {\r\n                    this.updateTextOffset(text);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete = (): void => {\r\n        if (this.privIsSynthesizing) {\r\n            this.privIsSynthesizing = false;\r\n            this.privIsSynthesisEnded = true;\r\n            this.privAudioOutputStream.close();\r\n            this.privInTurn = false;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.close();\r\n                this.privTurnAudioDestination = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    private async readAllAudioFromStream(): Promise<void> {\r\n        if (this.privIsSynthesisEnded) {\r\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\r\n            try {\r\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\r\n            } catch (e) {\r\n                this.privReceivedAudio = new ArrayBuffer(0);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEstablishErrorEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionStartEvent,\r\n    IEventListener,\r\n    IStringDictionary,\r\n    PlatformEvent,\r\n} from \"../common/Exports\";\r\nimport { ConnectingToServiceEvent, RecognitionTriggeredEvent } from \"./RecognitionEvents\";\r\n\r\nexport interface ITelemetry {\r\n    Metrics: IMetric[];\r\n    ReceivedMessages: IStringDictionary<string[]>;\r\n}\r\n\r\nexport interface IMetric {\r\n    End?: string;\r\n    Error?: string;\r\n    Id?: string;\r\n    Name?: string;\r\n    Start?: string;\r\n    PhraseLatencyMs?: number[];\r\n    FirstHypothesisLatencyMs?: number[];\r\n}\r\n\r\nexport class ServiceTelemetryListener implements IEventListener<PlatformEvent> {\r\n    private privIsDisposed: boolean = false;\r\n\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    private privListeningTriggerMetric: IMetric = null;\r\n    private privMicMetric: IMetric = null;\r\n    private privConnectionEstablishMetric: IMetric = null;\r\n\r\n    private privMicStartTime: string;\r\n\r\n    private privConnectionId: string;\r\n    private privConnectionStartTime: string;\r\n\r\n    private privReceivedMessages: IStringDictionary<string[]>;\r\n    private privPhraseLatencies: number[];\r\n    private privHypothesisLatencies: number[];\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n\r\n        this.privReceivedMessages = {};\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n    }\r\n\r\n    public phraseReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public hypothesisReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public onEvent = (e: PlatformEvent): void => {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (e instanceof RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\r\n            this.privListeningTriggerMetric = {\r\n                End: e.eventTime,\r\n                Name: \"ListeningTrigger\",\r\n                Start: e.eventTime,\r\n            };\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectingToServiceEvent && e.requestId === this.privRequestId) {\r\n            this.privConnectionId = e.sessionId;\r\n        }\r\n\r\n        if (e instanceof ConnectionStartEvent && e.connectionId === this.privConnectionId) {\r\n            this.privConnectionStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Error: this.getConnectionError(e.statusCode),\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\r\n            if (e.message && e.message.headers && e.message.headers.path) {\r\n                if (!this.privReceivedMessages[e.message.headers.path]) {\r\n                    this.privReceivedMessages[e.message.headers.path] = new Array<string>();\r\n                }\r\n                const maxMessagesToSend = 50;\r\n                if (this.privReceivedMessages[e.message.headers.path].length < maxMessagesToSend) {\r\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTelemetry = (): string => {\r\n        const metrics = new Array<IMetric>();\r\n\r\n        if (this.privListeningTriggerMetric) {\r\n            metrics.push(this.privListeningTriggerMetric);\r\n        }\r\n\r\n        if (this.privMicMetric) {\r\n            metrics.push(this.privMicMetric);\r\n        }\r\n\r\n        if (this.privConnectionEstablishMetric) {\r\n            metrics.push(this.privConnectionEstablishMetric);\r\n        }\r\n\r\n        if (this.privPhraseLatencies.length > 0) {\r\n            metrics.push({\r\n                PhraseLatencyMs: this.privPhraseLatencies,\r\n            });\r\n        }\r\n\r\n        if (this.privHypothesisLatencies.length > 0) {\r\n            metrics.push({\r\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\r\n            });\r\n        }\r\n\r\n        const telemetry: ITelemetry = {\r\n            Metrics: metrics,\r\n            ReceivedMessages: this.privReceivedMessages,\r\n        };\r\n\r\n        const json = JSON.stringify(telemetry);\r\n\r\n        // We dont want to send the same telemetry again. So clean those out.\r\n        this.privReceivedMessages = {};\r\n        this.privListeningTriggerMetric = null;\r\n        this.privMicMetric = null;\r\n        this.privConnectionEstablishMetric = null;\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n        return json;\r\n    }\r\n\r\n    // Determines if there are any telemetry events to send to the service.\r\n    public get hasTelemetry(): boolean {\r\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\r\n            this.privListeningTriggerMetric !== null ||\r\n            this.privMicMetric !== null ||\r\n            this.privConnectionEstablishMetric !== null ||\r\n            this.privPhraseLatencies.length !== 0 ||\r\n            this.privHypothesisLatencies.length !== 0);\r\n    }\r\n\r\n    public dispose = (): void => {\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    private getConnectionError = (statusCode: number): string => {\r\n        /*\r\n        -- Websocket status codes --\r\n        NormalClosure = 1000,\r\n        EndpointUnavailable = 1001,\r\n        ProtocolError = 1002,\r\n        InvalidMessageType = 1003,\r\n        Empty = 1005,\r\n        InvalidPayloadData = 1007,\r\n        PolicyViolation = 1008,\r\n        MessageTooBig = 1009,\r\n        MandatoryExtension = 1010,\r\n        InternalServerError = 1011\r\n        */\r\n\r\n        switch (statusCode) {\r\n            case 400:\r\n            case 1002:\r\n            case 1003:\r\n            case 1005:\r\n            case 1007:\r\n            case 1008:\r\n            case 1009: return \"BadRequest\";\r\n            case 401: return \"Unauthorized\";\r\n            case 403: return \"Forbidden\";\r\n            case 503:\r\n            case 1001: return \"ServerUnavailable\";\r\n            case 500:\r\n            case 1011: return \"ServerError\";\r\n            case 408:\r\n            case 504: return \"Timeout\";\r\n            default: return \"statuscode:\" + statusCode.toString();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Z_NO_COMPRESSION } from \"zlib\";\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    IDetachable,\r\n    IEventSource,\r\n    PlatformEvent\r\n} from \"../common/Exports\";\r\nimport {\r\n    ConnectingToServiceEvent,\r\n    ListeningStartedEvent,\r\n    RecognitionStartedEvent,\r\n    RecognitionTriggeredEvent,\r\n    SpeechRecognitionEvent,\r\n} from \"./RecognitionEvents\";\r\nimport { ServiceTelemetryListener } from \"./ServiceTelemetryListener.Internal\";\r\n\r\nexport class RequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privServiceTelemetryListener: ServiceTelemetryListener;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAudioNode: ReplayableAudioNode;\r\n    private privAuthFetchEventId: string;\r\n    private privIsAudioNodeDetached: boolean = false;\r\n    private privIsRecognizing: boolean = false;\r\n    private privIsSpeechEnded: boolean = false;\r\n    private privTurnStartAudioOffset: number = 0;\r\n    private privLastRecoOffset: number = 0;\r\n    private privHypothesisReceived: boolean = false;\r\n    private privBytesSent: number = 0;\r\n    private privRecogNumber: number = 0;\r\n    private privSessionId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privConnectionAttempts: number = 0;\r\n\r\n    constructor(audioSourceId: string) {\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privAudioNodeId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSpeechEnded(): boolean {\r\n        return this.privIsSpeechEnded;\r\n    }\r\n\r\n    public get isRecognizing(): boolean {\r\n        return this.privIsRecognizing;\r\n    }\r\n\r\n    public get currentTurnAudioOffset(): number {\r\n        return this.privTurnStartAudioOffset;\r\n    }\r\n\r\n    public get recogNumber(): number {\r\n        return this.privRecogNumber;\r\n    }\r\n\r\n    public get numConnectionAttempts(): number {\r\n        return this.privConnectionAttempts;\r\n    }\r\n\r\n    // The number of bytes sent for the current connection.\r\n    // Counter is reset to 0 each time a connection is established.\r\n    public get bytesSent(): number {\r\n        return this.privBytesSent;\r\n    }\r\n    public listenForServiceTelemetry(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\r\n        }\r\n    }\r\n\r\n    public startNewRecognition(): void {\r\n        this.privIsSpeechEnded = false;\r\n        this.privIsRecognizing = true;\r\n        this.privTurnStartAudioOffset = 0;\r\n        this.privLastRecoOffset = 0;\r\n        this.privRecogNumber++;\r\n        this.privServiceTelemetryListener = new ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\r\n        this.onEvent(new RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n    }\r\n\r\n    public async onAudioSourceAttachCompleted(audioNode: ReplayableAudioNode, isError: boolean, error?: string): Promise<void> {\r\n        this.privAudioNode = audioNode;\r\n        this.privIsAudioNodeDetached = false;\r\n\r\n        if (isError) {\r\n            await this.onComplete();\r\n        } else {\r\n            this.onEvent(new ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n        }\r\n    }\r\n\r\n    public onPreConnectionStart = (authFetchEventId: string, connectionId: string): void => {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privSessionId = connectionId;\r\n        this.onEvent(new ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\r\n    }\r\n\r\n    public async onAuthCompleted(isError: boolean, error?: string): Promise<void> {\r\n        if (isError) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onConnectionEstablishCompleted(statusCode: number, reason?: string): Promise<void> {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\r\n            if (!!this.privAudioNode) {\r\n                this.privAudioNode.replay();\r\n            }\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privBytesSent = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onServiceTurnEndResponse(continuousRecognition: boolean): Promise<void> {\r\n        this.privTurnDeferral.resolve();\r\n\r\n        if (!continuousRecognition || this.isSpeechEnded) {\r\n            await this.onComplete();\r\n            this.privInTurn = false;\r\n        } else {\r\n            // Start a new request set.\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privAudioNode.replay();\r\n        }\r\n    }\r\n\r\n    public onSpeechContext = (): void => {\r\n        this.privRequestId = createNoDashGuid();\r\n    }\r\n\r\n    public onServiceTurnStartResponse = (): void => {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            /* tslint:disable:no-empty */\r\n            this.privTurnDeferral.promise.then().catch(() => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onHypothesis(offset: number): void {\r\n        if (!this.privHypothesisReceived) {\r\n            this.privHypothesisReceived = true;\r\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        }\r\n    }\r\n\r\n    public onPhraseRecognized(offset: number): void {\r\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        this.onServiceRecognized(offset);\r\n    }\r\n\r\n    public onServiceRecognized(offset: number): void {\r\n        this.privLastRecoOffset = offset;\r\n        this.privHypothesisReceived = false;\r\n        this.privAudioNode.shrinkBuffers(offset);\r\n        this.privConnectionAttempts = 0;\r\n    }\r\n\r\n    public onAudioSent(bytesSent: number): void {\r\n        this.privBytesSent += bytesSent;\r\n    }\r\n\r\n    public onRetryConnection(): void {\r\n        this.privConnectionAttempts++;\r\n    }\r\n\r\n    public async dispose(error?: string): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            this.privServiceTelemetryListener?.dispose();\r\n            this.privIsRecognizing = false;\r\n        }\r\n    }\r\n\r\n    public getTelemetry = (): string => {\r\n        if (this.privServiceTelemetryListener.hasTelemetry) {\r\n            return this.privServiceTelemetryListener.getTelemetry();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public async onStopRecognizing(): Promise<void> {\r\n        await this.onComplete();\r\n    }\r\n\r\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\r\n    public onSpeechEnded(): void {\r\n        this.privIsSpeechEnded = true;\r\n    }\r\n\r\n    protected onEvent = (event: SpeechRecognitionEvent): void => {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privServiceTelemetryListener.onEvent(event);\r\n        }\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private async onComplete(): Promise<void> {\r\n        if (!!this.privIsRecognizing) {\r\n            this.privIsRecognizing = false;\r\n            await this.detachAudioNode();\r\n        }\r\n    }\r\n\r\n    private async detachAudioNode(): Promise<void> {\r\n        if (!this.privIsAudioNodeDetached) {\r\n            this.privIsAudioNodeDetached = true;\r\n            if (this.privAudioNode) {\r\n                await this.privAudioNode.detach();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavbarBrand = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  var Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\n\nfunction parseDuration(node, property) {\n  var str = css(node, property) || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nexport default function transitionEndListener(element, handler) {\n  var duration = parseDuration(element, 'transitionDuration');\n  var delay = parseDuration(element, 'transitionDelay');\n  var remove = transitionEnd(element, function (e) {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\", \"dimension\", \"getDimensionValue\"];\n\nvar _collapseStyles;\n\nimport classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport Transition, { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  var offset = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n  var value = elem[offset];\n  var margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[EXITED] = 'collapse', _collapseStyles[EXITING] = 'collapsing', _collapseStyles[ENTERING] = 'collapsing', _collapseStyles[ENTERED] = 'collapse show', _collapseStyles);\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nvar Collapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$dimension = _ref.dimension,\n      dimension = _ref$dimension === void 0 ? 'height' : _ref$dimension,\n      _ref$getDimensionValu = _ref.getDimensionValue,\n      getDimensionValue = _ref$getDimensionValu === void 0 ? getDefaultDimensionValue : _ref$getDimensionValu,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  /* Compute dimension */\n  var computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  var handleEnter = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = '0';\n    }, onEnter);\n  }, [computedDimension, onEnter]);\n  var handleEntering = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      var scroll = \"scroll\" + computedDimension[0].toUpperCase() + computedDimension.slice(1);\n      elem.style[computedDimension] = elem[scroll] + \"px\";\n    }, onEntering);\n  }, [computedDimension, onEntering]);\n  var handleEntered = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onEntered);\n  }, [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  var handleExit = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = getDimensionValue(computedDimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    }, onExit);\n  }, [onExit, getDimensionValue, computedDimension]);\n  var handleExiting = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onExiting);\n  }, [computedDimension, onExiting]);\n  return /*#__PURE__*/React.createElement(Transition // @ts-ignore\n  , _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting\n  }), function (state, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'width')\n    }));\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"bsPrefix\"];\nimport React from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar NavbarCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  return /*#__PURE__*/React.createElement(NavbarContext.Consumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      in: !!(context && context.expanded)\n    }, props), /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      className: bsPrefix\n    }, children));\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"label\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar defaultProps = {\n  label: 'Toggle navigation'\n};\nvar NavbarToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle,\n      expanded = _ref2.expanded;\n\n  var handleClick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed')\n  }), children || /*#__PURE__*/React.createElement(\"span\", {\n    className: bsPrefix + \"-icon\"\n  }));\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError, ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IDisposable } from \"./IDisposable\";\r\nimport { List } from \"./List\";\r\nimport {\r\n    Deferred,\r\n} from \"./Promise\";\r\nexport interface IQueue<TItem> extends IDisposable {\r\n    enqueue(item: TItem): void;\r\n    enqueueFromPromise(promise: Promise<TItem>): void;\r\n    dequeue(): Promise<TItem>;\r\n    peek(): Promise<TItem>;\r\n    length(): number;\r\n}\r\n\r\nenum SubscriberType {\r\n    Dequeue,\r\n    Peek,\r\n}\r\n\r\nexport class Queue<TItem> implements IQueue<TItem> {\r\n    private privPromiseStore: List<Promise<TItem>> = new List<Promise<TItem>>();\r\n    private privList: List<TItem>;\r\n    private privDetachables: IDetachable[];\r\n    private privSubscribers: List<{ type: SubscriberType, deferral: Deferred<TItem> }>;\r\n    private privIsDrainInProgress: boolean = false;\r\n    private privIsDisposing: boolean = false;\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: List<TItem>) {\r\n        this.privList = list ? list : new List<TItem>();\r\n        this.privDetachables = [];\r\n        this.privSubscribers = new List<{ type: SubscriberType, deferral: Deferred<TItem> }>();\r\n        this.privDetachables.push(this.privList.onAdded(this.drain));\r\n    }\r\n\r\n    public enqueue = (item: TItem): void => {\r\n        this.throwIfDispose();\r\n        this.enqueueFromPromise(new Promise<TItem>((resolve: (value: TItem) => void, reject: (reason: any) => void) => { resolve(item); }));\r\n    }\r\n\r\n    public enqueueFromPromise = (promise: Promise<TItem>): void => {\r\n        this.throwIfDispose();\r\n        promise.then((val: TItem): void => {\r\n            this.privList.add(val);\r\n             /* tslint:disable:no-empty */\r\n        }, (error: string): void => { });\r\n    }\r\n\r\n    public dequeue = (): Promise<TItem> => {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        if (this.privSubscribers) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public peek = (): Promise<TItem> => {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        const subs = this.privSubscribers;\r\n        if (subs) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public length = (): number => {\r\n        this.throwIfDispose();\r\n        return this.privList.length();\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privSubscribers == null;\r\n    }\r\n\r\n    public async drainAndDispose(pendingItemProcessor: (pendingItemInQueue: TItem) => void, reason?: string): Promise<void> {\r\n        if (!this.isDisposed() && !this.privIsDisposing) {\r\n            this.privDisposeReason = reason;\r\n            this.privIsDisposing = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            if (subs) {\r\n                while (subs.length() > 0) {\r\n                    const subscriber = subs.removeFirst();\r\n                    // TODO: this needs work (Resolve(null) instead?).\r\n                    subscriber.deferral.resolve(undefined);\r\n                    // subscriber.deferral.reject(\"Disposed\");\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n            }\r\n\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\r\n                const promiseArray: Promise<TItem>[] = [];\r\n\r\n                this.privPromiseStore.toArray().forEach((wrapper: Promise<TItem>) => {\r\n                    promiseArray.push(wrapper);\r\n                });\r\n                return Promise.all(promiseArray).finally(() => {\r\n                    this.privSubscribers = null;\r\n                    this.privList.forEach((item: TItem, index: number): void => {\r\n                        pendingItemProcessor(item);\r\n                    });\r\n                    this.privList = null;\r\n                    return;\r\n                }).then<void>();\r\n            } else {\r\n                this.privSubscribers = null;\r\n                this.privList = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        await this.drainAndDispose(null, reason);\r\n    }\r\n\r\n    private drain = (): void => {\r\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\r\n            this.privIsDrainInProgress = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            const lists = this.privList;\r\n            if (subs && lists) {\r\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\r\n                    const subscriber = subs.removeFirst();\r\n                    if (subscriber.type === SubscriberType.Peek) {\r\n                        subscriber.deferral.resolve(lists.first());\r\n                    } else {\r\n                        const dequeuedItem = lists.removeFirst();\r\n                        subscriber.deferral.resolve(dequeuedItem);\r\n                    }\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privList === lists) {\r\n                    this.privList = lists;\r\n                }\r\n            }\r\n\r\n            this.privIsDrainInProgress = false;\r\n        }\r\n    }\r\n\r\n    private throwIfDispose = (): void => {\r\n        if (this.isDisposed()) {\r\n            if (this.privDisposeReason) {\r\n                throw new InvalidOperationError(this.privDisposeReason);\r\n            }\r\n\r\n            throw new ObjectDisposedError(\"Queue\");\r\n        } else if (this.privIsDisposing) {\r\n            throw new InvalidOperationError(\"Queue disposing\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { IDisposable } from \"./IDisposable\";\r\n\r\nexport interface IList<TItem> extends IDisposable {\r\n    get(itemIndex: number): TItem;\r\n    first(): TItem;\r\n    last(): TItem;\r\n\r\n    add(item: TItem): void;\r\n    insertAt(index: number, item: TItem): void;\r\n\r\n    removeFirst(): TItem;\r\n    removeLast(): TItem;\r\n    removeAt(index: number): TItem;\r\n    remove(index: number, count: number): TItem[];\r\n    clear(): void;\r\n\r\n    length(): number;\r\n\r\n    onAdded(addedCallback: () => void): IDetachable;\r\n    onRemoved(removedCallback: () => void): IDetachable;\r\n    onDisposed(disposedCallback: () => void): IDetachable;\r\n\r\n    join(seperator?: string): string;\r\n\r\n    toArray(): TItem[];\r\n\r\n    any(callback?: (item: TItem, index: number) => boolean): boolean;\r\n    all(callback: (item: TItem) => boolean): boolean;\r\n    forEach(callback: (item: TItem, index: number) => void): void;\r\n    select<T2>(callback: (item: TItem, index: number) => T2): List<T2>;\r\n    where(callback: (item: TItem, index: number) => boolean): List<TItem>;\r\n    orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    orderByDesc(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    clone(): List<TItem>;\r\n    concat(list: List<TItem>): List<TItem>;\r\n    concatArray(array: TItem[]): List<TItem>;\r\n}\r\n\r\nexport class List<TItem> implements IList<TItem>  {\r\n    private privList: TItem[];\r\n    private privSubscriptionIdCounter: number = 0;\r\n    private privAddSubscriptions: IStringDictionary<() => void> = {};\r\n    private privRemoveSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposedSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: TItem[]) {\r\n        this.privList = [];\r\n        // copy the list rather than taking as is.\r\n        if (list) {\r\n            for (const item of list) {\r\n                this.privList.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get = (itemIndex: number): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.privList[itemIndex];\r\n    }\r\n\r\n    public first = (): TItem => {\r\n        return this.get(0);\r\n    }\r\n\r\n    public last = (): TItem => {\r\n        return this.get(this.length() - 1);\r\n    }\r\n\r\n    public add = (item: TItem): void => {\r\n        this.throwIfDisposed();\r\n        this.insertAt(this.privList.length, item);\r\n    }\r\n\r\n    public insertAt = (index: number, item: TItem): void => {\r\n        this.throwIfDisposed();\r\n        if (index === 0) {\r\n            this.privList.unshift(item);\r\n        } else if (index === this.privList.length) {\r\n            this.privList.push(item);\r\n        } else {\r\n            this.privList.splice(index, 0, item);\r\n        }\r\n        this.triggerSubscriptions(this.privAddSubscriptions);\r\n    }\r\n\r\n    public removeFirst = (): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(0);\r\n    }\r\n\r\n    public removeLast = (): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(this.length() - 1);\r\n    }\r\n\r\n    public removeAt = (index: number): TItem => {\r\n        this.throwIfDisposed();\r\n        return this.remove(index, 1)[0];\r\n    }\r\n\r\n    public remove = (index: number, count: number): TItem[] => {\r\n        this.throwIfDisposed();\r\n        const removedElements = this.privList.splice(index, count);\r\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\r\n        return removedElements;\r\n    }\r\n\r\n    public clear = (): void => {\r\n        this.throwIfDisposed();\r\n        this.remove(0, this.length());\r\n    }\r\n\r\n    public length = (): number => {\r\n        this.throwIfDisposed();\r\n        return this.privList.length;\r\n    }\r\n\r\n    public onAdded = (addedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privAddSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onRemoved = (removedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privRemoveSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onDisposed = (disposedCallback: () => void): IDetachable => {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\r\n\r\n        return {\r\n            detach: () => {\r\n                delete this.privDisposedSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public join = (seperator?: string): string => {\r\n        this.throwIfDisposed();\r\n        return this.privList.join(seperator);\r\n    }\r\n\r\n    public toArray = (): TItem[] => {\r\n        const cloneCopy = Array<TItem>();\r\n        this.privList.forEach((val: TItem) => {\r\n            cloneCopy.push(val);\r\n        });\r\n        return cloneCopy;\r\n    }\r\n\r\n    public any = (callback?: (item: TItem, index: number) => boolean): boolean => {\r\n        this.throwIfDisposed();\r\n        if (callback) {\r\n            return this.where(callback).length() > 0;\r\n        } else {\r\n            return this.length() > 0;\r\n        }\r\n    }\r\n\r\n    public all = (callback: (item: TItem) => boolean): boolean => {\r\n        this.throwIfDisposed();\r\n        return this.where(callback).length() === this.length();\r\n    }\r\n\r\n    public forEach = (callback: (item: TItem, index: number) => void): void => {\r\n        this.throwIfDisposed();\r\n        for (let i = 0; i < this.length(); i++) {\r\n            callback(this.privList[i], i);\r\n        }\r\n    }\r\n\r\n    public select = <T2>(callback: (item: TItem, index: number) => T2): List<T2> => {\r\n        this.throwIfDisposed();\r\n        const selectList: T2[] = [];\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            selectList.push(callback(this.privList[i], i));\r\n        }\r\n\r\n        return new List<T2>(selectList);\r\n    }\r\n\r\n    public where = (callback: (item: TItem, index: number) => boolean): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        const filteredList = new List<TItem>();\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            if (callback(this.privList[i], i)) {\r\n                filteredList.add(this.privList[i]);\r\n            }\r\n        }\r\n        return filteredList;\r\n    }\r\n\r\n    public orderBy = (compareFn: (a: TItem, b: TItem) => number): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        const clonedArray = this.toArray();\r\n        const orderedArray = clonedArray.sort(compareFn);\r\n        return new List(orderedArray);\r\n    }\r\n\r\n    public orderByDesc = (compareFn: (a: TItem, b: TItem) => number): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return this.orderBy((a: TItem, b: TItem) => compareFn(b, a));\r\n    }\r\n\r\n    public clone = (): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.toArray());\r\n    }\r\n\r\n    public concat = (list: List<TItem>): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(list.toArray()));\r\n    }\r\n\r\n    public concatArray = (array: TItem[]): List<TItem> => {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(array));\r\n    }\r\n\r\n    public isDisposed = (): boolean => {\r\n        return this.privList == null;\r\n    }\r\n\r\n    public dispose = (reason?: string): void => {\r\n        if (!this.isDisposed()) {\r\n            this.privDisposeReason = reason;\r\n            this.privList = null;\r\n            this.privAddSubscriptions = null;\r\n            this.privRemoveSubscriptions = null;\r\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\r\n        }\r\n    }\r\n\r\n    private throwIfDisposed = (): void => {\r\n        if (this.isDisposed()) {\r\n            throw new ObjectDisposedError(\"List\", this.privDisposeReason);\r\n        }\r\n    }\r\n\r\n    private triggerSubscriptions = (subscriptions: IStringDictionary<() => void>): void => {\r\n        if (subscriptions) {\r\n            for (const subscriptionId in subscriptions) {\r\n                if (subscriptionId) {\r\n                    subscriptions[subscriptionId]();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\nimport { EventSource } from \"./EventSource\";\r\nimport { IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class Events {\r\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static setEventSource = (eventSource: IEventSource<PlatformEvent>): void => {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.privInstance = eventSource;\r\n    }\r\n\r\n    public static get instance(): IEventSource<PlatformEvent> {\r\n        return Events.privInstance;\r\n    }\r\n}\r\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n} from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication\r\n} from \"./IAuthentication\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private privAuthInfo: AuthInfo;\r\n\r\n    /**\r\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n     * @constructor\r\n     * @param {string} subscriptionKey - The subscription key\r\n     */\r\n    constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"../common/Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\n\r\nconst AuthHeader: string = \"Authorization\";\r\n\r\nexport class CognitiveTokenAuthentication implements IAuthentication {\r\n    private static privTokenPrefix: string = \"bearer \";\r\n    private privFetchCallback: (authFetchEventId: string) => Promise<string>;\r\n    private privFetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>;\r\n\r\n    constructor(fetchCallback: (authFetchEventId: string) => Promise<string>, fetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>) {\r\n        if (!fetchCallback) {\r\n            throw new ArgumentNullError(\"fetchCallback\");\r\n        }\r\n\r\n        if (!fetchOnExpiryCallback) {\r\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\r\n        }\r\n\r\n        this.privFetchCallback = fetchCallback;\r\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\r\n    }\r\n\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class SpeechConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly interactiveRelativeUri: string = \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n    private readonly conversationRelativeUri: string = \"/speech/recognition/conversation/cognitiveservices/v1\";\r\n    private readonly dictationRelativeUri: string = \"/speech/recognition/dictation/cognitiveservices/v1\";\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        if (!endpoint || endpoint.search(QueryParameterNames.Format) === -1) {\r\n            queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        }\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        if (!endpoint) {\r\n            switch (config.recognitionMode) {\r\n                case RecognitionMode.Conversation:\r\n                    if (config.parameters.getProperty(ForceDictationPropertyName, \"false\") === \"true\") {\r\n                        endpoint = host + this.dictationRelativeUri;\r\n                    } else {\r\n                        endpoint = host + this.conversationRelativeUri;\r\n                    }\r\n                    break;\r\n                case RecognitionMode.Dictation:\r\n                    endpoint = host + this.dictationRelativeUri;\r\n                    break;\r\n                default:\r\n                    endpoint = host + this.interactiveRelativeUri; // default is interactive\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioSource } from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    SpeechRecognizer,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SpeechServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privSpeechRecognizer: SpeechRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        speechRecognizer: SpeechRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\r\n        this.privSpeechRecognizer = speechRecognizer;\r\n        if (recognizerConfig.autoDetectSourceLanguages !== undefined) {\r\n            const sourceLanguages: string[] = recognizerConfig.autoDetectSourceLanguages.split(\",\");\r\n            this.privSpeechContext.setSection(\"languageId\", {\r\n                languages: sourceLanguages,\r\n                onSuccess: { action: \"Recognize\" },\r\n                onUnknown: { action: \"None\" }\r\n            });\r\n            this.privSpeechContext.setSection(\"phraseOutput\", {\r\n                interimResults: {\r\n                    resultType: \"Auto\"\r\n                },\r\n                phraseResults: {\r\n                    resultType: \"Always\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined, // Speaker Id\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privSpeechRecognizer.recognizing) {\r\n                    try {\r\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                simple.DisplayText,\r\n                                simple.Duration,\r\n                                simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                                simple.Language,\r\n                                simple.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                connectionMessage.textBody,\r\n                                resultProps);\r\n                        } else {\r\n                            const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                            const totalOffset: number = detailed.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n                            const offsetCorrectedJson: string = detailed.getJsonWithCorrectedOffsets(totalOffset);\r\n\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : undefined,\r\n                                detailed.Duration,\r\n                                totalOffset,\r\n                                detailed.Language,\r\n                                detailed.LanguageDetectionConfidence,\r\n                                undefined, // Speaker Id\r\n                                undefined,\r\n                                offsetCorrectedJson,\r\n                                resultProps);\r\n                        }\r\n\r\n                        const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privSpeechRecognizer.recognized) {\r\n                            try {\r\n                                this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privSpeechRecognizer.canceled) {\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\n\r\nexport class IntentConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_IntentRegion);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\r\n            endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            format: \"simple\",\r\n            language: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    private getSpeechRegionFromIntentRegion(intentRegion: string): string {\r\n        switch (intentRegion) {\r\n            case \"West US\":\r\n            case \"US West\":\r\n            case \"westus\":\r\n                return \"uswest\";\r\n            case \"West US 2\":\r\n            case \"US West 2\":\r\n            case \"westus2\":\r\n                return \"uswest2\";\r\n            case \"South Central US\":\r\n            case \"US South Central\":\r\n            case \"southcentralus\":\r\n                return \"ussouthcentral\";\r\n            case \"West Central US\":\r\n            case \"US West Central\":\r\n            case \"westcentralus\":\r\n                return \"uswestcentral\";\r\n            case \"East US\":\r\n            case \"US East\":\r\n            case \"eastus\":\r\n                return \"useast\";\r\n            case \"East US 2\":\r\n            case \"US East 2\":\r\n            case \"eastus2\":\r\n                return \"useast2\";\r\n            case \"West Europe\":\r\n            case \"Europe West\":\r\n            case \"westeurope\":\r\n                return \"europewest\";\r\n            case \"North Europe\":\r\n            case \"Europe North\":\r\n            case \"northeurope\":\r\n                return \"europenorth\";\r\n            case \"Brazil South\":\r\n            case \"South Brazil\":\r\n            case \"southbrazil\":\r\n                return \"brazilsouth\";\r\n            case \"Australia East\":\r\n            case \"East Australia\":\r\n            case \"eastaustralia\":\r\n                return \"australiaeast\";\r\n            case \"Southeast Asia\":\r\n            case \"Asia Southeast\":\r\n            case \"southeastasia\":\r\n                return \"asiasoutheast\";\r\n            case \"East Asia\":\r\n            case \"Asia East\":\r\n            case \"eastasia\":\r\n                return \"asiaeast\";\r\n            default:\r\n                return intentRegion;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { LanguageUnderstandingModelImpl } from \"../sdk/LanguageUnderstandingModel\";\r\n\r\n/**\r\n * @class AddedLmIntent\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class AddedLmIntent {\r\n    public modelImpl: LanguageUnderstandingModelImpl;\r\n    public intentName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param modelImpl - The model.\r\n     * @param intentName - The intent name.\r\n     */\r\n    public constructor(modelImpl: LanguageUnderstandingModelImpl, intentName: string) {\r\n        this.modelImpl = modelImpl;\r\n        this.intentName = intentName;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAudioSource,\r\n    MessageType,\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    IntentRecognizer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    AddedLmIntent,\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    IntentResponse,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class IntentServiceRecognizer extends ServiceRecognizerBase {\r\n    private privIntentRecognizer: IntentRecognizer;\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent; };\r\n    private privIntentDataSent: boolean;\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n    private privPendingIntentArgs: IntentRecognitionEventArgs;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: IntentRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privIntentRecognizer = recognizer;\r\n        this.privIntentDataSent = false;\r\n    }\r\n\r\n    public setIntents(addedIntents: { [id: string]: AddedLmIntent; }, umbrellaIntent: AddedLmIntent): void {\r\n        this.privAddedLmIntents = addedIntents;\r\n        this.privUmbrellaIntent = umbrellaIntent;\r\n        this.privIntentDataSent = true;\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: IntentRecognitionResult;\r\n        let ev: IntentRecognitionEventArgs;\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n                const speechHypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingIntent,\r\n                    speechHypothesis.Text,\r\n                    speechHypothesis.Duration,\r\n                    speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                    speechHypothesis.Language,\r\n                    speechHypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(result.offset);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privIntentRecognizer.recognizing) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus),\r\n                    simple.DisplayText,\r\n                    simple.Duration,\r\n                    simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                    simple.Language,\r\n                    simple.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                const sendEvent: () => void = () => {\r\n                    if (!!this.privIntentRecognizer.recognized) {\r\n                        try {\r\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                            /* tslint:disable:no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n\r\n                    // report result to promise.\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                };\r\n\r\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\r\n                // If no intent data was sent, the terminal event is speech recognition being successful.\r\n                if (false === this.privIntentDataSent || ResultReason.NoMatch === ev.result.reason) {\r\n                    // Advance the buffers.\r\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n                    sendEvent();\r\n                } else {\r\n                    // Squirrel away the args, when the response event arrives it will build upon them\r\n                    // and then return\r\n                    this.privPendingIntentArgs = ev;\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"response\":\r\n                // Response from LUIS\r\n                ev = this.privPendingIntentArgs;\r\n                this.privPendingIntentArgs = undefined;\r\n\r\n                if (undefined === ev) {\r\n                    if (\"\" === connectionMessage.textBody) {\r\n                        // This condition happens if there is nothing but silence in the\r\n                        // audio sent to the service.\r\n                        return;\r\n                    }\r\n\r\n                    // Odd... Not sure this can happen\r\n                    ev = new IntentRecognitionEventArgs(new IntentRecognitionResult(), 0 /*TODO*/, this.privRequestSession.sessionId);\r\n                }\r\n\r\n                const intentResponse: IntentResponse = IntentResponse.fromJSON(connectionMessage.textBody);\r\n\r\n                // If LUIS didn't return anything, send the existing event, else\r\n                // modify it to show the match.\r\n                // See if the intent found is in the list of intents asked for.\r\n                let addedIntent: AddedLmIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\r\n\r\n                if (this.privUmbrellaIntent !== undefined) {\r\n                    addedIntent = this.privUmbrellaIntent;\r\n                }\r\n\r\n                if (null !== intentResponse && addedIntent !== undefined) {\r\n                    const intentId = addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\r\n                    let reason = ev.result.reason;\r\n\r\n                    if (undefined !== intentId) {\r\n                        reason = ResultReason.RecognizedIntent;\r\n                    }\r\n\r\n                    // make sure, properties is set.\r\n                    const properties = (undefined !== ev.result.properties) ?\r\n                        ev.result.properties : new PropertyCollection();\r\n\r\n                    properties.setProperty(PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\r\n\r\n                    ev = new IntentRecognitionEventArgs(\r\n                        new IntentRecognitionResult(\r\n                            intentId,\r\n                            ev.result.resultId,\r\n                            reason,\r\n                            ev.result.text,\r\n                            ev.result.duration,\r\n                            ev.result.offset,\r\n                            undefined,\r\n                            undefined,\r\n                            ev.result.errorDetails,\r\n                            ev.result.json,\r\n                            properties),\r\n                        ev.offset,\r\n                        ev.sessionId);\r\n                }\r\n                this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n\r\n                if (!!this.privIntentRecognizer.recognized) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(ev.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privIntentRecognizer.canceled) {\r\n\r\n            const cancelEvent: IntentRecognitionCanceledEventArgs = new IntentRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: IntentRecognitionResult = new IntentRecognitionResult(\r\n                undefined, // Intent Id\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // LanguageDetectionConfidence\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary,\r\n} from \"../common/Exports\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames\";\r\n\r\nexport class TranslationConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".s2s.speech\" + hostSuffix);\r\n            endpoint = host + \"/speech/translation/cognitiveservices/v1\";\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            from: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            to: config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n        this.setUrlParameter(\r\n            PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n            QueryParameterNames.StableTranslation,\r\n            config,\r\n            queryParams,\r\n            endpoint\r\n        );\r\n\r\n        const voiceName: string = \"voice\";\r\n        const featureName: string = \"features\";\r\n\r\n        if (config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\r\n            queryParams[voiceName] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice);\r\n            queryParams[featureName] = \"texttospeech\";\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEvent,\r\n    IAudioSource,\r\n    MessageType,\r\n    TranslationStatus,\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionResult,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationRecognizer,\r\n    Translations,\r\n    TranslationSynthesisEventArgs,\r\n    TranslationSynthesisResult,\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SynthesisStatus,\r\n    TranslationHypothesis,\r\n    TranslationPhrase,\r\n    TranslationSynthesisEnd,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { ITranslationPhrase } from \"./ServiceMessages/TranslationPhrase\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class TranslationServiceRecognizer extends ServiceRecognizerBase {\r\n    private privTranslationRecognizer: TranslationRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        translationRecognizer: TranslationRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\r\n        this.privTranslationRecognizer = translationRecognizer;\r\n        this.connectionEvents.attach(async (connectionEvent: ConnectionEvent): Promise<void> => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                this.privTranslationRecognizer.onConnection();\r\n            } else if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                await this.privTranslationRecognizer.onDisconnection();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        let processed: boolean = false;\r\n\r\n        const handleTranslationPhrase = async (translatedPhrase: TranslationPhrase): Promise<void> => {\r\n            this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset + translatedPhrase.Duration);\r\n\r\n            if (translatedPhrase.RecognitionStatus === RecognitionStatus.Success) {\r\n\r\n                // OK, the recognition was successful. How'd the translation do?\r\n                const result: TranslationRecognitionEventArgs = this.fireEventForResult(translatedPhrase, resultProps);\r\n                if (!!this.privTranslationRecognizer.recognized) {\r\n                    try {\r\n                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(result.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n            } else {\r\n                const reason: ResultReason = EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\r\n\r\n                const result = new TranslationRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    reason,\r\n                    translatedPhrase.Text,\r\n                    translatedPhrase.Duration,\r\n                    this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                if (reason === ResultReason.Canceled) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && reason === ResultReason.NoMatch && translatedPhrase.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        const ev = new TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privTranslationRecognizer.recognized) {\r\n                            try {\r\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // report result to promise.\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n            }\r\n\r\n        };\r\n\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"translation.hypothesis\":\r\n\r\n                const result: TranslationRecognitionEventArgs = this.fireEventForResult(TranslationHypothesis.fromJSON(connectionMessage.textBody), resultProps);\r\n                this.privRequestSession.onHypothesis(this.privRequestSession.currentTurnAudioOffset + result.offset);\r\n\r\n                if (!!this.privTranslationRecognizer.recognizing) {\r\n                    try {\r\n                        this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            case \"translation.response\":\r\n                const phrase: { SpeechPhrase: ITranslationPhrase } = JSON.parse(connectionMessage.textBody);\r\n                if (!!phrase.SpeechPhrase) {\r\n                    await handleTranslationPhrase(TranslationPhrase.fromTranslationResponse(phrase));\r\n                }\r\n                break;\r\n            case \"translation.phrase\":\r\n                await handleTranslationPhrase(TranslationPhrase.fromJSON(connectionMessage.textBody));\r\n                break;\r\n\r\n            case \"translation.synthesis\":\r\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\r\n                processed = true;\r\n                break;\r\n\r\n            case \"translation.synthesis.end\":\r\n                const synthEnd: TranslationSynthesisEnd = TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\r\n\r\n                switch (synthEnd.SynthesisStatus) {\r\n                    case SynthesisStatus.Error:\r\n                        if (!!this.privTranslationRecognizer.synthesizing) {\r\n                            const result = new TranslationSynthesisResult(ResultReason.Canceled, undefined);\r\n                            const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n\r\n                        if (!!this.privTranslationRecognizer.canceled) {\r\n                            // And raise a canceled event to send the rich(er) error message back.\r\n                            const canceledResult: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                                this.privRequestSession.sessionId,\r\n                                CancellationReason.Error,\r\n                                synthEnd.FailureReason,\r\n                                CancellationErrorCode.ServiceError,\r\n                                null);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n                    case SynthesisStatus.Success:\r\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privTranslationRecognizer.canceled) {\r\n\r\n            const cancelEvent: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                sessionId,\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined);\r\n\r\n            try {\r\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: TranslationRecognitionResult = new TranslationRecognitionResult(\r\n                undefined, // Translations\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Druation\r\n                undefined, // Offset\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* tslint:disable:no-empty */\r\n                this.privSuccessCallback = undefined;\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: TranslationHypothesis | TranslationPhrase, properties: PropertyCollection): TranslationRecognitionEventArgs {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResult.Translation.Translations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResult.Translation.Translations) {\r\n                translations.set(translation.Language, translation.Text || translation.DisplayText);\r\n            }\r\n        }\r\n\r\n        let resultReason: ResultReason;\r\n        if (serviceResult instanceof TranslationPhrase) {\r\n            if (serviceResult.Translation.TranslationStatus === TranslationStatus.Success) {\r\n                resultReason = ResultReason.TranslatedSpeech;\r\n            } else {\r\n                resultReason = ResultReason.RecognizedSpeech;\r\n            }\r\n        } else {\r\n            resultReason = ResultReason.TranslatingSpeech;\r\n        }\r\n\r\n        const offset: number = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n        const result = new TranslationRecognitionResult(\r\n            translations,\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.Text,\r\n            serviceResult.Duration,\r\n            offset,\r\n            serviceResult.Translation.FailureReason,\r\n            JSON.stringify(serviceResult),\r\n            properties);\r\n\r\n        const ev = new TranslationRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private sendSynthesisAudio(audio: ArrayBuffer, sessionId: string): void {\r\n        const reason = (undefined === audio) ? ResultReason.SynthesizingAudioCompleted : ResultReason.SynthesizingAudio;\r\n        const result = new TranslationSynthesisResult(reason, audio);\r\n        const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, sessionId);\r\n\r\n        if (!!this.privTranslationRecognizer.synthesizing) {\r\n            try {\r\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PullAudioOutputStream } from \"./Audio/AudioOutputStream\";\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class ActivityReceivedEventArgs\r\n */\r\nexport class ActivityReceivedEventArgs {\r\n    private privActivity: any;\r\n    private privAudioStream: PullAudioOutputStream;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {any} activity - The activity..\r\n     */\r\n    public constructor(activity: any, audioStream?: PullAudioOutputStream) {\r\n        this.privActivity = activity;\r\n        this.privAudioStream = audioStream;\r\n    }\r\n\r\n    /**\r\n     * Gets the received activity\r\n     * @member ActivityReceivedEventArgs.prototype.activity\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received activity.\r\n     */\r\n    public get activity(): any {\r\n        return this.privActivity;\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStream {\r\n        return this.privAudioStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.keyword\r\nexport interface ISpeechKeyword {\r\n    Status: string;\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class SpeechKeyword implements ISpeechKeyword {\r\n    private privSpeechKeyword: ISpeechKeyword;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechKeyword = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechKeyword {\r\n        return new SpeechKeyword(json);\r\n    }\r\n\r\n    public get Status(): string {\r\n        return this.privSpeechKeyword.Status;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechKeyword.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechKeyword.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechKeyword.Duration;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports\";\r\nimport { Context } from \"./Exports\";\r\n\r\nexport class SpeakerRecognitionConfig {\r\n    private privParameters: PropertyCollection;\r\n    private privContext: Context;\r\n\r\n    constructor(\r\n        context: Context,\r\n        parameters: PropertyCollection) {\r\n        this.privContext = context ? context : new Context(null);\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.privContext;\r\n    }\r\n}\r\n","import {\r\n    IRequestOptions,\r\n    IRestResponse,\r\n    RestConfigBase,\r\n    RestMessageAdapter,\r\n    RestRequestType,\r\n} from \"../common.browser/Exports\";\r\nimport { IAudioSource } from \"../common/Exports\";\r\nimport {\r\n    PropertyId,\r\n    SpeakerIdentificationModel,\r\n    SpeakerVerificationModel,\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport { SpeakerRecognitionConfig } from \"./Exports\";\r\n\r\n/**\r\n * Implements methods for speaker recognition classes, sending requests to endpoint\r\n * and parsing response into expected format\r\n * @class SpeakerIdMessageAdapter\r\n */\r\nexport class SpeakerIdMessageAdapter {\r\n    private privRestAdapter: RestMessageAdapter;\r\n    private privUri: string;\r\n    private privApiVersion: string;\r\n\r\n    public constructor(config: SpeakerRecognitionConfig) {\r\n\r\n        let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"westus\");\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, `https://${region}.api.cognitive${hostSuffix}`);\r\n        }\r\n        this.privUri = `${endpoint}/speaker-recognition/{mode}/{dependency}/profiles`;\r\n\r\n        const options: IRequestOptions = RestConfigBase.requestOptions;\r\n        options.headers[RestConfigBase.configParams.subscriptionKey] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        this.privApiVersion = config.parameters.getProperty(PropertyId.SpeakerRecognition_Api_Version, \"2021-09-05\");\r\n\r\n        this.privRestAdapter = new RestMessageAdapter(options);\r\n    }\r\n\r\n    /**\r\n     * Sends create profile request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfileType} profileType - type of voice profile to create.\r\n     * @param {string} lang - language/locale of voice profile\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} promised rest response containing id of created profile.\r\n     */\r\n    public createProfile(profileType: VoiceProfileType, lang: string):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profileType);\r\n        return this.privRestAdapter.request(RestRequestType.Post, uri, this.getQueryParams(), { locale: lang });\r\n    }\r\n\r\n    /**\r\n     * Sends create enrollment request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profileType - voice profile for which to create new enrollment.\r\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\r\n     */\r\n    public createEnrollment(profile: VoiceProfile, audioSource: IAudioSource):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId + \"/enrollments\";\r\n        return audioSource.blob.then<IRestResponse>((result: Blob | Buffer): Promise<IRestResponse> => {\r\n            return this.privRestAdapter.request(RestRequestType.File, uri, this.getQueryParams({ ignoreMinLength: \"true\" }), null, result);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends verification request to endpoint.\r\n     * @function\r\n     * @param {SpeakerVerificationModel} model - voice model to verify against.\r\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\r\n     */\r\n    public async verifySpeaker(model: SpeakerVerificationModel, audioSource: IAudioSource):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(model.voiceProfile.profileType) + \"/\" + model.voiceProfile.profileId + \":verify\";\r\n        try {\r\n            const result: Blob | Buffer = await audioSource.blob;\r\n            return this.privRestAdapter.request(RestRequestType.File, uri, this.getQueryParams({ ignoreMinLength: \"true\" }), null, result);\r\n        } catch (e) {\r\n            return Promise.resolve({ data: e } as IRestResponse);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends identification request to endpoint.\r\n     * @function\r\n     * @param {SpeakerIdentificationModel} model - voice profiles against which to identify.\r\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\r\n     */\r\n    public async identifySpeaker(model: SpeakerIdentificationModel, audioSource: IAudioSource):\r\n        Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(VoiceProfileType.TextIndependentIdentification) + \":identifySingleSpeaker\";\r\n        try {\r\n            const result: Blob | Buffer = await audioSource.blob;\r\n            return this.privRestAdapter.request(RestRequestType.File, uri, this.getQueryParams({ profileIds: model.voiceProfileIds, ignoreMinLength: \"true\" }), null, result);\r\n        } catch (e) {\r\n            return Promise.resolve({ data: e } as IRestResponse);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends profile status request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profile - voice profile to check.\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to status request\r\n     */\r\n    public getProfileStatus(profile: VoiceProfile): Promise<IRestResponse> {\r\n\r\n        const uri = `${this.getOperationUri(profile.profileType)}/${profile.profileId}`;\r\n        return this.privRestAdapter.request(RestRequestType.Get, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends get all profiles request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfileType} profileType - type of profiles to return list of\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} promised rest response containing all profiles\r\n     */\r\n    public getProfiles(profileType: VoiceProfileType): Promise<IRestResponse> {\r\n        const uri = this.getOperationUri(profileType);\r\n        return this.privRestAdapter.request(RestRequestType.Get, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends get activation/auth phrases request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfileType} profileType - type of profiles to return phrases for\r\n     * @param {string} lang - language/locale of voice profile\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} promised rest response containing list of valid phrases\r\n     */\r\n    public getPhrases(profileType: VoiceProfileType, lang: string): Promise<IRestResponse> {\r\n        const uri = `${this.getOperationUri(profileType)}`.replace(`profiles`, `phrases`) + \"/\" + lang;\r\n        return this.privRestAdapter.request(RestRequestType.Get, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends delete profile request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profile - voice profile to delete.\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to deletion request\r\n     */\r\n    public deleteProfile(profile: VoiceProfile): Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId;\r\n        return this.privRestAdapter.request(RestRequestType.Delete, uri, this.getQueryParams());\r\n    }\r\n\r\n    /**\r\n     * Sends reset profile request to endpoint.\r\n     * @function\r\n     * @param {VoiceProfile} profile - voice profile to reset enrollments for.\r\n     * @public\r\n     * @returns {Promise<IRestResponse>} rest response to reset request\r\n     */\r\n    public resetProfile(profile: VoiceProfile): Promise<IRestResponse> {\r\n\r\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId + \":reset\";\r\n        return this.privRestAdapter.request(RestRequestType.Post, uri, this.getQueryParams());\r\n    }\r\n\r\n    private getOperationUri(profileType: VoiceProfileType): string {\r\n\r\n        const mode = profileType === VoiceProfileType.TextIndependentIdentification ? \"identification\" : \"verification\";\r\n        const dependency = profileType === VoiceProfileType.TextDependentVerification ? \"text-dependent\" : \"text-independent\";\r\n        return this.privUri.replace(\"{mode}\", mode).replace(\"{dependency}\", dependency);\r\n    }\r\n\r\n    private getQueryParams(params: any = {}): any {\r\n\r\n        params[RestConfigBase.configParams.apiVersion] = this.privApiVersion;\r\n        return params;\r\n    }\r\n\r\n}\r\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    OutputFormatPropertyName,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class TranscriberConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly multiaudioRelativeUri: string = \"/speech/recognition/multiaudio\";\r\n\r\n    public create = (\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"centralus\");\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const hostDefault: string = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, hostDefault);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n        if (!endpoint) {\r\n            endpoint = host;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType\r\n} from \"../common/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationTranscriptionCanceledEventArgs,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports\";\r\nimport { ConversationInfo } from \"../sdk/Transcription/Exports\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n    TranscriberRecognizer\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class TranscriptionServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        transcriber: TranscriberRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\r\n        this.privTranscriberRecognizer = transcriber;\r\n        this.sendPrePayloadJSONOverride = this.sendTranscriptionStartJSON;\r\n    }\r\n\r\n    public async sendSpeechEventAsync(info: ConversationInfo, command: string): Promise<void> {\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\r\n        }\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    hypothesis.SpeakerId,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privTranscriberRecognizer.recognizing) {\r\n                    try {\r\n                        this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                simple.DisplayText,\r\n                                simple.Duration,\r\n                                simple.Offset + this.privRequestSession.currentTurnAudioOffset,\r\n                                simple.Language,\r\n                                simple.LanguageDetectionConfidence,\r\n                                simple.SpeakerId,\r\n                                undefined,\r\n                                connectionMessage.textBody,\r\n                                resultProps);\r\n                        } else {\r\n                            const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n                            const totalOffset: number = detailed.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n                            const offsetCorrectedJson: string = detailed.getJsonWithCorrectedOffsets(totalOffset);\r\n\r\n                            result = new SpeechRecognitionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                detailed.Text,\r\n                                detailed.Duration,\r\n                                totalOffset,\r\n                                detailed.Language,\r\n                                detailed.LanguageDetectionConfidence,\r\n                                detailed.SpeakerId,\r\n                                undefined,\r\n                                offsetCorrectedJson,\r\n                                resultProps);\r\n                        }\r\n\r\n                        const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privTranscriberRecognizer.recognized) {\r\n                            try {\r\n                                this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\r\n                                /* tslint:disable:no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privTranscriberRecognizer.canceled) {\r\n            const cancelEvent: ConversationTranscriptionCanceledEventArgs = new ConversationTranscriptionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendTranscriptionStartJSON(connection: IConnection): Promise<void> {\r\n        await this.sendSpeechContext(connection);\r\n        const info: ConversationInfo = this.privTranscriberRecognizer.getConversationInfo();\r\n        const payload: { [id: string]: any } = this.createSpeechEventPayload(info, \"start\");\r\n        await this.sendSpeechEvent(connection, payload);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected sendSpeechEvent = (connection: IConnection, payload: { [id: string]: any }): Promise<void> => {\r\n        const speechEventJson = JSON.stringify(payload);\r\n\r\n        if (speechEventJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.event\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechEventJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    private createSpeechEventPayload(info: ConversationInfo, command: string): { [id: string]: any } {\r\n        const meeting: string = \"meeting\";\r\n        const eventDict: { [id: string]: any } = { id: meeting, name: command, meeting: info.conversationProperties };\r\n        const idString: string = \"id\";\r\n        const attendees: string = \"attendees\";\r\n        const record: string = \"record\";\r\n        eventDict[meeting][idString] = info.id;\r\n        eventDict[meeting][attendees] = info.participants;\r\n        eventDict[meeting][record] = info.conversationProperties.audiorecording === \"on\" ? \"true\" : \"false\";\r\n        return eventDict;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection, WebsocketMessageAdapter,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports\";\r\nimport { PropertyId } from \"../sdk/Exports\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\r\nimport {\r\n    AuthInfo,\r\n    SynthesizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { ISynthesisConnectionFactory } from \"./ISynthesisConnectionFactory\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames\";\r\n\r\nexport class SpeechSynthesisConnectionFactory implements ISynthesisConnectionFactory {\r\n\r\n    private readonly synthesisUri: string = \"/cognitiveservices/websocket/v1\";\r\n\r\n    public create = (\r\n        config: SynthesizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection => {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const endpointId = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const hostPrefix = (endpointId === undefined) ? \"tts\" : \"voice\";\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".\" + hostPrefix + \".speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        if (!endpoint) {\r\n            endpoint = host + this.synthesisUri;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        if (endpointId !== undefined) {\r\n            headers[QueryParameterNames.CustomVoiceDeploymentId] = endpointId;\r\n        }\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromParameters(config.parameters), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports\";\r\nimport {Context, SpeechServiceConfig} from \"./Exports\";\r\n\r\nexport enum SynthesisServiceType {\r\n    Standard,\r\n    Custom,\r\n}\r\n\r\nexport class SynthesizerConfig {\r\n    private privSynthesisServiceType: SynthesisServiceType = SynthesisServiceType.Standard;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privParameters: PropertyCollection;\r\n\r\n    constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get synthesisServiceType(): SynthesisServiceType {\r\n        return this.privSynthesisServiceType;\r\n    }\r\n\r\n    public set synthesisServiceType(value: SynthesisServiceType) {\r\n        this.privSynthesisServiceType = value;\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IActivityPayloadResponse {\r\n    conversationId: string;\r\n    messageDataStreamType: number;\r\n    messagePayload: any;\r\n    version: number;\r\n}\r\n\r\nexport class ActivityPayloadResponse implements IActivityPayloadResponse {\r\n    private privActivityResponse: IActivityPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privActivityResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ActivityPayloadResponse {\r\n        return new ActivityPayloadResponse(json);\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privActivityResponse.conversationId;\r\n    }\r\n\r\n    public get messageDataStreamType(): number {\r\n        return this.privActivityResponse.messageDataStreamType;\r\n    }\r\n\r\n    public get messagePayload(): any {\r\n        return this.privActivityResponse.messagePayload;\r\n    }\r\n\r\n    public get version(): number {\r\n        return this.privActivityResponse.version;\r\n    }\r\n}\r\n\r\nexport enum MessageDataStreamType {\r\n    None = 0,\r\n    TextToSpeechAudio = 1,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { AgentConfig } from \"../common.speech/Exports\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class DialogEvent extends PlatformEvent {\r\n\r\n    constructor(eventName: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n    }\r\n}\r\n\r\nexport class SendingAgentContextMessageEvent extends DialogEvent {\r\n    private privAgentConfig: AgentConfig;\r\n\r\n    constructor(agentConfig: AgentConfig) {\r\n        super(\"SendingAgentContextMessageEvent\");\r\n        this.privAgentConfig = agentConfig;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\r\nimport { ActivityPayloadResponse, MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnState {\r\n    private privRequestId: string;\r\n    private privIsCompleted: boolean;\r\n    private privAudioStream: PullAudioOutputStreamImpl;\r\n    private privTimeoutToken: any;\r\n    private privTurnManager: DialogServiceTurnStateManager;\r\n\r\n    constructor(manager: DialogServiceTurnStateManager, requestId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privIsCompleted = false;\r\n        this.privAudioStream = null;\r\n        this.privTurnManager = manager;\r\n        this.resetTurnEndTimeout();\r\n        // tslint:disable-next-line:no-console\r\n        // console.info(\"DialogServiceTurnState debugturn start:\" + this.privRequestId);\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStreamImpl {\r\n        // Called when is needed to stream.\r\n        this.resetTurnEndTimeout();\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public processActivityPayload(payload: ActivityPayloadResponse, audioFormat?: AudioOutputFormatImpl): PullAudioOutputStreamImpl {\r\n        if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\r\n            this.privAudioStream = AudioOutputStream.createPullStream() as PullAudioOutputStreamImpl;\r\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\r\n            // tslint:disable-next-line:no-console\r\n            // console.info(\"Audio start debugturn:\" + this.privRequestId);\r\n        }\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public endAudioStream(): void {\r\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\r\n            this.privAudioStream.close();\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        this.endAudioStream();\r\n    }\r\n\r\n    private resetTurnEndTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        // tslint:disable-next-line:no-console\r\n        // console.info(\"Timeout reset debugturn:\" + this.privRequestId);\r\n\r\n        this.privTimeoutToken = setTimeout((): void => {\r\n            // tslint:disable-next-line:no-console\r\n            // console.info(\"Timeout complete debugturn:\" + this.privRequestId);\r\n\r\n            this.privTurnManager.CompleteTurn(this.privRequestId);\r\n            return;\r\n        }, 2000);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ReplayableAudioNode\r\n} from \"../common.browser/Exports\";\r\nimport { SendingAgentContextMessageEvent } from \"../common/DialogEvents\";\r\nimport {\r\n    BackgroundEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    createGuid,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    DialogEvent,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    ActivityReceivedEventArgs,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    DialogServiceConfig,\r\n    DialogServiceConnector,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    TurnStatusReceivedEventArgs,\r\n} from \"../sdk/Exports\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechDetected,\r\n    SpeechHypothesis,\r\n    SpeechKeyword,\r\n} from \"./Exports\";\r\nimport { IAuthentication } from \"./IAuthentication\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory\";\r\nimport { RecognitionMode, RecognizerConfig } from \"./RecognizerConfig\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\r\n\r\nexport class DialogServiceAdapter extends ServiceRecognizerBase {\r\n    private privDialogServiceConnector: DialogServiceConnector;\r\n\r\n    private privDialogAudioSource: IAudioSource;\r\n\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private agentConfigSent: boolean;\r\n    private privLastResult: SpeechRecognitionResult;\r\n    private privEvents: EventSource<DialogEvent>;\r\n\r\n    // Turns are of two kinds:\r\n    // 1: SR turns, end when the SR result is returned and then turn end.\r\n    // 2: Service turns where an activity is sent by the service along with the audio.\r\n    private privTurnStateManager: DialogServiceTurnStateManager;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        dialogServiceConnector: DialogServiceConnector) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\r\n\r\n        this.privEvents = new EventSource<DialogEvent>();\r\n        this.privDialogServiceConnector = dialogServiceConnector;\r\n        this.receiveMessageOverride = this.receiveDialogMessageOverride;\r\n        this.privTurnStateManager = new DialogServiceTurnStateManager();\r\n        this.recognizeOverride = this.listenOnce;\r\n        this.postConnectImplOverride = this.dialogConnectImpl;\r\n        this.configConnectionOverride = this.configConnection;\r\n        this.disconnectOverride = this.privDisconnect;\r\n        this.privDialogAudioSource = audioSource;\r\n\r\n        this.agentConfigSent = false;\r\n        this.privLastResult = null;\r\n        this.connectionEvents.attach(async (connectionEvent: ConnectionEvent): Promise<void> => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                this.terminateMessageLoop = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const interactionGuid: string = createGuid();\r\n        const requestId: string = createNoDashGuid();\r\n\r\n        const agentMessage: any = {\r\n            context: {\r\n                interactionId: interactionGuid\r\n            },\r\n            messagePayload: JSON.parse(message),\r\n            version: 0.5\r\n        };\r\n\r\n        const agentMessageJson = JSON.stringify(agentMessage);\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"agent\",\r\n            requestId,\r\n            \"application/json\",\r\n            agentMessageJson));\r\n\r\n    }\r\n\r\n    protected async privDisconnect(): Promise<void> {\r\n        await this.cancelRecognition(this.privRequestSession.sessionId,\r\n            this.privRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        this.agentConfigSent = false;\r\n        return;\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        let result: SpeechRecognitionResult;\r\n        let processed: boolean;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.phrase\":\r\n                const speechPhrase: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\r\n\r\n                this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + speechPhrase.Offset + speechPhrase.Duration);\r\n\r\n                if (speechPhrase.RecognitionStatus !== RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== RecognitionStatus.Error) {\r\n                    const args: SpeechRecognitionEventArgs = this.fireEventForResult(speechPhrase, resultProps);\r\n                    this.privLastResult = args.result;\r\n\r\n                    if (!!this.privDialogServiceConnector.recognized) {\r\n                        try {\r\n                            this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\r\n                            /* tslint:disable:no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.hypothesis\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\r\n                const offset: number = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognizing) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.keyword\":\r\n                const keyword: SpeechKeyword = SpeechKeyword.fromJSON(connectionMessage.textBody);\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    keyword.Status === \"Accepted\" ? ResultReason.RecognizedKeyword : ResultReason.NoMatch,\r\n                    keyword.Text,\r\n                    keyword.Duration,\r\n                    keyword.Offset,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    connectionMessage.textBody,\r\n                    resultProps);\r\n\r\n                if (keyword.Status !== \"Accepted\") {\r\n                    this.privLastResult = result;\r\n                }\r\n\r\n                const event = new SpeechRecognitionEventArgs(result, result.duration, result.resultId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognized) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, event);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"audio\":\r\n                {\r\n                    const audioRequestId = connectionMessage.requestId.toUpperCase();\r\n                    const turn = this.privTurnStateManager.GetTurn(audioRequestId);\r\n                    try {\r\n                        // Empty binary message signals end of stream.\r\n                        if (!connectionMessage.binaryBody) {\r\n                            turn.endAudioStream();\r\n                        } else {\r\n                            turn.audioStream.write(connectionMessage.binaryBody);\r\n                        }\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            case \"response\":\r\n                {\r\n                    this.handleResponseMessage(connectionMessage);\r\n\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n        }\r\n\r\n        if (!!this.privDialogServiceConnector.canceled) {\r\n            const properties: PropertyCollection = new PropertyCollection();\r\n            properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n\r\n            try {\r\n                this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\r\n                /* tslint:disable:no-empty */\r\n            } catch { }\r\n\r\n            if (!!this.privSuccessCallback) {\r\n                const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                    undefined, // ResultId\r\n                    ResultReason.Canceled,\r\n                    undefined, // Text\r\n                    undefined, // Duration\r\n                    undefined, // Offset\r\n                    undefined, // Language\r\n                    undefined, // Language Detection Confidence\r\n                    undefined, // Speaker Id\r\n                    error,\r\n                    undefined, // Json\r\n                    properties);\r\n                try {\r\n                    this.privSuccessCallback(result);\r\n                    this.privSuccessCallback = undefined;\r\n                    /* tslint:disable:no-empty */\r\n                } catch { }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected async listenOnce(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallback: (e: string) => void\r\n    ): Promise<void> {\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallback;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages();\r\n\r\n        const node: IAudioStreamNode = await this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privDialogAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privDialogAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* tslint:disable:no-empty */\r\n        audioSendPromise.then(() => { /*add? return true;*/ }, async (error: string) => {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n    }\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    private dialogConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    private receiveDialogMessageOverride(): Promise<void> {\r\n\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        const loop = async (): Promise<void> => {\r\n            try {\r\n                const isDisposed: boolean = this.isDisposed();\r\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\r\n                if (isDisposed || terminateMessageLoop) {\r\n                    // We're done.\r\n                    communicationCustodian.resolve(undefined);\r\n                    return;\r\n                }\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const message: ConnectionMessage = await connection.read();\r\n\r\n                if (!message) {\r\n                    return loop();\r\n                }\r\n\r\n                const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        {\r\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.StartTurn(turnRequestId);\r\n                            } else {\r\n                                this.privRequestSession.onServiceTurnStartResponse();\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\r\n\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n\r\n                        let json: string;\r\n\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json);\r\n\r\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        {\r\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\r\n\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnEndRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\r\n                            } else {\r\n                                // Audio session turn\r\n\r\n                                const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                                await this.privRequestSession.onServiceTurnEndResponse(false);\r\n\r\n                                if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                                    if (!!this.privRecognizer.sessionStopped) {\r\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                                    }\r\n                                }\r\n\r\n                                // report result to promise.\r\n                                if (!!this.privSuccessCallback && this.privLastResult) {\r\n                                    try {\r\n                                        this.privSuccessCallback(this.privLastResult);\r\n                                        this.privLastResult = null;\r\n                                    } catch (e) {\r\n                                        if (!!this.privErrorCallback) {\r\n                                            this.privErrorCallback(e);\r\n                                        }\r\n                                    }\r\n                                    // Only invoke the call back once.\r\n                                    // and if it's successful don't invoke the\r\n                                    // error after that.\r\n                                    this.privSuccessCallback = undefined;\r\n                                    this.privErrorCallback = undefined;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\r\n                            if (!!this.serviceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n                }\r\n                const ret: Promise<void> = loop();\r\n\r\n                return ret;\r\n            } catch (error) {\r\n                this.terminateMessageLoop = true;\r\n                communicationCustodian.resolve();\r\n            }\r\n        };\r\n\r\n        loop().catch((reason: string): void => {\r\n            Events.instance.onEvent(new BackgroundEvent(reason));\r\n        });\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n\r\n        this.terminateMessageLoop = false;\r\n\r\n        try {\r\n            await this.receiveDialogMessageOverride();\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configConnection(connection: IConnection): Promise<IConnection> {\r\n        if (this.terminateMessageLoop) {\r\n            this.terminateMessageLoop = false;\r\n            return Promise.reject(`Connection to service terminated.`);\r\n        }\r\n\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendAgentConfig(connection);\r\n        return connection;\r\n    }\r\n\r\n    private async sendPreAudioMessages(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.addKeywordContextData();\r\n        await this.sendSpeechContext(connection);\r\n        await this.sendAgentContext(connection);\r\n        await this.sendWaveHeader(connection);\r\n    }\r\n\r\n    private sendAgentConfig = (connection: IConnection): Promise<void> => {\r\n        if (this.agentConfig && !this.agentConfigSent) {\r\n\r\n            if (this.privRecognizerConfig\r\n                .parameters\r\n                .getProperty(PropertyId.Conversation_DialogType) === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                const config = this.agentConfig.get();\r\n                config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\r\n                this.agentConfig.set(config);\r\n            }\r\n            this.onEvent(new SendingAgentContextMessageEvent(this.agentConfig));\r\n\r\n            const agentConfigJson = this.agentConfig.toJsonString();\r\n\r\n            // guard against sending this multiple times on one connection\r\n            this.agentConfigSent = true;\r\n\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"agent.config\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                agentConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    private sendAgentContext = (connection: IConnection): Promise<void> => {\r\n        const guid: string = createGuid();\r\n\r\n        const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n\r\n        const agentContext: any = {\r\n            channelData: \"\",\r\n            context: {\r\n                interactionId: guid\r\n            },\r\n            messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\r\n            version: 0.5\r\n        };\r\n\r\n        const agentContextJson = JSON.stringify(agentContext);\r\n\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speech.agent.context\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            agentContextJson));\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: SimpleSpeechPhrase, properties: PropertyCollection): SpeechRecognitionEventArgs {\r\n        const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\r\n\r\n        const offset: number = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\r\n\r\n        const result = new SpeechRecognitionResult(\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.DisplayText,\r\n            serviceResult.Duration,\r\n            offset,\r\n            serviceResult.Language,\r\n            serviceResult.LanguageDetectionConfidence,\r\n            undefined,\r\n            undefined,\r\n            JSON.stringify(serviceResult),\r\n            properties);\r\n\r\n        const ev = new SpeechRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private handleResponseMessage = (responseMessage: SpeechConnectionMessage): void => {\r\n        // \"response\" messages can contain either \"message\" (activity) or \"MessageStatus\" data. Fire the appropriate\r\n        // event according to the message type that's specified.\r\n        const responsePayload = JSON.parse(responseMessage.textBody);\r\n        switch (responsePayload.messageType.toLowerCase()) {\r\n            case \"message\":\r\n                const responseRequestId = responseMessage.requestId.toUpperCase();\r\n                const activityPayload: ActivityPayloadResponse = ActivityPayloadResponse.fromJSON(responseMessage.textBody);\r\n                const turn = this.privTurnStateManager.GetTurn(responseRequestId);\r\n\r\n                // update the conversation Id\r\n                if (activityPayload.conversationId) {\r\n                    const updateAgentConfig = this.agentConfig.get();\r\n                    updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\r\n                    this.agentConfig.set(updateAgentConfig);\r\n                }\r\n\r\n                const pullAudioOutputStream: PullAudioOutputStreamImpl = turn.processActivityPayload(\r\n                    activityPayload,\r\n                    AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(this.privDialogServiceConnector.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)));\r\n                const activity = new ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\r\n                if (!!this.privDialogServiceConnector.activityReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"messagestatus\":\r\n                if (!!this.privDialogServiceConnector.turnStatusReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.turnStatusReceived(\r\n                            this.privDialogServiceConnector,\r\n                            new TurnStatusReceivedEventArgs(responseMessage.textBody));\r\n                        /* tslint:disable:no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            default:\r\n                Events.instance.onEvent(\r\n                    new BackgroundEvent(`Unexpected response of type ${responsePayload.messageType}. Ignoring.`));\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onEvent(event: DialogEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private addKeywordContextData(): void {\r\n        const keywordPropertyValue: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-KeywordsToDetect\");\r\n        if (keywordPropertyValue === undefined) {\r\n            return;\r\n        }\r\n\r\n        const keywordOffsetPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Offsets\");\r\n        const keywordDurationPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Durations\");\r\n\r\n        const keywords = keywordPropertyValue.split(\";\");\r\n        const keywordOffsets = keywordOffsetPropertyValue === undefined ? [] : keywordOffsetPropertyValue.split(\";\");\r\n        const keywordDurations = keywordDurationPropertyValue === undefined ? [] : keywordDurationPropertyValue.split(\";\");\r\n\r\n        const keywordDefinitionArray = [];\r\n        for (let i = 0; i < keywords.length; i++) {\r\n            const definition: { [section: string]: any } = {};\r\n            definition.text = keywords[i];\r\n            if (i < keywordOffsets.length) {\r\n                definition.offset = Number(keywordOffsets[i]);\r\n            }\r\n            if (i < keywordDurations.length) {\r\n                definition.duration = Number(keywordDurations[i]);\r\n            }\r\n            keywordDefinitionArray.push(definition);\r\n        }\r\n\r\n        this.speechContext.setSection(\"invocationSource\", \"VoiceActivationWithKeyword\");\r\n        this.speechContext.setSection(\"keywordDetection\", [{\r\n            clientDetectedKeywords: keywordDefinitionArray,\r\n            onReject: { action: \"EndOfTurn\" },\r\n            type: \"startTrigger\"\r\n        }]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\nimport { ConsoleLoggingListener } from \"./src/common.browser/Exports\";\r\nimport { Events } from \"./src/common/Exports\";\r\n\r\n// Common.Storage.SetLocalStorage(new Common.Browser.LocalStorage());\r\n// Common.Storage.SetSessionStorage(new Common.Browser.SessionStorage());\r\nEvents.instance.attachListener(new ConsoleLoggingListener());\r\n\r\n// Speech SDK API\r\nexport * from \"./src/sdk/Exports\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { EventType, IEventListener, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class ConsoleLoggingListener implements IEventListener<PlatformEvent> {\r\n    private privLogLevelFilter: EventType;\r\n\r\n    public constructor(logLevelFilter: EventType = EventType.Warning) {\r\n        this.privLogLevelFilter = logLevelFilter;\r\n    }\r\n\r\n    public onEvent = (event: PlatformEvent): void => {\r\n        if (event.eventType >= this.privLogLevelFilter) {\r\n            const log = this.toString(event);\r\n\r\n            switch (event.eventType) {\r\n                case EventType.Debug:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.debug(log);\r\n                    break;\r\n                case EventType.Info:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.info(log);\r\n                    break;\r\n                case EventType.Warning:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.warn(log);\r\n                    break;\r\n                case EventType.Error:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.error(log);\r\n                    break;\r\n                default:\r\n                    // tslint:disable-next-line:no-console\r\n                    console.log(log);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private toString = (event: any): string => {\r\n        const logFragments = [\r\n            `${event.EventTime}`,\r\n            `${event.Name}`,\r\n        ];\r\n\r\n        for (const prop in event) {\r\n            if (prop && event.hasOwnProperty(prop) &&\r\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\r\n                prop !== \"eventId\" && prop !== \"name\" &&\r\n                prop !== \"constructor\") {\r\n                const value = event[prop];\r\n                let valueToLog = \"<NULL>\";\r\n                if (value !== undefined && value !== null) {\r\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\r\n                        valueToLog = value.toString();\r\n                    } else {\r\n                        valueToLog = JSON.stringify(value);\r\n                    }\r\n                }\r\n\r\n                logFragments.push(`${prop}: ${valueToLog}`);\r\n            }\r\n\r\n        }\r\n\r\n        return logFragments.join(\" | \");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface ITurnStatusResponsePayload {\r\n    interactionId: string;\r\n    conversationId: string;\r\n    statusCode: any;\r\n}\r\n\r\nexport class TurnStatusResponsePayload implements ITurnStatusResponsePayload {\r\n    private privMessageStatusResponse: ITurnStatusResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privMessageStatusResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): TurnStatusResponsePayload {\r\n        return new TurnStatusResponsePayload(json);\r\n    }\r\n\r\n    public get interactionId(): string {\r\n        return this.privMessageStatusResponse.interactionId;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privMessageStatusResponse.conversationId;\r\n    }\r\n\r\n    public get statusCode(): any {\r\n        // Payloads may contain a limited set of textual representations or a numeric status\r\n        // code. The textual values are here converted into numeric ones.\r\n        switch (this.privMessageStatusResponse.statusCode) {\r\n            case \"Success\":\r\n                return 200;\r\n            case \"Failed\":\r\n                return 400;\r\n            case \"TimedOut\":\r\n                return 429;\r\n            default:\r\n                return this.privMessageStatusResponse.statusCode;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ITurnStatusResponsePayload,\r\n    TurnStatusResponsePayload\r\n    } from \"../common.speech/ServiceMessages/TurnStatusPayload\";\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class TurnStatusReceivedEventArgs\r\n */\r\nexport class TurnStatusReceivedEventArgs {\r\n    private privTurnStatus: ITurnStatusResponsePayload;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} turnStatus - The JSON-encoded turn status message.\r\n     */\r\n    public constructor(turnStatus: string) {\r\n        this.privTurnStatus = TurnStatusResponsePayload.fromJSON(turnStatus);\r\n    }\r\n\r\n    /**\r\n     * Gets the interaction identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.interactionId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received interaction id.\r\n     */\r\n    public get interactionId(): any {\r\n        return this.privTurnStatus.interactionId;\r\n    }\r\n\r\n    /**\r\n     * Gets the conversation identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.conversationId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received conversation id.\r\n     */\r\n    public get conversationId(): any {\r\n        return this.privTurnStatus.conversationId;\r\n    }\r\n\r\n    /**\r\n     * Gets the received turn status code.\r\n     * @member TurnStatusReceivedEventArgs.prototype.statusCode\r\n     * @function\r\n     * @public\r\n     * @returns {number} the received turn status.\r\n     */\r\n    public get statusCode(): number {\r\n        return this.privTurnStatus.statusCode;\r\n    }\r\n}\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as http from \"http\";\r\nimport * as tls from \"tls\";\r\nimport * as parse from \"url-parse\";\r\nimport * as ocsp from \"../../external/ocsp/ocsp\";\r\nimport {\r\n    Events,\r\n    OCSPCacheEntryExpiredEvent,\r\n    OCSPCacheEntryNeedsRefreshEvent,\r\n    OCSPCacheFetchErrorEvent,\r\n    OCSPCacheHitEvent,\r\n    OCSPCacheMissEvent,\r\n    OCSPCacheUpdatehCompleteEvent,\r\n    OCSPCacheUpdateNeededEvent,\r\n    OCSPDiskCacheHitEvent,\r\n    OCSPDiskCacheStoreEvent,\r\n    OCSPEvent,\r\n    OCSPMemoryCacheHitEvent,\r\n    OCSPMemoryCacheStoreEvent,\r\n    OCSPResponseRetrievedEvent,\r\n    OCSPStapleReceivedEvent,\r\n    OCSPVerificationFailedEvent,\r\n} from \"../common/Exports\";\r\nimport { IStringDictionary } from \"../common/IDictionary\";\r\nimport { ProxyInfo } from \"./ProxyInfo\";\r\n\r\nimport Agent from \"agent-base\";\r\n\r\n// @ts-ignore\r\nimport Cache from \"async-disk-cache\";\r\nimport HttpsProxyAgent from \"https-proxy-agent\";\r\nimport * as net from \"net\";\r\nimport { OCSPCacheUpdateErrorEvent } from \"../common/OCSPEvents\";\r\n\r\nexport class CertCheckAgent {\r\n\r\n    // Test hook to enable forcing expiration / refresh to happen.\r\n    public static testTimeOffset: number = 0;\r\n\r\n    // Test hook to disable stapling for cache testing.\r\n    public static forceDisableOCSPStapling: boolean = false;\r\n\r\n    // An in memory cache for recived responses.\r\n    private static privMemCache: IStringDictionary<Buffer> = {};\r\n\r\n    // The on disk cache.\r\n    private static privDiskCache: Cache;\r\n\r\n    private privProxyInfo: ProxyInfo;\r\n\r\n    constructor(proxyInfo?: ProxyInfo) {\r\n        if (!!proxyInfo) {\r\n            this.privProxyInfo = proxyInfo;\r\n        }\r\n\r\n        // Initialize this here to allow tests to set the env variable before the cache is constructed.\r\n        if (!CertCheckAgent.privDiskCache) {\r\n            CertCheckAgent.privDiskCache = new Cache(\"microsoft-cognitiveservices-speech-sdk-cache\", { supportBuffer: true, location: (typeof process !== \"undefined\" && !!process.env.SPEECH_OCSP_CACHE_ROOT) ? process.env.SPEECH_OCSP_CACHE_ROOT : undefined });\r\n        }\r\n    }\r\n\r\n    // Test hook to force the disk cache to be recreated.\r\n    public static forceReinitDiskCache(): void {\r\n        CertCheckAgent.privDiskCache = undefined;\r\n        CertCheckAgent.privMemCache = {};\r\n    }\r\n\r\n    public GetAgent(disableStapling?: boolean): http.Agent {\r\n        const agent: any = new Agent.Agent(this.CreateConnection);\r\n\r\n        if (this.privProxyInfo !== undefined &&\r\n            this.privProxyInfo.HostName !== undefined &&\r\n            this.privProxyInfo.Port > 0) {\r\n            const proxyName: string = \"privProxyInfo\";\r\n            agent[proxyName] = this.privProxyInfo;\r\n        }\r\n\r\n        return agent;\r\n    }\r\n\r\n    private static GetProxyAgent(proxyInfo: ProxyInfo): HttpsProxyAgent {\r\n        const httpProxyOptions: HttpsProxyAgent.HttpsProxyAgentOptions = {\r\n            host: proxyInfo.HostName,\r\n            port: proxyInfo.Port,\r\n        };\r\n\r\n        if (!!proxyInfo.UserName) {\r\n            httpProxyOptions.headers = {\r\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(proxyInfo.UserName + \":\" + (proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password).toString(\"base64\"),\r\n            };\r\n        } else {\r\n            httpProxyOptions.headers = {};\r\n        }\r\n\r\n        httpProxyOptions.headers.requestOCSP = \"true\";\r\n\r\n        const httpProxyAgent: HttpsProxyAgent = new HttpsProxyAgent(httpProxyOptions);\r\n        return httpProxyAgent;\r\n    }\r\n\r\n    private static async OCSPCheck(socketPromise: Promise<net.Socket>, proxyInfo: ProxyInfo): Promise<net.Socket> {\r\n        let ocspRequest: ocsp.Request;\r\n        let stapling: Buffer;\r\n        let resolved: boolean = false;\r\n\r\n        const socket: net.Socket = await socketPromise;\r\n        socket.cork();\r\n\r\n        const tlsSocket: tls.TLSSocket = socket as tls.TLSSocket;\r\n\r\n        return new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void) => {\r\n            socket.on(\"OCSPResponse\", (data: Buffer): void => {\r\n                if (!!data) {\r\n                    this.onEvent(new OCSPStapleReceivedEvent());\r\n                    stapling = data;\r\n                }\r\n            });\r\n\r\n            socket.on(\"error\", (error: Error) => {\r\n                if (!resolved) {\r\n                    resolved = true;\r\n                    socket.destroy();\r\n                    reject(error);\r\n                }\r\n            });\r\n\r\n            tlsSocket.on(\"secure\", async () => {\r\n                const peer: tls.DetailedPeerCertificate = tlsSocket.getPeerCertificate(true);\r\n                try {\r\n                    const issuer: tls.DetailedPeerCertificate = await this.GetIssuer(peer);\r\n\r\n                    // We always need a request to verify the response.\r\n                    ocspRequest = ocsp.request.generate(peer.raw, issuer.raw);\r\n\r\n                    // Do we have a result for this certificate in our memory cache?\r\n                    const sig: string = ocspRequest.id.toString(\"hex\");\r\n\r\n                    // Stapled response trumps cached response.\r\n                    if (!stapling) {\r\n                        const cacheEntry: Buffer = await CertCheckAgent.GetResponseFromCache(sig, ocspRequest, proxyInfo);\r\n                        stapling = cacheEntry;\r\n                    }\r\n\r\n                    await this.VerifyOCSPResponse(stapling, ocspRequest, proxyInfo);\r\n\r\n                    socket.uncork();\r\n                    resolved = true;\r\n                    resolve(socket);\r\n                } catch (e) {\r\n                    socket.destroy();\r\n                    resolved = true;\r\n                    reject(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static GetIssuer(peer: tls.DetailedPeerCertificate): Promise<tls.DetailedPeerCertificate> {\r\n        if (peer.issuerCertificate) {\r\n            return Promise.resolve(peer.issuerCertificate);\r\n        }\r\n\r\n        return new Promise<tls.DetailedPeerCertificate>((resolve: (value: tls.DetailedPeerCertificate) => void, reject: (reason: string) => void) => {\r\n            const ocspAgent: ocsp.Agent = new ocsp.Agent({});\r\n            ocspAgent.fetchIssuer(peer, null, (error: string, value: tls.DetailedPeerCertificate): void => {\r\n                if (!!error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                resolve(value);\r\n            });\r\n        });\r\n    }\r\n\r\n    private static async GetResponseFromCache(signature: string, ocspRequest: ocsp.Request, proxyInfo: ProxyInfo): Promise<Buffer> {\r\n        let cachedResponse: Buffer = CertCheckAgent.privMemCache[signature];\r\n\r\n        if (!!cachedResponse) {\r\n            this.onEvent(new OCSPMemoryCacheHitEvent(signature));\r\n        }\r\n\r\n        // Do we have a result for this certificate on disk in %TMP%?\r\n        if (!cachedResponse) {\r\n            try {\r\n                const diskCacheResponse: any = await CertCheckAgent.privDiskCache.get(signature);\r\n                if (!!diskCacheResponse.isCached) {\r\n                    CertCheckAgent.onEvent(new OCSPDiskCacheHitEvent(signature));\r\n                    CertCheckAgent.StoreMemoryCacheEntry(signature, diskCacheResponse.value);\r\n                    cachedResponse = diskCacheResponse.value;\r\n                }\r\n            } catch (error) {\r\n                cachedResponse = null;\r\n            }\r\n        }\r\n\r\n        if (!cachedResponse) {\r\n            return cachedResponse;\r\n        }\r\n\r\n        try {\r\n            const cachedOcspResponse: ocsp.Response = ocsp.utils.parseResponse(cachedResponse);\r\n            const tbsData = cachedOcspResponse.value.tbsResponseData;\r\n            if (tbsData.responses.length < 1) {\r\n                this.onEvent(new OCSPCacheFetchErrorEvent(signature, \"Not enough data in cached response\"));\r\n                return;\r\n            }\r\n\r\n            const cachedStartTime: number = tbsData.responses[0].thisUpdate;\r\n            const cachedNextTime: number = tbsData.responses[0].nextUpdate;\r\n\r\n            if (cachedNextTime < (Date.now() + this.testTimeOffset - 60000)) {\r\n                // Cached entry has expired.\r\n                this.onEvent(new OCSPCacheEntryExpiredEvent(signature, cachedNextTime));\r\n                cachedResponse = null;\r\n            } else {\r\n                // If we're within one day of the next update, or 50% of the way through the validity period,\r\n                // background an update to the cache.\r\n\r\n                const minUpdate: number = Math.min(24 * 60 * 60 * 1000, (cachedNextTime - cachedStartTime) / 2);\r\n\r\n                if ((cachedNextTime - (Date.now() + this.testTimeOffset)) < minUpdate) {\r\n                    this.onEvent(new OCSPCacheEntryNeedsRefreshEvent(signature, cachedStartTime, cachedNextTime));\r\n                    this.UpdateCache(ocspRequest, proxyInfo).catch((error: string) => {\r\n                        // Well, not much we can do here.\r\n                        this.onEvent(new OCSPCacheUpdateErrorEvent(signature, error.toString()));\r\n                    });\r\n                } else {\r\n                    this.onEvent(new OCSPCacheHitEvent(signature, cachedStartTime, cachedNextTime));\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.onEvent(new OCSPCacheFetchErrorEvent(signature, error));\r\n            cachedResponse = null;\r\n        }\r\n        if (!cachedResponse) {\r\n            this.onEvent(new OCSPCacheMissEvent(signature));\r\n        }\r\n        return cachedResponse;\r\n    }\r\n\r\n    private static async VerifyOCSPResponse(cacheValue: Buffer, ocspRequest: ocsp.Request, proxyInfo: ProxyInfo): Promise<void> {\r\n        let ocspResponse: Buffer = cacheValue;\r\n        const sig: string = ocspRequest.certID.toString(\"hex\");\r\n\r\n        // Do we have a valid response?\r\n        if (!ocspResponse) {\r\n            ocspResponse = await CertCheckAgent.GetOCSPResponse(ocspRequest, proxyInfo);\r\n        }\r\n\r\n        return new Promise<void>((resolve: () => void, reject: (error: string | Error) => void) => {\r\n            ocsp.verify({ request: ocspRequest, response: ocspResponse }, (error: string, result: any): void => {\r\n                if (!!error) {\r\n                    CertCheckAgent.onEvent(new OCSPVerificationFailedEvent(ocspRequest.id.toString(\"hex\"), error));\r\n\r\n                    // Bad Cached Value? One more try without the cache.\r\n                    if (!!cacheValue) {\r\n                        this.VerifyOCSPResponse(null, ocspRequest, proxyInfo).then(() => {\r\n                            resolve();\r\n                        }, (error: Error) => {\r\n                            reject(error);\r\n                        });\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                } else {\r\n                    if (!cacheValue) {\r\n                        CertCheckAgent.StoreCacheEntry(ocspRequest.id.toString(\"hex\"), ocspResponse);\r\n                    }\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private static async UpdateCache(req: ocsp.Request, proxyInfo: ProxyInfo): Promise<void> {\r\n        const signature: string = req.id.toString(\"hex\");\r\n        this.onEvent(new OCSPCacheUpdateNeededEvent(signature));\r\n\r\n        const rawResponse: Buffer = await this.GetOCSPResponse(req, proxyInfo);\r\n        this.StoreCacheEntry(signature, rawResponse);\r\n        this.onEvent(new OCSPCacheUpdatehCompleteEvent(req.id.toString(\"hex\")));\r\n\r\n    }\r\n\r\n    private static StoreCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.StoreMemoryCacheEntry(sig, rawResponse);\r\n        this.StoreDiskCacheEntry(sig, rawResponse);\r\n    }\r\n\r\n    private static StoreMemoryCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.privMemCache[sig] = rawResponse;\r\n        this.onEvent(new OCSPMemoryCacheStoreEvent(sig));\r\n    }\r\n\r\n    private static StoreDiskCacheEntry(sig: string, rawResponse: Buffer): void {\r\n        this.privDiskCache.set(sig, rawResponse).then(() => {\r\n            this.onEvent(new OCSPDiskCacheStoreEvent(sig));\r\n        });\r\n    }\r\n\r\n    private static GetOCSPResponse(req: ocsp.Request, proxyInfo: ProxyInfo): Promise<Buffer> {\r\n\r\n        const ocspMethod: string = \"1.3.6.1.5.5.7.48.1\";\r\n        let options: http.RequestOptions = {};\r\n\r\n        if (!!proxyInfo) {\r\n            const agent: HttpsProxyAgent = CertCheckAgent.GetProxyAgent(proxyInfo);\r\n            options.agent = agent;\r\n        }\r\n\r\n        return new Promise<Buffer>((resolve: (value: Buffer) => void, reject: (error: string | Error) => void) => {\r\n            ocsp.utils.getAuthorityInfo(req.cert, ocspMethod, (error: string, uri: string): void => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                const parsedUri: {[k: string]: any} = parse.default(uri);\r\n                parsedUri.path = parsedUri.pathname;\r\n                options = { ...options, ...parsedUri };\r\n\r\n                ocsp.utils.getResponse(options, req.data, (error: string, raw: Buffer): void => {\r\n                    if (error) {\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    this.onEvent(new OCSPResponseRetrievedEvent(req.certID.toString(\"hex\")));\r\n                    resolve(raw);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    private static onEvent = (event: OCSPEvent): void => {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private CreateConnection(request: Agent.ClientRequest, options: Agent.RequestOptions): Promise<net.Socket> {\r\n        const enableOCSP: boolean = (typeof process !== \"undefined\" && process.env.NODE_TLS_REJECT_UNAUTHORIZED !== \"0\" && process.env.SPEECH_CONDUCT_OCSP_CHECK !== \"0\") && options.secureEndpoint;\r\n        let socketPromise: Promise<net.Socket>;\r\n\r\n        options = {\r\n            ...options,\r\n            ...{\r\n                requestOCSP: !CertCheckAgent.forceDisableOCSPStapling,\r\n                servername: options.host\r\n            }\r\n        };\r\n\r\n        if (!!this.privProxyInfo) {\r\n            const httpProxyAgent: HttpsProxyAgent = CertCheckAgent.GetProxyAgent(this.privProxyInfo);\r\n            const baseAgent: Agent.Agent = httpProxyAgent as unknown as Agent.Agent;\r\n\r\n            socketPromise = new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void) => {\r\n                baseAgent.callback(request, options, (error: Error, socket: net.Socket) => {\r\n                    if (!!error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve(socket);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            if (!!options.secureEndpoint) {\r\n                socketPromise = Promise.resolve(tls.connect(options));\r\n            } else {\r\n                socketPromise = Promise.resolve(net.connect(options));\r\n            }\r\n        }\r\n\r\n        if (!!enableOCSP) {\r\n            return CertCheckAgent.OCSPCheck(socketPromise, this.privProxyInfo);\r\n        } else {\r\n            return socketPromise;\r\n        }\r\n    }\r\n}\r\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","'use strict'\n/* global fetch, btoa, Headers */\nconst core = require('./core')\n\nclass StatusError extends Error {\n  constructor (res, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, StatusError)\n    }\n\n    this.name = 'StatusError'\n    this.message = res.statusMessage\n    this.statusCode = res.status\n    this.res = res\n    this.json = res.json.bind(res)\n    this.text = res.text.bind(res)\n    this.arrayBuffer = res.arrayBuffer.bind(res)\n    let buffer\n    const get = () => {\n      if (!buffer) buffer = this.arrayBuffer()\n      return buffer\n    }\n    Object.defineProperty(this, 'responseBody', { get })\n    // match Node.js headers object\n    this.headers = {}\n    for (const [key, value] of res.headers.entries()) {\n      this.headers[key.toLowerCase()] = value\n    }\n  }\n}\n\nconst mkrequest = (statusCodes, method, encoding, headers, baseurl) => async (_url, body, _headers = {}) => {\n  _url = baseurl + (_url || '')\n  let parsed = new URL(_url)\n\n  if (!headers) headers = {}\n  if (parsed.username) {\n    headers.Authorization = 'Basic ' + btoa(parsed.username + ':' + parsed.password)\n    parsed = new URL(parsed.protocol + '//' + parsed.host + parsed.pathname + parsed.search)\n  }\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\n    throw new Error(`Unknown protocol, ${parsed.protocol}`)\n  }\n\n  if (body) {\n    if (body instanceof ArrayBuffer ||\n      ArrayBuffer.isView(body) ||\n      typeof body === 'string'\n    ) {\n      // noop\n    } else if (typeof body === 'object') {\n      body = JSON.stringify(body)\n      headers['Content-Type'] = 'application/json'\n    } else {\n      throw new Error('Unknown body type.')\n    }\n  }\n\n  _headers = new Headers({ ...(headers || {}), ..._headers })\n\n  const resp = await fetch(parsed, { method, headers: _headers, body })\n  resp.statusCode = resp.status\n\n  if (!statusCodes.has(resp.status)) {\n    throw new StatusError(resp)\n  }\n\n  if (encoding === 'json') return resp.json()\n  else if (encoding === 'buffer') return resp.arrayBuffer()\n  else if (encoding === 'string') return resp.text()\n  else return resp\n}\n\nmodule.exports = core(mkrequest)\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nvar _default = red;\nexports.default = _default;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from \"react\";\nimport type {\n  History,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Path,\n  To\n} from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath\n} from \"history\";\n\nexport type { Location, Path, To, NavigationType };\n\nfunction invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Omit<\n  History,\n  \"action\" | \"location\" | \"back\" | \"forward\" | \"listen\" | \"block\"\n>;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nconst NavigationContext = React.createContext<NavigationContextObject>(null!);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nconst LocationContext = React.createContext<LocationContextObject>(null!);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nconst RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: []\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(_props: OutletProps): React.ReactElement | null {\n  return useOutlet();\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactElement | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactElement | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactElement | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactElement | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<ParamKey extends string = string>(\n  pattern: PathPattern | string\n): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  return matchPath(pattern, useLocation().pathname);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map(match => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: { replace?: boolean; state?: any } = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(): React.ReactElement | null {\n  return React.useContext(RouteContext).outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<Key extends string = string>(): Readonly<\n  Params<Key>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map(match => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath}/*\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map(match =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase])\n        })\n      ),\n    parentMatches\n  );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, element => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, _ =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], routes, pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map(meta => meta.childrenIndex),\n          b.routesMeta.map(meta => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter(s => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  // TODO: attach original route object inside routesMeta so we don't need this arg\n  routesArg: RouteObject[],\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let routes = routesArg;\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = routes[meta.childrenIndex];\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n\n    routes = route.children!;\n  }\n\n  return matches;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\nfunction _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : <Outlet />\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1))\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: string;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<ParamKey extends string = string>(\n  pattern: PathPattern | string,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, at least match a word boundary. This restricts parent\n        // routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        \"(?:\\\\b|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nfunction getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nfunction stripBasename(pathname: string, basename: string): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nconst joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nconst normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext\n};\n","import * as React from \"react\";\nimport type { BrowserHistory, HashHistory } from \"history\";\nimport { createBrowserHistory, createHashHistory, createPath } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes\n};\n\nexport type {\n  Location,\n  Path,\n  To,\n  NavigationType,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A <Router> for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A <Router> for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps extends Omit<LinkProps, \"className\" | \"style\"> {\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from './Cookies';\r\nexport default Cookies;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { Queue } from \"./Queue\";\r\n\r\nexport interface IStreamChunk<TBuffer> {\r\n    isEnd: boolean;\r\n    buffer: TBuffer;\r\n    timeReceived: number;\r\n}\r\n\r\nexport class Stream<TBuffer> {\r\n    private privId: string;\r\n    private privIsWriteEnded: boolean = false;\r\n    private privIsReadEnded: boolean = false;\r\n    private privReaderQueue: Queue<IStreamChunk<TBuffer>>;\r\n\r\n    public constructor(streamId?: string) {\r\n        this.privId = streamId ? streamId : createNoDashGuid();\r\n        this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsWriteEnded;\r\n    }\r\n\r\n    public get isReadEnded(): boolean {\r\n        return this.privIsReadEnded;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public close(): void {\r\n        if (!this.privIsWriteEnded) {\r\n            this.writeStreamChunk({\r\n                buffer: null,\r\n                isEnd: true,\r\n                timeReceived: Date.now(),\r\n            });\r\n            this.privIsWriteEnded = true;\r\n        }\r\n    }\r\n\r\n    public writeStreamChunk(streamChunk: IStreamChunk<TBuffer>): void {\r\n        this.throwIfClosed();\r\n        if (!this.privReaderQueue.isDisposed()) {\r\n            try {\r\n                this.privReaderQueue.enqueue(streamChunk);\r\n            } catch (e) {\r\n                // Do nothing\r\n            }\r\n        }\r\n    }\r\n\r\n    public read = (): Promise<IStreamChunk<TBuffer>> => {\r\n        if (this.privIsReadEnded) {\r\n            throw new InvalidOperationError(\"Stream read has already finished\");\r\n        }\r\n\r\n        return this.privReaderQueue\r\n            .dequeue()\r\n            .then(async (streamChunk: IStreamChunk<TBuffer>) => {\r\n                if (streamChunk === undefined || streamChunk.isEnd) {\r\n                    await this.privReaderQueue.dispose(\"End of stream reached\");\r\n                }\r\n\r\n                return streamChunk;\r\n            });\r\n    }\r\n    public readEnded = (): void => {\r\n        if (!this.privIsReadEnded) {\r\n            this.privIsReadEnded = true;\r\n            this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n        }\r\n    }\r\n\r\n    private throwIfClosed = (): void => {\r\n        if (this.privIsWriteEnded) {\r\n            throw new InvalidOperationError(\"Stream closed\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ConnectionMessage } from \"./ConnectionMessage\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class ServiceEvent extends PlatformEvent {\r\n    private privJsonResult: string;\r\n\r\n    constructor(eventName: string, jsonstring: string, eventType: EventType = EventType.Info) {\r\n      super(eventName, eventType);\r\n      this.privJsonResult = jsonstring;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n}\r\n\r\nexport class ConnectionEvent extends PlatformEvent {\r\n    private privConnectionId: string;\r\n\r\n    constructor(eventName: string, connectionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privConnectionId = connectionId;\r\n    }\r\n\r\n    public get connectionId(): string {\r\n        return this.privConnectionId;\r\n    }\r\n}\r\n\r\nexport class ConnectionStartEvent extends ConnectionEvent {\r\n    private privUri: string;\r\n    private privHeaders: IStringDictionary<string>;\r\n\r\n    constructor(connectionId: string, uri: string, headers?: IStringDictionary<string>) {\r\n        super(\"ConnectionStartEvent\", connectionId);\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\r\n    constructor(connectionId: string, metadata?: IStringDictionary<string>) {\r\n        super(\"ConnectionEstablishedEvent\", connectionId);\r\n    }\r\n}\r\n\r\nexport class ConnectionClosedEvent extends ConnectionEvent {\r\n    private privReason: string;\r\n    private privStatusCode: number;\r\n\r\n    constructor(connectionId: string, statusCode: number, reason: string) {\r\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\r\n        this.privReason = reason;\r\n        this.privStatusCode = statusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionErrorEvent extends ConnectionEvent {\r\n    private readonly privMessage: string;\r\n    private readonly privType: string;\r\n\r\n    constructor(connectionId: string, message: string, type: string) {\r\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\r\n        this.privMessage = message;\r\n        this.privType = type;\r\n    }\r\n\r\n    public get message(): string {\r\n        return this.privMessage;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    constructor(connectionId: string, statuscode: number, reason: string) {\r\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\r\n        this.privStatusCode = statuscode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\r\n    private privNetworkReceivedTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    constructor(connectionId: string, networkReceivedTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\r\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkReceivedTime(): string {\r\n        return this.privNetworkReceivedTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\r\n    private privNetworkSentTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    constructor(connectionId: string, networkSentTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageSentEvent\", connectionId);\r\n        this.privNetworkSentTime = networkSentTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkSentTime(): string {\r\n        return this.privNetworkSentTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRequiredForA11y;\nfunction isRequiredForA11y(validator) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}\nmodule.exports = exports['default'];","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar pkg = require('./../../package.json');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code))\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.')\n        }\n        headers = arg\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStreamChunk, Stream } from \"./Exports\";\r\n\r\nexport class ChunkedArrayBufferStream extends Stream<ArrayBuffer> {\r\n    private privTargetChunkSize: number;\r\n    private privNextBufferToWrite: ArrayBuffer;\r\n    private privNextBufferStartTime: number;\r\n    private privNextBufferReadyBytes: number;\r\n\r\n    constructor(targetChunkSize: number, streamId?: string) {\r\n        super(streamId);\r\n        this.privTargetChunkSize = targetChunkSize;\r\n        this.privNextBufferReadyBytes = 0;\r\n    }\r\n\r\n    public writeStreamChunk(chunk: IStreamChunk<ArrayBuffer>): void {\r\n        // No pending write, and the buffer is the right size so write it.\r\n        if (chunk.isEnd ||\r\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\r\n            super.writeStreamChunk(chunk);\r\n            return;\r\n        }\r\n\r\n        let bytesCopiedFromBuffer: number = 0;\r\n\r\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\r\n            // Fill the next buffer.\r\n            if (undefined === this.privNextBufferToWrite) {\r\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\r\n                this.privNextBufferStartTime = chunk.timeReceived;\r\n            }\r\n\r\n            // Find out how many bytes we can copy into the read buffer.\r\n            const bytesToCopy: number = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\r\n            const targetView: Uint8Array = new Uint8Array(this.privNextBufferToWrite);\r\n            const sourceView: Uint8Array = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\r\n\r\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\r\n            this.privNextBufferReadyBytes += bytesToCopy;\r\n            bytesCopiedFromBuffer += bytesToCopy;\r\n\r\n            // Are we ready to write?\r\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\r\n                super.writeStreamChunk({\r\n                    buffer: this.privNextBufferToWrite,\r\n                    isEnd: false,\r\n                    timeReceived: this.privNextBufferStartTime,\r\n                });\r\n                this.privNextBufferReadyBytes = 0;\r\n                this.privNextBufferToWrite = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        // Send whatever is pending, then close the base class.\r\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\r\n            super.writeStreamChunk({\r\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\r\n                isEnd: false,\r\n                timeReceived: this.privNextBufferStartTime,\r\n            });\r\n        }\r\n\r\n        super.close();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\ntype TWorkerMessage = ICallNotification | IClearResponse | IErrorNotification | IErrorResponse;\r\n\r\ninterface IClearResponse {\r\n    error: null;\r\n    id: number;\r\n}\r\n\r\ninterface IErrorNotification {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: null;\r\n    result: null;\r\n}\r\n\r\ninterface IErrorResponse {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: number;\r\n    result: null;\r\n}\r\n\r\ninterface ICallNotification {\r\n    id: null;\r\n    method: \"call\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface ISetNotification {\r\n    id: null;\r\n    method: \"set\";\r\n    params: {\r\n        delay: number;\r\n        now: number;\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IClearRequest {\r\n    id: number;\r\n    method: \"clear\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IWorkerEvent extends Event {\r\n    data: TWorkerMessage;\r\n}\r\n\r\ninterface IWorkerTimers {\r\n    clearTimeout: (timerId: number) => void;\r\n    setTimeout: (func: () => any, delay: number) => number;\r\n}\r\n\r\ndeclare type Func = () => any;\r\n\r\nexport class Timeout {\r\n\r\n    private static workerTimers: null | IWorkerTimers = null;\r\n\r\n    public static clearTimeout: IWorkerTimers[\"clearTimeout\"] = (timerId) => Timeout.timers().clearTimeout(timerId);\r\n\r\n    public static setTimeout: IWorkerTimers[\"setTimeout\"] = (func, delay) => Timeout.timers().setTimeout(func, delay);\r\n\r\n    public static load = (url: string) => {\r\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\r\n        const scheduledTimeoutFunctions: Map<number, number | Func> = new Map([[0, () => { }]]); // tslint:disable-line no-empty\r\n        const unhandledRequests: Map<number, number> = new Map();\r\n\r\n        const worker = new Worker(url);\r\n\r\n        worker.addEventListener(\"message\", ({ data }: IWorkerEvent) => {\r\n            if (Timeout.isCallNotification(data)) {\r\n                const {\r\n                    params: { timerId }\r\n                } = data;\r\n\r\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\r\n\r\n                if (typeof idOrFunc === \"number\") {\r\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\r\n\r\n                    if (\r\n                        unhandledTimerId === undefined ||\r\n                        unhandledTimerId !== timerId\r\n                    ) {\r\n                        throw new Error(\"The timer is in an undefined state.\");\r\n                    }\r\n                } else if (typeof idOrFunc !== \"undefined\") {\r\n                    idOrFunc();\r\n\r\n                    // A timeout can be safely deleted because it is only called once.\r\n                    scheduledTimeoutFunctions.delete(timerId);\r\n                } else {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n            } else if (Timeout.isClearResponse(data)) {\r\n                const { id } = data;\r\n\r\n                const unhandledTimerId = unhandledRequests.get(id);\r\n\r\n                if (unhandledTimerId === undefined) {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n\r\n                unhandledRequests.delete(id);\r\n\r\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\r\n            } else {\r\n                const {\r\n                    error: { message }\r\n                } = data;\r\n\r\n                throw new Error(message);\r\n            }\r\n        });\r\n\r\n        const clearTimeout = (timerId: number) => {\r\n            const id = Math.random();\r\n\r\n            unhandledRequests.set(id, timerId);\r\n            scheduledTimeoutFunctions.set(timerId, id);\r\n\r\n            worker.postMessage({\r\n                id,\r\n                method: \"clear\",\r\n                params: { timerId }\r\n            } as IClearRequest);\r\n        };\r\n\r\n        const setTimeout = (func: () => void, delay: number) => {\r\n            const timerId = Math.random();\r\n\r\n            scheduledTimeoutFunctions.set(timerId, func);\r\n\r\n            worker.postMessage({\r\n                id: null,\r\n                method: \"set\",\r\n                params: {\r\n                    delay,\r\n                    now: performance.now(),\r\n                    timerId\r\n                }\r\n            } as ISetNotification);\r\n\r\n            return timerId;\r\n        };\r\n\r\n        return {\r\n            clearTimeout,\r\n            setTimeout\r\n        };\r\n    }\r\n\r\n    private static loadWorkerTimers = () => {\r\n        const worker = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`; // tslint:disable-line:max-line-length\r\n        return () => {\r\n            if (Timeout.workerTimers !== null) {\r\n                return Timeout.workerTimers;\r\n            }\r\n\r\n            const blob = new Blob([worker], { type: \"application/javascript; charset=utf-8\" });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            Timeout.workerTimers = Timeout.load(url);\r\n\r\n            // Edge doesn't like the URL to be revoked directly.\r\n            Timeout.workerTimers.setTimeout(() => URL.revokeObjectURL(url), 0);\r\n\r\n            return Timeout.workerTimers as IWorkerTimers;\r\n        };\r\n    }\r\n\r\n    public static timers: () => IWorkerTimers = Timeout.loadWorkerTimers();\r\n\r\n    private static isCallNotification = (message: TWorkerMessage): message is ICallNotification => {\r\n        return (message as ICallNotification).method !== undefined && (message as ICallNotification).method === \"call\";\r\n    }\r\n\r\n    private static isClearResponse = (message: TWorkerMessage): message is IClearResponse => {\r\n        return (message as IClearResponse).error === null && typeof message.id === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioStreamFormatImpl } from \"../../src/sdk/Audio/AudioStreamFormat\";\r\nimport {\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n} from \"../common/Exports\";\r\n\r\nexport class ReplayableAudioNode implements IAudioStreamNode {\r\n    private privAudioNode: IAudioStreamNode;\r\n    private privBytesPerSecond: number;\r\n    private privBuffers: BufferEntry[] = [];\r\n    private privReplayOffset: number = 0;\r\n    private privLastShrinkOffset: number = 0;\r\n    private privBufferStartOffset: number = 0;\r\n    private privBufferSerial: number = 0;\r\n    private privBufferedBytes: number = 0;\r\n    private privReplay: boolean = false;\r\n    private privLastChunkAcquiredTime: number = 0;\r\n\r\n    public constructor(audioSource: IAudioStreamNode, bytesPerSecond: number) {\r\n        this.privAudioNode = audioSource;\r\n        this.privBytesPerSecond = bytesPerSecond;\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privAudioNode.id();\r\n    }\r\n\r\n    // Reads and returns the next chunk of audio buffer.\r\n    // If replay of existing buffers are needed, read() will first seek and replay\r\n    // existing content, and upoin completion it will read new content from the underlying\r\n    // audio node, saving that content into the replayable buffers.\r\n    public read(): Promise<IStreamChunk<ArrayBuffer>> {\r\n        // if there is a replay request to honor.\r\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\r\n            // Find the start point in the buffers.\r\n            // Offsets are in 100ns increments.\r\n            // So how many bytes do we need to seek to get the right offset?\r\n            const offsetToSeek: number = this.privReplayOffset - this.privBufferStartOffset;\r\n\r\n            let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n            if (0 !== (bytesToSeek % 2)) {\r\n                bytesToSeek++;\r\n            }\r\n\r\n            let i: number = 0;\r\n\r\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n            }\r\n\r\n            if (i < this.privBuffers.length) {\r\n                const retVal: ArrayBuffer = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\r\n\r\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\r\n\r\n                // If we've reached the end of the buffers, stop replaying.\r\n                if (i === this.privBuffers.length - 1) {\r\n                    this.privReplay = false;\r\n                }\r\n\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: retVal,\r\n                    isEnd: false,\r\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.privAudioNode.read()\r\n            .then((result: IStreamChunk<ArrayBuffer>) => {\r\n                if (result && result.buffer) {\r\n                    this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\r\n                    this.privBufferedBytes += result.buffer.byteLength;\r\n                }\r\n                return result;\r\n            });\r\n    }\r\n\r\n    public detach(): Promise<void> {\r\n        this.privBuffers = undefined;\r\n        return this.privAudioNode.detach();\r\n    }\r\n\r\n    public replay(): void {\r\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\r\n            this.privReplay = true;\r\n            this.privReplayOffset = this.privLastShrinkOffset;\r\n        }\r\n    }\r\n\r\n    // Shrinks the existing audio buffers to start at the new offset, or at the\r\n    // beginning of the buffer closest to the requested offset.\r\n    // A replay request will start from the last shrink point.\r\n    public shrinkBuffers(offset: number): void {\r\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.privLastShrinkOffset = offset;\r\n\r\n        // Find the start point in the buffers.\r\n        // Offsets are in 100ns increments.\r\n        // So how many bytes do we need to seek to get the right offset?\r\n        const offsetToSeek: number = offset - this.privBufferStartOffset;\r\n\r\n        let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n\r\n        let i: number = 0;\r\n\r\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n        }\r\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\r\n        this.privBuffers = this.privBuffers.slice(i);\r\n    }\r\n\r\n    // Finds the time a buffer of audio was first seen by offset.\r\n    public findTimeAtOffset(offset: number): number {\r\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\r\n            return 0;\r\n        }\r\n\r\n        for (const value of this.privBuffers) {\r\n            const startOffset: number = (value.byteOffset / this.privBytesPerSecond) * 1e7;\r\n            const endOffset: number = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\r\n\r\n            if (offset >= startOffset && offset <= endOffset) {\r\n                return value.chunk.timeReceived;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n\r\n// Primary use of this class is to help debugging problems with the replay\r\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\r\n// the ArrayBuffer directly.\r\n// tslint:disable-next-line:max-classes-per-file\r\nclass BufferEntry {\r\n    public chunk: IStreamChunk<ArrayBuffer>;\r\n    public serial: number;\r\n    public byteOffset: number;\r\n\r\n    public constructor(chunk: IStreamChunk<ArrayBuffer>, serial: number, byteOffset: number) {\r\n        this.chunk = chunk;\r\n        this.serial = serial;\r\n        this.byteOffset = byteOffset;\r\n    }\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    EventType,\r\n    PlatformEvent\r\n} from \"./Exports\";\r\n\r\nexport class BackgroundEvent extends PlatformEvent {\r\n    private privError: string;\r\n\r\n    constructor(error: string) {\r\n        super(\"BackgroundEvent\", EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type CcsCredential = {\n    credential: string,\n    type: CcsCredentialType\n};\n\nexport enum CcsCredentialType {\n    HOME_ACCOUNT_ID = \"home_account_id\",\n    UPN = \"UPN\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class for math specific functions in browser.\n */\nexport class MathUtils {\n\n    /**\n     * Decimal to Hex\n     *\n     * @param num\n     */\n    static decimalToHex(num: number): string {\n        let hex: string = num.toString(16);\n        while (hex.length < 2) {\n            hex = \"0\" + hex;\n        }\n        return hex;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { MathUtils } from \"../utils/MathUtils\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\n\nexport class GuidGenerator {\n\n    // browser crypto object used to generate random values\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.cryptoObj = cryptoObj;\n    }\n\n    /*\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\n     * pseudo-random numbers.\n     * The algorithm is as follows:\n     *     Set the two most significant bits (bits 6 and 7) of the\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\n     *     Set the four most significant bits (bits 12 through 15) of the\n     *        time_hi_and_version field to the 4-bit version number from\n     *        Section 4.1.3. Version4\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\n     *     values.\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\n     * time-low               = 4hexOctet\n     * time-mid               = 2hexOctet\n     * time-high-and-version  = 2hexOctet\n     * clock-seq-and-reserved = hexOctet:\n     * clock-seq-low          = hexOctet\n     * node                   = 6hexOctet\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\n     * y values are 8, 9, A, B\n     */\n    generateGuid(): string {\n        try {\n            const buffer: Uint8Array = new Uint8Array(16);\n            this.cryptoObj.getRandomValues(buffer);\n\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\n\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\n\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\n        }\n        catch (err) {\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n            const hex: string = \"0123456789abcdef\";\n            let r: number = 0;\n            let guidResponse: string = \"\";\n            for (let i: number = 0; i < 36; i++) {\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\n                    // each x and y needs to be random\n                    r = Math.random() * 16 | 0;\n                }\n                if (guidHolder[i] === \"x\") {\n                    guidResponse += hex[r];\n                } else if (guidHolder[i] === \"y\") {\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\n                    r |= 0x8; // set pos 3 to 1 as 1???\n                    guidResponse += hex[r];\n                } else {\n                    guidResponse += guidHolder[i];\n                }\n            }\n            return guidResponse;\n        }\n    }\n\n    /**\n     * verifies if a string is  GUID\n     * @param guid\n     */\n    static isGuid(guid: string): boolean {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class BrowserStringUtils {\n\n    /**\n     * Converts string to Uint8Array\n     * @param sDOMStr \n     */\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\n        let nChr;\n        let nArrLen = 0;\n        const nStrLen = sDOMStr.length;\n        /* mapping... */\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n            nChr = sDOMStr.charCodeAt(nMapIdx);\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n        }\n\n        const aBytes = new Uint8Array(nArrLen);\n\n        /* transcription... */\n\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n            nChr = sDOMStr.charCodeAt(nChrIdx);\n            if (nChr < 128) {\n                /* one byte */\n                aBytes[nIdx++] = nChr;\n            } else if (nChr < 0x800) {\n                /* two bytes */\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x10000) {\n                /* three bytes */\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x200000) {\n                /* four bytes */\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x4000000) {\n                /* five bytes */\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else /* if (nChr <= 0x7fffffff) */ {\n                /* six bytes */\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n        }\n\n        return aBytes;      \n    }\n\n    /**\n     * Converst string to ArrayBuffer\n     * @param dataString \n     */\n    static stringToArrayBuffer(dataString: string): ArrayBuffer {\n        const data = new ArrayBuffer(dataString.length);\n        const dataView = new Uint8Array(data);\n        for (let i: number = 0; i < dataString.length; i++) {\n            dataView[i] = dataString.charCodeAt(i);\n        }\n        return data;\n    }\n\n    /**\n     * Converts Uint8Array to a string\n     * @param aBytes \n     */\n    static utf8ArrToString (aBytes: Uint8Array): string {\n        let sView = \"\";\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            nPart = aBytes[nIdx];\n            sView += String.fromCharCode(\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\n                                    : /* nPart < 127 ? */ /* one byte */\n                                    nPart\n            );\n        }\n        return sView;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Encode {\n    \n    /**\n     * Returns URL Safe b64 encoded string from a plaintext string.\n     * @param input \n     */\n    urlEncode(input: string): string {\n        return encodeURIComponent(this.encode(input)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\"));\n    }\n\n    /**\n     * Returns URL Safe b64 encoded string from an int8Array.\n     * @param inputArr \n     */\n    urlEncodeArr(inputArr: Uint8Array): string {\n        return this.base64EncArr(inputArr)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n\n    /**\n     * Returns b64 encoded string from plaintext string.\n     * @param input \n     */\n    encode(input: string): string {\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\n        return this.base64EncArr(inputUtf8Arr);\n    }\n\n    /**\n     * Base64 encode byte array\n     * @param aBytes \n     */\n    private base64EncArr(aBytes: Uint8Array): string {  \n        const eqLen = (3 - (aBytes.length % 3)) % 3;\n        let sB64Enc = \"\";\n      \n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n            nMod3 = nIdx % 3;\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\n            /*\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\n             */\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n                sB64Enc += String.fromCharCode(\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \n                    this.uint6ToB64(nUint24 >>> 12 & 63), \n                    this.uint6ToB64(nUint24 >>> 6 & 63), \n                    this.uint6ToB64(nUint24 & 63)\n                );\n                nUint24 = 0;\n            }\n        }\n\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n    }\n\n    /**\n     * Base64 string to array encoding helper\n     * @param nUint6 \n     */\n    private uint6ToB64 (nUint6: number): number {\n        return nUint6 < 26 ?\n            nUint6 + 65\n            : nUint6 < 52 ?\n                nUint6 + 71\n                : nUint6 < 62 ?\n                    nUint6 - 4\n                    : nUint6 === 62 ?\n                        43\n                        : nUint6 === 63 ?\n                            47\n                            :\n                            65;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\n\n/**\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class Base64Decode {\n\n    /**\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\n     * @param input \n     */\n    decode(input: string): string {\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (encodedString.length % 4) {\n            case 0:\n                break;\n            case 2:\n                encodedString += \"==\";\n                break;\n            case 3:\n                encodedString += \"=\";\n                break;\n            default:\n                throw new Error(\"Invalid base64 string\");\n        }\n\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\n        return BrowserStringUtils.utf8ArrToString(inputUtf8Arr);\n    }\n\n    /**\n     * Decodes base64 into Uint8Array\n     * @param base64String \n     * @param nBlockSize \n     */\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\n        const nInLen = sB64Enc.length;\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\n        const aBytes = new Uint8Array(nOutLen);\n\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n            nMod4 = nInIdx & 3;\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\n                }\n                nUint24 = 0;\n            }\n        }\n\n        return aBytes;\n    }\n\n    /**\n     * Base64 string to array decoding helper\n     * @param charNum \n     */\n    private b64ToUint6(charNum: number): number {\n        return charNum > 64 && charNum < 91 ?\n            charNum - 65\n            : charNum > 96 && charNum < 123 ? \n                charNum - 71\n                : charNum > 47 && charNum < 58 ?\n                    charNum + 4\n                    : charNum === 43 ?\n                        62\n                        : charNum === 47 ?\n                            63\n                            :\n                            0;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: \"pkce_not_created\",\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\n    },\n    cryptoDoesNotExist: {\n        code: \"crypto_nonexistent\",\n        desc: \"The crypto object or function is not available.\"\n    },\n    httpMethodNotImplementedError: {\n        code: \"http_method_not_implemented\",\n        desc: \"The HTTP method given has not been implemented in this library.\"\n    },\n    emptyNavigateUriError: {\n        code: \"empty_navigate_uri\",\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n    },\n    hashEmptyError: {\n        code: \"hash_empty_error\",\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash.\"\n    },\n    hashDoesNotContainStateError: {\n        code: \"no_state_in_hash\",\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: \"hash_does_not_contain_known_properties\",\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.\"\n    },\n    unableToParseStateError: {\n        code: \"unable_to_parse_state\",\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n    },\n    stateInteractionTypeMismatchError: {\n        code: \"state_interaction_type_mismatch\",\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\n    },\n    interactionInProgress: {\n        code: \"interaction_in_progress\",\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    popupWindowError: {\n        code: \"popup_window_error\",\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n    },\n    emptyWindowError: {\n        code: \"empty_window_error\",\n        desc: \"window.open returned null or undefined window object.\"\n    },\n    userCancelledError: {\n        code: \"user_cancelled\",\n        desc: \"User cancelled the flow.\"\n    },\n    monitorPopupTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    monitorIframeTimeoutError: {\n        code: \"monitor_window_timeout\",\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n    },\n    redirectInIframeError: {\n        code: \"redirect_in_iframe\",\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: \"block_iframe_reload\",\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n    },\n    blockAcquireTokenInPopupsError: {\n        code: \"block_nested_popups\",\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n    },\n    iframeClosedPrematurelyError: {\n        code: \"iframe_closed_prematurely\",\n        desc: \"The iframe being monitored was closed prematurely.\"\n    },\n    silentLogoutUnsupportedError: {\n        code: \"silent_logout_unsupported\",\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\n    },\n    noAccountError: {\n        code: \"no_account_error\",\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n    },\n    silentPromptValueError: {\n        code: \"silent_prompt_value_error\",\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\n    },\n    noTokenRequestCacheError: {\n        code: \"no_token_request_cache_error\",\n        desc: \"No token request found in cache.\"\n    },\n    unableToParseTokenRequestCacheError: {\n        code: \"unable_to_parse_token_request_cache_error\",\n        desc: \"The cached token request could not be parsed.\"\n    },\n    noCachedAuthorityError: {\n        code: \"no_cached_authority_error\",\n        desc: \"No cached authority found.\"\n    },\n    authRequestNotSet: {\n        code: \"auth_request_not_set_error\",\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n    },\n    invalidCacheType: {\n        code: \"invalid_cache_type\",\n        desc: \"Invalid cache type\"\n    },\n    notInBrowserEnvironment: {\n        code: \"non_browser_environment\",\n        desc: \"Login and token requests are not supported in non-browser environments.\"\n    },\n    databaseNotOpen: {\n        code: \"database_not_open\",\n        desc: \"Database is not open!\"\n    },\n    noNetworkConnectivity: {\n        code: \"no_network_connectivity\",\n        desc: \"No network connectivity. Check your internet connection.\"\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n    },\n    getRequestFailed: {\n        code: \"get_request_failed\",\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\n    },\n    failedToParseNetworkResponse: {\n        code: \"failed_to_parse_response\",\n        desc: \"Failed to parse network response. Check network trace.\"\n    },\n    unableToLoadTokenError: {\n        code: \"unable_to_load_token\",\n        desc: \"Error loading token to cache.\"\n    },\n    signingKeyNotFoundInStorage: {\n        code: \"crypto_key_not_found\",\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\"\n    },\n    databaseUnavailable: {\n        code: \"database_unavailable\",\n        desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n    }\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n\n    /**\n     * Creates an error thrown when PKCE is not implemented.\n     * @param errDetail \n     */\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when the crypto object is unavailable.\n     * @param errDetail \n     */\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\n    }\n\n    /**\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\n     * @param method \n     */\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\n    }\n\n    /**\n     * Creates an error thrown when the navigation URI is empty.\n     */\n    static createEmptyNavigationUriError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     * @param hashValue \n     */\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createHashDoesNotContainStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value does not contain known properties\n     */\n    static createHashDoesNotContainKnownPropertiesError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the hash string value is unexpectedly empty.\n     */\n    static createUnableToParseStateError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\n     */\n    static createStateInteractionTypeMismatchError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\n     */\n    static createInteractionInProgressError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n    }\n\n    /**\n     * Creates an error thrown when the popup window could not be opened.\n     * @param errDetail \n     */\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n    }\n\n    /**\n     * Creates an error thrown when window.open returns an empty window object.\n     * @param errDetail \n     */\n    static createEmptyWindowCreatedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the user closes a popup.\n     */\n    static createUserCancelledError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\n            BrowserAuthErrorMessage.userCancelledError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\n     */\n    static createMonitorPopupTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code,\n            BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\n     */\n    static createMonitorIframeTimeoutError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code,\n            BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n    }\n\n    /**\n     * Creates an error thrown when navigateWindow is called inside an iframe.\n     * @param windowParentCheck \n     */\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, \n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\n    }\n\n    /**\n     * Creates an error thrown when an auth reload is done inside an iframe.\n     */\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a popup attempts to call an acquireToken API\n     * @returns \n     */\n    static createBlockAcquireTokenInPopupsError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, \n            BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n    }\n\n    /**\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\n     */\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\n     */\n    static createSilentLogoutUnsupportedError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\n     */\n    static createNoAccountError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n    }\n\n    /**\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\n     */\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\n    }\n\n    /**\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\n     */\n    static createUnableToParseTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the token request could not be retrieved from the cache\n     */\n    static createNoTokenRequestCacheError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code,\n            BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n    }\n\n    /**\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\n     */\n    static createAuthRequestNotSetError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code,\n            BrowserAuthErrorMessage.authRequestNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the authority could not be retrieved from the cache\n     */\n    static createNoCachedAuthorityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code,\n            BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n    }\n\n    /**\n     * Creates an error thrown if cache type is invalid.\n     */\n    static createInvalidCacheTypeError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\n    }\n\n    /**\n     * Create an error thrown when login and token requests are made from a non-browser environment\n     */\n    static createNonBrowserEnvironmentError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n    }\n\n    /**\n     * Create an error thrown when indexDB database is not open\n     */\n    static createDatabaseNotOpenError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to no internet\n     */\n    static createNoNetworkConnectivityError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n    }\n\n    /**\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\n     */\n    static createPostRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\n     */\n    static createGetRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when network client fails to parse network response\n     */\n    static createFailedToParseNetworkResponseError(endpoint: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\n    }\n\n    /**\n     * Create an error thrown when the necessary information is not available to sideload tokens \n     */\n    static createUnableToLoadTokenError(errorDetail: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\n    }\n  \n    /**\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\n     */\n    static createSigningKeyNotFoundInStorageError(keyId: string): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\n    }\n\n    /**\n     * Create an error when IndexedDB is unavailable\n     */\n    static createDatabaseUnavailableError(): BrowserAuthError {\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { PkceCodes } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\n\n// Constant byte array length\nconst RANDOM_BYTE_ARR_LENGTH = 32;\n\n/**\n * Class which exposes APIs to generate PKCE codes and code verifiers.\n */\nexport class PkceGenerator {\n\n    private base64Encode: Base64Encode;\n    private cryptoObj: BrowserCrypto;\n\n    constructor(cryptoObj: BrowserCrypto) {\n        this.base64Encode = new Base64Encode();\n        this.cryptoObj = cryptoObj;\n    }\n\n    /**\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\n     */\n    async generateCodes(): Promise<PkceCodes> {\n        const codeVerifier = this.generateCodeVerifier();\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\n        return {\n            verifier: codeVerifier,\n            challenge: codeChallenge\n        };\n    }\n\n    /**\n     * Generates a random 32 byte buffer and returns the base64\n     * encoded string to be used as a PKCE Code Verifier\n     */\n    private generateCodeVerifier(): string {\n        try {\n            // Generate random values as utf-8\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\n            this.cryptoObj.getRandomValues(buffer);\n            // encode verifier as base64\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncodeArr(buffer);\n            return pkceCodeVerifierB64;\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n\n    /**\n     * Creates a base64 encoded PKCE Code Challenge string from the\n     * hash created from the PKCE Code Verifier supplied\n     */\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\n        try {\n            // hashed verifier\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\n            // encode hash as base64\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\n        } catch (e) {\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\nimport { Logger } from \"..\";\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\n\n/**\n * This class implements functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\nexport class BrowserCrypto {\n\n    private _keygenAlgorithmOptions: RsaHashedKeyGenParams;\n    private logger: Logger;\n\n    constructor(logger: Logger) {\n        this.logger = logger;\n        \n        if (!(this.hasCryptoAPI())) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\n        }\n\n        this._keygenAlgorithmOptions = {\n            name: PKCS1_V15_KEYGEN_ALG,\n            hash: S256_HASH_ALG,\n            modulusLength: MODULUS_LENGTH,\n            publicExponent: PUBLIC_EXPONENT\n        };\n    }\n\n    /**\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n     * @param dataString \n     */\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\n\n        return this.hasIECrypto() ? this.getMSCryptoDigest(S256_HASH_ALG, data) : this.getSubtleCryptoDigest(S256_HASH_ALG, data);\n    }\n\n    /**\n     * Populates buffer with cryptographically random values.\n     * @param dataBuffer \n     */\n    getRandomValues(dataBuffer: Uint8Array): void {\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\n        if (!cryptoObj.getRandomValues) {\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\n        }\n        cryptoObj.getRandomValues(dataBuffer);\n    }\n\n    /**\n     * Generates a keypair based on current keygen algorithm config.\n     * @param extractable \n     * @param usages \n     */\n    async generateKeyPair(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\n        return (\n            this.hasIECrypto() ? \n                this.msCryptoGenerateKey(extractable, usages) \n                : window.crypto.subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages)\n        ) as Promise<CryptoKeyPair>;\n    }\n\n    /**\n     * Export key as Json Web Key (JWK)\n     * @param key \n     * @param format \n     */\n    async exportJwk(key: CryptoKey): Promise<JsonWebKey> {\n        return this.hasIECrypto() ? this.msCryptoExportJwk(key) : window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\n    }\n\n    /**\n     * Imports key as Json Web Key (JWK), can set extractable and usages.\n     * @param key \n     * @param format \n     * @param extractable \n     * @param usages \n     */\n    async importJwk(key: JsonWebKey, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\n        const keyString = BrowserCrypto.getJwkString(key);\n        const keyBuffer = BrowserStringUtils.stringToArrayBuffer(keyString);\n\n        return this.hasIECrypto() ? \n            this.msCryptoImportKey(keyBuffer, extractable, usages) \n            : window.crypto.subtle.importKey(KEY_FORMAT_JWK, key, this._keygenAlgorithmOptions, extractable, usages);\n    }\n\n    /**\n     * Signs given data with given key\n     * @param key \n     * @param data \n     */\n    async sign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\n        return this.hasIECrypto() ?\n            this.msCryptoSign(key, data)\n            : window.crypto.subtle.sign(this._keygenAlgorithmOptions, key, data);\n    }\n\n    /**\n     * Check whether IE crypto or other browser cryptography is available.\n     */\n    private hasCryptoAPI(): boolean {\n        return this.hasIECrypto() || this.hasBrowserCrypto();\n    }\n\n    /**\n     * Checks whether IE crypto (AKA msCrypto) is available.\n     */\n    private hasIECrypto(): boolean {\n        return \"msCrypto\" in window;\n    }\n\n    /**\n     * Check whether browser crypto is available.\n     */\n    private hasBrowserCrypto(): boolean {\n        return \"crypto\" in window;\n    }\n\n    /**\n     * Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return window.crypto.subtle.digest(algorithm, data);\n    }\n\n    /**\n     * IE Helper function for SHA digest.\n     * @param algorithm \n     * @param data \n     */\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\n                resolve(e.target.result);\n            });\n            digestOperation.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for generating a keypair\n     * @param extractable \n     * @param usages \n     */\n    private async msCryptoGenerateKey(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msGenerateKey = window[\"msCrypto\"].subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages);\n            msGenerateKey.addEventListener(\"complete\", (e: { target: { result: CryptoKeyPair | PromiseLike<CryptoKeyPair>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msGenerateKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for exportKey\n     * @param key \n     * @param format \n     */\n    private async msCryptoExportJwk(key: CryptoKey): Promise<JsonWebKey> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msExportKey = window[\"msCrypto\"].subtle.exportKey(KEY_FORMAT_JWK, key);\n            msExportKey.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer; }; }) => {\n                const resultBuffer: ArrayBuffer = e.target.result;\n\n                const resultString = BrowserStringUtils.utf8ArrToString(new Uint8Array(resultBuffer))\n                    .replace(/\\r/g, \"\")\n                    .replace(/\\n/g, \"\")\n                    .replace(/\\t/g, \"\")\n                    .split(\" \").join(\"\")\n                    .replace(\"\\u0000\", \"\");\n\n                try {\n                    resolve(JSON.parse(resultString));\n                } catch (e) {\n                    reject(e);\n                }\n            });\n\n            msExportKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for importKey\n     * @param key \n     * @param format \n     * @param extractable \n     * @param usages \n     */\n    private async msCryptoImportKey(keyBuffer: ArrayBuffer, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msImportKey = window[\"msCrypto\"].subtle.importKey(KEY_FORMAT_JWK, keyBuffer, this._keygenAlgorithmOptions, extractable, usages);\n            msImportKey.addEventListener(\"complete\", (e: { target: { result: CryptoKey | PromiseLike<CryptoKey>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msImportKey.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * IE Helper function for sign JWT\n     * @param key \n     * @param data \n     */\n    private async msCryptoSign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\n        return new Promise((resolve: Function, reject: Function) => {\n            const msSign = window[\"msCrypto\"].subtle.sign(this._keygenAlgorithmOptions, key, data);\n            msSign.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\n                resolve(e.target.result);\n            });\n\n            msSign.addEventListener(\"error\", (error: string) => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Returns stringified jwk.\n     * @param jwk \n     */\n    static getJwkString(jwk: JsonWebKey): string {\n        return JSON.stringify(jwk, Object.keys(jwk).sort());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { DB_NAME, DB_TABLE_NAME, DB_VERSION } from \"../utils/BrowserConstants\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\n\ninterface IDBOpenDBRequestEvent extends Event {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBRequestEvent extends Event {\n    target: IDBRequest & EventTarget;\n}\n\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\n    private db: IDBDatabase|undefined;\n    private dbName: string;\n    private tableName: string;\n    private version: number;\n    private dbOpen: boolean;\n\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\"upgradeneeded\", (e: IDBVersionChangeEvent) => {\n                const event = e as IDBOpenOnUpgradeNeededEvent;\n                event.target.result.createObjectStore(this.tableName);\n            });\n            openDB.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBOpenDBRequestEvent;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\",  () => reject(BrowserAuthError.createDatabaseUnavailableError()));\n        });\n    }\n\n    /**\n     * Opens database if it's not already open\n     */\n    private async validateDbIsOpen(): Promise<void> {\n        if (!this.dbOpen) {\n            return await this.open();\n        }\n    }\n\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key \n     */\n    async getItem(key: string): Promise<T | null> {\n        await this.validateDbIsOpen();\n\n        return new Promise<T>((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n            dbGet.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                resolve(event.target.result);\n            });\n            dbGet.addEventListener(\"error\", (e) => reject(e));\n        });\n    }\n\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key \n     * @param payload \n     */\n    async setItem(key: string, payload: T): Promise<void> {\n        await this.validateDbIsOpen();\n\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n\n            const objectStore = transaction.objectStore(this.tableName);\n\n            const dbPut = objectStore.put(payload, key);\n\n            dbPut.addEventListener(\"success\", () => resolve());\n            dbPut.addEventListener(\"error\", (e) => reject(e));\n        });\n    }\n\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        await this.validateDbIsOpen();\n\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n            dbDelete.addEventListener(\"success\", () => resolve());\n            dbDelete.addEventListener(\"error\", (e) => reject(e));\n        });\n    }\n\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys(): Promise<string[]> {\n        await this.validateDbIsOpen();\n\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                resolve(event.target.result);\n            });\n            dbGetKeys.addEventListener(\"error\",  (e: Event) => reject(e));\n        });\n    }\n\n    /**\n     * \n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key: string): Promise<boolean> {\n        await this.validateDbIsOpen();\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\n            }\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                resolve(event.target.result === 1);\n            });\n            dbContainsKey.addEventListener(\"error\", (e: Event) => reject(e));\n        });\n    }\n\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase(): Promise<boolean> {\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n            deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"error\", () => reject(false));\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear() :void {\n        this.cache.clear();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserAuthError, BrowserAuthErrorMessage, Logger } from \"..\";\nimport { DatabaseStorage } from \"./DatabaseStorage\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\n\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\n    private inMemoryCache: MemoryStorage<T>;\n    private indexedDBCache: DatabaseStorage<T>;\n    private logger: Logger;\n\n    constructor(logger: Logger) {\n        this.inMemoryCache = new MemoryStorage<T>();\n        this.indexedDBCache = new DatabaseStorage<T>();\n        this.logger = logger;\n    }\n\n    private handleDatabaseAccessError(error: unknown): void {\n        if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.databaseUnavailable.code) {\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key \n     */\n    async getItem(key: string): Promise<T | null> {\n        const item = this.inMemoryCache.getItem(key);\n        if(!item) {\n            try {\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.getItem(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key \n     * @param value \n     */\n    async setItem(key: string, value: T): Promise<void> {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key \n     */\n    async removeItem(key: string): Promise<void> {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the \n     * asynchronous storage object.\n     */\n    async getKeys(): Promise<string[]> {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\n                return await this.indexedDBCache.getKeys();\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key \n     */\n    async containsKey(key: string): Promise<boolean> {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if(!containsKey) {\n            try {\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\n                return await this.indexedDBCache.containsKey(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n\n    /**\n     * Clears in-memory Map and tries to delete the IndexedDB database.\n     */\n    async clear(): Promise<void> {\n        this.inMemoryCache.clear();\n        try {\n            await this.indexedDBCache.deleteDatabase();\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, Logger, PkceCodes, SignedHttpRequest, SignedHttpRequestParameters } from \"@azure/msal-common\";\nimport { GuidGenerator } from \"./GuidGenerator\";\nimport { Base64Encode } from \"../encode/Base64Encode\";\nimport { Base64Decode } from \"../encode/Base64Decode\";\nimport { PkceGenerator } from \"./PkceGenerator\";\nimport { BrowserCrypto } from \"./BrowserCrypto\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { AsyncMemoryStorage } from \"../cache/AsyncMemoryStorage\";\n\nexport type CachedKeyPair = {\n    publicKey: CryptoKey,\n    privateKey: CryptoKey,\n    requestMethod?: string,\n    requestUri?: string\n};\n\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nexport type CryptoKeyStore = {\n    asymmetricKeys: AsyncMemoryStorage<CachedKeyPair>;\n    symmetricKeys: AsyncMemoryStorage<CryptoKey>;\n};\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n\n    private browserCrypto: BrowserCrypto;\n    private guidGenerator: GuidGenerator;\n    private b64Encode: Base64Encode;\n    private b64Decode: Base64Decode;\n    private pkceGenerator: PkceGenerator;\n    private logger: Logger;\n\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\n    private static EXTRACTABLE: boolean = true;\n    private cache: CryptoKeyStore;\n\n    constructor(logger: Logger) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        this.browserCrypto = new BrowserCrypto(this.logger);\n        this.b64Encode = new Base64Encode();\n        this.b64Decode = new Base64Decode();\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\n        this.cache = {\n            asymmetricKeys: new AsyncMemoryStorage<CachedKeyPair>(this.logger),\n            symmetricKeys: new AsyncMemoryStorage<CryptoKey>(this.logger)\n        };\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return this.guidGenerator.generateGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input \n     */\n    base64Encode(input: string): string {\n        return this.b64Encode.encode(input);\n    }    \n    \n    /**\n     * Decodes input string from base64.\n     * @param input \n     */\n    base64Decode(input: string): string {\n        return this.b64Decode.decode(input);\n    }\n\n    /**\n     * Generates PKCE codes used in Authorization Code Flow.\n     */\n    async generatePkceCodes(): Promise<PkceCodes> {\n        return this.pkceGenerator.generateCodes();\n    }\n\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string> {\n        // Generate Keypair\n        const keyPair: CryptoKeyPair = await this.browserCrypto.generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\n\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.publicKey);\n        \n        const pubKeyThumprintObj: JsonWebKey = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n\n        };\n\n        const publicJwkString: string = BrowserCrypto.getJwkString(pubKeyThumprintObj);\n        const publicJwkBuffer: ArrayBuffer = await this.browserCrypto.sha256Digest(publicJwkString);\n        const publicJwkHash: string = this.b64Encode.urlEncodeArr(new Uint8Array(publicJwkBuffer));\n\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.privateKey);\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey: CryptoKey = await this.browserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(\n            publicJwkHash, \n            {\n                privateKey: unextractablePrivateKey,\n                publicKey: keyPair.publicKey,\n                requestMethod: request.resourceRequestMethod,\n                requestUri: request.resourceRequestUri\n            }\n        );\n\n        return publicJwkHash;\n    }\n\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid \n     */\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore(): Promise<boolean> {\n        const dataStoreNames = Object.keys(this.cache);\n        const databaseStorage = this.cache[dataStoreNames[0]];\n        return databaseStorage ? await databaseStorage.deleteDatabase() : false;\n    }\n\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload \n     * @param kid \n     */\n    async signJwt(payload: SignedHttpRequest, kid: string): Promise<string> {\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n        \n        if (!cachedKeyPair) {\n            throw BrowserAuthError.createSigningKeyNotFoundInStorageError(kid);\n        }\n\n        // Get public key as JWK\n        const publicKeyJwk = await this.browserCrypto.exportJwk(cachedKeyPair.publicKey);\n        const publicKeyJwkString = BrowserCrypto.getJwkString(publicKeyJwk);\n\n        // Generate header\n        const header = {\n            alg: publicKeyJwk.alg,\n            type: KEY_FORMAT_JWK\n        };\n        const encodedHeader = this.b64Encode.urlEncode(JSON.stringify(header));\n\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString)\n        };\n        const encodedPayload = this.b64Encode.urlEncode(JSON.stringify(payload));\n\n        // Form token string\n        const tokenString = `${encodedHeader}.${encodedPayload}`;\n\n        // Sign token\n        const tokenBuffer = BrowserStringUtils.stringToArrayBuffer(tokenString);\n        const signatureBuffer = await this.browserCrypto.sign(cachedKeyPair.privateKey, tokenBuffer);\n        const encodedSignature = this.b64Encode.urlEncodeArr(new Uint8Array(signatureBuffer));\n\n        return `${tokenString}.${encodedSignature}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"../error/AuthError\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { SignedHttpRequest } from \"./SignedHttpRequest\";\n\n/**\n * The PkceCodes type describes the structure\n * of objects that contain PKCE code\n * challenge and verifier pairs\n */\nexport type PkceCodes = {\n    verifier: string,\n    challenge: string\n};\n\nexport type SignedHttpRequestParameters = Pick<BaseAuthRequest, \"resourceRequestMethod\" | \"resourceRequestUri\" | \"shrClaims\" | \"shrNonce\">;\n\n/**\n * Interface for crypto functions used by library\n */\nexport interface ICrypto {\n    /**\n     * Creates a guid randomly.\n     */\n    createNewGuid(): string;\n    /**\n     * base64 Encode string\n     * @param input \n     */\n    base64Encode(input: string): string;\n    /**\n     * base64 decode string\n     * @param input \n     */\n    base64Decode(input: string): string;\n    /**\n     * Generate PKCE codes for OAuth. See RFC here: https://tools.ietf.org/html/rfc7636\n     */\n    generatePkceCodes(): Promise<PkceCodes>;\n    /**\n     * Generates an JWK RSA S256 Thumbprint\n     * @param request\n     */\n    getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string>;\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid \n     */\n    removeTokenBindingKey(kid: string): Promise<boolean>;\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    clearKeystore(): Promise<boolean>;\n    /** \n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\n     * @param accessToken \n     */\n    signJwt(payload: SignedHttpRequest, kid: string): Promise<string>;\n}\n\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\n    createNewGuid: (): string => {\n        const notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Decode: (): string => {\n        const notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    base64Encode: (): string => {\n        const notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async generatePkceCodes(): Promise<PkceCodes> {\n        const notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async getPublicKeyThumbprint(): Promise<string> {\n        const notImplErr = \"Crypto interface - getPublicKeyThumbprint() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async removeTokenBindingKey(): Promise<boolean> {\n        const notImplErr = \"Crypto interface - removeTokenBindingKey() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async clearKeystore(): Promise<boolean> {\n        const notImplErr = \"Crypto interface - clearKeystore() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async signJwt(): Promise<string> {\n        const notImplErr = \"Crypto interface - signJwt() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nexport class ServerError extends AuthError {\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    \"interaction_required\",\n    \"consent_required\",\n    \"login_required\"\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\"\n];\n\n/**\n * Interaction required errors defined by the SDK\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No refresh token found in the cache. Please sign-in.\"\n    }\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"InteractionRequiredAuthError\";\n\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n    }\n\n    /**\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\n     * @param errorCode \n     * @param errorString \n     * @param subError \n     */\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string) : boolean {\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n    }\n\n    /**\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\n     */\n    static createNoTokensFoundError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Separators, CredentialType, CacheType, Constants, AuthenticationScheme } from \"../../utils/Constants\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\n\n/**\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\n *\n * Key:Value Schema:\n *\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>-<scheme>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      oboAssertion: access token passed in as part of OBO request\n *      tokenType: Matches the authentication scheme for which the token was issued (i.e. Bearer or pop)\n * }\n */\nexport class CredentialEntity {\n    homeAccountId: string;\n    environment: string;\n    credentialType: CredentialType;\n    clientId: string;\n    secret: string;\n    familyId?: string;\n    realm?: string;\n    target?: string;\n    oboAssertion?: string;\n    tokenType?: AuthenticationScheme;\n    keyId?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\n    }\n\n    /**\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n     */\n    generateCredentialId(): string {\n        return CredentialEntity.generateCredentialIdForCacheKey(\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.familyId\n        );\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    generateTarget(): string {\n        return CredentialEntity.generateTargetForCacheKey(this.target);\n    }\n\n    /**\n     * generates credential key\n     */\n    generateCredentialKey(): string {\n        return CredentialEntity.generateCredentialCacheKey(\n            this.homeAccountId,\n            this.environment,\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.target,\n            this.familyId,\n            this.tokenType\n        );\n    }\n\n    /**\n     * returns the type of the cache (in this case credential)\n     */\n    generateType(): number {\n        switch (this.credentialType) {\n            case CredentialType.ID_TOKEN:\n                return CacheType.ID_TOKEN;\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                return CacheType.ACCESS_TOKEN;\n            case CredentialType.REFRESH_TOKEN:\n                return CacheType.REFRESH_TOKEN;\n            default: {\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\n            }\n        }\n    }\n\n    /**\n     * helper function to return `CredentialType`\n     * @param key\n     */\n    static getCredentialType(key: string): string {\n        // First keyword search will match all \"AccessToken\" and \"AccessToken_With_AuthScheme\" credentials\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\n            // Perform second search to differentiate between \"AccessToken\" and \"AccessToken_With_AuthScheme\" credential types\n            if (key.indexOf(CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) !== -1) {\n                return CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            }\n            return CredentialType.ACCESS_TOKEN;\n        } else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\n            return CredentialType.ID_TOKEN;\n        } else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\n            return CredentialType.REFRESH_TOKEN;\n        }\n\n        return Constants.NOT_DEFINED;\n    }\n\n    /**\n     * generates credential key\n     * <home_account_id*>-\\<environment>-<credential_type>-<client_id>-<realm\\*>-<target\\*>-<scheme\\*>\n     */\n    static generateCredentialCacheKey(\n        homeAccountId: string,\n        environment: string,\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        target?: string,\n        familyId?: string,\n        tokenType?: AuthenticationScheme\n    ): string {\n        const credentialKey = [\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\n            this.generateTargetForCacheKey(target)\n        ];\n\n        // PoP Tokens and SSH certs include scheme in cache key\n        if (tokenType && tokenType !== AuthenticationScheme.BEARER) {\n            credentialKey.push(tokenType.toLowerCase());\n        }\n\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * generates Account Id for keys\n     * @param homeAccountId\n     * @param environment\n     */\n    private static generateAccountIdForCacheKey(\n        homeAccountId: string,\n        environment: string\n    ): string {\n        const accountId: Array<string> = [homeAccountId, environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generates Credential Id for keys\n     * @param credentialType\n     * @param realm\n     * @param clientId\n     * @param familyId\n     */\n    private static generateCredentialIdForCacheKey(\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        familyId?: string\n    ): string {\n        const clientOrFamilyId =\n            credentialType === CredentialType.REFRESH_TOKEN\n                ? familyId || clientId\n                : clientId;\n        const credentialId: Array<string> = [\n            credentialType,\n            clientOrFamilyId,\n            realm || \"\",\n        ];\n\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    private static generateTargetForCacheKey(scopes?: string): string {\n        return (scopes || \"\").toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientAuthError } from \"./ClientAuthError\";\n\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n */\nexport const ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\"\n    },\n    claimsRequestParsingError: {\n        code: \"claims_request_parsing_error\",\n        desc: \"Could not parse the given claims request object.\"\n    },\n    authorityUriInsecure: {\n        code: \"authority_uri_insecure\",\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\n    },\n    urlParseError: {\n        code: \"url_parse_error\",\n        desc: \"URL could not be parsed into appropriate segments.\"\n    },\n    urlEmptyError: {\n        code: \"empty_url_error\",\n        desc: \"URL was empty or null.\"\n    },\n    emptyScopesError: {\n        code: \"empty_input_scopes_error\",\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\n    },\n    nonArrayScopesError: {\n        code: \"nonarray_input_scopes_error\",\n        desc: \"Scopes cannot be passed as non-array.\"\n    },\n    clientIdSingleScopeError: {\n        code: \"clientid_input_scopes_error\",\n        desc: \"Client ID can only be provided as a single scope.\"\n    },\n    invalidPrompt: {\n        code: \"invalid_prompt_value\",\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create' and 'none'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    },\n    invalidClaimsRequest: {\n        code: \"invalid_claims\",\n        desc: \"Given claims parameter must be a stringified JSON object.\"\n    },\n    tokenRequestEmptyError: {\n        code: \"token_request_empty\",\n        desc: \"Token request was empty and not found in cache.\"\n    },\n    logoutRequestEmptyError: {\n        code: \"logout_request_empty\",\n        desc: \"The logout request was null or undefined.\"\n    },\n    invalidCodeChallengeMethod: {\n        code: \"invalid_code_challenge_method\",\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\n    },\n    invalidCodeChallengeParams: {\n        code: \"pkce_params_missing\",\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: \"invalid_cloud_discovery_metadata\",\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\"\n    },\n    invalidAuthorityMetadata: {\n        code: \"invalid_authority_metadata\",\n        desc: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\"\n    },\n    untrustedAuthority: {\n        code: \"untrusted_authority\",\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\n    },\n    missingSshJwk: {\n        code: \"missing_ssh_jwk\",\n        desc: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\"\n    },\n    missingSshKid: {\n        code: \"missing_ssh_kid\",\n        desc: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\"\n    },\n    missingNonceAuthenticationHeader: {\n        code: \"missing_nonce_authentication_header\",\n        desc: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\"\n    },\n    invalidAuthenticationHeader: {\n        code: \"invalid_authentication_header\",\n        desc: \"Invalid authentication header provided\"\n    }\n};\n\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nexport class ClientConfigurationError extends ClientAuthError {\n\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code,\n            ClientConfigurationErrorMessage.redirectUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code,\n            ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\n    }\n\n    /**\n     * Creates an error thrown when the claims request could not be successfully parsed\n     */\n    static createClaimsRequestParsingError(claimsRequestParseError: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code,\n            `${ClientConfigurationErrorMessage.claimsRequestParsingError.desc} Given value: ${claimsRequestParseError}`);\n    }\n\n    /**\n     * Creates an error thrown if authority uri is given an insecure protocol.\n     * @param urlString\n     */\n    static createInsecureAuthorityUriError(urlString: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code,\n            `${ClientConfigurationErrorMessage.authorityUriInsecure.desc} Given URI: ${urlString}`);\n    }\n\n    /**\n     * Creates an error thrown if URL string does not parse into separate segments.\n     * @param urlString\n     */\n    static createUrlParseError(urlParseError: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code,\n            `${ClientConfigurationErrorMessage.urlParseError.desc} Given Error: ${urlParseError}`);\n    }\n\n    /**\n     * Creates an error thrown if URL string is empty or null.\n     * @param urlString\n     */\n    static createUrlEmptyError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code,\n            ClientConfigurationErrorMessage.urlEmptyError.desc);\n    }\n\n    /**\n     * Error thrown when scopes are empty.\n     * @param scopesValue\n     */\n    static createEmptyScopesArrayError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code,\n            `${ClientConfigurationErrorMessage.emptyScopesError.desc}`);\n    }\n\n    /**\n     * Error thrown when client id scope is not provided as single scope.\n     * @param inputScopes\n     */\n    static createClientIdSingleScopeError(inputScopes: Array<string>): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code,\n            `${ClientConfigurationErrorMessage.clientIdSingleScopeError.desc} Given Scopes: ${inputScopes}`);\n    }\n\n    /**\n     * Error thrown when prompt is not an allowed type.\n     * @param promptValue\n     */\n    static createInvalidPromptError(promptValue: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code,\n            `${ClientConfigurationErrorMessage.invalidPrompt.desc} Given value: ${promptValue}`);\n    }\n\n    /**\n     * Creates error thrown when claims parameter is not a stringified JSON object\n     */\n    static createInvalidClaimsRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code,\n            ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\n    }\n\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyLogoutRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.logoutRequestEmptyError.code,\n            ClientConfigurationErrorMessage.logoutRequestEmptyError.desc\n        );\n    }\n\n    /**\n     * Throws error when token request is empty and nothing cached in storage.\n     */\n    static createEmptyTokenRequestError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.tokenRequestEmptyError.code,\n            ClientConfigurationErrorMessage.tokenRequestEmptyError.desc\n        );\n    }\n\n    /**\n     * Throws error when an invalid code_challenge_method is passed by the user\n     */\n    static createInvalidCodeChallengeMethodError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code,\n            ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc\n        );\n    }\n\n    /**\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\n     */\n    static createInvalidCodeChallengeParamsError(): ClientConfigurationError {\n        return new ClientConfigurationError(\n            ClientConfigurationErrorMessage.invalidCodeChallengeParams.code,\n            ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc\n        );\n    }\n\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidCloudDiscoveryMetadataError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code,\n            ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\n    }\n\n    /**\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\n     */\n    static createInvalidAuthorityMetadataError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code,\n            ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\n    }\n\n    /**\n     * Throws error when provided authority is not a member of the trusted host list\n     */\n    static createUntrustedAuthorityError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code,\n            ClientConfigurationErrorMessage.untrustedAuthority.desc);\n    }\n    /*\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key is omitted from the request\n     */\n    static createMissingSshJwkError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshJwk.code,\n            ClientConfigurationErrorMessage.missingSshJwk.desc);\n    }\n\n    /**\n     * Throws an error when the authentication scheme is set to SSH but the SSH public key ID is omitted from the request\n     */\n    static createMissingSshKidError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingSshKid.code,\n            ClientConfigurationErrorMessage.missingSshKid.desc);\n    }\n\n    /**\n     * Throws error when provided headers don't contain a header that a server nonce can be extracted from\n     */\n    static createMissingNonceAuthenticationHeadersError(): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.code,\n            ClientConfigurationErrorMessage.missingNonceAuthenticationHeader.desc);\n    }\n\n    /**\n     * Throws error when a provided header is invalid in any way\n     */\n    static createInvalidAuthenticationHeaderError(invalidHeaderName: string, details: string): ClientConfigurationError {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthenticationHeader.code,\n            `${ClientConfigurationErrorMessage.invalidAuthenticationHeader.desc}. Invalid header: ${invalidHeaderName}. Details: ${details}`);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { OIDC_SCOPES } from \"../utils/Constants\";\n\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nexport class ScopeSet {\n    // Scopes as a Set of strings\n    private scopes: Set<string>;\n\n    constructor(inputScopes: Array<string>) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes ? StringUtils.trimArrayEntries([...inputScopes]) : [];\n        const filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\n\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach(scope => this.scopes.add(scope));\n    }\n\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString: string): ScopeSet {\n        const scopeString = inputScopeString || \"\";\n        const inputScopes: Array<string> = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    private validateInputScopes(inputScopes: Array<string>): void {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw ClientConfigurationError.createEmptyScopesArrayError();\n        }\n    }\n\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope: string): boolean {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return !StringUtils.isEmpty(scope) ? lowerCaseScopesSet.scopes.has(scope.toLowerCase()) : false;\n    }\n\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet: ScopeSet): boolean {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(scope => this.containsScope(scope)));\n    }\n\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes(): boolean {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n\n        return this.scopes.size === defaultScopeCount;\n    }\n\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope: string): void {\n        if (!StringUtils.isEmpty(newScope)) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes: Array<string>): void {\n        try {\n            newScopes.forEach(newScope => this.appendScope(newScope));\n        } catch (e) {\n            throw ClientAuthError.createAppendScopeSetError(e);\n        }\n    }\n\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope: string): void {\n        if (StringUtils.isEmpty(scope)) {\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\n        }\n        this.scopes.delete(scope.trim());\n    }\n\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes(): void {\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\n        if (!otherScopes) {\n            throw ClientAuthError.createEmptyInputScopeSetError();\n        }\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach(scope => unionScopes.add(scope.toLowerCase()));\n        this.scopes.forEach(scope => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\n        if (!otherScopes) {\n            throw ClientAuthError.createEmptyInputScopeSetError();\n        }\n        \n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\n    }\n\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount(): number {\n        return this.scopes.size;\n    }\n\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray(): Array<string> {\n        const array: Array<string> = [];\n        this.scopes.forEach(val => array.push(val));\n        return array;\n    }\n\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes(): string {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return \"\";\n    }\n\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase(): string {\n        return this.printScopes().toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims\";\nimport { DecodedAuthToken } from \"./DecodedAuthToken\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ICrypto } from \"../crypto/ICrypto\";\n\n/**\n * JWT Token representation class. Parses token string and generates claims object.\n */\nexport class AuthToken {\n\n    // Raw Token string\n    rawToken: string;\n    // Claims inside token\n    claims: TokenClaims;\n    constructor(rawToken: string, crypto: ICrypto) {\n        if (StringUtils.isEmpty(rawToken)) {\n            throw ClientAuthError.createTokenNullOrEmptyError(rawToken);\n        }\n\n        this.rawToken = rawToken;\n        this.claims = AuthToken.extractTokenClaims(rawToken, crypto);\n    }\n\n    /**\n     * Extract token by decoding the rawToken\n     *\n     * @param encodedToken\n     */\n    static extractTokenClaims(encodedToken: string, crypto: ICrypto): TokenClaims {\n\n        const decodedToken: DecodedAuthToken = StringUtils.decodeAuthToken(encodedToken);\n\n        // token will be decoded to get the username\n        try {\n            const base64TokenPayload = decodedToken.JWSPayload;\n\n            // base64Decode() should throw an error if there is an issue\n            const base64Decoded = crypto.base64Decode(base64TokenPayload);\n            return JSON.parse(base64Decoded) as TokenClaims;\n        } catch (err) {\n            throw ClientAuthError.createTokenParsingError(err);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountCache, AccountFilter, CredentialFilter, CredentialCache, ValidCredentialType, AppMetadataFilter, AppMetadataCache } from \"./utils/CacheTypes\";\nimport { CacheRecord } from \"./entities/CacheRecord\";\nimport { CacheSchemaType, CredentialType, Constants, APP_METADATA, THE_FAMILY_ID, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme } from \"../utils/Constants\";\nimport { CredentialEntity } from \"./entities/CredentialEntity\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AccountEntity } from \"./entities/AccountEntity\";\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity\";\nimport { IdTokenEntity } from \"./entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity\";\nimport { AuthError } from \"../error/AuthError\";\nimport { ICacheManager } from \"./interface/ICacheManager\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity\";\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity\";\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity\";\n\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n */\nexport abstract class CacheManager implements ICacheManager {\n    protected clientId: string;\n    protected cryptoImpl: ICrypto;\n\n    constructor(clientId: string, cryptoImpl: ICrypto) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     *  @param accountKey\n     */\n    abstract getAccount(accountKey: string): AccountEntity | null;\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    abstract setAccount(account: AccountEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param idTokenKey\n     */\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param idToken\n     */\n    abstract setIdTokenCredential(idToken: IdTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param accessTokenKey\n     */\n    abstract getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param accessToken\n     */\n    abstract setAccessTokenCredential(accessToken: AccessTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param refreshTokenKey\n     */\n    abstract getRefreshTokenCredential(refreshTokenKey: string): RefreshTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param refreshToken\n     */\n    abstract setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void;\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    abstract getServerTelemetry(serverTelemetryKey: string): ServerTelemetryEntity | null;\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    abstract setServerTelemetry(serverTelemetryKey: string, serverTelemetry: ServerTelemetryEntity): void;\n\n    /**\n     * fetch cloud discovery metadata entity from the platform cache\n     * @param key\n     */\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\n\n    /**\n     * \n     */\n    abstract getAuthorityMetadataKeys(): Array<string>;\n\n    /**\n     * set cloud discovery metadata entity to the platform cache\n     * @param key\n     * @param value\n     */\n    abstract setAuthorityMetadata(key: string, value: AuthorityMetadataEntity): void;\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    abstract getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null;\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    abstract setThrottlingCache(throttlingCacheKey: string, throttlingCache: ThrottlingEntity): void;;\n\n    /**\n     * Function to remove an item from cache given its key.\n     * @param key\n     */\n    abstract removeItem(key: string, type?: string): boolean;\n\n    /**\n     * Function which returns boolean whether cache contains a specific key.\n     * @param key\n     */\n    abstract containsKey(key: string, type?: string): boolean;\n\n    /**\n     * Function which retrieves all current keys from the cache.\n     */\n    abstract getKeys(): string[];\n\n    /**\n     * Function which clears cache.\n     */\n    abstract clear(): Promise<void>;\n\n    /**\n     * Returns all accounts in cache\n     */\n    getAllAccounts(): AccountInfo[] {\n        const currentAccounts: AccountCache = this.getAccountsFilteredBy();\n        const accountValues: AccountEntity[] = Object.keys(currentAccounts).map(accountKey => currentAccounts[accountKey]);\n        const numAccounts = accountValues.length;\n        if (numAccounts < 1) {\n            return [];\n        } else {\n            const allAccounts = accountValues.map<AccountInfo>((value) => {\n                const accountEntity = CacheManager.toObject<AccountEntity>(new AccountEntity(), value);\n                const accountInfo = accountEntity.getAccountInfo();\n                const idToken = this.readIdTokenFromCache(this.clientId, accountInfo);\n                if (idToken && !accountInfo.idTokenClaims) {\n                    accountInfo.idTokenClaims = new AuthToken(idToken.secret, this.cryptoImpl).claims;\n                }\n\n                return accountInfo;\n                \n            });\n            return allAccounts;\n        }\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(cacheRecord: CacheRecord): Promise<void> {\n        if (!cacheRecord) {\n            throw ClientAuthError.createNullOrUndefinedCacheRecord();\n        }\n\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n\n        if (!!cacheRecord.idToken) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n\n        if (!!cacheRecord.accessToken) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n\n        if (!!cacheRecord.refreshToken) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    private async saveAccessToken(credential: AccessTokenEntity): Promise<void> {\n        const currentTokenCache = this.getCredentialsFilteredBy({\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType\n        });\n\n        const currentScopes = ScopeSet.fromString(credential.target);\n        const currentAccessTokens: AccessTokenEntity[] = Object.keys(currentTokenCache.accessTokens).map(key => currentTokenCache.accessTokens[key]);\n\n        if (currentAccessTokens) {\n            const removedAccessTokens: Array<Promise<boolean>> = [];\n            currentAccessTokens.forEach((tokenEntity) => {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeCredential(tokenEntity));\n                }\n            });\n            await Promise.all(removedAccessTokens);\n        }\n        this.setAccessTokenCredential(credential);\n    }\n\n    /**\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param homeAccountId\n     * @param environment\n     * @param realm\n     */\n    getAccountsFilteredBy(accountFilter?: AccountFilter): AccountCache {\n        return this.getAccountsFilteredByInternal(\n            accountFilter ? accountFilter.homeAccountId : \"\",\n            accountFilter ? accountFilter.environment : \"\",\n            accountFilter ? accountFilter.realm : \"\"\n        );\n    }\n\n    /**\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param homeAccountId\n     * @param environment\n     * @param realm\n     */\n    private getAccountsFilteredByInternal(\n        homeAccountId?: string,\n        environment?: string,\n        realm?: string\n    ): AccountCache {\n        const allCacheKeys = this.getKeys();\n        const matchingAccounts: AccountCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            const entity: AccountEntity | null = this.getAccount(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!homeAccountId && !this.matchHomeAccountId(entity, homeAccountId)) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!realm && !this.matchRealm(entity, realm)) {\n                return;\n            }\n\n            matchingAccounts[cacheKey] = entity;\n        });\n\n        return matchingAccounts;\n    }\n\n    /**\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\n     * @param homeAccountId\n     * @param environment\n     * @param credentialType\n     * @param clientId\n     * @param realm\n     * @param target\n     */\n    getCredentialsFilteredBy(filter: CredentialFilter): CredentialCache {\n        return this.getCredentialsFilteredByInternal(\n            filter.homeAccountId,\n            filter.environment,\n            filter.credentialType,\n            filter.clientId,\n            filter.familyId,\n            filter.realm,\n            filter.target,\n            filter.oboAssertion,\n            filter.tokenType,\n            filter.keyId\n        );\n    }\n\n    /**\n     * Support function to help match credentials\n     * @param homeAccountId\n     * @param environment\n     * @param credentialType\n     * @param clientId\n     * @param realm\n     * @param target\n     * @param oboAssertion\n     * @param tokenType\n     */\n    private getCredentialsFilteredByInternal(\n        homeAccountId?: string,\n        environment?: string,\n        credentialType?: string,\n        clientId?: string,\n        familyId?: string,\n        realm?: string,\n        target?: string,\n        oboAssertion?: string,\n        tokenType?: AuthenticationScheme,\n        keyId?: string\n    ): CredentialCache {\n        const allCacheKeys = this.getKeys();\n        const matchingCredentials: CredentialCache = {\n            idTokens: {},\n            accessTokens: {},\n            refreshTokens: {},\n        };\n        \n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-credential type cache entities\n            const credType = CredentialEntity.getCredentialType(cacheKey);\n\n            if (credType === Constants.NOT_DEFINED) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getSpecificCredential(cacheKey, credType);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!oboAssertion && !this.matchOboAssertion(entity, oboAssertion)) {\n                return;\n            }\n\n            if (!!homeAccountId && !this.matchHomeAccountId(entity, homeAccountId)) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!realm && !this.matchRealm(entity, realm)) {\n                return;\n            }\n\n            if (!!credentialType && !this.matchCredentialType(entity, credentialType)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            if (!!familyId && !this.matchFamilyId(entity, familyId)) {\n                return;\n            }\n\n            /*\n             * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n             * Resource specific refresh tokens case will be added when the support is deemed necessary\n             */\n            if (!!target && !this.matchTarget(entity, target)) {\n                return;\n            }\n\n            // Access Token with Auth Scheme specific matching\n            if (credentialType === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\n                if(!!tokenType && !this.matchTokenType(entity, tokenType)) {\n                    return;\n                }\n\n                switch (tokenType) {\n                    case AuthenticationScheme.POP:\n                        // This check avoids matching outdated POP tokens that don't have the <-scheme> in the cache key\n                        if(cacheKey.indexOf(AuthenticationScheme.POP) === -1) {\n                            // AccessToken_With_AuthScheme that doesn't have \"-pop\" in the key is outdated and needs to be removed\n                            this.removeItem(cacheKey, CacheSchemaType.CREDENTIAL);\n                            return;\n                        }\n                        break;\n                    case AuthenticationScheme.SSH:\n                        // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n                        if(keyId && !this.matchKeyId(entity, keyId)) {\n                            return;\n                        }\n                        break;\n                }\n            }\n\n            switch (credType) {\n                case CredentialType.ID_TOKEN:\n                    matchingCredentials.idTokens[cacheKey] = entity as IdTokenEntity;\n                    break;\n                case CredentialType.ACCESS_TOKEN:\n                case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                    matchingCredentials.accessTokens[cacheKey] = entity as AccessTokenEntity;\n                    break;\n                case CredentialType.REFRESH_TOKEN:\n                    matchingCredentials.refreshTokens[cacheKey] = entity as RefreshTokenEntity;\n                    break;\n            }\n        });\n\n        return matchingCredentials;\n    }\n\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\n        return this.getAppMetadataFilteredByInternal(\n            filter.environment,\n            filter.clientId,\n        );\n    }\n\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    private getAppMetadataFilteredByInternal(\n        environment?: string,\n        clientId?: string\n    ): AppMetadataCache {\n\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata: AppMetadataCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            matchingAppMetadata[cacheKey] = entity;\n\n        });\n\n        return matchingAppMetadata;\n    }\n\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (!this.isAuthorityMetadata(cacheKey) || cacheKey.indexOf(this.clientId) === -1) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n\n            matchedEntity = entity;\n\n        });\n        \n        return matchedEntity;\n    }\n\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts(): Promise<boolean> {\n        const allCacheKeys = this.getKeys();\n        const removedAccounts: Array<Promise<boolean>> = [];\n\n        allCacheKeys.forEach((cacheKey) => {\n            const entity = this.getAccount(cacheKey);\n            if (!entity) {\n                return;\n            }\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n        \n        await Promise.all(removedAccounts);\n        return true;\n    }\n\n    /**\n     * returns a boolean if the given account is removed\n     * @param account\n     */\n    async removeAccount(accountKey: string): Promise<boolean> {\n        const account = this.getAccount(accountKey);\n        if (!account) {\n            throw ClientAuthError.createNoAccountFoundError();\n        }\n        return (await this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT));\n    }\n\n    /**\n     * returns a boolean if the given account is removed\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<boolean> {\n        const allCacheKeys = this.getKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials: Array<Promise<boolean>> = [];\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-credential type cache entities\n            const credType = CredentialEntity.getCredentialType(cacheKey);\n            if (credType === Constants.NOT_DEFINED) {\n                return;\n            }\n\n            const cacheEntity = this.getSpecificCredential(cacheKey, credType);\n            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\n                removedCredentials.push(this.removeCredential(cacheEntity));\n            }\n        });\n\n        await Promise.all(removedCredentials);\n        return true;\n    }\n\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeCredential(credential: CredentialEntity): Promise<boolean> {\n        const key = credential.generateCredentialKey();\n\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (credential.credentialType.toLowerCase() === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\n            if(credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity = credential as AccessTokenEntity;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n    \n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    } catch (error) {\n                        throw ClientAuthError.createBindingKeyNotRemovedError();\n                    }\n                }\n            }\n        }\n\n        return this.removeItem(key, CacheSchemaType.CREDENTIAL);\n    }\n\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata(): boolean {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey, CacheSchemaType.APP_METADATA);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Retrieve the cached credentials into a cacherecord\n     * @param account\n     * @param clientId\n     * @param scopes\n     * @param environment\n     * @param authScheme\n     */\n    readCacheRecord(account: AccountInfo, clientId: string, scopes: ScopeSet, environment: string, authScheme: AuthenticationScheme, keyId?: string): CacheRecord {\n        const cachedAccount = this.readAccountFromCache(account);\n        const cachedIdToken = this.readIdTokenFromCache(clientId, account);\n        const cachedAccessToken = this.readAccessTokenFromCache(clientId, account, scopes, authScheme, keyId);\n        const cachedRefreshToken = this.readRefreshTokenFromCache(clientId, account, false);\n        const cachedAppMetadata = this.readAppMetadataFromCache(environment, clientId);\n\n        if (cachedAccount && cachedIdToken) {\n            cachedAccount.idTokenClaims = new AuthToken(cachedIdToken.secret, this.cryptoImpl).claims;\n        }\n\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\n        const accountKey: string = AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey);\n    }\n\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param inputRealm\n     */\n    readIdTokenFromCache(clientId: string, account: AccountInfo): IdTokenEntity | null {\n        const idTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: clientId,\n            realm: account.tenantId,\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(idTokenFilter);\n        const idTokens = Object.keys(credentialCache.idTokens).map((key) => credentialCache.idTokens[key]);\n        const numIdTokens = idTokens.length;\n\n        if (numIdTokens < 1) {\n            return null;\n        } else if (numIdTokens > 1) {\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\n        }\n\n        return idTokens[0] as IdTokenEntity;\n    }\n\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param scopes\n     * @param authScheme\n     */\n    readAccessTokenFromCache(clientId: string, account: AccountInfo, scopes: ScopeSet, authScheme: AuthenticationScheme, keyId?: string): AccessTokenEntity | null {\n        // Distinguish between Bearer and PoP/SSH token cache types\n        const credentialType = (authScheme && authScheme !== AuthenticationScheme.BEARER) ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME : CredentialType.ACCESS_TOKEN;\n\n        const accessTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId,\n            realm: account.tenantId,\n            target: scopes.printScopesLowerCase(),\n            tokenType: authScheme,\n            keyId: keyId\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(accessTokenFilter);\n\n        const accessTokens = Object.keys(credentialCache.accessTokens).map((key) => credentialCache.accessTokens[key]);\n        \n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            return null;\n        } else if (numAccessTokens > 1) {\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\n        }\n\n        return accessTokens[0] as AccessTokenEntity;\n    }\n\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param clientId\n     * @param account\n     * @param familyRT\n     */\n    readRefreshTokenFromCache(clientId: string, account: AccountInfo, familyRT: boolean): RefreshTokenEntity | null {\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: clientId,\n            familyId: id\n        };\n\n        const credentialCache: CredentialCache = this.getCredentialsFilteredBy(refreshTokenFilter);\n        const refreshTokens = Object.keys(credentialCache.refreshTokens).map((key) => credentialCache.refreshTokens[key]);\n\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n\n        return refreshTokens[0] as RefreshTokenEntity;\n    }\n\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment: string, clientId: string): AppMetadataEntity | null {\n        const appMetadataFilter: AppMetadataFilter = {\n            environment,\n            clientId,\n        };\n\n        const appMetadata: AppMetadataCache = this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(appMetadata).map((key) => appMetadata[key]);\n\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        } else if (numAppMetadata > 1) {\n            throw ClientAuthError.createMultipleMatchingAppMetadataInCacheError();\n        }\n\n        return appMetadataEntries[0] as AppMetadataEntity;\n    }\n\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment: string, clientId: string): boolean {\n        const appMetadata = this.readAppMetadataFromCache(environment, clientId);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    private matchHomeAccountId(entity: AccountEntity | CredentialEntity, homeAccountId: string): boolean {\n        return !!(entity.homeAccountId && homeAccountId === entity.homeAccountId);\n    }\n\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    private matchOboAssertion(entity: AccountEntity | CredentialEntity, oboAssertion: string): boolean {\n        return !!(entity.oboAssertion && oboAssertion === entity.oboAssertion);\n    }\n\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    private matchEnvironment(entity: AccountEntity | CredentialEntity | AppMetadataEntity, environment: string): boolean {\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (cloudMetadata && cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    private matchCredentialType(entity: CredentialEntity, credentialType: string): boolean {\n        return (entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase());\n    }\n\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    private matchClientId(entity: CredentialEntity | AppMetadataEntity, clientId: string): boolean {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    private matchFamilyId(entity: CredentialEntity | AppMetadataEntity, familyId: string): boolean {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    private matchRealm(entity: AccountEntity | CredentialEntity, realm: string): boolean {\n        return !!(entity.realm && realm === entity.realm);\n    }\n\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    private matchTarget(entity: CredentialEntity, target: string): boolean {\n        const isNotAccessTokenCredential = (entity.credentialType !== CredentialType.ACCESS_TOKEN && entity.credentialType !== CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME);\n\n        if ( isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\n        const requestTargetScopeSet: ScopeSet = ScopeSet.fromString(target);\n\n        if (!requestTargetScopeSet.containsOnlyOIDCScopes()) {\n            requestTargetScopeSet.removeOIDCScopes(); // ignore OIDC scopes\n        } else {\n            requestTargetScopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\n    }\n\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity \n     * @param tokenType \n     */\n    private matchTokenType(entity: CredentialEntity, tokenType: AuthenticationScheme): boolean {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity \n     * @param tokenType \n     */\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    private isAppMetadata(key: string): boolean {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    protected isAuthorityMetadata(key: string): boolean {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority: string): string {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n\n    /**\n     * Returns the specific credential (IdToken/AccessToken/RefreshToken) from the cache\n     * @param key\n     * @param credType\n     */\n    private getSpecificCredential(key: string, credType: string): ValidCredentialType | null {\n        switch (credType) {\n            case CredentialType.ID_TOKEN: {\n                return this.getIdTokenCredential(key);\n            }\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME: {\n                return this.getAccessTokenCredential(key);\n            }\n            case CredentialType.REFRESH_TOKEN: {\n                return this.getRefreshTokenCredential(key);\n            }\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject<T>(obj: T, json: object): T {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n\nexport class DefaultStorageClass extends CacheManager {\n    setAccount(): void {\n        const notImplErr = \"Storage interface - setAccount() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccount(): AccountEntity {\n        const notImplErr = \"Storage interface - getAccount() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setIdTokenCredential(): void {\n        const notImplErr = \"Storage interface - setIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getIdTokenCredential(): IdTokenEntity {\n        const notImplErr = \"Storage interface - getIdTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAccessTokenCredential(): void {\n        const notImplErr = \"Storage interface - setAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAccessTokenCredential(): AccessTokenEntity {\n        const notImplErr = \"Storage interface - getAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setRefreshTokenCredential(): void {\n        const notImplErr = \"Storage interface - setRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getRefreshTokenCredential(): RefreshTokenEntity {\n        const notImplErr = \"Storage interface - getRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAppMetadata(): void {\n        const notImplErr = \"Storage interface - setAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAppMetadata(): AppMetadataEntity {\n        const notImplErr = \"Storage interface - getAppMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setServerTelemetry(): void {\n        const notImplErr = \"Storage interface - setServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getServerTelemetry(): ServerTelemetryEntity {\n        const notImplErr = \"Storage interface - getServerTelemetry() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setAuthorityMetadata(): void {\n        const notImplErr = \"Storage interface - setAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\n        const notImplErr = \"Storage interface - getAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getAuthorityMetadataKeys(): Array<string> {\n        const notImplErr = \"Storage interface - getAuthorityMetadataKeys() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    setThrottlingCache(): void {\n        const notImplErr = \"Storage interface - setThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getThrottlingCache(): ThrottlingEntity {\n        const notImplErr = \"Storage interface - getThrottlingCache() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    removeItem(): boolean {\n        const notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    containsKey(): boolean {\n        const notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    getKeys(): string[] {\n        const notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n    async clear(): Promise<void> {\n        const notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * ID_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      realm: Full tenant or organizational identifier that the account belongs to\n * }\n */\nexport class IdTokenEntity extends CredentialEntity {\n    realm: string;\n\n    /**\n     * Create IdTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createIdTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        idToken: string,\n        clientId: string,\n        tenantId: string,\n        oboAssertion?: string\n    ): IdTokenEntity {\n        const idTokenEntity = new IdTokenEntity();\n\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n        idTokenEntity.homeAccountId = homeAccountId;\n        idTokenEntity.environment = environment;\n        idTokenEntity.clientId = clientId;\n        idTokenEntity.secret = idToken;\n        idTokenEntity.realm = tenantId;\n        idTokenEntity.oboAssertion = oboAssertion;\n\n        return idTokenEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isIdTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.ID_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nexport class TimeUtils {\n\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds(): number {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n    \n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn: string, offset: number): boolean {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return (offsetCurrentTimeSec > expirationSec);\n    }\n\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt \n     * @param offset \n     */\n    static wasClockTurnedBack(cachedAt: string): boolean {\n        const cachedAtSec = Number(cachedAt);\n\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay<T>(t: number, value?: T): Promise<T | void> {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType, AuthenticationScheme } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport { AuthToken } from \"../../account/AuthToken\";\nimport { ClientAuthError } from \"../../error/ClientAuthError\";\n\n/**\n * ACCESS_TOKEN Credential Type\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      cachedAt: Absolute device time when entry was created in the cache.\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\n *      keyId: used for POP and SSH tokenTypes\n *      tokenType: Type of the token issued. Usually \"Bearer\"\n * }\n */\nexport class AccessTokenEntity extends CredentialEntity {\n    realm: string;\n    target: string;\n    cachedAt: string;\n    expiresOn: string;\n    extendedExpiresOn?: string;\n    refreshOn?: string;\n    keyId?: string; // for POP and SSH tokenTypes\n    tokenType?: AuthenticationScheme;\n\n    /**\n     * Create AccessTokenEntity\n     * @param homeAccountId\n     * @param environment\n     * @param accessToken\n     * @param clientId\n     * @param tenantId\n     * @param scopes\n     * @param expiresOn\n     * @param extExpiresOn\n     */\n    static createAccessTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        accessToken: string,\n        clientId: string,\n        tenantId: string,\n        scopes: string,\n        expiresOn: number,\n        extExpiresOn: number,\n        cryptoUtils: ICrypto,\n        refreshOn?: number,\n        tokenType?: AuthenticationScheme,\n        oboAssertion?: string,\n        keyId?: string \n    ): AccessTokenEntity {\n        const atEntity: AccessTokenEntity = new AccessTokenEntity();\n\n        atEntity.homeAccountId = homeAccountId;\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\n        atEntity.secret = accessToken;\n\n        const currentTime = TimeUtils.nowSeconds();\n        atEntity.cachedAt = currentTime.toString();\n\n        /*\n         * Token expiry time.\n         * This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\n         */\n        atEntity.expiresOn = expiresOn.toString();\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\n        if (refreshOn) {\n            atEntity.refreshOn = refreshOn.toString();\n        }\n\n        atEntity.environment = environment;\n        atEntity.clientId = clientId;\n        atEntity.realm = tenantId;\n        atEntity.target = scopes;\n        atEntity.oboAssertion = oboAssertion;\n\n        atEntity.tokenType = StringUtils.isEmpty(tokenType) ? AuthenticationScheme.BEARER : tokenType;\n\n        // Create Access Token With Auth Scheme instead of regular access token\n        if (atEntity.tokenType !== AuthenticationScheme.BEARER) {\n            atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            switch (atEntity.tokenType) {\n                case AuthenticationScheme.POP:\n                    // Make sure keyId is present and add it to credential\n                    const tokenClaims: TokenClaims | null = AuthToken.extractTokenClaims(accessToken, cryptoUtils);\n                    if (!tokenClaims?.cnf?.kid) {\n                        throw ClientAuthError.createTokenClaimsRequiredError();\n                    }\n                    atEntity.keyId = tokenClaims.cnf.kid;\n                    break;\n                case AuthenticationScheme.SSH:\n                    atEntity.keyId = keyId;\n            }\n        }\n\n        return atEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccessTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity.hasOwnProperty(\"target\") &&\n            (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN || entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * REFRESH_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\n *\n * Value:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n * }\n */\nexport class RefreshTokenEntity extends CredentialEntity {\n    familyId?: string;\n\n    /**\n     * Create RefreshTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createRefreshTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        refreshToken: string,\n        clientId: string,\n        familyId?: string,\n        oboAssertion?: string\n    ): RefreshTokenEntity {\n        const rtEntity = new RefreshTokenEntity();\n\n        rtEntity.clientId = clientId;\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\n        rtEntity.environment = environment;\n        rtEntity.homeAccountId = homeAccountId;\n        rtEntity.secret = refreshToken;\n        rtEntity.oboAssertion = oboAssertion;\n\n        if (familyId)\n            rtEntity.familyId = familyId;\n\n        return rtEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isRefreshTokenEntity(entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\n\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nexport class AppMetadataEntity {\n    clientId: string;\n    environment: string;\n    familyId?: string;\n\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey(): string {\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n    }\n\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(environment: string, clientId: string): string {\n        const appMetaDataKeyArray: Array<string> = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(clientId: string, environment: string, familyId?: string): AppMetadataEntity {\n        const appMetadata = new AppMetadataEntity();\n\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n\n        return appMetadata;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS } from \"../../utils/Constants\";\n\nexport class ServerTelemetryEntity {\n    failedRequests: Array<string|number>;\n    errors: string[];\n    cacheHits: number;\n\n    constructor() {\n        this.failedRequests = [];\n        this.errors = [];\n        this.cacheHits = 0;\n    }\n\n    /**\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isServerTelemetryEntity(key: string, entity?: object): boolean {\n\n        const validateKey: boolean = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n        let validateEntity: boolean = true;\n\n        if (entity) {\n            validateEntity =\n                entity.hasOwnProperty(\"failedRequests\") &&\n                entity.hasOwnProperty(\"errors\") &&\n                entity.hasOwnProperty(\"cacheHits\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport { AUTHORITY_METADATA_CONSTANTS } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\n\nexport class AuthorityMetadataEntity {\n    aliases: Array<string>;\n    preferred_cache: string;\n    preferred_network: string;\n    canonical_authority: string;\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    aliasesFromNetwork: boolean;\n    endpointsFromNetwork: boolean;\n    expiresAt: number;\n\n    constructor() {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateCloudDiscoveryMetadata(metadata: CloudDiscoveryMetadata, fromNetwork: boolean): void {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Update the entity with new endpoints\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateEndpointMetadata(metadata: OpenIdConfigResponse, fromNetwork: boolean): void {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority \n     */\n    updateCanonicalAuthority(authority: string): void {\n        this.canonical_authority = authority;\n    }\n\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt(): void {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired(): boolean {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ThrottlingConstants } from \"../../utils/Constants\";\n\nexport class ThrottlingEntity {\n    // Unix-time value representing the expiration of the throttle\n    throttleTime: number;\n    // Information provided by the server\n    error?: string;\n    errorCodes?: Array<string>;\n    errorMessage?: string;\n    subError?: string;\n\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key: string, entity?: object): boolean {\n        \n        let validateKey: boolean = false;\n        if (key) {\n            validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n        \n        let validateEntity: boolean = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"./StringUtils\";\nimport { Constants } from \"./Constants\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * Type which defines the object that is stringified, encoded and sent in the state value.\n * Contains the following:\n * - id - unique identifier for this request\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\n * - platformState - string value sent from the platform.\n */\nexport type LibraryStateObject = {\n    id: string,\n    meta?: Record<string, string>\n};\n\n/**\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\n */\nexport type RequestStateObject = {\n    userRequestState: string,\n    libraryState: LibraryStateObject\n};\n\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nexport class ProtocolUtils {\n\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState \n     * @param randomGuid \n     */\n    static setRequestState(cryptoObj: ICrypto, userState?: string, meta?: Record<string, string>): string {\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n        return !StringUtils.isEmpty(userState) ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}` : libraryState;\n    }\n\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid \n     * @param cryptoObj \n     */\n    static generateLibraryState(cryptoObj: ICrypto, meta?: Record<string, string>): string {\n        if (!cryptoObj) {\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\n        }\n\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj: LibraryStateObject = {\n            id: cryptoObj.createNewGuid()\n        };\n\n        if (meta) {\n            stateObj.meta = meta;\n        }\n\n        const stateString = JSON.stringify(stateObj);\n\n        return cryptoObj.base64Encode(stateString);\n    }\n\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state \n     * @param cryptoObj \n     */\n    static parseRequestState(cryptoObj: ICrypto, state: string): RequestStateObject {\n        if (!cryptoObj) {\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\n        }\n\n        if (StringUtils.isEmpty(state)) {\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\n        }\n\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : \"\";\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(libraryStateString) as LibraryStateObject;\n            return {\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : \"\",\n                libraryState: libraryStateObj\n            };\n        } catch(e) {\n            throw ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport enum ProtocolMode {\n    AAD = \"AAD\",\n    OIDC = \"OIDC\"\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class BrowserStorage implements IWindowStorage<string> {\n\n    private windowStorage: Storage;\n\n    constructor(cacheLocation: string) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n\n    private validateWindowStorage(cacheLocation: string): void {\n        if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n        const storageSupported = !!window[cacheLocation];\n        if (!storageSupported) {\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n        }\n    }\n\n    getItem(key: string): string | null {\n        return this.windowStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        this.windowStorage.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.windowStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { IUri } from \"./IUri\";\nimport { AADAuthorityConstants, Constants } from \"../utils/Constants\";\n\n/**\n * Url object class which can perform various transformations on url strings.\n */\nexport class UrlString {\n\n    // internal url string field\n    private _urlString: string;\n    public get urlString(): string {\n        return this._urlString;\n    }\n    \n    constructor(url: string) {\n        this._urlString = url;\n        if (StringUtils.isEmpty(this._urlString)) {\n            // Throws error if url is empty\n            throw ClientConfigurationError.createUrlEmptyError();\n        }\n\n        if (StringUtils.isEmpty(this.getHash())) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url \n     */\n    static canonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri(): void {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        } catch (e) {\n            throw ClientConfigurationError.createUrlParseError(e);\n        }\n\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n\n        // Throw error if uri is insecure.\n        if(!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\n        }\n    }\n\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url \n     * @param queryString \n     */\n    static appendQueryString(url: string, queryString: string): string {\n        if (StringUtils.isEmpty(queryString)) {\n            return url;\n        }\n\n        return url.indexOf(\"?\") < 0 ? `${url}?${queryString}` : `${url}&${queryString}`;\n    }\n\n    /**\n     * Returns a url with the hash removed\n     * @param url \n     */\n    static removeHashFromUrl(url: string): string {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId: string): UrlString {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n\n    /**\n     * Returns the anchor part(#) of the URL\n     */\n    getHash(): string {\n        return UrlString.parseHash(this.urlString);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents(): IUri {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${this.urlString}`);\n        }\n\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7]\n        } as IUri;\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (!StringUtils.isEmpty(urlComponents.QueryString) && urlComponents.QueryString.endsWith(\"/\")) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length-1);\n        }\n        return urlComponents;\n    }\n\n    static getDomainFromUrl(url: string): string {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n\n        const match = url.match(regEx);\n\n        if (!match) {\n            throw ClientConfigurationError.createUrlParseError(`Given url string: ${url}`);\n        }\n\n        return match[2];\n    }\n\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n\n            return baseComponents.Protocol + \"//\" + baseComponents.HostNameAndPort + relativeUrl;\n        }\n        \n        return relativeUrl;\n    }\n    \n    /**\n     * Parses hash string from given string. Returns empty string if no hash symbol is found.\n     * @param hashString \n     */\n    static parseHash(hashString: string): string {\n        const hashIndex1 = hashString.indexOf(\"#\");\n        const hashIndex2 = hashString.indexOf(\"#/\");\n        if (hashIndex2 > -1) {\n            return hashString.substring(hashIndex2 + 2);\n        } else if (hashIndex1 > -1) {\n            return hashString.substring(hashIndex1 + 1);\n        }\n        return \"\";\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\n    }\n\n    /**\n     * Returns URL hash as server auth code response object.\n     */\n    static getDeserializedHash(hash: string): ServerAuthorizationCodeResponse {\n        // Check if given hash is empty\n        if (StringUtils.isEmpty(hash)) {\n            return {};\n        }\n        // Strip the # symbol if present\n        const parsedHash = UrlString.parseHash(hash);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash: ServerAuthorizationCodeResponse = StringUtils.queryStringToObject<ServerAuthorizationCodeResponse>(StringUtils.isEmpty(parsedHash) ? hash : parsedHash);\n        // Check if deserialization didn't work\n        if (!deserializedHash) {\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\n        }\n        return deserializedHash;\n    }\n\n    /**\n     * Check if the hash of the URL string contains known properties\n     */\n    static hashContainsKnownProperties(hash: string): boolean {\n        if (StringUtils.isEmpty(hash) || hash.indexOf(\"=\") < 0) {\n            // Hash doesn't contain key/value pairs\n            return false;\n        }\n\n        const parameters: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n        return !!(\n            parameters.code ||\n            parameters.error_description ||\n            parameters.error ||\n            parameters.state\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InteractionType } from \"./BrowserConstants\";\nimport { StringUtils, ClientAuthError, ICrypto, RequestStateObject, ProtocolUtils, ServerAuthorizationCodeResponse, UrlString } from \"@azure/msal-common\";\n\nexport type BrowserStateObject = {\n    interactionType: InteractionType\n};\n\nexport class BrowserProtocolUtils {\n\n    /**\n     * Extracts the BrowserStateObject from the state string.\n     * @param browserCrypto \n     * @param state \n     */\n    static extractBrowserRequestState(browserCrypto: ICrypto, state: string): BrowserStateObject | null {\n        if (StringUtils.isEmpty(state)) {\n            return null;\n        }\n\n        try {\n            const requestStateObj: RequestStateObject = ProtocolUtils.parseRequestState(browserCrypto, state);\n            return requestStateObj.libraryState.meta as BrowserStateObject;\n        } catch (e) {\n            throw ClientAuthError.createInvalidStateError(state, e);\n        }\n    }\n\n    /**\n     * Parses properties of server response from url hash\n     * @param locationHash Hash from url\n     */\n    static parseServerResponseFromHash(locationHash: string): ServerAuthorizationCodeResponse {\n        if (!locationHash) {\n            return {};\n        }\n        \n        const hashUrlString = new UrlString(locationHash);\n        return UrlString.getDeserializedHash(hashUrlString.getHash());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, PersistentCacheKeys, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AccountEntity, IdTokenEntity, AccessTokenEntity, RefreshTokenEntity, AppMetadataEntity, CacheManager, ServerTelemetryEntity, ThrottlingEntity, ProtocolUtils, Logger, AuthorityMetadataEntity, DEFAULT_CRYPTO_IMPLEMENTATION, AccountInfo, CcsCredential, CcsCredentialType, IdToken } from \"@azure/msal-common\";\nimport { CacheOptions } from \"../config/Configuration\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserCacheLocation, InteractionType, TemporaryCacheKeys, InMemoryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserStorage } from \"./BrowserStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\nimport { IWindowStorage } from \"./IWindowStorage\";\nimport { BrowserProtocolUtils } from \"../utils/BrowserProtocolUtils\";\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nexport class BrowserCacheManager extends CacheManager {\n\n    // Cache configuration, either set by user or default values.\n    private cacheConfig: Required<CacheOptions>;\n    // Window storage object (either local or sessionStorage)\n    private browserStorage: IWindowStorage<string>;\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\n    private internalStorage: MemoryStorage<string>;\n    // Temporary cache\n    private temporaryCacheStorage: IWindowStorage<string>;\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\n    private logger: Logger;\n\n    // Cookie life calculation (hours * minutes * seconds * ms)\n    private readonly COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\n    constructor(clientId: string, cacheConfig: Required<CacheOptions>, cryptoImpl: ICrypto, logger: Logger) {\n        super(clientId, cryptoImpl);\n\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.cacheLocation);\n\n        // Migrate any cache entries from older versions of MSAL.\n        this.migrateCacheEntries();\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    private setupBrowserStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(cacheLocation);\n                } catch (e) {\n                    this.logger.verbose(e);\n                    break;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                break;\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n\n    /**\n     *\n     * @param cacheLocation\n     */\n    private setupTemporaryCacheStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(BrowserCacheLocation.SessionStorage);\n                } catch (e) {\n                    this.logger.verbose(e);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    private migrateCacheEntries(): void {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\n\n        keysToMigrate.forEach((cacheKey:string, index: number) => this.migrateCacheEntry(cacheKey, values[index]));\n    }\n\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    private migrateCacheEntry(newKey: string, value: string|null): void {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    private validateAndParseJson(jsonValue: string): object | null {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return (parsedJson && typeof parsedJson === \"object\") ? parsedJson : null;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key: string): string | null {\n        return this.browserStorage.getItem(key);\n    }\n\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key: string, value: string): void {\n        this.browserStorage.setItem(key, value);\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey: string): AccountEntity | null {\n        const account = this.getItem(accountKey);\n        if (!account) {\n            return null;\n        }\n\n        const parsedAccount = this.validateAndParseJson(account);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            return null;\n        }\n\n        return CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedAccount);\n    }\n\n    /**\n     * set account entity in the platform cache\n     * @param key\n     * @param value\n     */\n    setAccount(account: AccountEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n    }\n\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !IdTokenEntity.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\n        return CacheManager.toObject(new IdTokenEntity(), parsedIdToken);\n    }\n\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken: IdTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = idToken.generateCredentialKey();\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n    }\n\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (!parsedAccessToken || !AccessTokenEntity.isAccessTokenEntity(parsedAccessToken)) {\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\n        return CacheManager.toObject(new AccessTokenEntity(), parsedAccessToken);\n    }\n\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken: AccessTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\n        const accessTokenKey = accessToken.generateCredentialKey();\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n    }\n\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(refreshTokenKey: string): RefreshTokenEntity | null {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (!parsedRefreshToken || !RefreshTokenEntity.isRefreshTokenEntity(parsedRefreshToken)) {\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\n        return CacheManager.toObject(new RefreshTokenEntity(), parsedRefreshToken);\n    }\n\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\n        const refreshTokenKey = refreshToken.generateCredentialKey();\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n    }\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata || !AppMetadataEntity.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return CacheManager.toObject(new AppMetadataEntity(), parsedMetadata);\n    }\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(serverTelemetryKey: string): ServerTelemetryEntity | null {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (!parsedMetadata || !ServerTelemetryEntity.isServerTelemetryEntity(serverTelemetryKey, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return CacheManager.toObject(new ServerTelemetryEntity(), parsedMetadata);\n    }\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(serverTelemetryKey: string, serverTelemetry: ServerTelemetryEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadata(key: string) : AuthorityMetadataEntity | null {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (parsedMetadata && AuthorityMetadataEntity.isAuthorityMetadataEntity(key, parsedMetadata)) {\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\n            return CacheManager.toObject(new AuthorityMetadataEntity(), parsedMetadata);\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadataKeys(): Array<string> {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU \n     * @param wrapperVersion \n     */\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\n    }\n\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata(): [string, string] {\n        const sku = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) || \"\";\n        const version = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) || \"\";\n        return [sku, version];\n    }\n\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n\n    /**\n     * Gets the active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        const activeAccountIdKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n        const activeAccountId = this.browserStorage.getItem(activeAccountIdKey);\n        if (!activeAccountId) {\n            return null;\n        }\n        return this.getAccountInfoByFilter({localAccountId: activeAccountId})[0] || null;\n    }\n\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account \n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        const activeAccountIdKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            this.browserStorage.setItem(activeAccountIdKey, account.localAccountId);\n        } else {\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\n            this.browserStorage.removeItem(activeAccountIdKey);\n        }\n    }\n\n    /**\n     * Gets a list of accounts that match all of the filters provided\n     * @param account \n     */\n    getAccountInfoByFilter(accountFilter: Partial<Omit<AccountInfo, \"idTokenClaims\"|\"name\">>): AccountInfo[] {\n        const allAccounts = this.getAllAccounts();\n        return allAccounts.filter((accountObj) => {\n            if (accountFilter.username && accountFilter.username.toLowerCase() !== accountObj.username.toLowerCase()) {\n                return false;\n            }\n\n            if (accountFilter.homeAccountId && accountFilter.homeAccountId !== accountObj.homeAccountId) {\n                return false;\n            }\n\n            if (accountFilter.localAccountId && accountFilter.localAccountId !== accountObj.localAccountId) {\n                return false;\n            }\n\n            if (accountFilter.tenantId && accountFilter.tenantId !== accountObj.tenantId) {\n                return false;\n            }\n\n            if (accountFilter.environment && accountFilter.environment !== accountObj.environment) {\n                return false;\n            }\n            \n            return true;\n        });\n    }\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (!parsedThrottlingCache || !ThrottlingEntity.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return CacheManager.toObject(new ThrottlingEntity(), parsedThrottlingCache);\n    }\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(throttlingCacheKey: string, throttlingCache: ThrottlingEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\n                return itemCookie;\n            }\n        }\n\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (this.cacheConfig.cacheLocation === BrowserCacheLocation.LocalStorage) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\n                    return item;\n                }\n            }\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\n            return null;\n        }\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\n        return value;\n    }\n\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(cacheKey: string, value: string, generateKey?: boolean): void {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\n            this.setItemCookie(key, value);\n        }\n    }\n\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key: string): boolean {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\n            this.clearItemCookie(key);\n        }\n        return true;\n    }\n\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key: string): boolean {\n        return this.browserStorage.containsKey(key) || this.temporaryCacheStorage.containsKey(key);\n    }\n\n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys()\n        ];\n    }\n\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear(): Promise<void> {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey: string) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if ((this.browserStorage.containsKey(cacheKey) || this.temporaryCacheStorage.containsKey(cacheKey)) && ((cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1) || (cacheKey.indexOf(this.clientId) !== -1))) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        this.internalStorage.clear();\n    }\n\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n        \n        document.cookie = cookieStr;\n    }\n\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName: string): string {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i: number = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\n            }\n        }\n        return \"\";\n    }\n\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies(): void {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie: string): void => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName: string): void {\n        this.setItemCookie(cookieName, \"\", -1);\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\n        return expr.toUTCString();\n    }\n\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache(): object {\n        return this.browserStorage;\n    }\n\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache(): void {\n        // sets nothing\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key: string): string {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n\n        return JSON.stringify(key);\n    }\n\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString: string): string {\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(`${TemporaryCacheKeys.AUTHORITY}.${stateId}`);\n    }\n\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString: string): string {\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(`${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\n    }\n\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString: string): string {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const {\n            libraryState: {\n                id: stateId\n            }\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(`${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\n    } \n\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState: string): string | null {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(state: string, nonce: string, authorityInstance: string, loginHint: string, account: AccountInfo|null): void {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n\n        if (account) {\n            const ccsCredential: CcsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        } else if (!StringUtils.isEmpty(loginHint)) {\n            const ccsCredential: CcsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN\n            };\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\n        }\n    }\n\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state: string): void {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (!StringUtils.isEmpty(state)) {\n            this.getKeys().forEach(key => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n        }\n\n        // delete generic interactive request parameters\n        if (state) {\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL));\n        this.setInteractionInProgress(false);\n    }\n\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString \n     */\n    cleanRequestByState(stateString: string): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\n            this.resetRequestCache(cachedState || \"\");\n        }\n        this.clearMsalCookies();\n    }\n\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType \n     */\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n            \n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = BrowserProtocolUtils.extractBrowserRequestState(this.cryptoImpl, stateValue);\n            if (parsedState && parsedState.interactionType === interactionType) {\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n    }\n\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest, browserCrypto: ICrypto): void {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n\n        const encodedValue = browserCrypto.base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\n    }\n\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state: string, browserCrypto: ICrypto): CommonAuthorizationCodeRequest {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, true);\n        if (!encodedTokenRequest) {\n            throw BrowserAuthError.createNoTokenRequestCacheError();\n        }\n\n        const parsedRequest = this.validateAndParseJson(browserCrypto.base64Decode(encodedTokenRequest)) as CommonAuthorizationCodeRequest;\n        if (!parsedRequest) {\n            throw BrowserAuthError.createUnableToParseTokenRequestCacheError();\n        }\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\n\n        // Get cached authority and use if no authority is cached with request.\n        if (StringUtils.isEmpty(parsedRequest.authority)) {\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw BrowserAuthError.createNoCachedAuthorityError();\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n\n        return parsedRequest;\n    }\n\n    isInteractionInProgress(matchClientId?: boolean): boolean {\n        const clientId = this.getInteractionInProgress();\n\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    getInteractionInProgress(): string | null {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n\n    setInteractionInProgress(inProgress: boolean): void {\n        const clientId = this.getInteractionInProgress();\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress && !clientId) {\n            // No interaction is in progress\n            this.setTemporaryCache(key, this.clientId, false);\n        } else if (!inProgress && clientId === this.clientId) {\n            this.removeItem(key);\n        }\n    }\n\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     */\n    getLegacyLoginHint(): string | null {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ADAL_ID_TOKEN);\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ID_TOKEN, true);\n        if (msalIdTokenString) {\n            this.removeItem(this.generateCacheKey(PersistentCacheKeys.ID_TOKEN));\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const cachedIdToken = new IdToken(cachedIdTokenString, this.cryptoImpl);\n            if (cachedIdToken.claims && cachedIdToken.claims.preferred_username) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\n                return cachedIdToken.claims.preferred_username;\n            }\n            else if (cachedIdToken.claims && cachedIdToken.claims.upn) {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\n                return cachedIdToken.claims.upn;\n            }\n            else {\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\n            }\n        }\n\n        return null;\n    }\n}\n\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (clientId: string, logger: Logger): BrowserCacheManager => {\n    const cacheOptions = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false\n    };\n    return new BrowserCacheManager(clientId, cacheOptions, DEFAULT_CRYPTO_IMPLEMENTATION, logger);\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto\";\nimport { AuthError } from \"../error/AuthError\";\nimport { ILoggerCallback, LogLevel } from \"../logger/Logger\";\nimport { Constants } from \"../utils/Constants\";\nimport { version } from \"../packageMetadata\";\nimport { Authority } from \"../authority/Authority\";\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\n\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n/**\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - authOptions                - Authentication for application\n * - cryptoInterface            - Implementation of crypto functions\n * - libraryInfo                - Library metadata\n * - loggerOptions              - Logging for application\n * - networkInterface           - Network implementation\n * - storageInterface           - Storage implementation\n * - systemOptions              - Additional library options\n * - clientCredentials          - Credentials options for confidential clients\n */\nexport type ClientConfiguration = {\n    authOptions: AuthOptions,\n    systemOptions?: SystemOptions,\n    loggerOptions?: LoggerOptions,\n    storageInterface?: CacheManager,\n    networkInterface?: INetworkModule,\n    cryptoInterface?: ICrypto,\n    clientCredentials?: ClientCredentials,\n    libraryInfo?: LibraryInfo\n    serverTelemetryManager?: ServerTelemetryManager | null,\n    persistencePlugin?: ICachePlugin | null,\n    serializableCache?: ISerializableTokenCache | null\n};\n\nexport type CommonClientConfiguration = {\n    authOptions: Required<AuthOptions>,\n    systemOptions: Required<SystemOptions>,\n    loggerOptions : Required<LoggerOptions>,\n    storageInterface: CacheManager,\n    networkInterface : INetworkModule,\n    cryptoInterface : Required<ICrypto>,\n    libraryInfo : LibraryInfo,\n    serverTelemetryManager: ServerTelemetryManager | null,\n    clientCredentials: ClientCredentials,\n    persistencePlugin: ICachePlugin | null,\n    serializableCache: ISerializableTokenCache | null\n};\n\n/**\n * Use this to configure the auth options in the ClientConfiguration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority: Authority;\n    clientCapabilities?: Array<string>;\n};\n\n/**\n * Use this to configure token renewal info in the Configuration object\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n */\nexport type SystemOptions = {\n    tokenRenewalOffsetSeconds?: number;\n    preventCorsPreflight?: boolean;\n};\n\n/**\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\n *\n * - loggerCallback                - Callback for logger\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\n * - logLevel                      - Sets the level at which logging happens\n * - correlationId                 - Sets the correlationId printed by the logger\n */\nexport type LoggerOptions = {\n    loggerCallback?: ILoggerCallback,\n    piiLoggingEnabled?: boolean,\n    logLevel?: LogLevel,\n    correlationId?: string\n};\n\n/**\n * Library-specific options\n */\nexport type LibraryInfo = {\n    sku: string,\n    version: string,\n    cpu: string,\n    os: string\n};\n\n/**\n * Credentials for confidential clients\n */\nexport type ClientCredentials = {\n    clientSecret?: string,\n    clientAssertion? : {\n        assertion: string,\n        assertionType: string\n    };\n};\n\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false\n};\n\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: \"\"\n};\n\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\n    async sendGetRequestAsync<T>(): Promise<T> {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    },\n    async sendPostRequestAsync<T>(): Promise<T> {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n    }\n};\n\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: \"\",\n    os: \"\"\n};\n\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\n    clientSecret: \"\",\n    clientAssertion: undefined\n};\n\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nexport function buildClientConfiguration(\n    {\n        authOptions: userAuthOptions,\n        systemOptions: userSystemOptions,\n        loggerOptions: userLoggerOption,\n        storageInterface: storageImplementation,\n        networkInterface: networkImplementation,\n        cryptoInterface: cryptoImplementation,\n        clientCredentials: clientCredentials,\n        libraryInfo: libraryInfo,\n        serverTelemetryManager: serverTelemetryManager,\n        persistencePlugin: persistencePlugin,\n        serializableCache: serializableCache\n    }: ClientConfiguration): CommonClientConfiguration {\n    \n    const loggerOptions = { ...DEFAULT_LOGGER_IMPLEMENTATION, ...userLoggerOption };\n    \n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION),\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null\n    };\n}\n\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\n    return {\n        clientCapabilities: [],\n        ...authOptions\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"../error/AuthError\";\nimport { NetworkResponse } from \"./NetworkManager\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>,\n    body?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions, cancellationToken?: number): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\n    },\n    sendPostRequestAsync: () => {\n        const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented for the Network interface.\";\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\n    }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options)\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw BrowserAuthError.createGetRequestFailedError(e, url);\n            } else {\n                throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: await response.json() as T,\n                status: response.status\n            };\n        } catch (e) {\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        const reqBody = (options && options.body) || \"\";\n\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw BrowserAuthError.createPostRequestFailedError(e, url);\n            } else {\n                throw BrowserAuthError.createNoNetworkConnectivityError();\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: await response.json() as T,\n                status: response.status\n            };\n        } catch (e) {\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\n        }\n    }\n\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders \n     */\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n\n    private getHeaderDict(headers: Headers): Record<string, string> {\n        const headerDict: Record<string, string> = {};\n        headers.forEach((value: string, key: string) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This client implements the XMLHttpRequest class to send GET and POST requests.\n */\nexport class XhrClient implements INetworkModule {\n\n    /**\n     * XhrClient for REST endpoints - Get request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\n    }\n\n    /**\n     * XhrClient for REST endpoints - Post request\n     * @param url \n     * @param headers \n     * @param body \n     */\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\n    }\n\n    /**\n     * Helper for XhrClient requests.\n     * @param url \n     * @param method \n     * @param options \n     */\n    private sendRequestAsync<T>(url: string, method: HTTP_REQUEST_TYPE, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        return new Promise<NetworkResponse<T>>((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, /* async: */ true);\n            this.setXhrHeaders(xhr, options);\n            xhr.onload = (): void => {\n                if (xhr.status < 200 || xhr.status >= 300) {\n                    if (method === HTTP_REQUEST_TYPE.POST) {\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    } else {\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                }\n                try {\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\n                    const networkResponse: NetworkResponse<T> = {\n                        headers: this.getHeaderDict(xhr),\n                        body: jsonResponse,\n                        status: xhr.status\n                    };\n                    resolve(networkResponse);\n                } catch (e) {\n                    reject(BrowserAuthError.createFailedToParseNetworkResponseError(url));\n                }\n            };\n\n            xhr.onerror = (): void => {\n                if (window.navigator.onLine) {\n                    if (method === HTTP_REQUEST_TYPE.POST) {\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    } else {\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\n                    }\n                } else {\n                    reject(BrowserAuthError.createNoNetworkConnectivityError());\n                }\n            };\n\n            if (method === HTTP_REQUEST_TYPE.POST && options && options.body) {\n                xhr.send(options.body);\n            } else if (method === HTTP_REQUEST_TYPE.GET) {\n                xhr.send();\n            } else {\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\n            }\n        });\n    }\n\n    /**\n     * Helper to set XHR headers for request.\n     * @param xhr \n     * @param options \n     */\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\n        if (options && options.headers) {\n            const headers = options.headers;\n            Object.keys(headers).forEach((key: string) => {\n                xhr.setRequestHeader(key, headers[key]);\n            });\n        }\n    }\n\n    /**\n     * Gets a string map of the headers received in the response.\n     * \n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\n     * @param xhr \n     */\n    private getHeaderDict(xhr: XMLHttpRequest): Record<string, string> {\n        const headerString = xhr.getAllResponseHeaders();\n        const headerArr = headerString.trim().split(/[\\r\\n]+/);\n        const headerDict: Record<string, string> = {};\n        headerArr.forEach((value: string) => {\n            const parts = value.split(\": \");\n            const headerName = parts.shift();\n            const headerVal = parts.join(\": \");\n            if (headerName && headerVal) {\n                headerDict[headerName] = headerVal;\n            }\n        });\n\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, INetworkModule, UrlString } from \"@azure/msal-common\";\nimport { FetchClient } from \"../network/FetchClient\";\nimport { XhrClient } from \"../network/XhrClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, BrowserConstants } from \"./BrowserConstants\";\n\n/**\n * Utility class for browser specific functions\n */\nexport class BrowserUtils {\n\n    // #region Window Navigation and URL management\n\n    /**\n     * Clears hash from window url.\n     */\n    static clearHash(contentWindow: Window): void {\n        // Office.js sets history.replaceState to null\n        contentWindow.location.hash = Constants.EMPTY_STRING;\n        if (typeof contentWindow.history.replaceState === \"function\") {\n            // Full removes \"#\" from url\n            contentWindow.history.replaceState(null, Constants.EMPTY_STRING, `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\n        }\n    }\n\n    /**\n     * Replaces current hash with hash from provided url\n     */\n    static replaceHash(url: string): void {\n        const urlParts = url.split(\"#\");\n        urlParts.shift(); // Remove part before the hash\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\n    }\n\n    /**\n     * Returns boolean of whether the current window is in an iframe or not.\n     */\n    static isInIframe(): boolean {\n        return window.parent !== window;\n    }\n\n    /**\n     * Returns boolean of whether or not the current window is a popup opened by msal\n     */\n    static isInPopup(): boolean {\n        return typeof window !== \"undefined\" && !!window.opener && \n            window.opener !== window && \n            typeof window.name === \"string\" && \n            window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0;\n    }\n\n    // #endregion\n\n    /**\n     * Returns current window URL as redirect uri\n     */\n    static getCurrentUri(): string {\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\n    }\n\n    /**\n     * Gets the homepage url for the current window location.\n     */\n    static getHomepage(): string {\n        const currentUrl = new UrlString(window.location.href);\n        const urlComponents = currentUrl.getUrlComponents();\n        return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n    }\n\n    /**\n     * Returns best compatible network client object. \n     */\n    static getBrowserNetworkClient(): INetworkModule {\n        if (window.fetch && window.Headers) {\n            return new FetchClient();\n        } else {\n            return new XhrClient();\n        }\n    }\n\n    /**\n     * Throws error if we have completed an auth and are \n     * attempting another auth request inside an iframe.\n     */\n    static blockReloadInHiddenIframes(): void {\n        const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\n        // return an error if called from the hidden iframe created by the msal js silent calls\n        if (isResponseHash && BrowserUtils.isInIframe()) {\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\n        }\n    }\n\n    /**\n     * Block redirect operations in iframes unless explicitly allowed\n     * @param interactionType Interaction type for the request\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n     */\n    static blockRedirectInIframe(interactionType: InteractionType, allowRedirectInIframe: boolean): void {\n        const isIframedApp = BrowserUtils.isInIframe();\n        if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n            throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\n        }\n    }\n\n    /**\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\n     */\n    static blockAcquireTokenInPopups(): void {\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n        if (BrowserUtils.isInPopup()) {\n            throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\n        }\n    }\n\n    /**\n     * Throws error if token requests are made in non-browser environment\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\n     */\n    static blockNonBrowserEnvironment(isBrowserEnvironment: boolean): void {\n        if (!isBrowserEnvironment) {\n            throw BrowserAuthError.createNonBrowserEnvironmentError();\n        }\n    }\n\n    /**\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\n     */\n    static detectIEOrEdge(): boolean {\n        const ua = window.navigator.userAgent;\n        const msie = ua.indexOf(\"MSIE \");\n        const msie11 = ua.indexOf(\"Trident/\");\n        const msedge = ua.indexOf(\"Edge/\");\n        const isIE = msie > 0 || msie11 > 0;\n        const isEdge = msedge > 0;\n        return isIE || isEdge;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url \n     * @param options \n     */\n    navigateInternal(url: string, options: NavigationOptions): Promise<boolean>{\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url \n     * @param options \n     */\n    navigateExternal(url: string, options: NavigationOptions): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url \n     * @param options \n     */\n    private static defaultNavigateWindow(url: string, options: NavigationOptions): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SystemOptions, LoggerOptions, INetworkModule, DEFAULT_SYSTEM_OPTIONS, Constants, ProtocolMode, LogLevel, StubbedNetworkModule } from \"@azure/msal-common\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationClient } from \"../navigation/NavigationClient\";\n\n// Default timeout for popup windows and iframes in milliseconds\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\n\n/**\n * Use this to configure the auth options in the Configuration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - redirectUri                - The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n * - postLogoutRedirectUri      - The redirect URI where the window navigates after a successful logout.\n * - navigateToLoginRequestUrl  - Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\n * - clientCapabilities         - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode               - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n */\nexport type BrowserAuthOptions = {\n    clientId: string;\n    authority?: string;\n    knownAuthorities?: Array<string>;\n    cloudDiscoveryMetadata?: string;\n    authorityMetadata?: string;\n    redirectUri?: string;\n    postLogoutRedirectUri?: string | null;\n    navigateToLoginRequestUrl?: boolean;\n    clientCapabilities?: Array<string>;\n    protocolMode?: ProtocolMode;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n *\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\n * - storeAuthStateInCookie   - If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n * - secureCookies            - If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to false.\n */\nexport type CacheOptions = {\n    cacheLocation?: BrowserCacheLocation | string;\n    storeAuthStateInCookie?: boolean;\n    secureCookies?: boolean;\n};\n\n/**\n * Library Specific Options\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n * - loggerOptions                - Used to initialize the Logger object (See ClientConfiguration.ts)\n * - networkClient                - Network interface implementation\n * - windowHashTimeout            - Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\n * - iframeHashTimeout            - Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\n * - loadFrameTimeout             - Sets the timeout for waiting for a response hash in an iframe or popup\n * - navigateFrameWait            - Maximum time the library should wait for a frame to load\n * - redirectNavigationTimeout    - Time to wait for redirection to occur before resolving promise\n * - asyncPopups                  - Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\n * - allowRedirectInIframe        - Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\n */\nexport type BrowserSystemOptions = SystemOptions & {\n    loggerOptions?: LoggerOptions;\n    networkClient?: INetworkModule;\n    navigationClient?: INavigationClient;\n    windowHashTimeout?: number;\n    iframeHashTimeout?: number;\n    loadFrameTimeout?: number;\n    navigateFrameWait?: number;\n    redirectNavigationTimeout?: number;\n    asyncPopups?: boolean;\n    allowRedirectInIframe?: boolean;\n};\n\n/**\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - auth: this is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n * - cache: this is where you configure cache location and whether to store cache in cookies\n * - system: this is where you can configure the network client, logger, token renewal offset\n */\nexport type Configuration = {\n    auth: BrowserAuthOptions,\n    cache?: CacheOptions,\n    system?: BrowserSystemOptions\n};\n\nexport type BrowserConfiguration = {\n    auth: Required<BrowserAuthOptions>,\n    cache: Required<CacheOptions>,\n    system: Required<BrowserSystemOptions>\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nexport function buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem }: Configuration, isBrowserEnvironment: boolean): BrowserConfiguration {\n\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS: Required<BrowserAuthOptions> = {\n        clientId: \"\",\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: \"\",\n        authorityMetadata: \"\",\n        redirectUri: \"\",\n        postLogoutRedirectUri: \"\",\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD\n    };\n\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false\n    };\n\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: (): void => {},\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false\n    };\n\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment ? BrowserUtils.getBrowserNetworkClient() : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout: (userInputSystem && userInputSystem.loadFrameTimeout) || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout: (userInputSystem && userInputSystem.loadFrameTimeout) || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: isBrowserEnvironment && BrowserUtils.detectIEOrEdge() ? 500 : 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false\n    };\n\n    const overlayedConfig: BrowserConfiguration = {\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...userInputAuth },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: { ...DEFAULT_BROWSER_SYSTEM_OPTIONS, ...userInputSystem }\n    };\n    return overlayedConfig;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nenum KeyLocation {\n    SW = \"sw\",\n    UHW = \"uhw\"\n}\n\nexport class PopTokenGenerator {\n\n    private cryptoUtils: ICrypto;\n\n    constructor(cryptoUtils: ICrypto) {\n        this.cryptoUtils = cryptoUtils;\n    }\n\n    async generateCnf(request: SignedHttpRequestParameters): Promise<string> {\n        const reqCnf = await this.generateKid(request);\n        return this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n    }\n\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW\n        };\n    }\n\n    async signPopToken(accessToken: string, request: SignedHttpRequestParameters): Promise<string> {\n        const tokenClaims: TokenClaims | null = AuthToken.extractTokenClaims(accessToken, this.cryptoUtils);\n        if (!tokenClaims?.cnf?.kid) {\n            throw ClientAuthError.createTokenClaimsRequiredError();\n        }\n        \n        return this.signPayload(accessToken, tokenClaims.cnf.kid, request);\n    }\n\n    async signPayload(payload: string, kid: string, request: SignedHttpRequestParameters, claims?: object): Promise<string> {\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce } = request;\n\n        const resourceUrlString = (resourceRequestUri) ? new UrlString(resourceRequestUri) : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n\n        return await this.cryptoUtils.signJwt({\n            at: payload,\n            ts: TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: (resourceUrlComponents?.QueryString) ? [[], resourceUrlComponents.QueryString] : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims\n        }, kid);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, Logger, AccountEntity, CacheManager } from \"@azure/msal-common\";\nimport { InteractionType } from \"../utils/BrowserConstants\";\nimport { EventCallbackFunction, EventError, EventMessage, EventPayload } from \"./EventMessage\";\nimport { EventType } from \"./EventType\";\n\nexport class EventHandler {\n    // Callback for subscribing to events\n    private eventCallbacks: Map<string, EventCallbackFunction>;\n    private logger: Logger;\n    private browserCrypto: ICrypto;\n    private listeningToStorageEvents: boolean;\n\n    constructor(logger: Logger, browserCrypto: ICrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange = this.handleAccountCacheChange.bind(this);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        if (typeof window !== \"undefined\") {\n            const callbackId = this.browserCrypto.createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n    \n            return callbackId;\n        }\n        \n        return null;\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        } else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n            this.listeningToStorageEvents = false;\n        } else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(eventType: EventType, interactionType?: InteractionType, payload?: EventPayload, error?: EventError): void {\n        if (typeof window !== \"undefined\") {\n            const message: EventMessage = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now()\n            };\n\n            this.logger.info(`Emitting event: ${eventType}`);\n\n            this.eventCallbacks.forEach((callback: EventCallbackFunction, callbackId: string) => {\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n                callback.apply(null, [message]);\n            });\n        }\n    }\n\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    private handleAccountCacheChange(e: StorageEvent): void {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (typeof parsedValue !== \"object\" || !AccountEntity.isAccountEntity(parsedValue)) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedValue);\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\"Account was added to cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            } else if (!e.newValue && e.oldValue) {\n                this.logger.info(\"Account was removed from cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n            }\n        } catch (e) {\n            return;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkResponse } from \"./NetworkManager\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { HeaderNames, CacheSchemaType, ThrottlingConstants, Constants } from \"../utils/Constants\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerError } from \"../error/ServerError\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\nexport class ThrottlingUtils {\n\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\n    }\n\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(cacheManager: CacheManager, thumbprint: RequestThumbprint): void {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\n                return;\n            }\n            throw new ServerError(value.errorCodes?.join(\" \") || Constants.EMPTY_STRING, value.errorMessage, value.subError);\n        }\n    }\n\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(cacheManager: CacheManager, thumbprint: RequestThumbprint, response: NetworkResponse<ServerAuthorizationTokenResponse>): void {\n        if (ThrottlingUtils.checkResponseStatus(response) || ThrottlingUtils.checkResponseForRetryAfter(response)) {\n            const thumbprintValue: ThrottlingEntity = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror\n            };\n            cacheManager.setThrottlingCache(\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\n                thumbprintValue\n            );\n        }\n    }\n\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(response: NetworkResponse<ServerAuthorizationTokenResponse>): boolean {\n        return response.status === 429 || response.status >= 500 && response.status < 600;\n    }\n\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(response: NetworkResponse<ServerAuthorizationTokenResponse>): boolean {\n        if (response.headers) {\n            return response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) && (response.status < 200 || response.status >= 300);\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime: number): number {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(Math.min(\n            currentSeconds + (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\n            currentSeconds + ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\n        ) * 1000);\n    }\n\n    static removeThrottle(cacheManager: CacheManager, clientId: string, request: BaseAuthRequest, homeAccountIdentifier?: string): boolean {\n        const thumbprint: RequestThumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshJwk: request.sshJwk,\n            sshKid: request.sshKid\n        };\n\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        return cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions } from \"./INetworkModule\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingUtils } from \"./ThrottlingUtils\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { AuthError } from \"../error/AuthError\";\n\nexport type NetworkResponse<T> = {\n    headers: Record<string, string>;\n    body: T;\n    status: number;\n};\n\nexport class NetworkManager {\n    private networkClient: INetworkModule;\n    private cacheManager: CacheManager;\n\n    constructor(networkClient: INetworkModule, cacheManager: CacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest<T>(thumbprint: RequestThumbprint, tokenEndpoint: string, options: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync<T>(tokenEndpoint, options);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw ClientAuthError.createNetworkError(tokenEndpoint, e);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfiguration, buildClientConfiguration, CommonClientConfiguration } from \"../config/ClientConfiguration\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkManager, NetworkResponse } from \"../network/NetworkManager\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Authority } from \"../authority/Authority\";\nimport { Logger } from \"../logger/Logger\";\nimport { Constants, HeaderNames } from \"../utils/Constants\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { version, name } from \"../packageMetadata\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\n\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n */\nexport abstract class BaseClient {\n    // Logger object\n    public logger: Logger;\n\n    // Application config\n    protected config: CommonClientConfiguration;\n\n    // Crypto Interface\n    protected cryptoUtils: ICrypto;\n\n    // Storage Interface\n    protected cacheManager: CacheManager;\n\n    // Network Interface\n    protected networkClient: INetworkModule;\n\n    // Server Telemetry Manager\n    protected serverTelemetryManager: ServerTelemetryManager | null;\n\n    // Network Manager\n    protected networkManager: NetworkManager;\n\n    // Default authority object\n    public authority: Authority;\n\n    protected constructor(configuration: ClientConfiguration) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(this.networkClient, this.cacheManager);\n\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n    }\n\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    protected createTokenRequestHeaders(ccsCred?: CcsCredential): Record<string, string> {\n        const headers: Record<string, string> = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    protected async executePostToTokenEndpoint(tokenEndpoint: string, queryString: string, headers: Record<string, string>, thumbprint: RequestThumbprint): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        const response = await this.networkManager.sendPostRequest<ServerAuthorizationTokenResponse>(\n            thumbprint,\n            tokenEndpoint,\n            { body: queryString, headers: headers }\n        );\n\n        if (this.config.serverTelemetryManager && response.status < 500 && response.status !== 429) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n\n        return response;\n    }\n\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority \n     */\n    updateAuthority(updatedAuthority: Authority): void {\n        if (!updatedAuthority.discoveryComplete()) {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Updated authority has not completed endpoint discovery.\");\n        }\n        this.authority = updatedAuthority;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { PromptValue, CodeChallengeMethodValues} from \"../utils/Constants\";\nimport { StringDict } from \"../utils/MsalTypes\";\n\n/**\n * Validates server consumable params from the \"request\" objects\n */\nexport class RequestValidator {\n\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri: string) : void {\n        if (StringUtils.isEmpty(redirectUri)) {\n            throw ClientConfigurationError.createRedirectUriEmptyError();\n        }\n    }\n\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt: string) : void {\n        const promptValues = [];\n\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n\n        if (promptValues.indexOf(prompt) < 0) {\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\n        }\n    }\n\n    static validateClaims(claims: string) : void {\n        try {\n            JSON.parse(claims);\n        } catch(e) {\n            throw ClientConfigurationError.createInvalidClaimsRequestError();\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(codeChallenge: string, codeChallengeMethod: string) : void  {\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        } else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod: string) : void {\n        if (\n            [\n                CodeChallengeMethodValues.PLAIN,\n                CodeChallengeMethodValues.S256\n            ].indexOf(codeChallengeMethod) < 0\n        ) {\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\n        }\n    }\n\n    /**\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(eQParams: StringDict, queryParams: Map<string, string>) : StringDict {\n        if (!eQParams) {\n            return {};\n        }\n\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n\n        return eQParams;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AADServerParamKeys, Constants, ResponseMode, SSOTypes, CLIENT_INFO, AuthenticationScheme, ClaimsRequestKeys, PasswordGrantConstants, OIDC_DEFAULT_SCOPES, ThrottlingConstants, HeaderNames} from \"../utils/Constants\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { StringDict } from \"../utils/MsalTypes\";\nimport { RequestValidator } from \"./RequestValidator\";\nimport { LibraryInfo } from \"../config/ClientConfiguration\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ClientInfo } from \"../account/ClientInfo\";\n\nexport class RequestParameterBuilder {\n\n    private parameters: Map<string, string>;\n\n    constructor() {\n        this.parameters = new Map<string, string>();\n    }\n\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE)\n        );\n    }\n\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode?: ResponseMode): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_MODE,\n            encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY)\n        );\n    }\n\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(scopes: string[], addOidcScopes: boolean = true): void {\n        const requestScopes = addOidcScopes ? [...scopes || [], ...OIDC_DEFAULT_SCOPES] : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\n    }\n\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\n    }\n\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\n    }\n\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(AADServerParamKeys.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\n    }\n\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint: string): void {\n        this.parameters.set(AADServerParamKeys.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\n    }\n\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint: string): void {\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\n    }\n\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint: string): void {\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint \n     */\n    addCcsUpn(loginHint: string): void {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint \n     */\n    addCcsOid(clientInfo: ClientInfo): void {\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\n    }\n\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid: string): void {\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\n    }\n\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims?: string, clientCapabilities?: Array<string>): void {\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(mergedClaims));\n    }\n\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n    }\n\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo: LibraryInfo): void {\n        // Telemetry Info\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\n        this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\n    }\n\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt: string): void {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(`${AADServerParamKeys.PROMPT}`, encodeURIComponent(prompt));\n    }\n\n    /**\n     * add state\n     * @param state\n     */\n    addState(state: string): void {\n        if (!StringUtils.isEmpty(state)) {\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\n        }\n    }\n\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce: string): void {\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\n    }\n\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n        } else {\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\n        }\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken: string): void {\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\n    }\n\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier: string): void {\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\n    }\n\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\n    }\n\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\n    }\n\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType: string): void {\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\n    }\n\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion: string): void {\n        this.parameters.set(AADServerParamKeys.OBO_ASSERTION, encodeURIComponent(oboAssertion));\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse: string): void {\n        this.parameters.set(AADServerParamKeys.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType: string): void {\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\n    }\n\n    /**\n     * add client info\n     *\n     */\n    addClientInfo(): void {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n\n    /**\n     * add extraQueryParams\n     * @param eQparams\n     */\n    addExtraQueryParameters(eQparams: StringDict): void {\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\n        Object.keys(eQparams).forEach((key) => {\n            this.parameters.set(key, eQparams[key]);\n        });\n    }\n\n    addClientCapabilitiesToClaims(claims?: string, clientCapabilities?: Array<string>): string {\n        let mergedClaims: object;\n\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        } else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            } catch(e) {\n                throw ClientConfigurationError.createInvalidClaimsRequestError();\n            }\n        }\n\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)){\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {\n                values: clientCapabilities\n            };\n        }\n\n        return JSON.stringify(mergedClaims);\n    }\n\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username: string): void {\n        this.parameters.set(PasswordGrantConstants.username, username);\n    }\n\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password: string): void {\n        this.parameters.set(PasswordGrantConstants.password, password);\n    }\n\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString: string): void {\n        if (!StringUtils.isEmpty(cnfString)) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.POP);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(cnfString));\n        }\n    }\n\n    /**\n     * add SSH JWK and key ID to query params \n     */\n    addSshJwk(sshJwkString: string): void {\n        if(!StringUtils.isEmpty(sshJwkString)) {\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.SSH);\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(sshJwkString));\n        }\n    }\n\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager \n     */\n    addServerTelemetry(serverTelemetryManager: ServerTelemetryManager): void {\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\n        this.parameters.set(AADServerParamKeys.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\n    }\n\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling(): void {\n        this.parameters.set(AADServerParamKeys.X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\n    }\n\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString(): string {\n        const queryParameterArray: Array<string> = new Array<string>();\n\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n\n        return queryParameterArray.join(\"&\");\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IdTokenEntity } from \"./IdTokenEntity\";\nimport { AccessTokenEntity } from \"./AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"./RefreshTokenEntity\";\nimport { AccountEntity } from \"./AccountEntity\";\nimport { AppMetadataEntity } from \"./AppMetadataEntity\";\n\nexport class CacheRecord {\n    account: AccountEntity | null;\n    idToken: IdTokenEntity | null;\n    accessToken: AccessTokenEntity | null;\n    refreshToken: RefreshTokenEntity | null;\n    appMetadata: AppMetadataEntity | null;\n\n    constructor(accountEntity?: AccountEntity | null, idTokenEntity?: IdTokenEntity | null, accessTokenEntity?: AccessTokenEntity | null, refreshTokenEntity?: RefreshTokenEntity | null, appMetadataEntity?: AppMetadataEntity | null) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse\";\nimport { buildClientInfo} from \"../account/ClientInfo\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ServerAuthorizationCodeResponse } from \"./ServerAuthorizationCodeResponse\";\nimport { Logger } from \"../logger/Logger\";\nimport { ServerError } from \"../error/ServerError\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AuthenticationResult } from \"./AuthenticationResult\";\nimport { AccountEntity } from \"../cache/entities/AccountEntity\";\nimport { Authority } from \"../authority/Authority\";\nimport { AuthorityType } from \"../authority/AuthorityType\";\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity\";\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity\";\nimport { InteractionRequiredAuthError } from \"../error/InteractionRequiredAuthError\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils\";\nimport { AuthenticationScheme, Constants, THE_FAMILY_ID } from \"../utils/Constants\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/**\n * Class that handles response parsing.\n */\nexport class ResponseHandler {\n    private clientId: string;\n    private cacheStorage: CacheManager;\n    private cryptoObj: ICrypto;\n    private logger: Logger;\n    private homeAccountIdentifier: string;\n    private serializableCache: ISerializableTokenCache | null;\n    private persistencePlugin: ICachePlugin | null;\n\n    constructor(clientId: string, cacheStorage: CacheManager, cryptoObj: ICrypto, logger: Logger, serializableCache: ISerializableTokenCache | null, persistencePlugin: ICachePlugin | null) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n    }\n\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param cachedState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(serverResponseHash: ServerAuthorizationCodeResponse, cachedState: string, cryptoObj: ICrypto): void {\n\n        if (!serverResponseHash.state || !cachedState) {\n            throw !serverResponseHash.state ? ClientAuthError.createStateNotFoundError(\"Server State\") : ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n\n        if (decodeURIComponent(serverResponseHash.state) !== decodeURIComponent(cachedState)) {\n            throw ClientAuthError.createStateMismatchError();\n        }\n\n        // Check for error\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n            }\n\n            throw new ServerError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\n        }\n\n        if (serverResponseHash.client_info) {\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\n        }\n    }\n\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     */\n    validateTokenResponse(serverResponse: ServerAuthorizationTokenResponse): void {\n        // Check for error\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\n            }\n\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            throw new ServerError(serverResponse.error, errString, serverResponse.suberror);\n        }\n    }\n\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        authCodePayload?: AuthorizationCodePayload,\n        oboAssertion?: string,\n        handlingRefreshTokenResponse?: boolean): Promise<AuthenticationResult> {\n\n        // create an idToken object (not entity)\n        let idTokenObj: AuthToken | undefined;\n        if (serverTokenResponse.id_token) {\n            idTokenObj = new AuthToken(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj);\n    \n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && !StringUtils.isEmpty(authCodePayload.nonce)) {\n                if (idTokenObj.claims.nonce !== authCodePayload.nonce) {\n                    throw ClientAuthError.createNonceMismatchError();\n                }\n            }\n        }\n\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenObj);\n\n        // save the response tokens\n        let requestStateObj: RequestStateObject | undefined;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\n        }\n\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id = serverTokenResponse.key_id || request.sshKid || undefined;\n\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, idTokenObj, request.scopes, oboAssertion, authCodePayload);\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\n                cacheContext = new TokenCacheContext(this.serializableCache, true);\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal.\n             */\n            if (handlingRefreshTokenResponse && cacheRecord.account) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\n                    return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj);\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(cacheRecord);\n        } finally {\n            if (this.persistencePlugin && this.serializableCache && cacheContext) {\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj);\n    }\n\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    private generateCacheRecord(serverTokenResponse: ServerAuthorizationTokenResponse, authority: Authority, reqTimestamp: number, idTokenObj?: AuthToken, requestScopes?: string[], oboAssertion?: string, authCodePayload?: AuthorizationCodePayload): CacheRecord {\n        const env = authority.getPreferredCache();\n        if (StringUtils.isEmpty(env)) {\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\n        }\n\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken: IdTokenEntity | undefined;\n        let cachedAccount: AccountEntity | undefined;\n        if (!StringUtils.isEmpty(serverTokenResponse.id_token) && !!idTokenObj) {\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\n                this.clientId,\n                idTokenObj.claims.tid || Constants.EMPTY_STRING,\n                oboAssertion\n            );\n\n            cachedAccount = this.generateAccountEntity(\n                serverTokenResponse,\n                idTokenObj,\n                authority,\n                oboAssertion,\n                authCodePayload\n            );\n        }\n\n        // AccessToken\n        let cachedAccessToken: AccessTokenEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\n\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope ? ScopeSet.fromString(serverTokenResponse.scope) : new ScopeSet(requestScopes || []);\n\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn: number = (typeof serverTokenResponse.expires_in === \"string\" ? parseInt(serverTokenResponse.expires_in, 10) : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn: number = (typeof serverTokenResponse.ext_expires_in === \"string\" ? parseInt(serverTokenResponse.ext_expires_in, 10) : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn: number | undefined = (typeof serverTokenResponse.refresh_in === \"string\" ? parseInt(serverTokenResponse.refresh_in, 10) : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds = refreshIn && refreshIn > 0 ? reqTimestamp + refreshIn : undefined;\n\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.access_token || Constants.EMPTY_STRING,\n                this.clientId,\n                idTokenObj ? idTokenObj.claims.tid || Constants.EMPTY_STRING : authority.tenant,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                extendedTokenExpirationSeconds,\n                this.cryptoObj,\n                refreshOnSeconds,\n                serverTokenResponse.token_type,\n                oboAssertion,\n                serverTokenResponse.key_id\n            );\n        }\n\n        // refreshToken\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.refresh_token || Constants.EMPTY_STRING,\n                this.clientId,\n                serverTokenResponse.foci,\n                oboAssertion\n            );\n        }\n\n        // appMetadata\n        let cachedAppMetadata: AppMetadataEntity | null = null;\n        if (!StringUtils.isEmpty(serverTokenResponse.foci)) {\n            cachedAppMetadata = AppMetadataEntity.createAppMetadataEntity(this.clientId, env, serverTokenResponse.foci);\n        }\n\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken, cachedAppMetadata);\n    }\n\n    /**\n     * Generate Account\n     * @param serverTokenResponse\n     * @param idToken\n     * @param authority\n     */\n    private generateAccountEntity(serverTokenResponse: ServerAuthorizationTokenResponse, idToken: AuthToken, authority: Authority, oboAssertion?: string, authCodePayload?: AuthorizationCodePayload): AccountEntity {\n        const authorityType = authority.authorityType;\n        const cloudGraphHostName = authCodePayload ? authCodePayload.cloud_graph_host_name : \"\";\n        const msGraphhost = authCodePayload ? authCodePayload.msgraph_host : \"\";\n\n        // ADFS does not require client_info in the response\n        if (authorityType === AuthorityType.Adfs) {\n            this.logger.verbose(\"Authority type is ADFS, creating ADFS account\");\n            return AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, oboAssertion, cloudGraphHostName, msGraphhost);\n        }\n\n        // This fallback applies to B2C as well as they fall under an AAD account type.\n        if (StringUtils.isEmpty(serverTokenResponse.client_info) && authority.protocolMode === \"AAD\") {\n            throw ClientAuthError.createClientInfoEmptyError();\n        }\n\n        return serverTokenResponse.client_info ?\n            AccountEntity.createAccount(serverTokenResponse.client_info, this.homeAccountIdentifier, idToken, authority, oboAssertion, cloudGraphHostName, msGraphhost) :\n            AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, oboAssertion, cloudGraphHostName, msGraphhost);\n    }\n\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(\n        cryptoObj: ICrypto, \n        authority: Authority,\n        cacheRecord: CacheRecord, \n        fromTokenCache: boolean, \n        request: BaseAuthRequest,\n        idTokenObj?: AuthToken,\n        requestState?: RequestStateObject): Promise<AuthenticationResult> {\n        let accessToken: string = \"\";\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n        let familyId: string = Constants.EMPTY_STRING;\n\n        if (cacheRecord.accessToken) {\n            if (cacheRecord.accessToken.tokenType === AuthenticationScheme.POP) {\n                const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(cryptoObj);\n                accessToken = await popTokenGenerator.signPopToken(cacheRecord.accessToken.secret, request);\n            } else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n        }\n\n        if (cacheRecord.appMetadata) {\n            familyId = cacheRecord.appMetadata.familyId === THE_FAMILY_ID ? THE_FAMILY_ID : Constants.EMPTY_STRING;\n        }\n        const uid = idTokenObj?.claims.oid || idTokenObj?.claims.sub || Constants.EMPTY_STRING;\n        const tid = idTokenObj?.claims.tid || Constants.EMPTY_STRING;\n\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: cacheRecord.account ? cacheRecord.account.getAccountInfo() : null,\n            idToken: idTokenObj ? idTokenObj.rawToken : Constants.EMPTY_STRING,\n            idTokenClaims: idTokenObj ? idTokenObj.claims : {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId,\n            extExpiresOn: extExpiresOn,\n            familyId: familyId,\n            tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState ? requestState.userRequestState : Constants.EMPTY_STRING,\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName || Constants.EMPTY_STRING,\n            msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest\";\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { GrantType, AuthenticationScheme, PromptValue, Separators } from \"../utils/Constants\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { buildClientInfoFromHomeAccountId, buildClientInfo } from \"../account/ClientInfo\";\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\n\n/**\n * Oauth2.0 Authorization Code client\n */\nexport class AuthorizationCodeClient extends BaseClient {\n\n    constructor(configuration: ClientConfiguration) {\n        super(configuration);\n    }\n\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(request: CommonAuthorizationUrlRequest): Promise<string> {\n        const queryString = this.createAuthCodeUrlQueryString(request);\n\n        return UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\n    }\n\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(request: CommonAuthorizationCodeRequest, authCodePayload?: AuthorizationCodePayload): Promise<AuthenticationResult> {\n        this.logger.info(\"in acquireToken call\");\n        if (!request || StringUtils.isEmpty(request.code)) {\n            throw ClientAuthError.createTokenRequestCannotBeMadeError();\n        }\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await this.executeTokenRequest(this.authority, request);\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        return await responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, authCodePayload);\n    }\n\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(hashFragment: string, cachedState: string): AuthorizationCodePayload {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\n\n        // Deserialize hash fragment response parameters.\n        const hashUrlString = new UrlString(hashFragment);\n        // Deserialize hash fragment response parameters.\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hashUrlString.getHash());\n\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\n\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw ClientAuthError.createNoAuthCodeInServerResponseError();\n        }\n        return {\n            ...serverParams,\n            // Code param is optional in ServerAuthorizationCodeResponse but required in AuthorizationCodePaylod\n            code: serverParams.code\n        };\n    }\n\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n\n        // Construct logout URI.\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\n    }\n\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    private async executeTokenRequest(authority: Authority, request: CommonAuthorizationCodeRequest): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshJwk: request.sshJwk,\n            sshKid: request.sshKid\n        };\n\n        const requestBody = await this.createTokenRequestBody(request);\n        const queryParameters = this.createTokenQueryParameters(request);\n        let ccsCredential: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID\n                };\n            } catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        const headers: Record<string, string> = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\n        const endpoint = StringUtils.isEmpty(queryParameters) ? authority.tokenEndpoint : `${authority.tokenEndpoint}?${queryParameters}`;\n\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint);\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request \n     */\n    private createTokenQueryParameters(request: CommonAuthorizationCodeRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    private async createTokenRequestBody(request: CommonAuthorizationCodeRequest): Promise<string> {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(request.scopes);\n\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n\n        parameterBuilder.addThrottling();\n        \n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n            const cnfString = await popTokenGenerator.generateCnf(request);\n            parameterBuilder.addPopToken(cnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if(request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        \n        let ccsCred: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID\n                };\n            } catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        } else {\n            ccsCred = request.ccsCredential;\n        }\n\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    private createAuthCodeUrlQueryString(request: CommonAuthorizationUrlRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        const requestScopes = [...request.scopes || [], ...request.extraScopesToConsent || []];\n        parameterBuilder.addScopes(requestScopes);\n\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n\n        // generate the correlationId if not set by the user and add\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n        }\n\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n\n        // Add sid or loginHint with preference for sid -> loginHint -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\n                parameterBuilder.addSid(request.sid);\n            } else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                // If account and loginHint are provided, we will check account first for sid before adding loginHint\n                if (accountSid && request.prompt === PromptValue.NONE) {\n                    // SessionId is only used in silent calls\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                } else if (request.loginHint) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                } else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +  e);\n                    }\n                }\n            } else if (request.loginHint) {\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        } else {\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\n        }\n\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (!StringUtils.isEmpty(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    private createLogoutUrlQueryString(request: CommonEndSessionRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\n        }\n\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n        \n        if(request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account \n     */\n    private extractAccountSid(account: AccountInfo): string | null {\n        if (account.idTokenClaims) {\n            const tokenClaims = account.idTokenClaims as TokenClaims;\n            return tokenClaims.sid || null;\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\n */\nexport type OpenIdConfigResponse = {\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n};\n\nexport function isOpenIdConfigResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") && \n        response.hasOwnProperty(\"issuer\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse\";\nimport { Constants, RegionDiscoverySources, ResponseCodes } from \"../utils/Constants\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\n\nexport class RegionDiscovery {\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Options for the IMDS endpoint request\n    protected static IMDS_OPTIONS = {headers: {\"Metadata\": \"true\"}};\n\n    constructor(networkInterface: INetworkModule) {\n        this.networkInterface = networkInterface;\n    }\n\n    /**\n     * Detect the region from the application's environment.\n     * \n     * @returns Promise<string | null>\n     */\n    public async detectRegion(environmentRegion: string | undefined, regionDiscoveryMetadata: RegionDiscoveryMetadata): Promise<string | null> {\n        // Initialize auto detected region with the region from the envrionment \n        let autodetectedRegionName = environmentRegion;\n\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS \n        if (!autodetectedRegionName) {\n            try {\n                const localIMDSVersionResponse = await this.getRegionFromIMDS(Constants.IMDS_VERSION);\n                if (localIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\n                } \n                \n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry. \n                if (localIMDSVersionResponse.status === ResponseCodes.httpBadRequest) {\n                    const currentIMDSVersion = await this.getCurrentVersion();\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n\n                    const currentIMDSVersionResponse = await this.getRegionFromIMDS(currentIMDSVersion);\n                    if (currentIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\n                        autodetectedRegionName = currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\n                    }\n                }\n            } catch(e) {\n                regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            } \n        } else {\n            regionDiscoveryMetadata.region_source = RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n\n        return autodetectedRegionName || null;\n    }\n\n    /**\n     * Make the call to the IMDS endpoint\n     * \n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    private async getRegionFromIMDS(version: string): Promise<NetworkResponse<string>> {\n        return this.networkInterface.sendGetRequestAsync<string>(`${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, RegionDiscovery.IMDS_OPTIONS, Constants.IMDS_TIMEOUT);\n    }\n\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *  \n     * @returns Promise<string | null>\n     */\n    private async getCurrentVersion(): Promise<string | null> {\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(`${Constants.IMDS_ENDPOINT}?format=json`, RegionDiscovery.IMDS_OPTIONS);\n\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (response.status === ResponseCodes.httpBadRequest && response.body && response.body[\"newest-versions\"] && response.body[\"newest-versions\"].length > 0) {\n                return response.body[\"newest-versions\"][0];\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorityType } from \"./AuthorityType\";\nimport { isOpenIdConfigResponse, OpenIdConfigResponse } from \"./OpenIdConfigResponse\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IUri } from \"../url/IUri\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { AuthorityMetadataSource, Constants, RegionDiscoveryOutcomes } from \"../utils/Constants\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity\";\nimport { AuthorityOptions } from \"./AuthorityOptions\";\nimport { CloudInstanceDiscoveryResponse, isCloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\nimport { RegionDiscovery } from \"./RegionDiscovery\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\n\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n */\nexport class Authority {\n\n    // Canonical authority url string\n    private _canonicalAuthority: UrlString;\n    // Canonicaly authority url components\n    private _canonicalAuthorityUrlComponents: IUri | null;\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Cache Manager to cache network responses\n    protected cacheManager: ICacheManager;\n    // Protocol mode to construct endpoints\n    private authorityOptions: AuthorityOptions;\n    // Authority metadata\n    private metadata: AuthorityMetadataEntity;\n    // Region discovery service\n    private regionDiscovery: RegionDiscovery;\n    // Region discovery metadata\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\n\n    constructor(authority: string, networkInterface: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscovery = new RegionDiscovery(networkInterface);\n        this.regionDiscoveryMetadata = { region_used: undefined, region_source: undefined, region_outcome: undefined };\n    }\n\n    // See above for AuthorityType\n    public get authorityType(): AuthorityType {\n        const pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\n\n        if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\n            return AuthorityType.Adfs;\n        }\n\n        return AuthorityType.Default;\n    }\n\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    public get protocolMode(): ProtocolMode {\n        return this.authorityOptions.protocolMode;\n    }\n\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    public get options(): AuthorityOptions {\n        return this.authorityOptions;\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get canonicalAuthority(): string {\n        return this._canonicalAuthority.urlString;\n    }\n\n    /**\n     * Sets canonical authority.\n     */\n    public set canonicalAuthority(url: string) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n\n    /**\n     * Get authority components.\n     */\n    public get canonicalAuthorityUrlComponents(): IUri {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\n        }\n\n        return this._canonicalAuthorityUrlComponents;\n    }\n\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    public get hostnameAndPort(): string {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n\n    /**\n     * Get tenant for authority.\n     */\n    public get tenant(): string {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    public get authorizationEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.authorization_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth /token endpoint for requests\n     */\n    public get tokenEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.token_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    public get deviceCodeEndpoint(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth logout endpoint for requests\n     */\n    public get endSessionEndpoint(): string {\n        if(this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw ClientAuthError.createLogoutNotSupportedError();\n            }\n            const endpoint = this.replacePath(this.metadata.end_session_endpoint);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * OAuth issuer for requests\n     */\n    public get selfSignedJwtAudience(): string {\n        if(this.discoveryComplete()) {\n            const endpoint = this.replacePath(this.metadata.issuer);\n            return this.replaceTenant(endpoint);\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    private replaceTenant(urlString: string): string {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString \n     */\n    private replacePath(urlString: string): string {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\n        const cachedAuthorityParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\n\n        currentAuthorityParts.forEach((currentPart, index) => {\n            const cachedPart = cachedAuthorityParts[index];\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\n            }\n        });\n\n        return endpoint;\n    }\n\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    protected get defaultOpenIdConfigurationEndpoint(): string {\n        if (this.authorityType === AuthorityType.Adfs || this.protocolMode === ProtocolMode.OIDC) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete(): boolean {\n        return !!this.metadata;\n    }\n\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    public async resolveEndpointsAsync(): Promise<void> {\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n        if (!metadataEntity) {\n            metadataEntity = new AuthorityMetadataEntity();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cloudDiscoverySource = await this.updateCloudDiscoveryMetadata(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\n        const endpointSource = await this.updateEndpointMetadata(metadataEntity);\n\n        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE && endpointSource !== AuthorityMetadataSource.CACHE) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.resetExpiresAt();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        } \n\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity \n     */\n    private async updateEndpointMetadata(metadataEntity: AuthorityMetadataEntity): Promise<AuthorityMetadataSource> {\n        let metadata = this.getEndpointMetadataFromConfig();\n        if (metadata) {\n            metadataEntity.updateEndpointMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.endpointsFromNetwork && !metadataEntity.isExpired()) {\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n\n        metadata = await this.getEndpointMetadataFromNetwork();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                const autodetectedRegionName = await this.regionDiscovery.detectRegion(this.authorityOptions.azureRegionConfiguration.environmentRegion, this.regionDiscoveryMetadata);\n\n                const azureRegion = this.authorityOptions.azureRegionConfiguration.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG \n                    ? autodetectedRegionName \n                    : this.authorityOptions.azureRegionConfiguration.azureRegion;\n\n                if (this.authorityOptions.azureRegionConfiguration.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\n                    this.regionDiscoveryMetadata.region_outcome = autodetectedRegionName ?\n                        RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL :\n                        RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n                } else {\n                    if (autodetectedRegionName) {\n                        this.regionDiscoveryMetadata.region_outcome = (this.authorityOptions.azureRegionConfiguration.azureRegion === autodetectedRegionName) ?\n                            RegionDiscoveryOutcomes.CONFIGURED_MATCHES_DETECTED :\n                            RegionDiscoveryOutcomes.CONFIGURED_NOT_DETECTED;\n                    } else {\n                        this.regionDiscoveryMetadata.region_outcome = RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                    }\n                }\n\n                if (azureRegion) {\n                    this.regionDiscoveryMetadata.region_used = azureRegion;\n                    metadata = Authority.replaceWithRegionalInformation(metadata, azureRegion);\n                }\n            }\n\n            metadataEntity.updateEndpointMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        } else {\n            throw ClientAuthError.createUnableToGetOpenidConfigError(this.defaultOpenIdConfigurationEndpoint);\n        }\n    }\n\n    /**\n     * Compares the number of url components after the domain to determine if the cached authority metadata can be used for the requested authority\n     * Protects against same domain different authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    private isAuthoritySameType(metadataEntity: AuthorityMetadataEntity): boolean {\n        const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        \n        return cachedParts.length === this.canonicalAuthorityUrlComponents.PathSegments.length;\n    }\n\n    /**\n     * Parse authorityMetadata config option\n     */\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(this.authorityOptions.authorityMetadata) as OpenIdConfigResponse;\n            } catch (e) {\n                throw ClientConfigurationError.createInvalidAuthorityMetadataError();\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     */\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(this.defaultOpenIdConfigurationEndpoint);\n            return isOpenIdConfigResponse(response.body) ? response.body : null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache and returns where the information was retrived from\n     * @param cachedMetadata \n     * @param newMetadata \n     */\n    private async updateCloudDiscoveryMetadata(metadataEntity: AuthorityMetadataEntity): Promise<AuthorityMetadataSource> {\n        let metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        // If The cached metadata came from config but that config was not passed to this instance, we must go to the network\n        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.aliasesFromNetwork && !metadataEntity.isExpired()) {\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        }\n\n        metadata = await this.getCloudDiscoveryMetadataFromNetwork();\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        } else {\n            // Metadata could not be obtained from config, cache or network\n            throw ClientConfigurationError.createUntrustedAuthorityError();\n        }\n    }\n\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            try {\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata) as CloudInstanceDiscoveryResponse;\n                const metadata = Authority.getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\n                if (metadata) {\n                    return metadata;\n                }\n            } catch (e) {\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\n            }\n        }\n\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n\n        return null;\n    }\n\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     * @param networkInterface \n     */\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<CloudInstanceDiscoveryResponse>(instanceDiscoveryEndpoint);\n            const metadata = isCloudInstanceDiscoveryResponse(response.body) ? response.body.metadata : [];\n            if (metadata.length === 0) {\n                // If no metadata is returned, authority is untrusted\n                return null;\n            }\n            match = Authority.getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);\n        } catch(e) {\n            return null;\n        }\n\n        if (!match) {\n            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded \n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return match;\n    } \n\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    private isInKnownAuthorities(): boolean {\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\n            return UrlString.getDomainFromUrl(authority).toLowerCase() === this.hostnameAndPort;\n        });\n\n        return matches.length > 0;\n    }\n\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host \n     */\n    static createCloudDiscoveryMetadataFromHost(host: string): CloudDiscoveryMetadata {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host]\n        };\n    }\n\n    /**\n     * Searches instance discovery network response for the entry that contains the host in the aliases list\n     * @param response \n     * @param authority \n     */\n    static getCloudDiscoveryMetadataFromNetworkResponse(response: CloudDiscoveryMetadata[], authority: string): CloudDiscoveryMetadata | null {\n        for (let i = 0; i < response.length; i++) {\n            const metadata = response[i];\n            if (metadata.aliases.indexOf(authority) > -1) {\n                return metadata;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache(): string {\n        if(this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        } else {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\n        }\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host \n     */\n    isAlias(host: string): boolean {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     * \n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host: string): boolean {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n\n    /**\n     * Rebuild the authority string with the region\n     * \n     * @param host string\n     * @param region string \n     */\n    static buildRegionalAuthorityString(host: string, region: string, queryString?: string): string {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n\n        let hostNameAndPort= `${region}.${authorityUrlParts.HostNameAndPort}`;\n\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort\n        }).urlString;\n\n        // Add the query string if a query string was provided\n        if (queryString) return `${url}?${queryString}`;\n\n        return url;\n    }\n\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     * \n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(metadata: OpenIdConfigResponse, azureRegion: string): OpenIdConfigResponse {\n        metadata.authorization_endpoint = Authority.buildRegionalAuthorityString(metadata.authorization_endpoint, azureRegion);\n        // TODO: Enquire on whether we should leave the query string or remove it before releasing the feature\n        metadata.token_endpoint = Authority.buildRegionalAuthorityString(metadata.token_endpoint, azureRegion, \"allowestsrnonmsi=true\");\n\n        if (metadata.end_session_endpoint) {\n            metadata.end_session_endpoint = Authority.buildRegionalAuthorityString(metadata.end_session_endpoint, azureRegion);\n        }\n        \n        return metadata;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryResponse = {\n    tenant_discovery_endpoint: string;\n    metadata: Array<CloudDiscoveryMetadata>;\n};\n\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority } from \"./Authority\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityOptions } from \"./AuthorityOptions\";\n\nexport class AuthorityFactory {\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(authorityUri: string, networkClient: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions): Promise<Authority> {\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority: Authority = AuthorityFactory.createInstance(authorityUri, networkClient, cacheManager, authorityOptions);\n\n        try {\n            await acquireTokenAuthority.resolveEndpointsAsync();\n            return acquireTokenAuthority;\n        } catch (e) {\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(e);\n        }\n    }\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(authorityUrl: string, networkInterface: INetworkModule, cacheManager: ICacheManager, authorityOptions: AuthorityOptions): Authority {\n        // Throw error if authority url is empty\n        if (StringUtils.isEmpty(authorityUrl)) {\n            throw ClientConfigurationError.createUrlEmptyError();\n        }\n\n        return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS, Separators, CacheOutcome, Constants, RegionDiscoverySources, RegionDiscoveryOutcomes } from \"../../utils/Constants\";\nimport { CacheManager } from \"../../cache/CacheManager\";\nimport { AuthError } from \"../../error/AuthError\";\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest\";\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity\";\nimport { StringUtils } from \"../../utils/StringUtils\";\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata\";\n\nexport class ServerTelemetryManager {\n    private cacheManager: CacheManager;\n    private apiId: number;\n    private correlationId: string;\n    private telemetryCacheKey: string;\n    private wrapperSKU: String;\n    private wrapperVer: String;\n    private regionUsed: string | undefined;\n    private regionSource: RegionDiscoverySources | undefined;\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\n    private cacheOutcome: CacheOutcome = CacheOutcome.NO_CACHE_HIT;\n\n    constructor(telemetryRequest: ServerTelemetryRequest, cacheManager: CacheManager) {\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n\n        this.telemetryCacheKey = SERVER_TELEM_CONSTANTS.CACHE_KEY + Separators.CACHE_KEY_SEPARATOR + telemetryRequest.clientId;\n    }\n\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue(): string {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [request, regionDiscoveryFields].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, requestWithRegionDiscoveryFields, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue(): string {\n        const lastRequests = this.getLastRequests();\n\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests.slice(0, 2*maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors.slice(0, maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n\n        // Indicate whether this header contains all data or partial data\n        const overflow = maxErrors < errorCount ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, lastRequests.cacheHits, failedRequests, errors, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error: AuthError): void {\n        const lastRequests = this.getLastRequests();\n        if (lastRequests.errors.length >= SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n        \n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n\n        if (!StringUtils.isEmpty(error.subError)) {\n            lastRequests.errors.push(error.subError);\n        } else if (!StringUtils.isEmpty(error.errorCode)) {\n            lastRequests.errors.push(error.errorCode);\n        } else if (!!error && error.toString()) {\n            lastRequests.errors.push(error.toString());\n        } else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n\n        return;\n    }\n\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits(): number {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return lastRequests.cacheHits;\n    }\n\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests(): ServerTelemetryEntity {\n        const initialValue: ServerTelemetryEntity = new ServerTelemetryEntity();\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey) as ServerTelemetryEntity;\n\n        return lastRequests || initialValue;\n    }\n\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache(): void {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        } else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = new ServerTelemetryEntity();\n            serverTelemEntity.failedRequests = lastRequests.failedRequests.slice(numErrorsFlushed*2); // failedRequests contains 2 items for each error\n            serverTelemEntity.errors = lastRequests.errors.slice(numErrorsFlushed);\n\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\n        }\n    }\n\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(serverTelemetryEntity: ServerTelemetryEntity): number {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId = serverTelemetryEntity.failedRequests[2*i] || Constants.EMPTY_STRING;\n            const correlationId = serverTelemetryEntity.failedRequests[2*i + 1] || Constants.EMPTY_STRING;\n            const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize += apiId.toString().length + correlationId.toString().length + errorCode.length + 3;\n\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            } else {\n                break;\n            }\n        }\n\n        return maxErrors;\n    }\n\n    /**\n     * Get the region discovery fields\n     * \n     * @returns string\n     */\n    getRegionDiscoveryFields(): string {\n        const regionDiscoveryFields: string[] = [];\n\n        regionDiscoveryFields.push(this.regionUsed || \"\");\n        regionDiscoveryFields.push(this.regionSource || \"\");\n        regionDiscoveryFields.push(this.regionOutcome || \"\");\n\n        return regionDiscoveryFields.join(\",\");\n    }\n\n    /**\n     * Update the region discovery metadata\n     * \n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata: RegionDiscoveryMetadata): void {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n\n    /**\n     * Set cache outcome \n     */\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, Logger, ServerTelemetryManager, CommonAuthorizationCodeRequest, Constants, AuthorizationCodeClient, ClientConfiguration, AuthorityOptions, Authority, AuthorityFactory, ServerAuthorizationCodeResponse, UrlString, CommonEndSessionRequest, ProtocolUtils, ResponseMode, StringUtils } from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { BrowserConstants, InteractionType } from \"../utils/BrowserConstants\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserProtocolUtils, BrowserStateObject } from \"../utils/BrowserProtocolUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\n\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\n    protected navigationClient: INavigationClient;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, correlationId);\n        this.navigationClient = navigationClient;\n    }\n    \n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    protected async initializeAuthorizationCodeRequest(request: AuthorizationUrlRequest): Promise<CommonAuthorizationCodeRequest> {\n        this.logger.verbose(\"initializeAuthorizationRequest called\", request.correlationId);\n        const generatedPkceParams = await this.browserCrypto.generatePkceCodes();\n\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: \"\",\n            codeVerifier: generatedPkceParams.verifier\n        };\n\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n\n        return authCodeRequest;\n    }\n\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    protected initializeLogoutRequest(logoutRequest?: EndSessionRequest): CommonEndSessionRequest {\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\n\n        // Check if interaction is in progress. Throw error if true.\n        if (this.browserStorage.isInteractionInProgress()) {\n            throw BrowserAuthError.createInteractionInProgressError();\n        }\n\n        const validLogoutRequest: CommonEndSessionRequest = {\n            correlationId: this.browserCrypto.createNewGuid(),\n            ...logoutRequest\n        };\n\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\n            } else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\n            } else {\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(BrowserUtils.getCurrentUri(), BrowserUtils.getCurrentUri());\n            }\n        } else {\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\n        }\n\n        return validLogoutRequest;\n    }\n\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createAuthCodeClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string): Promise<AuthorizationCodeClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl);\n        return new AuthorizationCodeClient(clientConfig);\n    }\n\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getClientConfiguration(serverTelemetryManager: ServerTelemetryManager, requestAuthority?: string): Promise<ClientConfiguration> {\n        this.logger.verbose(\"getClientConfiguration called\");\n        const discoveredAuthority = await this.getDiscoveredAuthority(requestAuthority);\n\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true\n            },\n            loggerOptions: {\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled,\n                logLevel: this.config.system.loggerOptions.logLevel,\n                correlationId: this.correlationId\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: \"\",\n                os: \"\"\n            }\n        };\n    }\n\n    /**\n     * @param hash\n     * @param interactionType\n     */\n    protected validateAndExtractStateFromHash(hash: string, interactionType: InteractionType, requestCorrelationId?: string): string {\n        this.logger.verbose(\"validateAndExtractStateFromHash called\", requestCorrelationId);\n        // Deserialize hash fragment response parameters.\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\n        if (!serverParams.state) {\n            throw BrowserAuthError.createHashDoesNotContainStateError();\n        }\n\n        const platformStateObj = BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\n        if (!platformStateObj) {\n            throw BrowserAuthError.createUnableToParseStateError();\n        }\n\n        if (platformStateObj.interactionType !== interactionType) {\n            throw BrowserAuthError.createStateInteractionTypeMismatchError();\n        }\n\n        this.logger.verbose(\"Returning state from hash\", requestCorrelationId);\n        return serverParams.state;\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(requestAuthority?: string): Promise<Authority> {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata\n        };\n\n        if (requestAuthority) {\n            this.logger.verbose(\"Creating discovered authority with request authority\");\n            return await AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions);\n        }\n\n        this.logger.verbose(\"Creating discovered authority with configured authority\");\n        return await AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions);\n    }\n\n    /**\n     * Helper to validate app environment before making a request.\n     * @param request\n     * @param interactionType\n     */\n    protected preflightInteractiveRequest(request: RedirectRequest|PopupRequest, interactionType: InteractionType): AuthorizationUrlRequest {\n        this.logger.verbose(\"preflightInteractiveRequest called, validating app environment\", request?.correlationId);\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n    \n        // Check if interaction is in progress. Throw error if true.\n        if (this.browserStorage.isInteractionInProgress(false)) {\n            throw BrowserAuthError.createInteractionInProgressError();\n        }\n    \n        return this.initializeAuthorizationRequest(request, interactionType);\n    }\n\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    protected initializeAuthorizationRequest(request: RedirectRequest|PopupRequest|SsoSilentRequest, interactionType: InteractionType): AuthorizationUrlRequest {\n        this.logger.verbose(\"initializeAuthorizationRequest called\");\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState: BrowserStateObject = {\n            interactionType: interactionType\n        };\n\n        const state = ProtocolUtils.setRequestState(\n            this.browserCrypto,\n            (request && request.state) || \"\",\n            browserState\n        );\n\n        const validatedRequest: AuthorizationUrlRequest = {\n            ...this.initializeBaseRequest(request),\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || this.browserCrypto.createNewGuid(),\n            responseMode: ResponseMode.FRAGMENT\n        };\n\n        const account = request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\"Setting validated request account\");\n            this.logger.verbosePii(`Setting validated request account: ${account}`);\n            validatedRequest.account = account;\n        }\n\n        // Check for ADAL/MSAL v1 SSO\n        if (StringUtils.isEmpty(validatedRequest.loginHint) && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n\n        this.browserStorage.updateCacheEntries(validatedRequest.state, validatedRequest.nonce, validatedRequest.authority, validatedRequest.loginHint || \"\", validatedRequest.account || null);\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, INetworkModule, Logger, AuthenticationResult, AccountInfo, AccountEntity, BaseAuthRequest, AuthenticationScheme, UrlString, ServerTelemetryManager, ServerTelemetryRequest, ClientConfigurationError } from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\n\nexport abstract class BaseInteractionClient {\n\n    protected config: BrowserConfiguration;\n    protected browserStorage: BrowserCacheManager;\n    protected browserCrypto: ICrypto;\n    protected networkClient: INetworkModule;\n    protected logger: Logger;\n    protected eventHandler: EventHandler;\n    protected correlationId: string;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, correlationId?: string) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.correlationId = correlationId || this.browserCrypto.createNewGuid();\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\n    }\n\n    abstract acquireToken(request: RedirectRequest|PopupRequest|SsoSilentRequest): Promise<AuthenticationResult|void>;\n\n    abstract logout(request: EndSessionRequest): Promise<void>;\n\n    protected async clearCacheOnLogout(account?: AccountInfo| null): Promise<void> {\n        if (account) {\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account));\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\n            } catch (error) {\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\n            }\n        } else {\n            try {\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\");\n            } catch(e) {\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\n            }\n        }\n    }\n\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    protected initializeBaseRequest(request: Partial<BaseAuthRequest>): BaseAuthRequest {\n        this.logger.verbose(\"Initializing BaseAuthRequest\");\n        const authority = request.authority || this.config.auth.authority;\n\n        const scopes = [...((request && request.scopes) || [])];\n\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!request.authenticationScheme) {\n            request.authenticationScheme = AuthenticationScheme.BEARER;\n            this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\n        } else {\n            if (request.authenticationScheme === AuthenticationScheme.SSH) {\n                if (!request.sshJwk) {\n                    throw ClientConfigurationError.createMissingSshJwkError();\n                }\n                if(!request.sshKid) {\n                    throw ClientConfigurationError.createMissingSshKidError();\n                }\n            }\n            this.logger.verbose(`Authentication Scheme set to \"${request.authenticationScheme}\" as configured in Auth request`);\n        }\n\n        const validatedRequest: BaseAuthRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes\n        };\n\n        return validatedRequest;\n    }\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    protected getRedirectUri(requestRedirectUri?: string): string {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\n        return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\n    }\n\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    protected initializeServerTelemetryManager(apiId: number, forceRefresh?: boolean): ServerTelemetryManager {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload: ServerTelemetryRequest = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1]\n        };\n\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CommonEndSessionRequest, Constants, Logger, StringUtils } from \"@azure/msal-common\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { PopupParams } from \"../interaction_handler/PopupHandler\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConstants, InteractionType } from \"./BrowserConstants\";\n\n/**\n * Popup configurations for setting dimensions and position of popup window\n */\nexport type PopupWindowAttributes = {\n    popupSize?: PopupSize,\n    popupPosition?: PopupPosition\n};\n\nexport type PopupSize = {\n    height: number;\n    width: number;\n};\n\nexport type PopupPosition = {\n    top: number;\n    left: number;\n};\n\nexport class PopupUtils {\n    private browserStorage: BrowserCacheManager;\n    private logger: Logger;\n    private currentWindow: Window|undefined;\n\n    constructor(storageImpl: BrowserCacheManager, logger: Logger) {\n        this.browserStorage = storageImpl;\n        this.logger = logger;\n\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\n                popupWindow.location.assign(urlNavigate);\n            } else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\n                popupWindow = PopupUtils.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes, this.logger);\n            }\n\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw BrowserAuthError.createEmptyWindowCreatedError();\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n\n            return popupWindow;\n        } catch (e) {\n            this.logger.error(\"error opening popup \" + e.message);\n            this.browserStorage.setInteractionInProgress(false);\n            throw BrowserAuthError.createPopupWindowError(e.toString());\n        }\n    }\n\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate \n     * @param popupName \n     * @param popupWindowAttributes \n     * @returns \n     */\n    static openSizedPopup(urlNavigate: string, popupName: string, popupWindowAttributes: PopupWindowAttributes, logger: Logger): Window|null {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        const winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n\n        if (!width || width < 0 || width > winWidth) {\n            logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n\n        if (!height || height < 0 || height > winHeight) {\n            logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n\n        if (!top || top < 0 || top > winHeight) {\n            logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n            top = Math.max(0, ((winHeight / 2) - (BrowserConstants.POPUP_HEIGHT / 2)) + winTop);\n        }\n\n        if (!left || left < 0 || left > winWidth) {\n            logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n            left = Math.max(0, ((winWidth / 2) - (BrowserConstants.POPUP_WIDTH / 2)) + winLeft);\n        }\n\n        return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow?: Window): void {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     */\n    monitorPopupForSameOrigin(popupWindow: Window): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const intervalId = setInterval(() => {\n                if (popupWindow.closed) {\n                    // Window is closed\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createUserCancelledError());\n                    return;\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n                    return;\n                }\n\n                clearInterval(intervalId);\n                resolve();\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    static generatePopupName(clientId: string, request: AuthorizationUrlRequest): string {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${clientId}.${request.scopes.join(\"-\")}.${request.authority}.${request.correlationId}`;\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId \n     * @param request \n     */\n    static generateLogoutPopupName(clientId: string, request: CommonEndSessionRequest): string {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${clientId}.${homeAccountId}.${request.correlationId}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StringUtils, CommonAuthorizationCodeRequest, AuthenticationResult, AuthorizationCodeClient, AuthorityFactory, Authority, INetworkModule, ClientAuthError, CcsCredential, Logger } from \"@azure/msal-common\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { TemporaryCacheKeys } from \"../utils/BrowserConstants\";\n\nexport type InteractionParams = {};\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport abstract class InteractionHandler {\n\n    protected authModule: AuthorizationCodeClient;\n    protected browserStorage: BrowserCacheManager;\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\n    protected browserRequestLogger: Logger;\n\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.browserRequestLogger = browserRequestLogger;\n    }\n\n    /**\n     * Function to enable user interaction.\n     * @param requestUrl\n     */\n    abstract initiateAuthRequest(requestUrl: string, params: InteractionParams): Window | Promise<HTMLIFrameElement> | Promise<void>;\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponse(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule): Promise<AuthenticationResult> {\n        this.browserRequestLogger.verbose(\"InteractionHandler.handleCodeResponse called\");\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n        const authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n\n    /**\n     * Updates authority based on cloudInstanceHostname\n     * @param cloudInstanceHostname \n     * @param authority \n     * @param networkModule \n     */\n    protected async updateTokenEndpointAuthority(cloudInstanceHostname: string, authority: Authority, networkModule: INetworkModule): Promise<void> {\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${authority.tenant}/`;\n        const cloudInstanceAuthority = await AuthorityFactory.createDiscoveredInstance(cloudInstanceAuthorityUri, networkModule, this.browserStorage, authority.options);\n        this.authModule.updateAuthority(cloudInstanceAuthority);\n    }\n\n    /**\n     * Looks up ccs creds in the cache\n     */\n    protected checkCcsCredentials(): CcsCredential | null {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, true);\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred) as CcsCredential;\n            } catch (e) {\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { UrlString, StringUtils, CommonAuthorizationCodeRequest, AuthorizationCodeClient, Logger } from \"@azure/msal-common\";\nimport { InteractionHandler, InteractionParams } from \"./InteractionHandler\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { PopupWindowAttributes, PopupUtils } from \"../utils/PopupUtils\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\n\nexport type PopupParams = InteractionParams & {\n    popup?: Window|null;\n    popupName: string;\n    popupWindowAttributes: PopupWindowAttributes\n};\n\n/**\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\n */\nexport class PopupHandler extends InteractionHandler {\n    private popupUtils: PopupUtils;\n\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger) {\n        super(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger);\n\n        // Properly sets this reference for the unload event.\n        this.popupUtils = new PopupUtils(storageImpl, browserRequestLogger);\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\n        // Check that request url is not empty.\n        if (!StringUtils.isEmpty(requestUrl)) {\n            // Set interaction status in the library.\n            this.browserStorage.setInteractionInProgress(true);\n            this.browserRequestLogger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.popupUtils.openPopup(requestUrl, params);\n        } else {\n            // Throw error if request URL is empty.\n            this.browserRequestLogger.error(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n\n    /**\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - milliseconds until timeout\n     */\n    monitorPopupForHash(popupWindow: Window): Promise<string> {\n        return this.popupUtils.monitorPopupForSameOrigin(popupWindow).then(() => {\n            const contentHash = popupWindow.location.hash;\n            BrowserUtils.clearHash(popupWindow);\n            this.popupUtils.cleanPopup(popupWindow);\n\n            if (!contentHash) {\n                throw BrowserAuthError.createEmptyHashError(popupWindow.location.href);\n            }\n\n            if (UrlString.hashContainsKnownProperties(contentHash)) {\n                return contentHash;\n            } else {\n                throw BrowserAuthError.createHashDoesNotContainKnownPropertiesError();\n            }\n        }\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, ThrottlingUtils, CommonEndSessionRequest, UrlString, AuthError } from \"@azure/msal-common\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { PopupWindowAttributes, PopupUtils } from \"../utils/PopupUtils\";\nimport { EventType } from \"../event/EventType\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { PopupHandler, PopupParams } from \"../interaction_handler/PopupHandler\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { PopupRequest } from \"../request/PopupRequest\";\n\nexport class PopupClient extends StandardInteractionClient {\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request \n     */\n    acquireToken(request: PopupRequest): Promise<AuthenticationResult> {\n        try {\n            const validRequest = this.preflightInteractiveRequest(request, InteractionType.Popup);\n            const popupName = PopupUtils.generatePopupName(this.config.auth.clientId, validRequest);\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes);\n            } else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n                const popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\n                return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes, popup);\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest \n     */\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n\n            const popupName = PopupUtils.generateLogoutPopupName(this.config.auth.clientId, validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n            } else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n            }\n        } catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    private async acquireTokenPopupAsync(validRequest: AuthorizationUrlRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, popup?: Window|null): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\n\n            // Create popup interaction handler.\n            const interactionHandler = new PopupHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\n\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters: PopupParams = {\n                popup,\n                popupName,\n                popupWindowAttributes\n            };\n            const popupWindow: Window = interactionHandler.initiateAuthRequest(navigateUrl, popupParameters);\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\n\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const hash = await interactionHandler.monitorPopupForHash(popupWindow);\n            const state = this.validateAndExtractStateFromHash(hash, InteractionType.Popup, validRequest.correlationId);\n\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient);\n\n            return result;\n        } catch (e) {            \n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * \n     * @param validRequest \n     * @param popupName \n     * @param requestAuthority\n     * @param popup \n     * @param mainWindowRedirectUri \n     * @param popupWindowAttributes \n     */\n    private async logoutPopupAsync(validRequest: CommonEndSessionRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, requestAuthority?: string, popup?: Window|null, mainWindowRedirectUri?: string): Promise<void> {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n        \n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n\n            this.browserStorage.setInteractionInProgress(true);\n            // Initialize the client\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, requestAuthority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\n\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n\n            const popupUtils = new PopupUtils(this.browserStorage, this.logger);\n            // Open the popup window to requestUrl.\n            const popupWindow = popupUtils.openPopup(logoutUri, {popupName, popupWindowAttributes, popup});\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\n\n            try {\n                // Don't care if this throws an error (User Cancelled)\n                await popupUtils.monitorPopupForSameOrigin(popupWindow);\n                this.logger.verbose(\"Popup successfully redirected to postLogoutRedirectUri\");\n            } catch (e) {\n                this.logger.verbose(`Error occurred while monitoring popup for same origin. Session on server may remain active. Error: ${e}`);\n            }\n\n            popupUtils.cleanPopup(popupWindow);\n\n            if (mainWindowRedirectUri) {\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\n                this.logger.verbosePii(`Redirecing main window to: ${absoluteUrl}`);\n                this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n            } else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            \n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorizationCodeClient, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AuthenticationResult, ThrottlingUtils, Authority, INetworkModule, ClientAuthError, Logger } from \"@azure/msal-common\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { InteractionHandler, InteractionParams } from \"./InteractionHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\n\nexport type RedirectParams = InteractionParams & {\n    navigationClient: INavigationClient;\n    redirectTimeout: number;\n    redirectStartPage: string;\n    onRedirectNavigate?: (url: string) => void | boolean;\n};\n\nexport class RedirectHandler extends InteractionHandler {\n\n    private browserCrypto: ICrypto;\n\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger, browserCrypto: ICrypto) {\n        super(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger);\n        this.browserCrypto = browserCrypto;\n    }\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(requestUrl: string, params: RedirectParams): Promise<void> {\n        this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (!StringUtils.isEmpty(requestUrl)) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\n            }\n\n            // Set interaction status in the library.\n            this.browserStorage.setInteractionInProgress(true);\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\n            this.browserRequestLogger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false\n            };\n            \n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\n                const navigate = params.onRedirectNavigate(requestUrl);\n\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                    return;\n                } else {\n                    this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\n                    return;\n                }\n            } else {\n                // Navigate window to request URL\n                this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\n                return;\n            }\n        } else {\n            // Throw error if request URL is empty.\n            this.browserRequestLogger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n    }\n\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponse(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule, clientId?: string): Promise<AuthenticationResult> {\n        this.browserRequestLogger.verbose(\"RedirectHandler.handleCodeResponse called\");\n\n        // Check that location hash isn't empty.\n        if (StringUtils.isEmpty(locationHash)) {\n            throw BrowserAuthError.createEmptyHashError(locationHash);\n        }\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\n        }\n        const authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\n        }\n\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Remove throttle if it exists\n        if (clientId) {\n            ThrottlingUtils.removeThrottle(this.browserStorage, clientId, this.authCodeRequest);\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\n\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, UrlString, AuthError, ServerTelemetryManager } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { ApiId, InteractionType, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\n\nexport class RedirectClient extends StandardInteractionClient {   \n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request \n     */\n    async acquireToken(request: RedirectRequest): Promise<void> {\n        const validRequest: AuthorizationUrlRequest = this.preflightInteractiveRequest(request, InteractionType.Redirect);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect);\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.browserCrypto);\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\n\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise);\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n                return null;\n            }\n\n            const responseHash = this.getRedirectResponseHash(hash || window.location.hash);\n            if (!responseHash) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\"handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache.\");\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n\n            let state: string;\n            try {\n                state = this.validateAndExtractStateFromHash(responseHash, InteractionType.Redirect);\n                BrowserUtils.clearHash(window);\n                this.logger.verbose(\"State extracted from hash\");\n            } catch (e) {\n                this.logger.info(`handleRedirectPromise was unable to extract state due to: ${e}`);\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n                return null;\n            }\n\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, true) || \"\";\n            const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\n\n            if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\"Current page is loginRequestUrl, handling hash\");\n                const handleHashResult = await this.handleHash(responseHash, state, serverTelemetryManager);\n\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    BrowserUtils.replaceHash(loginRequestUrl);\n                }\n\n                return handleHashResult;\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling hash\");\n                return this.handleHash(responseHash, state, serverTelemetryManager);\n            } else if (!BrowserUtils.isInIframe() || this.config.system.allowRedirectInIframe) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.URL_HASH, responseHash, true);\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true\n                };\n\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now. \n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */  \n                let processHashOnRedirect: boolean = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, homepage, true);\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(homepage, navigationOptions);\n                } else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\n                }\n\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return this.handleHash(responseHash, state, serverTelemetryManager);\n                }\n            }\n\n            return null;\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\n            throw e;\n        }\n    }\n\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    private getRedirectResponseHash(hash: string): string | null {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        const isResponseHash: boolean = UrlString.hashContainsKnownProperties(hash);\n        const cachedHash = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.URL_HASH, true);\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n\n        if (isResponseHash) {\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\n            return hash;\n        }\n\n        this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\n        return cachedHash;\n    }\n\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    private async handleHash(hash: string, state: string, serverTelemetryManager: ServerTelemetryManager): Promise<AuthenticationResult> {\n        const cachedRequest = this.browserStorage.getCachedRequest(state, this.browserCrypto);\n        this.logger.verbose(\"handleHash called, retrieved cached request\");\n\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw BrowserAuthError.createNoCachedAuthorityError();\n        }\n\n        const authClient = await this.createAuthCodeClient(serverTelemetryManager, currentAuthority);\n        this.logger.verbose(\"Auth code client created\");\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.browserCrypto);\n        return await interactionHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient, this.config.auth.clientId);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logout);\n\n        try {\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Redirect, logoutRequest);\n                        \n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n            \n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false\n            };\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, logoutRequest && logoutRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validLogoutRequest);\n            \n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (logoutRequest && typeof logoutRequest.onRedirectNavigate === \"function\") {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n\n                if (navigate !== false) {\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                    return;\n                } else {\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\n                }\n            } else {\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\n                return;\n            }\n        } catch(e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Redirect, null, e);\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\n    }\n\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    protected getRedirectStartPage(requestStartPage?: string): string {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(redirectStartPage, BrowserUtils.getCurrentUri());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { UrlString, StringUtils, CommonAuthorizationCodeRequest, AuthorizationCodeClient, Constants, Logger } from \"@azure/msal-common\";\nimport { InteractionHandler } from \"./InteractionHandler\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration\";\n\nexport class SilentHandler extends InteractionHandler {\n\n    private navigateFrameWait: number;\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger, navigateFrameWait: number) {\n        super(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger);\n        this.navigateFrameWait = navigateFrameWait;\n    }\n\n    /**\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\n     * @param urlNavigate\n     * @param userRequestScopes\n     */\n    async initiateAuthRequest(requestUrl: string): Promise<HTMLIFrameElement> {\n        if (StringUtils.isEmpty(requestUrl)) {\n            // Throw error if request URL is empty.\n            this.browserRequestLogger.info(\"Navigate url is empty\");\n            throw BrowserAuthError.createEmptyNavigationUriError();\n        }\n\n        return this.navigateFrameWait ? await this.loadFrame(requestUrl) : this.loadFrameSync(requestUrl);\n    }\n\n    /**\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n     * @param iframe\n     * @param timeout\n     */\n    monitorIframeForHash(iframe: HTMLIFrameElement, timeout: number): Promise<string> {\n        return new Promise((resolve, reject) => {\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n                this.browserRequestLogger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n            }\n\n            /*\n             * Polling for iframes can be purely timing based,\n             * since we don't need to account for interaction.\n             */\n            const nowMark = window.performance.now();\n            const timeoutMark = nowMark + timeout;\n\n            const intervalId = setInterval(() => {\n                if (window.performance.now() > timeoutMark) {\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(BrowserAuthError.createMonitorIframeTimeoutError());\n                    return;\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                const contentWindow = iframe.contentWindow;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\n                } catch (e) {}\n\n                if (StringUtils.isEmpty(href)) {\n                    return;\n                }\n\n                const contentHash = contentWindow ? contentWindow.location.hash: Constants.EMPTY_STRING;\n                if (UrlString.hashContainsKnownProperties(contentHash)) {\n                    // Success case\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    resolve(contentHash);\n                    return;\n                }\n            }, BrowserConstants.POLL_INTERVAL_MS);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads iframe with authorization endpoint URL\n     * @ignore\n     */\n    private loadFrame(urlNavigate: string): Promise<HTMLIFrameElement> {\n        /*\n         * This trick overcomes iframe navigation in IE\n         * IE does not load the page consistently in iframe\n         */\n\n        return new Promise((resolve, reject) => {\n            const frameHandle = this.createHiddenIframe();\n\n            setTimeout(() => {\n                if (!frameHandle) {\n                    reject(\"Unable to load iframe\");\n                    return;\n                }\n\n                frameHandle.src = urlNavigate;\n\n                resolve(frameHandle);\n            }, this.navigateFrameWait);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n     * @param urlNavigate\n     * @param frameName\n     * @param logger\n     */\n    private loadFrameSync(urlNavigate: string): HTMLIFrameElement{\n        const frameHandle = this.createHiddenIframe();\n\n        frameHandle.src = urlNavigate;\n\n        return frameHandle;\n    }\n\n    /**\n     * @hidden\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\n     * @ignore\n     */\n    private createHiddenIframe(): HTMLIFrameElement {\n        const authFrame = document.createElement(\"iframe\");\n\n        authFrame.style.visibility = \"hidden\";\n        authFrame.style.position = \"absolute\";\n        authFrame.style.width = authFrame.style.height = \"0\";\n        authFrame.style.border = \"0\";\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n\n        return authFrame;\n    }\n\n    /**\n     * @hidden\n     * Removes a hidden iframe from the page.\n     * @ignore\n     */\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\n        if (document.body === iframe.parentNode) {\n            document.body.removeChild(iframe);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, ICrypto, Logger, StringUtils, PromptValue, CommonAuthorizationCodeRequest, AuthorizationCodeClient, AuthError } from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\n\nexport class SilentIframeClient extends StandardInteractionClient {\n    private apiId: ApiId;\n\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, correlationId?: string) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, correlationId);\n        this.apiId = apiId;\n    }\n    \n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none\n     * @param request \n     */\n    async acquireToken(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenByIframe called\");\n        // Check that we have some SSO data\n        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n        }\n\n        // Check that prompt is set to none, throw error if it is set to anything else.\n        if (request.prompt && request.prompt !== PromptValue.NONE) {\n            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = this.initializeAuthorizationRequest({\n            ...request,\n            prompt: PromptValue.NONE\n        }, InteractionType.Silent);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create authorize request url\n            const navigateUrl = await authClient.getAuthCodeUrl(silentRequest);\n\n            return await this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, this.logger);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    private async silentTokenHelper(navigateUrl: string, authCodeRequest: CommonAuthorizationCodeRequest, authClient: AuthorizationCodeClient, browserRequestLogger: Logger): Promise<AuthenticationResult> {\n        // Create silent handler\n        const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, browserRequestLogger, this.config.system.navigateFrameWait);\n        // Get the frame handle for the silent request\n        const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl);\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\n        const state = this.validateAndExtractStateFromHash(hash, InteractionType.Silent, authCodeRequest.correlationId);\n\n        // Handle response from hash string\n        return silentHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { GrantType, AuthenticationScheme, Errors  } from \"../utils/Constants\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\nimport { ServerError } from \"../error/ServerError\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from \"../error/InteractionRequiredAuthError\";\n\n/**\n * OAuth2.0 refresh token client\n */\nexport class RefreshTokenClient extends BaseClient {\n\n    constructor(configuration: ClientConfiguration) {\n        super(configuration);\n    }\n\n    public async acquireToken(request: CommonRefreshTokenRequest): Promise<AuthenticationResult>{\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await this.executeTokenRequest(request, this.authority);\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n\n        responseHandler.validateTokenResponse(response.body);\n        return responseHandler.handleServerTokenResponse(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            undefined,\n            undefined,\n            true\n        );\n    }\n\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    public async acquireTokenByRefreshToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment, this.config.authOptions.clientId);\n\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return this.acquireTokenWithCachedRefreshToken(request, true);\n            } catch (e) {\n                const noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\n                const clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;\n\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return this.acquireTokenWithCachedRefreshToken(request, false);\n                // throw in all other cases\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        // fall back to application refresh token acquisition\n        return this.acquireTokenWithCachedRefreshToken(request, false);\n    }\n\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    private async acquireTokenWithCachedRefreshToken(request: CommonSilentFlowRequest, foci: boolean) {\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = this.cacheManager.readRefreshTokenFromCache(this.config.authOptions.clientId, request.account, foci);\n\n        // no refresh Token\n        if (!refreshToken) {\n            throw InteractionRequiredAuthError.createNoTokensFoundError();\n        }\n\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID\n            }\n        };\n\n        return this.acquireToken(refreshTokenRequest);\n    }\n\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    private async executeTokenRequest(request: CommonRefreshTokenRequest, authority: Authority)\n        : Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n\n        const requestBody = await this.createTokenRequestBody(request);\n        const queryParameters = this.createTokenQueryParameters(request);\n        const headers: Record<string, string> = this.createTokenRequestHeaders(request.ccsCredential);\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshJwk: request.sshJwk,\n            sshKid: request.sshKid\n        };\n\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParameters);\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint);\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request \n     */\n    private createTokenQueryParameters(request: CommonRefreshTokenRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    private async createTokenRequestBody(request: CommonRefreshTokenRequest): Promise<string> {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n\n        parameterBuilder.addScopes(request.scopes);\n\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n\n        parameterBuilder.addClientInfo();\n\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n\n        parameterBuilder.addThrottling();\n        \n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        const correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        parameterBuilder.addRefreshToken(request.refreshToken);\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\n            const cnfString = await popTokenGenerator.generateCnf(request);\n            parameterBuilder.addPopToken(cnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if(request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw ClientConfigurationError.createMissingSshJwkError();\n            }\n        }\n\n        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n\n        if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                    break;\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { CommonSilentFlowRequest, AuthenticationResult, ServerTelemetryManager, RefreshTokenClient, AuthError } from \"@azure/msal-common\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport class SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request \n     */\n    async acquireToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        const silentRequest: CommonSilentFlowRequest = {\n            ...request,\n            ...this.initializeBaseRequest(request)\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority);\n        this.logger.verbose(\"Refresh token client created\");\n        \n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return refreshTokenClient.acquireTokenByRefreshToken(silentRequest).catch(e => {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        });\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createRefreshTokenClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string): Promise<RefreshTokenClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl);\n        return new RefreshTokenClient(clientConfig);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccessTokenEntity, ICrypto, IdTokenEntity, Logger, ScopeSet, Authority, AuthorityOptions, ExternalTokenResponse, AccountEntity, AuthToken } from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\nimport { ITokenCache } from \"./ITokenCache\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport type LoadTokenOptions = {\n    clientInfo?: string,\n    extendedExpiresOn?: number\n};\n\n/**\n * Token cache manager\n */\nexport class TokenCache implements ITokenCache {\n    // Flag to indicate if in browser environment\n    public isBrowserEnvironment: boolean;\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n    // Browser cache storage\n    private storage: BrowserCacheManager;\n    // Logger\n    private logger: Logger;\n    // Crypto class\n    private cryptoObj: ICrypto;\n\n    constructor(configuration: BrowserConfiguration, storage: BrowserCacheManager, logger: Logger, cryptoObj: ICrypto) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n    \n    // Move getAllAccounts here and cache utility APIs\n\n    /**\n     * API to load tokens to msal-browser cache. \n     * @param request \n     * @param response\n     * @param options\n     */\n    loadExternalTokens(request: SilentRequest, response: ExternalTokenResponse, options: LoadTokenOptions): void {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n\n        if (!response.id_token) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes id token.\");\n        }\n\n        if (request.account) {\n            this.loadIdToken(response.id_token, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\n            this.loadAccessToken(request, response, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\n        } else if (request.authority) {\n\n            const authorityOptions: AuthorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata\n            };\n            const authority = new Authority(request.authority, this.config.system.networkClient, this.storage, authorityOptions);\n\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                this.loadIdToken(response.id_token, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\n                this.loadAccessToken(request, response, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\n            } else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                this.loadIdToken(response.id_token, response.client_info, authority.hostnameAndPort, authority.tenant, options);\n                this.loadAccessToken(request, response, response.client_info, authority.hostnameAndPort, authority.tenant, options);\n            } else {\n                throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide clientInfo in the response or options.\");\n            }\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide a request with an account or a request with authority.\");\n        }\n    }\n\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken \n     * @param homeAccountId \n     * @param environment \n     * @param tenantId \n     * @param options \n     */\n    private loadIdToken(idToken: string, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\n\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(homeAccountId, environment, idToken, this.config.auth.clientId, tenantId);\n        const idAuthToken = new AuthToken(idToken, this.cryptoObj);\n        const accountEntity = options.clientInfo ?\n            AccountEntity.createAccount(options.clientInfo, homeAccountId, idAuthToken, undefined, undefined, undefined, undefined, environment) :\n            AccountEntity.createGenericAccount(homeAccountId, idAuthToken, undefined, undefined, undefined, undefined, environment);\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setAccount(accountEntity);\n            this.storage.setIdTokenCredential(idTokenEntity);\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request \n     * @param response \n     * @param options \n     * @param homeAccountId \n     * @param environment \n     * @param tenantId \n     * @returns \n     */\n    private loadAccessToken(request: SilentRequest, response: ExternalTokenResponse, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\n\n        if (!response.access_token) {\n            this.logger.verbose(\"TokenCache - No access token provided for caching\");\n            return;\n        }\n\n        if (!response.expires_in) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes expires_in value.\");\n        }\n\n        if (!options.extendedExpiresOn) {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide an extendedExpiresOn value in the options.\");\n        }\n        \n        const scopes = new ScopeSet(request.scopes).printScopes();\n        const expiresOn = response.expires_in;\n        const extendedExpiresOn = options.extendedExpiresOn;\n\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes, expiresOn, extendedExpiresOn, this.cryptoObj);\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n        } else {\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport { StringUtils, ServerError, InteractionRequiredAuthError, AccountInfo, Constants, INetworkModule, AuthenticationResult, Logger, CommonSilentFlowRequest, ICrypto, DEFAULT_CRYPTO_IMPLEMENTATION } from \"@azure/msal-common\";\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration, buildConfiguration, Configuration } from \"../config/Configuration\";\nimport { InteractionType, ApiId, BrowserConstants, BrowserCacheLocation, WrapperSKU, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version, name } from \"../packageMetadata\";\nimport { EventCallbackFunction } from \"../event/EventMessage\";\nimport { EventType } from \"../event/EventType\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupClient } from \"../interaction_client/PopupClient\";\nimport { RedirectClient } from \"../interaction_client/RedirectClient\";\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient\";\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient\";\nimport { TokenCache } from \"../cache/TokenCache\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\n\nexport abstract class ClientApplication {\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Storage interface implementation\n    protected readonly browserStorage: BrowserCacheManager;\n\n    // Network interface implementation\n    protected readonly networkClient: INetworkModule;\n\n    // Navigation interface implementation\n    protected navigationClient: INavigationClient;\n\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n\n    // Token cache implementation\n    private tokenCache: TokenCache;\n\n    // Logger\n    protected logger: Logger;\n\n    // Flag to indicate if in browser environment\n    protected isBrowserEnvironment: boolean;\n\n    protected eventHandler: EventHandler;\n\n    // Redirect Response Object\n    private redirectResponse: Map<string, Promise<AuthenticationResult | null>>;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(configuration: Configuration) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        // Set the configuration.\n        this.config = buildConfiguration(configuration, this.isBrowserEnvironment);\n\n        // Initialize logger\n        this.logger = new Logger(this.config.system.loggerOptions, name, version);\n        \n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n        \n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n        \n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n        \n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment ? new CryptoOps(this.logger) : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment ? \n            new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger) : \n            DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger);\n\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = hash || Constants.EMPTY_STRING;\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_START, InteractionType.Redirect);\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\n                const correlationId = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, true) || \"\";\n                const redirectClient = new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, correlationId);\n                response = redirectClient.handleRedirectPromise(hash)\n                    .then((result: AuthenticationResult | null) => {\n                        if (result) {\n                            // Emit login event if number of accounts change\n                            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n                            if (isLoggingIn) {\n                                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Redirect, result);\n                                this.logger.verbose(\"handleRedirectResponse returned result, login success\");\n                            } else {\n                                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Redirect, result);\n                                this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\n                            }\n                        }\n                        this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n\n                        return result;\n                    })\n                    .catch((e) => {\n                    // Emit login event if there is an account\n                        if (loggedInAccounts.length > 0) {\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n                        } else {\n                            this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n                        }\n                        this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\n\n                        throw e;\n                    });\n                this.redirectResponse.set(redirectResponseKey, response);\n            } else {\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\n            }\n            \n            return response;\n        }\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\n        return null;\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        // Preflight request\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n        this.logger.verbose(\"acquireTokenRedirect called\");\n\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Redirect, request);\n        } else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Redirect, request);\n        }\n        \n        const redirectClient = new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, request.correlationId);\n        return redirectClient.acquireToken(request).catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\n            } else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\n            }\n            throw e;\n        });\n    }\n\n    // #endregion\n\n    // #region Popup Flow\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\n        try {\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            this.logger.verbose(\"acquireTokenPopup called\", request.correlationId);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\n        } else {\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Popup, request);\n        }\n\n        const popupClient = new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, request.correlationId);\n\n        return popupClient.acquireToken(request).then((result) => {\n            // If logged in, emit acquire token events\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\n            if (isLoggingIn) {\n                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Popup, result);\n            } else {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\n            }\n\n            return result;\n        }).catch((e) => {\n            if (loggedInAccounts.length > 0) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\n            } else {\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Popup, null, e);\n            }\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        });\n    }\n\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"ssoSilent called\", request.correlationId);\n        this.eventHandler.emitEvent(EventType.SSO_SILENT_START, InteractionType.Silent, request);\n\n        try {\n            const silentIframeClient = new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.ssoSilent, request.correlationId);\n            const silentTokenResult = await silentIframeClient.acquireToken(request);\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_SUCCESS, InteractionType.Silent, silentTokenResult);\n            return silentTokenResult;\n        } catch (e) {\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_FAILURE, InteractionType.Silent, null, e);\n            throw e;\n        }\n    }\n\n    /**\n     * Use this function to obtain a token before every call to the API / resource provider\n     *\n     * MSAL return's a cached token when available\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\n     *\n     * @param {@link SilentRequest}\n     *\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenByRefreshToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_NETWORK_START, InteractionType.Silent, request);\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        const silentRefreshClient = new SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, request.correlationId);\n\n        return silentRefreshClient.acquireToken(request).catch(e => {\n            const isServerError = e instanceof ServerError;\n            const isInteractionRequiredError = e instanceof InteractionRequiredAuthError;\n            const isInvalidGrantError = (e.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\n            if (isServerError && isInvalidGrantError && !isInteractionRequiredError) {\n                this.logger.verbose(\"Refresh token expired or invalid, attempting acquire token by iframe\", request.correlationId);\n\n                const silentIframeClient = new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenSilent_authCode, request.correlationId);\n                return silentIframeClient.acquireToken(request);\n            }\n            throw e;\n        });\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest \n     * @deprecated\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\");\n        return this.logoutRedirect(logoutRequest);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n        const redirectClient = new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, logoutRequest?.correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest \n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try{\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            const popupClient = new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, logoutRequest?.correlationId);\n            return popupClient.logout(logoutRequest);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    // #endregion\n\n    // #region Account APIs\n\n    /**\n     * Returns all accounts that MSAL currently has data for.\n     * (the account object is created at the time of successful login)\n     * or empty array when no accounts are found\n     * @returns Array of account objects in cache\n     */\n    getAllAccounts(): AccountInfo[] {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment ? this.browserStorage.getAllAccounts() : [];\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(userName: string): AccountInfo|null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(userName) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching username found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching username: ${userName}`);\n            return allAccounts.filter(accountObj => accountObj.username.toLowerCase() === userName.toLowerCase())[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo|null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(homeAccountId) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching homeAccountId found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\n            return allAccounts.filter(accountObj => accountObj.homeAccountId === homeAccountId)[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\n        const allAccounts = this.getAllAccounts();\n        if (!StringUtils.isEmpty(localAccountId) && allAccounts && allAccounts.length) {\n            this.logger.verbose(\"Account matching localAccountId found, returning\");\n            this.logger.verbosePii(`Returning signed-in accounts matching localAccountId: ${localAccountId}`);\n            return allAccounts.filter(accountObj => accountObj.localAccountId === localAccountId)[0] || null;\n        } else {\n            this.logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\n            return null;\n        }\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.browserStorage.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.browserStorage.getActiveAccount();\n    }\n\n    // #endregion\n\n    // #region Helpers\n\n    /**\n     * Helper to validate app environment before making an auth request\n     * * @param interactionType\n     */\n    protected preflightBrowserEnvironmentCheck(interactionType: InteractionType): void {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        BrowserUtils.blockNonBrowserEnvironment(this.isBrowserEnvironment);\n\n        // Block redirects if in an iframe\n        BrowserUtils.blockRedirectInIframe(interactionType, this.config.system.allowRedirectInIframe);\n\n        // Block auth requests inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        BrowserUtils.blockAcquireTokenInPopups();\n\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (interactionType === InteractionType.Redirect &&\n            this.config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie) {\n            throw BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError();\n        }\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.eventHandler.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.tokenCache;\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.navigationClient = navigationClient;\n    }\n\n    /**\n     * Returns the configuration object\n     */\n    getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n\n    // #endregion\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AuthToken } from \"../account/AuthToken\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { RefreshTokenClient } from \"./RefreshTokenClient\";\nimport { ClientAuthError, ClientAuthErrorMessage } from \"../error/ClientAuthError\";\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { AuthenticationScheme, CacheOutcome } from \"../utils/Constants\";\nimport { StringUtils } from \"../utils/StringUtils\";\n\nexport class SilentFlowClient extends BaseClient {\n\n    constructor(configuration: ClientConfiguration) {\n        super(configuration);\n    }\n\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        try {\n            return await this.acquireCachedToken(request);\n        } catch (e) {\n            if (e instanceof ClientAuthError && e.errorCode === ClientAuthErrorMessage.tokenRefreshRequired.code) {\n                const refreshTokenClient = new RefreshTokenClient(this.config);\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw ClientConfigurationError.createEmptyTokenRequestError();\n        }\n\n        if (request.forceRefresh) {\n            // Must refresh due to present force_refresh flag.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.FORCE_REFRESH);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Skipping cache because forceRefresh is true.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        } else if (!StringUtils.isEmptyObj(request.claims)) {\n            // Must refresh due to request parameters.\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Skipping cache because claims are requested.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw ClientAuthError.createNoAccountInSilentRequestError();\n        }\n\n        const requestScopes = new ScopeSet(request.scopes || []);\n        const environment = request.authority || this.authority.getPreferredCache();\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\n        const cacheRecord = this.cacheManager.readCacheRecord(request.account, this.config.authOptions.clientId, requestScopes, environment, authScheme, request.sshKid);\n        \n        if (!cacheRecord.accessToken) {\n            // Must refresh due to non-existent access_token.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        } else if (\n            TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(cacheRecord.accessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)\n        ) {\n            // Must refresh due to expired access_token.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\n            this.logger.info(`SilentFlowClient:acquireCachedToken - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`);\n            throw ClientAuthError.createRefreshRequiredError();\n        } else if (cacheRecord.accessToken.refreshOn && TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)) {\n            // Must refresh due to the refresh_in value.\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.REFRESH_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'.\");\n            throw ClientAuthError.createRefreshRequiredError();\n        }\n\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n\n        return await this.generateResultFromCacheRecord(cacheRecord, request);\n    }\n\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    private async generateResultFromCacheRecord(cacheRecord: CacheRecord, request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        let idTokenObj: AuthToken | undefined;\n        if (cacheRecord.idToken) {\n            idTokenObj = new AuthToken(cacheRecord.idToken.secret, this.config.cryptoInterface);\n        }\n        return await ResponseHandler.generateAuthenticationResult(\n            this.cryptoUtils,\n            this.authority,\n            cacheRecord,\n            true,\n            request,\n            idTokenObj\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { CommonSilentFlowRequest, AuthenticationResult, SilentFlowClient, ServerTelemetryManager, AccountInfo } from \"@azure/msal-common\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\n\nexport class SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest \n     */\n    async acquireToken(silentRequest: CommonSilentFlowRequest): Promise<AuthenticationResult> {\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n        const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority);\n        this.logger.verbose(\"Silent auth client created\");\n        \n        try {\n            const cachedToken = await silentAuthClient.acquireCachedToken(silentRequest);\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, cachedToken);\n            return cachedToken;\n        } catch (error) {\n            if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code) {\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\n            }\n            throw error;\n        }\n    }\n    \n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n    }\n\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createSilentFlowClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string): Promise<SilentFlowClient> {\n        // Create auth module.\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl);\n        return new SilentFlowClient(clientConfig);\n    }\n\n    initializeSilentRequest(request: SilentRequest, account: AccountInfo): CommonSilentFlowRequest {\n        return {\n            ...request,\n            ...this.initializeBaseRequest(request),\n            account: account,\n            forceRefresh: request.forceRefresh || false\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountInfo, AuthenticationResult, RequestThumbprint } from \"@azure/msal-common\";\nimport { Configuration } from \"../config/Configuration\";\nimport { DEFAULT_REQUEST, InteractionType } from \"../utils/BrowserConstants\";\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { ClientApplication } from \"./ClientApplication\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication extends ClientApplication implements IPublicClientApplication {\n\n    // Active requests\n    private activeSilentTokenRequests: Map<string, Promise<AuthenticationResult>>;\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration object for the MSAL PublicClientApplication instance\n     */\n    constructor(configuration: Configuration) {\n        super(configuration);\n\n        this.activeSilentTokenRequests = new Map();\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\n        this.logger.verbose(\"loginRedirect called\");\n        return this.acquireTokenRedirect(request || DEFAULT_REQUEST);\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\n        this.logger.verbose(\"loginPopup called\");\n        return this.acquireTokenPopup(request || DEFAULT_REQUEST);\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(request: SilentRequest): Promise<AuthenticationResult> {\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", request.correlationId);\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw BrowserAuthError.createNoAccountError();\n        }\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || \"\",\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshJwk: request.sshJwk,\n            sshKid: request.sshKid\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", request.correlationId);\n            const response = this.acquireTokenSilentAsync(request, account)\n                .then((result) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    return result;\n                })\n                .catch((error) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    throw error;\n                });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        } else {\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", request.correlationId);\n            return cachedResponse;\n        }\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} \n     */\n    private async acquireTokenSilentAsync(request: SilentRequest, account: AccountInfo): Promise<AuthenticationResult>{\n        const silentCacheClient = new SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, request.correlationId);\n        const silentRequest = silentCacheClient.initializeSilentRequest(request, account);\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\n\n        return silentCacheClient.acquireToken(silentRequest).catch(async () => {\n            try {\n                const tokenRenewalResult = await this.acquireTokenByRefreshToken(silentRequest);\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, tokenRenewalResult);\n                return tokenRenewalResult;\n            } catch (tokenRenewalError) {\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, tokenRenewalError);\n                throw tokenRenewalError;\n            }\n        });\n    }\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nexport function isPlainObject(item) {\n  return item && _typeof(item) === 'object' && item.constructor === Object;\n}\nexport default function deepmerge(target, source) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  var output = options.clone ? _extends({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target) {\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nexport var keys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.\n\nexport default function createBreakpoints(breakpoints) {\n  var _breakpoints$values = breakpoints.values,\n      values = _breakpoints$values === void 0 ? {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920\n  } : _breakpoints$values,\n      _breakpoints$unit = breakpoints.unit,\n      unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit,\n      _breakpoints$step = breakpoints.step,\n      step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,\n      other = _objectWithoutProperties(breakpoints, [\"values\", \"unit\", \"step\"]);\n\n  function up(key) {\n    var value = typeof values[key] === 'number' ? values[key] : key;\n    return \"@media (min-width:\".concat(value).concat(unit, \")\");\n  }\n\n  function down(key) {\n    var endIndex = keys.indexOf(key) + 1;\n    var upperbound = values[keys[endIndex]];\n\n    if (endIndex === keys.length) {\n      // xl down applies to all sizes\n      return up('xs');\n    }\n\n    var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;\n    return \"@media (max-width:\".concat(value - step / 100).concat(unit, \")\");\n  }\n\n  function between(start, end) {\n    var endIndex = keys.indexOf(end);\n\n    if (endIndex === keys.length - 1) {\n      return up(start);\n    }\n\n    return \"@media (min-width:\".concat(typeof values[start] === 'number' ? values[start] : start).concat(unit, \") and \") + \"(max-width:\".concat((endIndex !== -1 && typeof values[keys[endIndex + 1]] === 'number' ? values[keys[endIndex + 1]] : end) - step / 100).concat(unit, \")\");\n  }\n\n  function only(key) {\n    return between(key, key);\n  }\n\n  var warnedOnce = false;\n\n  function width(key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!warnedOnce) {\n        warnedOnce = true;\n        console.warn([\"Material-UI: The `theme.breakpoints.width` utility is deprecated because it's redundant.\", 'Use the `theme.breakpoints.values` instead.'].join('\\n'));\n      }\n    }\n\n    return values[key];\n  }\n\n  return _extends({\n    keys: keys,\n    values: values,\n    up: up,\n    down: down,\n    between: between,\n    only: only,\n    width: width\n  }, other);\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function createMixins(breakpoints, spacing, mixins) {\n  var _toolbar;\n\n  return _extends({\n    gutters: function gutters() {\n      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      console.warn(['Material-UI: theme.mixins.gutters() is deprecated.', 'You can use the source of the mixin directly:', \"\\n      paddingLeft: theme.spacing(2),\\n      paddingRight: theme.spacing(2),\\n      [theme.breakpoints.up('sm')]: {\\n        paddingLeft: theme.spacing(3),\\n        paddingRight: theme.spacing(3),\\n      },\\n      \"].join('\\n'));\n      return _extends({\n        paddingLeft: spacing(2),\n        paddingRight: spacing(2)\n      }, styles, _defineProperty({}, breakpoints.up('sm'), _extends({\n        paddingLeft: spacing(3),\n        paddingRight: spacing(3)\n      }, styles[breakpoints.up('sm')])));\n    },\n    toolbar: (_toolbar = {\n      minHeight: 56\n    }, _defineProperty(_toolbar, \"\".concat(breakpoints.up('xs'), \" and (orientation: landscape)\"), {\n      minHeight: 48\n    }), _defineProperty(_toolbar, breakpoints.up('sm'), {\n      minHeight: 64\n    }), _toolbar)\n  }, mixins);\n}","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@material-ui/utils/macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe iff we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n\n  /* eslint-disable prefer-template */\n  var url = 'https://material-ui.com/production-error/?code=' + code;\n\n  for (var i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n\n  return 'Minified Material-UI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","var common = {\n  black: '#000',\n  white: '#fff'\n};\nexport default common;","var grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\nexport default grey;","var indigo = {\n  50: '#e8eaf6',\n  100: '#c5cae9',\n  200: '#9fa8da',\n  300: '#7986cb',\n  400: '#5c6bc0',\n  500: '#3f51b5',\n  600: '#3949ab',\n  700: '#303f9f',\n  800: '#283593',\n  900: '#1a237e',\n  A100: '#8c9eff',\n  A200: '#536dfe',\n  A400: '#3d5afe',\n  A700: '#304ffe'\n};\nexport default indigo;","var pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;","var red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nexport default red;","var orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\nexport default orange;","var blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;","var green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nexport default green;","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n\n/* eslint-disable no-use-before-define */\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(\"Material-UI: The value provided \".concat(value, \" is out of range [\").concat(min, \", \").concat(max, \"].\"));\n    }\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n *\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nexport function hexToRgb(color) {\n  color = color.substr(1);\n  var re = new RegExp(\".{1,\".concat(color.length >= 6 ? 2 : 1, \"}\"), 'g');\n  var colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (n) {\n      return n + n;\n    });\n  }\n\n  return colors ? \"rgb\".concat(colors.length === 4 ? 'a' : '', \"(\").concat(colors.map(function (n, index) {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', '), \")\") : '';\n}\n\nfunction intToHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n *\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\n\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n\n  var _decomposeColor = decomposeColor(color),\n      values = _decomposeColor.values;\n\n  return \"#\".concat(values.map(function (n) {\n    return intToHex(n);\n  }).join(''));\n}\n/**\n * Converts a color from hsl format to rgb format.\n *\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\n\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  var _color = color,\n      values = _color.values;\n  var h = values[0];\n  var s = values[1] / 100;\n  var l = values[2] / 100;\n  var a = s * Math.min(l, 1 - l);\n\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n\n  var type = 'rgb';\n  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({\n    type: type,\n    values: rgb\n  });\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported `\".concat(color, \"` color.\\nWe support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().\") : _formatMuiErrorMessage(3, color));\n  }\n\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n  return {\n    type: type,\n    values: values\n  };\n}\n/**\n * Converts a color object with type and values to a string.\n *\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\nexport function recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = \"\".concat(values[1], \"%\");\n    values[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(type, \"(\").concat(values.join(', '), \")\");\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\nexport function getContrastRatio(foreground, background) {\n  var lumA = getLuminance(foreground);\n  var lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(function (val) {\n    val /= 255; // normalized\n\n    return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);\n  }); // Truncate at 3 digits\n\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function emphasize(color) {\n  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nvar warnedOnce = false;\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0 -1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n *\n * @deprecated\n * Use `import { alpha } from '@material-ui/core/styles'` instead.\n */\n\nexport function fade(color, value) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: The `fade` color utility was renamed to `alpha` to better describe its functionality.', '', \"You should use `import { alpha } from '@material-ui/core/styles'`\"].join('\\n'));\n    }\n  }\n\n  return alpha(color, value);\n}\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha value is overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0-1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n\n  color.values[3] = value;\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { deepmerge } from '@material-ui/utils';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport indigo from '../colors/indigo';\nimport pink from '../colors/pink';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport green from '../colors/green';\nimport { darken, getContrastRatio, lighten } from './colorManipulator';\nexport var light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.54)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)',\n    // Text hints.\n    hint: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: grey[50]\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport var dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    hint: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: grey[800],\n    default: '#303030'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  var tonalOffsetLight = tonalOffset.light || tonalOffset;\n  var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nexport default function createPalette(palette) {\n  var _palette$primary = palette.primary,\n      primary = _palette$primary === void 0 ? {\n    light: indigo[300],\n    main: indigo[500],\n    dark: indigo[700]\n  } : _palette$primary,\n      _palette$secondary = palette.secondary,\n      secondary = _palette$secondary === void 0 ? {\n    light: pink.A200,\n    main: pink.A400,\n    dark: pink.A700\n  } : _palette$secondary,\n      _palette$error = palette.error,\n      error = _palette$error === void 0 ? {\n    light: red[300],\n    main: red[500],\n    dark: red[700]\n  } : _palette$error,\n      _palette$warning = palette.warning,\n      warning = _palette$warning === void 0 ? {\n    light: orange[300],\n    main: orange[500],\n    dark: orange[700]\n  } : _palette$warning,\n      _palette$info = palette.info,\n      info = _palette$info === void 0 ? {\n    light: blue[300],\n    main: blue[500],\n    dark: blue[700]\n  } : _palette$info,\n      _palette$success = palette.success,\n      success = _palette$success === void 0 ? {\n    light: green[300],\n    main: green[500],\n    dark: green[700]\n  } : _palette$success,\n      _palette$type = palette.type,\n      type = _palette$type === void 0 ? 'light' : _palette$type,\n      _palette$contrastThre = palette.contrastThreshold,\n      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,\n      _palette$tonalOffset = palette.tonalOffset,\n      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,\n      other = _objectWithoutProperties(palette, [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\", \"type\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n\n  function getContrastText(background) {\n    var contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var contrast = getContrastRatio(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([\"Material-UI: The contrast ratio of \".concat(contrast, \":1 for \").concat(contrastText, \" on \").concat(background), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  var augmentColor = function augmentColor(color) {\n    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;\n    color = _extends({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.main) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: The color provided to augmentColor(color) is invalid.\\nThe color object needs to have a `main` property or a `\".concat(mainShade, \"` property.\") : _formatMuiErrorMessage(4, mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: The color provided to augmentColor(color) is invalid.\\n`color.main` should be a string, but `\".concat(JSON.stringify(color.main), \"` was provided instead.\\n\\nDid you intend to use one of the following approaches?\\n\\nimport {\\xA0green } from \\\"@material-ui/core/colors\\\";\\n\\nconst theme1 = createTheme({ palette: {\\n  primary: green,\\n} });\\n\\nconst theme2 = createTheme({ palette: {\\n  primary: { main: green[500] },\\n} });\") : _formatMuiErrorMessage(5, JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  var types = {\n    dark: dark,\n    light: light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!types[type]) {\n      console.error(\"Material-UI: The palette type `\".concat(type, \"` is not supported.\"));\n    }\n  }\n\n  var paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: common,\n    // The palette type, can be light or dark.\n    type: type,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor(primary),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor(error),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor(warning),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor(info),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor(success),\n    // The grey colors.\n    grey: grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText: getContrastText,\n    // Generate a rich color object.\n    augmentColor: augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: tonalOffset\n  }, types[type]), other);\n  return paletteOutput;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { deepmerge } from '@material-ui/utils';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nvar warnedOnce = false;\n\nfunction roundWithDeprecationWarning(value) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      console.warn(['Material-UI: The `theme.typography.round` helper is deprecated.', 'Head to https://material-ui.com/r/migration-v4/#theme for a migration path.'].join('\\n'));\n      warnedOnce = true;\n    }\n  }\n\n  return round(value);\n}\n\nvar caseAllCaps = {\n  textTransform: 'uppercase'\n};\nvar defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nexport default function createTypography(palette, typography) {\n  var _ref = typeof typography === 'function' ? typography(palette) : typography,\n      _ref$fontFamily = _ref.fontFamily,\n      fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n      _ref$fontWeightLight = _ref.fontWeightLight,\n      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,\n      _ref$fontWeightRegula = _ref.fontWeightRegular,\n      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,\n      _ref$fontWeightMedium = _ref.fontWeightMedium,\n      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,\n      _ref$fontWeightBold = _ref.fontWeightBold,\n      fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,\n      _ref$htmlFontSize = _ref.htmlFontSize,\n      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,\n      allVariants = _ref.allVariants,\n      pxToRem2 = _ref.pxToRem,\n      other = _objectWithoutProperties(_ref, [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('Material-UI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('Material-UI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  var coef = fontSize / 14;\n\n  var pxToRem = pxToRem2 || function (size) {\n    return \"\".concat(size / htmlFontSize * coef, \"rem\");\n  };\n\n  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {\n    return _extends({\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontSize: pxToRem(size),\n      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n      lineHeight: lineHeight\n    }, fontFamily === defaultFontFamily ? {\n      letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n    } : {}, casing, allVariants);\n  };\n\n  var variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return deepmerge(_extends({\n    htmlFontSize: htmlFontSize,\n    pxToRem: pxToRem,\n    round: roundWithDeprecationWarning,\n    // TODO v5: remove\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeightLight: fontWeightLight,\n    fontWeightRegular: fontWeightRegular,\n    fontWeightMedium: fontWeightMedium,\n    fontWeightBold: fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}","var shadowKeyUmbraOpacity = 0.2;\nvar shadowKeyPenumbraOpacity = 0.14;\nvar shadowAmbientShadowOpacity = 0.12;\n\nfunction createShadow() {\n  return [\"\".concat(arguments.length <= 0 ? undefined : arguments[0], \"px \").concat(arguments.length <= 1 ? undefined : arguments[1], \"px \").concat(arguments.length <= 2 ? undefined : arguments[2], \"px \").concat(arguments.length <= 3 ? undefined : arguments[3], \"px rgba(0,0,0,\").concat(shadowKeyUmbraOpacity, \")\"), \"\".concat(arguments.length <= 4 ? undefined : arguments[4], \"px \").concat(arguments.length <= 5 ? undefined : arguments[5], \"px \").concat(arguments.length <= 6 ? undefined : arguments[6], \"px \").concat(arguments.length <= 7 ? undefined : arguments[7], \"px rgba(0,0,0,\").concat(shadowKeyPenumbraOpacity, \")\"), \"\".concat(arguments.length <= 8 ? undefined : arguments[8], \"px \").concat(arguments.length <= 9 ? undefined : arguments[9], \"px \").concat(arguments.length <= 10 ? undefined : arguments[10], \"px \").concat(arguments.length <= 11 ? undefined : arguments[11], \"px rgba(0,0,0,\").concat(shadowAmbientShadowOpacity, \")\")].join(',');\n} // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\n\n\nvar shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\nexport default shadows;","var shape = {\n  borderRadius: 4\n};\nexport default shape;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { deepmerge } from '@material-ui/utils';\n\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n\n  });\n}\n\nexport default merge;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport PropTypes from 'prop-types';\nimport merge from './merge'; // The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\n\nvar values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\nvar defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: function up(key) {\n    return \"@media (min-width:\".concat(values[key], \"px)\");\n  }\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!props.theme) {\n      console.error('Material-UI: You are calling a style function without a theme value.');\n    }\n  }\n\n  if (Array.isArray(propValue)) {\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce(function (acc, item, index) {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n\n  if (_typeof(propValue) === 'object') {\n    var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n\n    return Object.keys(propValue).reduce(function (acc, breakpoint) {\n      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);\n      return acc;\n    }, {});\n  }\n\n  var output = styleFromPropValue(propValue);\n  return output;\n}\n\nfunction breakpoints(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var base = styleFunction(props);\n    var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;\n    var extended = themeBreakpoints.keys.reduce(function (acc, key) {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme: props.theme\n        }, props[key]));\n      }\n\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n\nexport default breakpoints;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = _slicedToArray(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\nexport function createUnarySpacing(theme) {\n  var themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(\"Material-UI: Expected spacing argument to be a number, got \".concat(abs, \".\"));\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (abs > themeSpacing.length - 1) {\n          console.error([\"Material-UI: The value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([\"Material-UI: The `theme.spacing` value (\".concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return function () {\n    return undefined;\n  };\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction spacing(props) {\n  var theme = props.theme;\n  var transformer = createUnarySpacing(theme);\n  return Object.keys(props).map(function (prop) {\n    // Using a hash computation over an array iteration could be faster, but with only 28 items,\n    // it's doesn't worth the bundle size.\n    if (spacingKeys.indexOf(prop) === -1) {\n      return null;\n    }\n\n    var cssProperties = getCssProperties(prop);\n    var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n    var propValue = props[prop];\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  }).reduce(merge, {});\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n\n    return cache[arg];\n  };\n}","import { createUnarySpacing } from '@material-ui/system';\nvar warnOnce;\nexport default function createSpacing() {\n  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons and type, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  var transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  var spacing = function spacing() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(\"Material-UI: Too many arguments provided, expected between 0 and 4, got \".concat(args.length));\n      }\n    }\n\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args.map(function (argument) {\n      if (typeof argument === 'string') {\n        return argument;\n      }\n\n      var output = transform(argument);\n      return typeof output === 'number' ? \"\".concat(output, \"px\") : output;\n    }).join(' ');\n  }; // Backward compatibility, to remove in v5.\n\n\n  Object.defineProperty(spacing, 'unit', {\n    get: function get() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnOnce || process.env.NODE_ENV === 'test') {\n          console.error(['Material-UI: theme.spacing.unit usage has been deprecated.', 'It will be removed in v5.', 'You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.', '', 'You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother.'].join('\\n'));\n        }\n\n        warnOnce = true;\n      }\n\n      return spacingInput;\n    }\n  });\n  spacing.mui = true;\n  return spacing;\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport var easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexport var duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\n\nfunction formatMs(milliseconds) {\n  return \"\".concat(Math.round(milliseconds), \"ms\");\n}\n/**\n * @param {string|Array} props\n * @param {object} param\n * @param {string} param.prop\n * @param {number} param.duration\n * @param {string} param.easing\n * @param {number} param.delay\n */\n\n\nexport default {\n  easing: easing,\n  duration: duration,\n  create: function create() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _options$duration = options.duration,\n        durationOption = _options$duration === void 0 ? duration.standard : _options$duration,\n        _options$easing = options.easing,\n        easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing,\n        _options$delay = options.delay,\n        delay = _options$delay === void 0 ? 0 : _options$delay,\n        other = _objectWithoutProperties(options, [\"duration\", \"easing\", \"delay\"]);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isString = function isString(value) {\n        return typeof value === 'string';\n      };\n\n      var isNumber = function isNumber(value) {\n        return !isNaN(parseFloat(value));\n      };\n\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('Material-UI: Argument \"props\" must be a string or Array.');\n      }\n\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(\"Material-UI: Argument \\\"duration\\\" must be a number or a string but found \".concat(durationOption, \".\"));\n      }\n\n      if (!isString(easingOption)) {\n        console.error('Material-UI: Argument \"easing\" must be a string.');\n      }\n\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('Material-UI: Argument \"delay\" must be a number or a string.');\n      }\n\n      if (Object.keys(other).length !== 0) {\n        console.error(\"Material-UI: Unrecognized argument(s) [\".concat(Object.keys(other).join(','), \"].\"));\n      }\n    }\n\n    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {\n      return \"\".concat(animatedProp, \" \").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), \" \").concat(easingOption, \" \").concat(typeof delay === 'string' ? delay : formatMs(delay));\n    }).join(',');\n  },\n  getAutoHeightDuration: function getAutoHeightDuration(height) {\n    if (!height) {\n      return 0;\n    }\n\n    var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);\n  }\n};","// We need to centralize the zIndex definitions as they work\n// like global values in the browser.\nvar zIndex = {\n  mobileStepper: 1000,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\nexport default zIndex;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { deepmerge } from '@material-ui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport transitions from './transitions';\nimport zIndex from './zIndex';\n\nfunction createTheme() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _options$breakpoints = options.breakpoints,\n      breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,\n      _options$mixins = options.mixins,\n      mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,\n      _options$palette = options.palette,\n      paletteInput = _options$palette === void 0 ? {} : _options$palette,\n      spacingInput = options.spacing,\n      _options$typography = options.typography,\n      typographyInput = _options$typography === void 0 ? {} : _options$typography,\n      other = _objectWithoutProperties(options, [\"breakpoints\", \"mixins\", \"palette\", \"spacing\", \"typography\"]);\n\n  var palette = createPalette(paletteInput);\n  var breakpoints = createBreakpoints(breakpointsInput);\n  var spacing = createSpacing(spacingInput);\n  var muiTheme = deepmerge({\n    breakpoints: breakpoints,\n    direction: 'ltr',\n    mixins: createMixins(breakpoints, spacing, mixinsInput),\n    overrides: {},\n    // Inject custom styles\n    palette: palette,\n    props: {},\n    // Provide default props\n    shadows: shadows,\n    typography: createTypography(palette, typographyInput),\n    spacing: spacing,\n    shape: shape,\n    transitions: transitions,\n    zIndex: zIndex\n  }, other);\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  muiTheme = args.reduce(function (acc, argument) {\n    return deepmerge(acc, argument);\n  }, muiTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected'];\n\n    var traverse = function traverse(node, parentKey) {\n      var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var key; // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n      for (key in node) {\n        var child = node[key];\n\n        if (depth === 1) {\n          if (key.indexOf('Mui') === 0 && child) {\n            traverse(child, key, depth + 1);\n          }\n        } else if (pseudoClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error([\"Material-UI: The `\".concat(parentKey, \"` component increases \") + \"the CSS specificity of the `\".concat(key, \"` internal state.\"), 'You can not override it like this: ', JSON.stringify(node, null, 2), '', 'Instead, you need to use the $ruleName syntax:', JSON.stringify({\n              root: _defineProperty({}, \"&$\".concat(key), child)\n            }, null, 2), '', 'https://material-ui.com/r/pseudo-classes-guide'].join('\\n'));\n          } // Remove the style to prevent global conflicts.\n\n\n          node[key] = {};\n        }\n      }\n    };\n\n    traverse(muiTheme.overrides);\n  }\n\n  return muiTheme;\n}\n\nvar warnedOnce = false;\nexport function createMuiTheme() {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the createMuiTheme function was renamed to createTheme.', '', \"You should use `import { createTheme } from '@material-ui/core/styles'`\"].join('\\n'));\n    }\n  }\n\n  return createTheme.apply(void 0, arguments);\n}\nexport default createTheme;","import { deepmerge } from '@material-ui/utils';\nimport createTheme from './createTheme';\nexport default function createMuiStrictModeTheme(options) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return createTheme.apply(void 0, [deepmerge({\n    unstable_strictMode: true\n  }, options)].concat(args));\n}","import React from 'react';\nvar ThemeContext = React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\n\nexport default ThemeContext;","var hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  var theme = React.useContext(ThemeContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import PropTypes from 'prop-types'; // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\n\nexport function getScrollbarWidth() {\n  var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? padding + \"px\" : null;\n}\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\nexport function getOriginalBodyPadding() {\n  var style = window.getComputedStyle(document.body, null);\n  return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);\n}\nexport function conditionallyUpdateScrollbar() {\n  var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n\n  var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];\n  var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\nvar globalCssModule;\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\nexport function mapToCssModules(className, cssModule) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  if (cssModule === void 0) {\n    cssModule = globalCssModule;\n  }\n\n  if (!cssModule) return className;\n  return className.split(' ').map(function (c) {\n    return cssModule[c] || c;\n  }).join(' ');\n}\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\n\nexport function omit(obj, omitKeys) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\n\nexport function pick(obj, keys) {\n  var pickKeys = Array.isArray(keys) ? keys : [keys];\n  var length = pickKeys.length;\n  var key;\n  var result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n\n  return result;\n}\nvar warned = {};\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n\n    warned[message] = true;\n  }\n}\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation);\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n} // Shim Element if needed (e.g. in Node environment)\n\nvar Element = typeof window === 'object' && window.Element || function () {};\n\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n  }\n}\nexport var targetPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, DOMElement, PropTypes.shape({\n  current: PropTypes.any\n})]);\nexport var tagPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n}), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n})]))]);\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\n\nexport var TransitionTimeouts = {\n  Fade: 150,\n  // $transition-fade\n  Collapse: 350,\n  // $transition-collapse\n  Modal: 300,\n  // $modal-transition\n  Carousel: 600 // $carousel-transition\n\n}; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\n\nexport var TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\nexport var TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED: 'entered',\n  EXITING: 'exiting',\n  EXITED: 'exited'\n};\nexport var keyCodes = {\n  esc: 27,\n  space: 32,\n  enter: 13,\n  tab: 9,\n  up: 38,\n  down: 40,\n  home: 36,\n  end: 35,\n  n: 78,\n  p: 80\n};\nexport var PopperPlacements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nexport var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n\n  return false;\n}\n\nfunction getTag(value) {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nexport function toNumber(value) {\n  var type = typeof value;\n  var NAN = 0 / 0;\n\n  if (type === 'number') {\n    return value;\n  }\n\n  if (type === 'symbol' || type === 'object' && getTag(value) === '[object Symbol]') {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n    value = isObject(other) ? \"\" + other : other;\n  }\n\n  if (type !== 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(/^\\s+|\\s+$/g, '');\n  var isBinary = /^0b[01]+$/i.test(value);\n  return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;\n}\nexport function isObject(value) {\n  var type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\nexport function isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  var tag = getTag(value);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';\n}\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n\n  if (isFunction(target)) {\n    return target();\n  }\n\n  if (typeof target === 'string' && canUseDOM) {\n    var selection = document.querySelectorAll(target);\n\n    if (!selection.length) {\n      selection = document.querySelectorAll(\"#\" + target);\n    }\n\n    if (!selection.length) {\n      throw new Error(\"The target '\" + target + \"' could not be identified in the dom, tip: check spelling\");\n    }\n\n    return selection;\n  }\n\n  return target;\n}\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n\n  return Array.isArray(els) || canUseDOM && typeof els.length === 'number';\n}\nexport function getTarget(target, allElements) {\n  var els = findDOMElements(target);\n\n  if (allElements) {\n    if (isArrayOrNodeList(els)) {\n      return els;\n    }\n\n    if (els === null) {\n      return [];\n    }\n\n    return [els];\n  } else {\n    if (isArrayOrNodeList(els)) {\n      return els[0];\n    }\n\n    return els;\n  }\n}\nexport var defaultToggleEvents = ['touchstart', 'click'];\nexport function addMultipleEventListeners(_els, handler, _events, useCapture) {\n  var els = _els;\n\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  var events = _events;\n\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {\n    throw new Error(\"\\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\\n      The second must be a function.\\n      The third is a string or an array of strings that represents DOM events\\n    \");\n  }\n\n  Array.prototype.forEach.call(events, function (event) {\n    Array.prototype.forEach.call(els, function (el) {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, function (event) {\n      Array.prototype.forEach.call(els, function (el) {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\nexport var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"fluid\", \"tag\"]);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;"],"sourceRoot":""}